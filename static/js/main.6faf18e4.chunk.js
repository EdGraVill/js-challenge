(this["webpackJsonpjs-challenge"]=this["webpackJsonpjs-challenge"]||[]).push([[0],{131:function(e,n,a){},14:function(e){e.exports=JSON.parse('[{"isRTL":false,"language":"\ud83c\uddec\ud83c\udde7 English","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \'Lydia\';\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Within the function, we first declare the `name` variable with the `var` keyword. This means that the variable gets hoisted (memory space is set up during the creation phase) with the default value of `undefined`, until we actually get to the line where we define the variable. We haven\'t defined the variable yet on the line where we try to log the `name` variable, so it still holds the value of `undefined`.\\n\\nVariables with the `let` keyword (and `const`) are hoisted, but unlike `var`, don\'t get <i>initialized</i>. They are not accessible before the line we declare (initialize) them. This is called the \\"temporal dead zone\\". When we try to access the variables before they are declared, JavaScript throws a `ReferenceError`.","id":0,"options":["`Lydia` and `undefined`","`Lydia` and `ReferenceError`","`ReferenceError` and `21`","`undefined` and `ReferenceError`"],"question":"What\'s the output?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Because of the event queue in JavaScript, the `setTimeout` callback function is called _after_ the loop has been executed. Since the variable `i` in the first loop was declared using the `var` keyword, this value was global. During the loop, we incremented the value of `i` by `1` each time, using the unary operator `++`. By the time the `setTimeout` callback function was invoked, `i` was equal to `3` in the first example.\\n\\nIn the second loop, the variable `i` was declared using the `let` keyword: variables declared with the `let` (and `const`) keyword are block-scoped (a block is anything between `{ }`). During each iteration, `i` will have a new value, and each value is scoped inside the loop.","id":1,"options":["`0 1 2` and `0 1 2`","`0 1 2` and `3 3 3`","`3 3 3` and `0 1 2`"],"question":"What\'s the output?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius,\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());","codeLanguage":"javascript","explanation":"Note that the value of `diameter` is a regular function, whereas the value of `perimeter` is an arrow function.\\n\\nWith arrow functions, the `this` keyword refers to its current surrounding scope, unlike regular functions! This means that when we call `perimeter`, it doesn\'t refer to the shape object, but to its surrounding scope (window for example).\\n\\nThere is no value `radius` on that object, which returns `NaN`.","id":2,"options":["`20` and `62.83185307179586`","`20` and `NaN`","`20` and `63`","`NaN` and `63`"],"question":"What\'s the output?"},{"answer":0,"code":"+true;\\n!\'Lydia\';","codeLanguage":"javascript","explanation":"The unary plus tries to convert an operand to a number. `true` is `1`, and `false` is `0`.\\n\\nThe string `\'Lydia\'` is a truthy value. What we\'re actually asking, is \\"is this truthy value falsy?\\". This returns `false`.","id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"question":"What\'s the output?"},{"answer":3,"code":"const bird = {\\n  size: \'small\',\\n};\\n\\nconst mouse = {\\n  name: \'Mickey\',\\n  small: true,\\n};","codeLanguage":"javascript","explanation":"In JavaScript, all object keys are strings (unless it\'s a Symbol). Even though we might not _type_ them as strings, they are always converted into strings under the hood.\\n\\nJavaScript interprets (or unboxes) statements. When we use bracket notation, it sees the first opening bracket `[` and keeps going until it finds the closing bracket `]`. Only then, it will evaluate the statement.\\n\\n`mouse[bird.size]`: First it evaluates `bird.size`, which is `\\"small\\"`. `mouse[\\"small\\"]` returns `true`\\n\\nHowever, with dot notation, this doesn\'t happen. `mouse` does not have a key called `bird`, which means that `mouse.bird` is `undefined`. Then, we ask for the `size` using dot notation: `mouse.bird.size`. Since `mouse.bird` is `undefined`, we\'re actually asking `undefined.size`. This isn\'t valid, and will throw an error similar to `Cannot read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size` is not valid","`mouse[bird.size]` is not valid","`mouse[bird[\\"size\\"]]` is not valid","All of them are valid"],"question":"Which one is true?"},{"answer":0,"code":"let c = { greeting: \'Hey!\' };\\nlet d;\\n\\nd = c;\\nc.greeting = \'Hello\';\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"In JavaScript, all objects interact by _reference_ when setting them equal to each other.\\n\\nFirst, variable `c` holds a value to an object. Later, we assign `d` with the same reference that `c` has to the object.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nWhen you change one object, you change all of them.","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"What\'s the output?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` is a built-in function constructor. Although it looks like a number, it\'s not really a number: it has a bunch of extra features and is an object.\\n\\nWhen we use the `==` operator, it only checks whether it has the same _value_. They both have the value of `3`, so it returns `true`.\\n\\nHowever, when we use the `===` operator, both value _and_ type should be the same. It\'s not: `new Number()` is not a number, it\'s an **object**. Both return `false.`","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"What\'s the output?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \'green\' } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \'purple\' });\\nconsole.log(freddie.colorChange(\'orange\'));","codeLanguage":"javascript","explanation":"The `colorChange` function is static. Static methods are designed to live only on the constructor in which they are created, and cannot be passed down to any children. Since `freddie` is a child, the function is not passed down, and not available on the `freddie` instance: a `TypeError` is thrown.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"What\'s the output?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"It logs the object, because we just created an empty object on the global object! When we mistyped `greeting` as `greetign`, the JS interpreter actually saw this as `global.greetign = {}` (or `window.greetign = {}` in a browser).\\n\\nIn order to avoid this, we can use `\\"use strict\\"`. This makes sure that you have declared a variable before setting it equal to anything.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"What\'s the output?"},{"answer":0,"code":"function bark() {\\n  console.log(\'Woof!\');\\n}\\n\\nbark.animal = \'dog\';","codeLanguage":"javascript","explanation":"This is possible in JavaScript, because functions are objects! (Everything besides primitive types are objects)\\n\\nA function is a special type of object. The code you write yourself isn\'t the actual function. The function is an object with properties. This property is invocable.","id":9,"options":["Nothing, this is totally fine!","`SyntaxError`. You cannot add properties to a function this way.","`\\"Woof\\"` gets logged.","`ReferenceError`"],"question":"What happens when we do this?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\'Lydia\', \'Hallie\');\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"In JavaScript, functions are objects, and therefore, the method `getFullName` gets added to the constructor function object itself. For that reason, we can call `Person.getFullName()`, but `member.getFullName` throws a `TypeError`. \\n\\nIf you want a method to be available to all object instances, you have to add it to the prototype property:\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"What\'s the output?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\'Lydia\', \'Hallie\');\\nconst sarah = Person(\'Sarah\', \'Smith\');\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"For `sarah`, we didn\'t use the `new` keyword. When using `new`, `this` refers to the new empty object we create. However, if you don\'t add `new`, `this` refers to the **global object**!\\n\\nWe said that `this.firstName` equals `\\"Sarah\\"` and `this.lastName` equals `\\"Smith\\"`. What we actually did, is defining `global.firstName = \'Sarah\'` and `global.lastName = \'Smith\'`. `sarah` itself is left `undefined`, since we don\'t return a value from the `Person` function.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `ReferenceError`"],"question":"What\'s the output?"},{"answer":3,"explanation":"During the **capturing** phase, the event goes through the ancestor elements down to the target element. It then reaches the **target** element, and **bubbling** begins.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"What are the three phases of event propagation?"},{"answer":1,"explanation":"All objects have prototypes, except for the **base object**. The base object is the object created by the user, or an object that is created using the `new` keyword. The base object has access to some methods and properties, such as `.toString`. This is the reason why you can use built-in JavaScript methods! All of such methods are available on the prototype. Although JavaScript can\'t find it directly on your object, it goes down the prototype chain and finds it there, which makes it accessible for you.","id":13,"options":["true","false"],"question":"All object have prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \'2\');","codeLanguage":"javascript","explanation":"JavaScript is a **dynamically typed language**: we don\'t specify what types certain variables are. Values can automatically be converted into another type without you knowing, which is called _implicit type coercion_. **Coercion** is converting from one type into another.\\n\\nIn this example, JavaScript converts the number `1` into a string, in order for the function to make sense and return a value. During the addition of a numeric type (`1`) and a string type (`\'2\'`), the number is treated as a string. We can concatenate strings like `\\"Hello\\" + \\"World\\"`, so what\'s happening here is `\\"1\\" + \\"2\\"` which returns `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"What\'s the output?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"The **postfix** unary operator `++`:\\n\\n1. Returns the value (this returns `0`)\\n2. Increments the value (number is now `1`)\\n\\nThe **prefix** unary operator `++`:\\n\\n1. Increments the value (number is now `2`)\\n2. Returns the value (this returns `2`)\\n\\nThis returns `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"What\'s the output?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \'Lydia\';\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"If you use tagged template literals, the value of the first argument is always an array of the string values. The remaining arguments get the values of the passed expressions!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"What\'s the output?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\'You are an adult!\');\\n  } else if (data == { age: 18 }) {\\n    console.log(\'You are still an adult.\');\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"When testing equality, primitives are compared by their _value_, while objects are compared by their _reference_. JavaScript checks if the objects have a reference to the same location in memory.\\n\\nThe two objects that we are comparing don\'t have that: the object we passed as a parameter refers to a different location in memory than the object we used in order to check equality.\\n\\nThis is why both `{ age: 18 } === { age: 18 }` and `{ age: 18 } == { age: 18 }` return `false`.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"What\'s the output?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"The rest parameter (`...args`) lets us \\"collect\\" all remaining arguments into an array. An array is an object, so `typeof args` returns `\\"object\\"`","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"What\'s the output?"},{"answer":2,"code":"function getAge() {\\n  \'use strict\';\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"With `\\"use strict\\"`, you can make sure that you don\'t accidentally declare global variables. We never declared the variable `age`, and since we use `\\"use strict\\"`, it will throw a reference error. If we didn\'t use `\\"use strict\\"`, it would have worked, since the property `age` would have gotten added to the global object.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"What\'s the output?"},{"answer":0,"code":"const sum = eval(\'10*10+5\');","codeLanguage":"javascript","explanation":"`eval` evaluates codes that\'s passed as a string. If it\'s an expression, like in this case, it evaluates the expression. The expression is `10 * 10 + 5`. This returns the number `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"What\'s the value of `sum`?"},{"answer":1,"code":"sessionStorage.setItem(\'cool_secret\', 123);","codeLanguage":"javascript","explanation":"The data stored in `sessionStorage` is removed after closing the _tab_.\\n\\nIf you used `localStorage`, the data would\'ve been there forever, unless for example `localStorage.clear()` is invoked.","id":21,"options":["Forever, the data doesn\'t get lost.","When the user closes the tab.","When the user closes the entire browser, not only the tab.","When the user shuts off their computer."],"question":"How long is cool_secret accessible?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"With the `var` keyword, you can declare multiple variables with the same name. The variable will then hold the latest value.\\n\\nYou cannot do this with `let` or `const` since they\'re block-scoped.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":2,"code":"const obj = { 1: \'a\', 2: \'b\', 3: \'c\' };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\'1\');\\nobj.hasOwnProperty(1);\\nset.has(\'1\');\\nset.has(1);","codeLanguage":"javascript","explanation":"All object keys (excluding Symbols) are strings under the hood, even if you don\'t type it yourself as a string. This is why `obj.hasOwnProperty(\'1\')` also returns true.\\n\\nIt doesn\'t work that way for a set. There is no `\'1\'` in our set: `set.has(\'1\')` returns `false`. It has the numeric type `1`, `set.has(1)` returns `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"What\'s the output?"},{"answer":2,"code":"const obj = { a: \'one\', b: \'two\', a: \'three\' };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"If you have two keys with the same name, the key will be replaced. It will still be in its first position, but with the last specified value.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"What\'s the output?"},{"answer":0,"explanation":"The base execution context is the global execution context: it\'s what\'s accessible everywhere in your code.","id":25,"options":["true","false","it depends"],"question":"The JavaScript global execution context creates two things for you: the global object, and the \\"this\\" keyword."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"The `continue` statement skips an iteration if a certain condition returns `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"What\'s the output?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \'Just give Lydia pizza already!\';\\n};\\n\\nconst name = \'Lydia\';\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` is a built-in constructor, which we can add properties to. I just added a method to its prototype. Primitive strings are automatically converted into a string object, generated by the string prototype function. So, all strings (string objects) have access to that method!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"What\'s the output?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \'b\' };\\nconst c = { key: \'c\' };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Object keys are automatically converted into strings. We are trying to set an object as a key to object `a`, with the value of `123`.\\n\\nHowever, when we stringify an object, it becomes `\\"[object Object]\\"`. So what we are saying here, is that `a[\\"[object Object]\\"] = 123`. Then, we can try to do the same again. `c` is another object that we are implicitly stringifying. So then, `a[\\"[object Object]\\"] = 456`.\\n\\nThen, we log `a[b]`, which is actually `a[\\"[object Object]\\"]`. We just set that to `456`, so it returns `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":1,"code":"const foo = () => console.log(\'First\');\\nconst bar = () => setTimeout(() => console.log(\'Second\'));\\nconst baz = () => console.log(\'Third\');\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"We have a `setTimeout` function and invoked it first. Yet, it was logged last.\\n\\nThis is because in browsers, we don\'t just have the runtime engine, we also have something called a `WebAPI`. The `WebAPI` gives us the `setTimeout` function to start with, and for example the DOM.\\n\\nAfter the _callback_ is pushed to the WebAPI, the `setTimeout` function itself (but not the callback!) is popped off the stack.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nNow, `foo` gets invoked, and `\\"First\\"` is being logged.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` is popped off the stack, and `baz` gets invoked. `\\"Third\\"` gets logged.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nThe WebAPI can\'t just add stuff to the stack whenever it\'s ready. Instead, it pushes the callback function to something called the _queue_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nThis is where an event loop starts to work. An **event loop** looks at the stack and task queue. If the stack is empty, it takes the first thing on the queue and pushes it onto the stack.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` gets invoked, `\\"Second\\"` gets logged, and it\'s popped off the stack.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"What\'s the output?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"The deepest nested element that caused the event is the target of the event. You can stop bubbling by `event.stopPropagation`","id":30,"options":["Outer `div`","Inner `div`","`button`","An array of all nested elements."],"question":"What is the event.target when clicking the button?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"If we click `p`, we see two logs: `p` and `div`. During event propagation, there are 3 phases: capturing, target, and bubbling. By default, event handlers are executed in the bubbling phase (unless you set `useCapture` to `true`). It goes from the deepest nested element outwards.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"When you click the paragraph, what\'s the logged output?"},{"answer":3,"code":"const person = { name: \'Lydia\' };\\n\\nfunction sayHi(age) {\\n  return `${this.name} is ${age}`;\\n}\\n\\nconsole.log(sayHi.call(person, 21));\\nconsole.log(sayHi.bind(person, 21));","codeLanguage":"javascript","explanation":"With both, we can pass the object to which we want the `this` keyword to refer to. However, `.call` is also _executed immediately_!\\n\\n`.bind.` returns a _copy_ of the function, but with a bound context! It is not executed immediately.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"What\'s the output?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"The `sayHi` function returns the returned value of the immediately invoked function expression (IIFE). This function returned `0`, which is type `\\"number\\"`.\\n\\nFYI: there are only 7 built-in types: `null`, `undefined`, `boolean`, `number`, `string`, `object`, and `symbol`. `\\"function\\"` is not a type, since functions are objects, it\'s of type `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"What\'s the output?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\'\');\\n(\' \');\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"There are 8 falsy values:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `false`\\n- `\'\'` (empty string)\\n- `0`\\n- `-0`\\n- `0n` (BigInt(0))\\n\\nFunction constructors, like `new Number` and `new Boolean` are truthy.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"Which of these values are falsy?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` returns `\\"number\\"`.\\n`typeof \\"number\\"` returns `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"What\'s the output?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"When you set a value to an element in an array that exceeds the length of the array, JavaScript creates something called \\"empty slots\\". These actually have the value of `undefined`, but you will see something like:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\ndepending on where you run it (it\'s different for every browser, node, etc.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"What\'s the output?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"The `catch` block receives the argument `x`. This is not the same `x` as the variable when we pass arguments. This variable `x` is block-scoped.\\n\\nLater, we set this block-scoped variable equal to `1`, and set the value of the variable `y`. Now, we log the block-scoped variable `x`, which is equal to `1`.\\n\\nOutside of the `catch` block, `x` is still `undefined`, and `y` is `2`. When we want to `console.log(x)` outside of the `catch` block, it returns `undefined`, and `y` returns `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"What\'s the output?"},{"answer":0,"explanation":"JavaScript only has primitive types and objects.\\n\\nPrimitive types are `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, and `symbol`.\\n\\nWhat differentiates a primitive from an object is that primitives do not have any properties or methods; however, you\'ll note that `\'foo\'.toUpperCase()` evaluates to `\'FOO\'` and does not result in a `TypeError`. This is because when you try to access a property or method on a primitive like a string, JavaScript will implicitly wrap the primitive type using one of the wrapper classes, i.e. `String`, and then immediately discard the wrapper after the expression evaluates. All primitives except for `null` and `undefined` exhibit this behaviour.","id":38,"options":["primitive or object","function or object","trick question! only objects","number or object"],"question":"Everything in JavaScript is either a..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2],\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` is our initial value. This is the value we start with, and the value of the very first `acc`. During the first round, `acc` is `[1,2]`, and `cur` is `[0, 1]`. We concatenate them, which results in `[1, 2, 0, 1]`.\\n\\nThen, `[1, 2, 0, 1]` is `acc` and `[2, 3]` is `cur`. We concatenate them, and get `[1, 2, 0, 1, 2, 3]`","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"What\'s the output?"},{"answer":1,"code":"!!null;\\n!!\'\';\\n!!1;","codeLanguage":"javascript","explanation":"`null` is falsy. `!null` returns `true`. `!true` returns `false`.\\n\\n`\\"\\"` is falsy. `!\\"\\"` returns `true`. `!true` returns `false`.\\n\\n`1` is truthy. `!1` returns `false`. `!false` returns `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"What\'s the output?"},{"answer":0,"code":"setInterval(() => console.log(\'Hi\'), 1000);","codeLanguage":"javascript","explanation":"It returns a unique id. This id can be used to clear that interval with the `clearInterval()` function.","id":41,"options":["a unique id","the amount of milliseconds specified","the passed function","`undefined`"],"question":"What does the `setInterval` method return in the browser?"},{"answer":0,"code":"[...\'Lydia\'];","codeLanguage":"javascript","explanation":"A string is an iterable. The spread operator maps every character of an iterable to one element.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"What does this return?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Regular functions cannot be stopped mid-way after invocation. However, a generator function can be \\"stopped\\" midway, and later continue from where it stopped. Every time a generator function encounters a `yield` keyword, the function yields the value specified after it. Note that the generator function in that case doesn\u2019t _return_ the value, it _yields_ the value.\\n\\nFirst, we initialize the generator function with `i` equal to `10`. We invoke the generator function using the `next()` method. The first time we invoke the generator function, `i` is equal to `10`. It encounters the first `yield` keyword: it yields the value of `i`. The generator is now \\"paused\\", and `10` gets logged.\\n\\nThen, we invoke the function again with the `next()` method. It starts to continue where it stopped previously, still with `i` equal to `10`. Now, it encounters the next `yield` keyword, and yields `i * 2`. `i` is equal to `10`, so it returns `10 * 2`, which is `20`. This results in `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"What\'s the output?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \'one\');\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \'two\');\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"When we pass multiple promises to the `Promise.race` method, it resolves/rejects the _first_ promise that resolves/rejects. To the `setTimeout` method, we pass a timer: 500ms for the first promise (`firstPromise`), and 100ms for the second promise (`secondPromise`). This means that the `secondPromise` resolves first with the value of `\'two\'`. `res` now holds the value of `\'two\'`, which gets logged.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"What does this return?"},{"answer":3,"code":"let person = { name: \'Lydia\' };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"First, we declare a variable `person` with the value of an object that has a `name` property.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nThen, we declare a variable called `members`. We set the first element of that array equal to the value of the `person` variable. Objects interact by _reference_ when setting them equal to each other. When you assign a reference from one variable to another, you make a _copy_ of that reference. (note that they don\'t have the _same_ reference!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nThen, we set the variable `person` equal to `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nWe are only modifying the value of the `person` variable, and not the first element in the array, since that element has a different (copied) reference to the object. The first element in `members` still holds its reference to the original object. When we log the `members` array, the first element still holds the value of the object, which gets logged.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"What\'s the output?"},{"answer":1,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"With a `for-in` loop, we can iterate through object keys, in this case `name` and `age`. Under the hood, object keys are strings (if they\'re not a Symbol). On every loop, we set the value of `item` equal to the current key it\u2019s iterating over. First, `item` is equal to `name`, and gets logged. Then, `item` is equal to `age`, which gets logged.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"What\'s the output?"},{"answer":1,"code":"console.log(3 + 4 + \'5\');","codeLanguage":"javascript","explanation":"Operator associativity is the order in which the compiler evaluates the expressions, either left-to-right or right-to-left. This only happens if all operators have the _same_ precedence. We only have one type of operator: `+`. For addition, the associativity is left-to-right.\\n\\n`3 + 4` gets evaluated first. This results in the number `7`.\\n\\n`7 + \'5\'` results in `\\"75\\"` because of coercion. JavaScript converts the number `7` into a string, see question 15. We can concatenate two strings using the `+`operator. `\\"7\\" + \\"5\\"` results in `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"What\'s the output?"},{"answer":2,"code":"const num = parseInt(\'7*6\', 10);","codeLanguage":"javascript","explanation":"Only the first numbers in the string is returned. Based on the _radix_ (the second argument in order to specify what type of number we want to parse it to: base 10, hexadecimal, octal, binary, etc.), the `parseInt` checks whether the characters in the string are valid. Once it encounters a character that isn\'t a valid number in the radix, it stops parsing and ignores the following characters.\\n\\n`*` is not a valid number. It only parses `\\"7\\"` into the decimal `7`. `num` now holds the value of `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"What\'s the value of `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \'number\') return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"When mapping over the array, the value of `num` is equal to the element it\u2019s currently looping over. In this case, the elements are numbers, so the condition of the if statement `typeof num === \\"number\\"` returns `true`. The map function creates a new array and inserts the values returned from the function.\\n\\nHowever, we don\u2019t return a value. When we don\u2019t return a value from the function, the function returns `undefined`. For every element in the array, the function block gets called, so for each element we return `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"What\'s the output?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \'Lydia\';\\n  year = \'1998\';\\n}\\n\\nconst person = { name: \'Sarah\' };\\nconst birthYear = \'1997\';\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Arguments are passed by _value_, unless their value is an object, then they\'re passed by _reference_. `birthYear` is passed by value, since it\'s a string, not an object. When we pass arguments by value, a _copy_ of that value is created (see question 46).\\n\\nThe variable `birthYear` has a reference to the value `\\"1997\\"`. The argument `year` also has a reference to the value `\\"1997\\"`, but it\'s not the same value as `birthYear` has a reference to. When we update the value of `year` by setting `year` equal to `\\"1998\\"`, we are only updating the value of `year`. `birthYear` is still equal to `\\"1997\\"`.\\n\\nThe value of `person` is an object. The argument `member` has a (copied) reference to the _same_ object. When we modify a property of the object `member` has a reference to, the value of `person` will also be modified, since they both have a reference to the same object. `person`\'s `name` property is now equal to the value `\\"Lydia\\"`","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"What\'s the output?"},{"answer":3,"code":"function greeting() {\\n  throw \'Hello world!\';\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\'It worked!\', data);\\n  } catch (e) {\\n    console.log(\'Oh no an error:\', e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"With the `throw` statement, we can create custom errors. With this statement, you can throw exceptions. An exception can be a <b>string</b>, a <b>number</b>, a <b>boolean</b> or an <b>object</b>. In this case, our exception is the string `\'Hello world!\'`.\\n\\nWith the `catch` statement, we can specify what to do if an exception is thrown in the `try` block. An exception is thrown: the string `\'Hello world!\'`. `e` is now equal to that string, which we log. This results in `\'Oh an error: Hello world!\'`.","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"What\'s the output?"},{"answer":1,"code":"function Car() {\\n  this.make = \'Lamborghini\';\\n  return { make: \'Maserati\' };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"When you return a property, the value of the property is equal to the _returned_ value, not the value set in the constructor function. We return the string `\\"Maserati\\"`, so `myCar.make` is equal to `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"What\'s the output?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = (y = 10);` is actually shorthand for:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nWhen we set `y` equal to `10`, we actually add a property `y` to the global object (`window` in browser, `global` in Node). In a browser, `window.y` is now equal to `10`.\\n\\nThen, we declare a variable `x` with the value of `y`, which is `10`. Variables declared with the `let` keyword are _block scoped_, they are only defined within the block they\'re declared in; the immediately invoked function expression (IIFE) in this case. When we use the `typeof` operator, the operand `x` is not defined: we are trying to access `x` outside of the block it\'s declared in. This means that `x` is not defined. Values who haven\'t been assigned a value or declared are of type `\\"undefined\\"`. `console.log(typeof x)` returns `\\"undefined\\"`.\\n\\nHowever, we created a global variable `y` when setting `y` equal to `10`. This value is accessible anywhere in our code. `y` is defined, and holds a value of type `\\"number\\"`. `console.log(typeof y)` returns `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"What\'s the output?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\'Mara\');\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"We can delete properties from objects using the `delete` keyword, also on the prototype. By deleting a property on the prototype, it is not available anymore in the prototype chain. In this case, the `bark` function is not available anymore on the prototype after `delete Dog.prototype.bark`, yet we still try to access it.\\n\\nWhen we try to invoke something that is not a function, a `TypeError` is thrown. In this case `TypeError: pet.bark is not a function`, since `pet.bark` is `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"What\'s the output?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"The `Set` object is a collection of _unique_ values: a value can only occur once in a set.\\n\\nWe passed the iterable `[1, 1, 2, 3, 4]` with a duplicate value `1`. Since we cannot have two of the same values in a set, one of them is removed. This results in `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"What\'s the output?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"An imported module is _read-only_: you cannot modify the imported module. Only the module that exports them can change its value.\\n\\nWhen we try to increment the value of `myCounter`, it throws an error: `myCounter` is read-only and cannot be modified.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"What\'s the output?"},{"answer":0,"code":"const name = \'Lydia\';\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"The `delete` operator returns a boolean value: `true` on a successful deletion, else it\'ll return `false`. However, variables declared with the `var`, `const` or `let` keyword cannot be deleted using the `delete` operator.\\n\\nThe `name` variable was declared with a `const` keyword, so its deletion is not successful: `false` is returned. When we set `age` equal to `21`, we actually added a property called `age` to the global object. You can successfully delete properties from objects this way, also the global object, so `delete age` returns `true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"What\'s the output?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"We can unpack values from arrays or properties from objects through destructuring. For example:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nThe value of `a` is now `1`, and the value of `b` is now `2`. What we actually did in the question, is:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nThis means that the value of `y` is equal to the first value in the array, which is the number `1`. When we log `y`, `1` is returned.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"What\'s the output?"},{"answer":1,"code":"const user = { name: \'Lydia\', age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"It\'s possible to combine objects using the spread operator `...`. It lets you create copies of the key/value pairs of one object, and add them to another object. In this case, we create copies of the `user` object, and add them to the `admin` object. The `admin` object now contains the copied key/value pairs, which results in `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"What\'s the output?"},{"answer":1,"code":"const person = { name: \'Lydia\' };\\n\\nObject.defineProperty(person, \'age\', { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"With the `defineProperty` method, we can add new properties to an object, or modify existing ones. When we add a property to an object using the `defineProperty` method, they are by default _not enumerable_. The `Object.keys` method returns all _enumerable_ property names from an object, in this case only `\\"name\\"`.\\n\\nProperties added using the `defineProperty` method are immutable by default. You can override this behavior using the `writable`, `configurable` and `enumerable` properties. This way, the `defineProperty` method gives you a lot more control over the properties you\'re adding to an object.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"What\'s the output?"},{"answer":0,"code":"const settings = {\\n  username: \'lydiahallie\',\\n  level: 19,\\n  health: 90,\\n};\\n\\nconst data = JSON.stringify(settings, [\'level\', \'health\']);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"The second argument of `JSON.stringify` is the _replacer_. The replacer can either be a function or an array, and lets you control what and how the values should be stringified.\\n\\nIf the replacer is an _array_, only the property names included in the array will be added to the JSON string. In this case, only the properties with the names `\\"level\\"` and `\\"health\\"` are included, `\\"username\\"` is excluded. `data` is now equal to `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nIf the replacer is a _function_, this function gets called on every property in the object you\'re stringifying. The value returned from this function will be the value of the property when it\'s added to the JSON string. If the value is `undefined`, this property is excluded from the JSON string.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"What\'s the output?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"The unary operator `++` _first returns_ the value of the operand, _then increments_ the value of the operand. The value of `num1` is `10`, since the `increaseNumber` function first returns the value of `num`, which is `10`, and only increments the value of `num` afterwards.\\n\\n`num2` is `10`, since we passed `num1` to the `increasePassedNumber`. `number` is equal to `10`(the value of `num1`. Again, the unary operator `++` _first returns_ the value of the operand, _then increments_ the value of the operand. The value of `number` is `10`, so `num2` is equal to `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"What\'s the output?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"In ES6, we can initialize parameters with a default value. The value of the parameter will be the default value, if no other value has been passed to the function, or if the value of the parameter is `\\"undefined\\"`. In this case, we spread the properties of the `value` object into a new object, so `x` has the default value of `{ number: 10 }`.\\n\\nThe default argument is evaluated at _call time_! Every time we call the function, a _new_ object is created. We invoke the `multiply` function the first two times without passing a value: `x` has the default value of `{ number: 10 }`. We then log the multiplied value of that number, which is `20`.\\n\\nThe third time we invoke multiply, we do pass an argument: the object called `value`. The `*=` operator is actually shorthand for `x.number = x.number * 2`: we modify the value of `x.number`, and log the multiplied value `20`.\\n\\nThe fourth time, we pass the `value` object again. `x.number` was previously modified to `20`, so `x.number *= 2` logs `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"What\'s the output?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"The first argument that the `reduce` method receives is the _accumulator_, `x` in this case. The second argument is the _current value_, `y`. With the reduce method, we execute a callback function on every element in the array, which could ultimately result in one single value.\\n\\nIn this example, we are not returning any values, we are simply logging the values of the accumulator and the current value.\\n\\nThe value of the accumulator is equal to the previously returned value of the callback function. If you don\'t pass the optional `initialValue` argument to the `reduce` method, the accumulator is equal to the first element on the first call.\\n\\nOn the first call, the accumulator (`x`) is `1`, and the current value (`y`) is `2`. We don\'t return from the callback function, we log the accumulator and current value: `1` and `2` get logged.\\n\\nIf you don\'t return a value from a function, it returns `undefined`. On the next call, the accumulator is `undefined`, and the current value is `3`. `undefined` and `3` get logged.\\n\\nOn the fourth call, we again don\'t return from the callback function. The accumulator is again `undefined`, and the current value is `4`. `undefined` and `4` get logged.","id":64,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"What\'s the output?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1\\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4\\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"In a derived class, you cannot access the `this` keyword before calling `super`. If you try to do that, it will throw a ReferenceError: 1 and 4 would throw a reference error.\\n\\nWith the `super` keyword, we call that parent class\'s constructor with the given arguments. The parent\'s constructor receives the `name` argument, so we need to pass `name` to `super`.\\n\\nThe `Labrador` class receives two arguments, `name` since it extends `Dog`, and `size` as an extra property on the `Labrador` class. They both need to be passed to the constructor function on `Labrador`, which is done correctly using constructor 2.","id":65,"options":["1","2","3","4"],"question":"With which constructor can we successfully extend the `Dog` class?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"With the `import` keyword, all imported modules are _pre-parsed_. This means that the imported modules get run _first_, the code in the file which imports the module gets executed _after_.\\n\\nThis is a difference between `require()` in CommonJS and `import`! With `require()`, you can load dependencies on demand while the code is being run. If we would have used `require` instead of `import`, `running index.js`, `running sum.js`, `3` would have been logged to the console.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"What\'s the output?"},{"answer":0,"code":"console.log(Number(2) === Number(2));\\nconsole.log(Boolean(false) === Boolean(false));\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'));","codeLanguage":"javascript","explanation":"Every Symbol is entirely unique. The purpose of the argument passed to the Symbol is to give the Symbol a description. The value of the Symbol is not dependent on the passed argument. As we test equality, we are creating two entirely new symbols: the first `Symbol(\'foo\')`, and the second `Symbol(\'foo\')`. These two values are unique and not equal to each other, `Symbol(\'foo\') === Symbol(\'foo\')` returns `false`.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"What\'s the output?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\nconsole.log(name.padStart(13));\\nconsole.log(name.padStart(2));","codeLanguage":"javascript","explanation":"With the `padStart` method, we can add padding to the beginning of a string. The value passed to this method is the _total_ length of the string together with the padding. The string `\\"Lydia Hallie\\"` has a length of `12`. `name.padStart(13)` inserts 1 space at the start of the string, because 12 + 1 is 13.\\n\\nIf the argument passed to the `padStart` method is smaller than the length of the array, no padding will be added.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\" Lydia Hallie\\"`, `\\" Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"What\'s the output?"},{"answer":2,"code":"console.log(\'\ud83e\udd51\' + \'\ud83d\udcbb\');","codeLanguage":"javascript","explanation":"With the `+` operator, you can concatenate strings. In this case, we are concatenating the string `\\"\ud83e\udd51\\"` with the string `\\"\ud83d\udcbb\\"`, resulting in `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","A string containing their code points","Error"],"question":"What\'s the output?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \'Do you love JavaScript?\';\\n  if (answer !== \'Yes\') {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \'JavaScript loves you back \u2764\ufe0f\';\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"A generator function \\"pauses\\" its execution when it sees the `yield` keyword. First, we have to let the function yield the string \\"Do you love JavaScript?\\", which can be done by calling `game.next().value`.\\n\\nEvery line is executed, until it finds the first `yield` keyword. There is a `yield` keyword on the first line within the function: the execution stops with the first yield! _This means that the variable `answer` is not defined yet!_\\n\\nWhen we call `game.next(\\"Yes\\").value`, the previous `yield` is replaced with the value of the parameters passed to the `next()` function, `\\"Yes\\"` in this case. The value of the variable `answer` is now equal to `\\"Yes\\"`. The condition of the if-statement returns `false`, and `JavaScript loves you back \u2764\ufe0f` gets logged.","id":70,"options":["`game.next(\\"Yes\\").value` and `game.next().value`","`game.next.value(\\"Yes\\")` and `game.next.value()`","`game.next().value` and `game.next(\\"Yes\\").value`","`game.next.value()` and `game.next.value(\\"Yes\\")`"],"question":"How can we log the values that are commented out after the console.log statement?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` returns a string where the escapes (`\\n`, `\\u000b`, `\\t` etc.) are ignored! Backslashes can be an issue since you could end up with something like:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nWhich would result in:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nWith `String.raw`, it would simply ignore the escape and print:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nIn this case, the string is `Hello\\nworld`, which gets logged.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"What\'s the output?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\'I made it!\');\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"An async function always returns a promise. The `await` still has to wait for the promise to resolve: a pending promise gets returned when we call `getData()` in order to set `data` equal to it.\\n\\nIf we wanted to get access to the resolved value `\\"I made it\\"`, we could have used the `.then()` method on `data`:\\n\\n`data.then(res => console.log(res))`\\n\\nThis would\'ve logged `\\"I made it!\\"`","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"What\'s the output?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\'apple\', [\'banana\']);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"The `.push()` method returns the _length_ of the new array! Previously, the array contained one element (the string `\\"banana\\"`) and had a length of `1`. After adding the string `\\"apple\\"` to the array, the array contains two elements, and has a length of `2`. This gets returned from the `addToList` function.\\n\\nThe `push` method modifies the original array. If you wanted to return the _array_ from the function rather than the _length of the array_, you should have returned `list` after pushing `item` to it.","id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"What\'s the output?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` makes it impossible to add, remove, or modify properties of an object (unless the property\'s value is another object).\\n\\nWhen we create the variable `shape` and set it equal to the frozen object `box`, `shape` also refers to a frozen object. You can check whether an object is frozen by using `Object.isFrozen`. In this case, `Object.isFrozen(shape)` returns true, since the variable `shape` has a reference to a frozen object.\\n\\nSince `shape` is frozen, and since the value of `x` is not an object, we cannot modify the property `x`. `x` is still equal to `10`, and `{ x: 10, y: 20 }` gets logged.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":3,"code":"const { name: myName } = { name: \'Lydia\' };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"When we unpack the property `name` from the object on the right-hand side, we assign its value `\\"Lydia\\"` to a variable with the name `myName`.\\n\\nWith `{ name: myName }`, we tell JavaScript that we want to create a new variable called `myName` with the value of the `name` property on the right-hand side.\\n\\nSince we try to log `name`, a variable that is not defined, a ReferenceError gets thrown.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"A pure function is a function that _always_ returns the same result, if the same arguments are passed.\\n\\nThe `sum` function always returns the same result. If we pass `1` and `2`, it will _always_ return `3` without side effects. If we pass `5` and `10`, it will _always_ return `15`, and so on. This is the definition of a pure function.","id":76,"options":["Yes","No"],"question":"Is this a pure function?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"The `add` function is a _memoized_ function. With memoization, we can cache the results of a function in order to speed up its execution. In this case, we create a `cache` object that stores the previously returned values.\\n\\nIf we call the `addFunction` function again with the same argument, it first checks whether it has already gotten that value in its cache. If that\'s the case, the caches value will be returned, which saves on execution time. Else, if it\'s not cached, it will calculate the value and store it afterwards.\\n\\nWe call the `addFunction` function three times with the same value: on the first invocation, the value of the function when `num` is equal to `10` isn\'t cached yet. The condition of the if-statement `num in cache` returns `false`, and the else block gets executed: `Calculated! 20` gets logged, and the value of the result gets added to the cache object. `cache` now looks like `{ 10: 20 }`.\\n\\nThe second time, the `cache` object contains the value that gets returned for `10`. The condition of the if-statement `num in cache` returns `true`, and `\'From cache! 20\'` gets logged.\\n\\nThe third time, we pass `5 * 2` to the function which gets evaluated to `10`. The `cache` object contains the value that gets returned for `10`. The condition of the if-statement `num in cache` returns `true`, and `\'From cache! 20\'` gets logged.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"What is the output?"},{"answer":0,"code":"const myLifeSummedUp = [\'\u2615\', \'\ud83d\udcbb\', \'\ud83c\udf77\', \'\ud83c\udf6b\'];\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item);\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"With a _for-in_ loop, we can iterate over **enumerable** properties. In an array, the enumerable properties are the \\"keys\\" of array elements, which are actually their indexes. You could see an array as:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\nWhere the keys are the enumerable properties. `0` `1` `2` `3` get logged.\\n\\nWith a _for-of_ loop, we can iterate over **iterables**. An array is an iterable. When we iterate over the array, the variable \\"item\\" is equal to the element it\'s currently iterating over, `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` get logged.","id":78,"options":["`0` `1` `2` `3` and `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` and `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` and `0` `1` `2` `3`","`0` `1` `2` `3` and `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"What is the output?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2];\\nconsole.log(list);","codeLanguage":"javascript","explanation":"Array elements can hold any value. Numbers, strings, objects, other arrays, null, boolean values, undefined, and other expressions such as dates, functions, and calculations.\\n\\nThe element will be equal to the returned value. `1 + 2` returns `3`, `1 * 2` returns `2`, and `1 / 2` returns `0.5`.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"What is the output?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`;\\n}\\n\\nconsole.log(sayHi());","codeLanguage":"javascript","explanation":"By default, arguments have the value of `undefined`, unless a value has been passed to the function. In this case, we didn\'t pass a value for the `name` argument. `name` is equal to `undefined` which gets logged.\\n\\nIn ES6, we can overwrite this default `undefined` value with default parameters. For example:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nIn this case, if we didn\'t pass a value or if we passed `undefined`, `name` would always be equal to the string `Lydia`","id":80,"options":["`Hi there,`","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"What is the output?"},{"answer":1,"code":"var status = \'\ud83d\ude0e\';\\n\\nsetTimeout(() => {\\n  const status = \'\ud83d\ude0d\';\\n\\n  const data = {\\n    status: \'\ud83e\udd51\',\\n    getStatus() {\\n      return this.status;\\n    },\\n  };\\n\\n  console.log(data.getStatus());\\n  console.log(data.getStatus.call(this));\\n}, 0);","codeLanguage":"javascript","explanation":"The value of the `this` keyword is dependent on where you use it. In a **method**, like the `getStatus` method, the `this` keyword refers to _the object that the method belongs to_. The method belongs to the `data` object, so `this` refers to the `data` object. When we log `this.status`, the `status` property on the `data` object gets logged, which is `\\"\ud83e\udd51\\"`.\\n\\nWith the `call` method, we can change the object to which the `this` keyword refers. In **functions**, the `this` keyword refers to the _the object that the function belongs to_. We declared the `setTimeout` function on the _global object_, so within the `setTimeout` function, the `this` keyword refers to the _global object_. On the global object, there is a variable called _status_ with the value of `\\"\ud83d\ude0e\\"`. When logging `this.status`, `\\"\ud83d\ude0e\\"` gets logged.","id":81,"options":["`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` and `\\"\ud83d\ude0e\\"`"],"question":"What is the output?"},{"answer":3,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nlet city = person.city;\\ncity = \'Amsterdam\';\\n\\nconsole.log(person);","codeLanguage":"javascript","explanation":"We set the variable `city` equal to the value of the property called `city` on the `person` object. There is no property on this object called `city`, so the variable `city` has the value of `undefined`.\\n\\nNote that we are _not_ referencing the `person` object itself! We simply set the variable `city` equal to the current value of the `city` property on the `person` object.\\n\\nThen, we set `city` equal to the string `\\"Amsterdam\\"`. This doesn\'t change the person object: there is no reference to that object.\\n\\nWhen logging the `person` object, the unmodified object gets returned.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"What is the output?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\";\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\";\\n  }\\n\\n  return message;\\n}\\n\\nconsole.log(checkAge(21));","codeLanguage":"javascript","explanation":"Variables with the `const` and `let` keyword are _block-scoped_. A block is anything between curly brackets (`{ }`). In this case, the curly brackets of the if/else statements. You cannot reference a variable outside of the block it\'s declared in, a ReferenceError gets thrown.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"What is the output?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res));","codeLanguage":"javascript","explanation":"The value of `res` in the second `.then` is equal to the returned value of the previous `.then`. You can keep chaining `.then`s like this, where the value is passed to the next handler.","id":84,"options":["The result of the `fetch` method.","The result of the second invocation of the `fetch` method.","The result of the callback in the previous `.then()`.","It would always be undefined."],"question":"What kind of information would get logged?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"With `!!name`, we determine whether the value of `name` is truthy or falsy. If name is truthy, which we want to test for, `!name` returns `false`. `!false` (which is what `!!name` practically is) returns `true`.\\n\\nBy setting `hasName` equal to `name`, you set `hasName` equal to whatever value you passed to the `getName` function, not the boolean value `true`.\\n\\n`new Boolean(true)` returns an object wrapper, not the boolean value itself.\\n\\n`name.length` returns the length of the passed argument, not whether it\'s `true`.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"Which option is a way to set `hasName` equal to `true`, provided you cannot pass `true` as an argument?"},{"answer":1,"code":"console.log(\'I want pizza\'[0]);","codeLanguage":"javascript","explanation":"In order to get an character on a specific index in a string, you can use bracket notation. The first character in the string has index 0, and so on. In this case we want to get the element which index is 0, the character `\\"I\'`, which gets logged.\\n\\nNote that this method is not supported in IE7 and below. In that case, use `.charAt()`","id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"What\'s the output?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2);\\n}\\n\\nsum(10);","codeLanguage":"javascript","explanation":"You can set a default parameter\'s value equal to another parameter of the function, as long as they\'ve been defined _before_ the default parameter. We pass the value `10` to the `sum` function. If the `sum` function only receives 1 argument, it means that the value for `num2` is not passed, and the value of `num1` is equal to the passed value `10` in this case. The default value of `num2` is the value of `num1`, which is `10`. `num1 + num2` returns `20`.\\n\\nIf you\'re trying to set a default parameter\'s value equal to a parameter which is defined _after_ (to the right), the parameter\'s value hasn\'t been initialized yet, which will throw an error.","id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"What\'s the output?"},{"answer":0,"code":"// module.js\\nexport default () => \'Hello world\';\\nexport const name = \'Lydia\';\\n\\n// index.js\\nimport * as data from \'./module\';\\n\\nconsole.log(data);","codeLanguage":"javascript","explanation":"With the `import * as name` syntax, we import _all exports_ from the `module.js` file into the `index.js` file as a new object called `data` is created. In the `module.js` file, there are two exports: the default export, and a named export. The default export is a function which returns the string `\\"Hello World\\"`, and the named export is a variable called `name` which has the value of the string `\\"Lydia\\"`.\\n\\nThe `data` object has a `default` property for the default export, other properties have the names of the named exports and their corresponding values.","id":88,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"What\'s the output?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nconst member = new Person(\'John\');\\nconsole.log(typeof member);","codeLanguage":"javascript","explanation":"Classes are syntactical sugar for function constructors. The equivalent of the `Person` class as a function constructor would be:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name;\\n}\\n```\\n\\nCalling a function constructor with `new` results in the creation of an instance of `Person`, `typeof` keyword returns `\\"object\\"` for an instance. `typeof member` returns `\\"object\\"`.","id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"What\'s the output?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4);\\n\\nconsole.log(newList.push(5));","codeLanguage":"javascript","explanation":"The `.push` method returns the _new length_ of the array, not the array itself! By setting `newList` equal to `[1, 2, 3].push(4)`, we set `newList` equal to the new length of the array: `4`.\\n\\nThen, we try to use the `.push` method on `newList`. Since `newList` is the numerical value `4`, we cannot use the `.push` method: a TypeError is thrown.","id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"What\'s the output?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \'Here is pizza!\';\\n}\\n\\nconst giveLydiaChocolate = () =>\\n  \\"Here\'s chocolate... now go hit the gym already.\\";\\n\\nconsole.log(giveLydiaPizza.prototype);\\nconsole.log(giveLydiaChocolate.prototype);","codeLanguage":"javascript","explanation":"Regular functions, such as the `giveLydiaPizza` function, have a `prototype` property, which is an object (prototype object) with a `constructor` property. Arrow functions however, such as the `giveLydiaChocolate` function, do not have this `prototype` property. `undefined` gets returned when trying to access the `prototype` property using `giveLydiaChocolate.prototype`.","id":91,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"What\'s the output?"},{"answer":0,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y);\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` returns an array of nested arrays, containing the keys and objects:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]`\\n\\nUsing the `for-of` loop, we can iterate over each element in the array, the subarrays in this case. We can destructure the subarrays instantly in the for-of loop, using `const [x, y]`. `x` is equal to the first element in the subarray, `y` is equal to the second element in the subarray.\\n\\nThe first subarray is `[ \\"name\\", \\"Lydia\\" ]`, with `x` equal to `\\"name\\"`, and `y` equal to `\\"Lydia\\"`, which get logged.\\nThe second subarray is `[ \\"age\\", 21 ]`, with `x` equal to `\\"age\\"`, and `y` equal to `21`, which get logged.","id":92,"options":["`name` `Lydia` and `age` `21`","`[\\"name\\", \\"Lydia\\"]` and `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` and `undefined`","`Error`"],"question":"What\'s the output?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` is a rest parameter. The rest parameter\'s value is an array containing all remaining arguments, **and can only be the last parameter**! In this example, the rest parameter was the second parameter. This is not possible, and will throw a syntax error.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit];\\n}\\n\\ngetItems([\'banana\', \'apple\'], \'pear\', \'orange\');\\n```\\n\\nThe above example works. This returns the array `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"What\'s the output?"},{"answer":1,"code":"function nums(a, b) {\\n  if (a > b) console.log(\'a is bigger\');\\n  else console.log(\'b is bigger\');\\n  return\\n  a + b;\\n}\\n\\nconsole.log(nums(4, 2));\\nconsole.log(nums(1, 2));","codeLanguage":"javascript","explanation":"In JavaScript, we don\'t _have_ to write the semicolon (`;`) explicitly, however the JavaScript engine still adds them after statements. This is called **Automatic Semicolon Insertion**. A statement can for example be variables, or keywords like `throw`, `return`, `break`, etc.\\n\\nHere, we wrote a `return` statement, and another value `a + b` on a _new line_. However, since it\'s a new line, the engine doesn\'t know that it\'s actually the value that we wanted to return. Instead, it automatically added a semicolon after `return`. You could see this as:\\n\\n```javascript\\nreturn;\\na + b;\\n```\\n\\nThis means that `a + b` is never reached, since a function stops running after the `return` keyword. If no value gets returned, like here, the function returns `undefined`. Note that there is no automatic insertion after `if/else` statements!","id":94,"options":["`a is bigger`, `6` and `b is bigger`, `3`","`a is bigger`, `undefined` and `b is bigger`, `undefined`","`undefined` and `undefined`","`SyntaxError`"],"question":"What\'s the output?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \'Lydia\';\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \'Sarah\';\\n  }\\n};\\n\\nconst member = new Person();\\nconsole.log(member.name);","codeLanguage":"javascript","explanation":"We can set classes equal to other classes/function constructors. In this case, we set `Person` equal to `AnotherPerson`. The name on this constructor is `Sarah`, so the name property on the new `Person` instance `member` is `\\"Sarah\\"`.","id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"What\'s the output?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\',\\n};\\n\\nconsole.log(info);\\nconsole.log(Object.keys(info));","codeLanguage":"javascript","explanation":"A Symbol is not _enumerable_. The Object.keys method returns all _enumerable_ key properties on an object. The Symbol won\'t be visible, and an empty array is returned. When logging the entire object, all properties will be visible, even non-enumerable ones.\\n\\nThis is one of the many qualities of a symbol: besides representing an entirely unique value (which prevents accidental name collision on objects, for example when working with 2 libraries that want to add properties to the same object), you can also \\"hide\\" properties on objects this way (although not entirely. You can still access symbols using the `Object.getOwnPropertySymbols()` method).","id":96,"options":["`{Symbol(\'a\'): \'b\'}` and `[\\"{Symbol(\'a\')\\"]`","`{}` and `[]`","`{ a: \\"b\\" }` and `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` and `[]`"],"question":"What\'s the output?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"The `getList` function receives an array as its argument. Between the parentheses of the `getList` function, we destructure this array right away. You could see this as:\\n\\n`[x, ...y] = [1, 2, 3, 4]`\\n\\nWith the rest parameter `...y`, we put all \\"remaining\\" arguments in an array. The remaining arguments are `2`, `3` and `4` in this case. The value of `y` is an array, containing all the rest parameters. The value of `x` is equal to `1` in this case, so when we log `[x, y]`, `[1, [2, 3, 4]]` gets logged.\\n\\nThe `getUser` function receives an object. With arrow functions, we don\'t _have_ to write curly brackets if we just return one value. However, if you want to return an _object_ from an arrow function, you have to write it between parentheses, otherwise no value gets returned! The following function would have returned an object:\\n\\n`const getUser = user => ({ name: user.name, age: user.age })`\\n\\nSince no value gets returned in this case, the function returns `undefined`.","id":97,"options":["`[1, [2, 3, 4]]` and `undefined`","`[1, [2, 3, 4]]` and `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` and `{ name: \\"Lydia\\", age: 21 }`","`Error` and `{ name: \\"Lydia\\", age: 21 }`"],"question":"What\'s the output?"},{"answer":2,"code":"const name = \'Lydia\';\\n\\nconsole.log(name());","codeLanguage":"javascript","explanation":"The variable `name` holds the value of a string, which is not a function, thus cannot invoke.\\n\\nTypeErrors get thrown when a value is not of the expected type. JavaScript expected `name` to be a function since we\'re trying to invoke it. It was a string however, so a TypeError gets thrown: name is not a function!\\n\\nSyntaxErrors get thrown when you\'ve written something that isn\'t valid JavaScript, for example when you\'ve written the word `return` as `retrun`.\\nReferenceErrors get thrown when JavaScript isn\'t able to find a reference to a value that you\'re trying to access.","id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"What\'s the output?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`;","codeLanguage":"javascript","explanation":"`[]` is a truthy value. With the `&&` operator, the right-hand value will be returned if the left-hand value is a truthy value. In this case, the left-hand value `[]` is a truthy value, so `\\"Im\'` gets returned.\\n\\n`\\"\\"` is a falsy value. If the left-hand value is falsy, nothing gets returned. `n\'t` doesn\'t get returned.","id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"What\'s the value of output?"},{"answer":2,"code":"const one = false || {} || null;\\nconst two = null || false || \'\';\\nconst three = [] || 0 || true;\\n\\nconsole.log(one, two, three);","codeLanguage":"javascript","explanation":"With the `||` operator, we can return the first truthy operand. If all values are falsy, the last operand gets returned.\\n\\n`(false || {} || null)`: the empty object `{}` is a truthy value. This is the first (and only) truthy value, which gets returned. `one` is equal to `{}`.\\n\\n`(null || false || \\"\\")`: all operands are falsy values. This means that the last operand, `\\"\\"` gets returned. `two` is equal to `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: the empty array`[]` is a truthy value. This is the first truthy value, which gets returned. `three` is equal to `[]`.","id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"What\'s the value of output?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\');\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res));\\n  console.log(\'second\');\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise());\\n  console.log(\'second\');\\n}\\n\\nfirstFunction();\\nsecondFunction();","codeLanguage":"javascript","explanation":"With a promise, we basically say _I want to execute this function, but I\'ll put it aside for now while it\'s running since this might take a while. Only when a certain value is resolved (or rejected), and when the call stack is empty, I want to use this value._\\n\\nWe can get this value with both `.then` and the `await` keyword in an `async` function. Although we can get a promise\'s value with both `.then` and `await`, they work a bit differently.\\n\\nIn the `firstFunction`, we (sort of) put the myPromise function aside while it was running, but continued running the other code, which is `console.log(\'second\')` in this case. Then, the function resolved with the string `I have resolved`, which then got logged after it saw that the callstack was empty.\\n\\nWith the await keyword in `secondFunction`, we literally pause the execution of an async function until the value has been resolved before moving to the next line.\\n\\nThis means that it waited for the `myPromise` to resolve with the value `I have resolved`, and only once that happened, we moved to the next line: `second` got logged.","id":101,"options":["`I have resolved!`, `second` and `I have resolved!`, `second`","`second`, `I have resolved!` and `second`, `I have resolved!`","`I have resolved!`, `second` and `second`, `I have resolved!`","`second`, `I have resolved!` and `I have resolved!`, `second`"],"question":"What\'s the value of output?"},{"answer":2,"code":"const set = new Set();\\n\\nset.add(1);\\nset.add(\'Lydia\');\\nset.add({ name: \'Lydia\' });\\n\\nfor (let item of set) {\\n  console.log(item + 2);\\n}","codeLanguage":"javascript","explanation":"The `+` operator is not only used for adding numerical values, but we can also use it to concatenate strings. Whenever the JavaScript engine sees that one or more values are not a number, it coerces the number into a string.\\n\\nThe first one is `1`, which is a numerical value. `1 + 2` returns the number 3.\\n\\nHowever, the second one is a string `\\"Lydia\\"`. `\\"Lydia\\"` is a string and `2` is a number: `2` gets coerced into a string. `\\"Lydia\\"` and `\\"2\\"` get concatenated, which results in the string `\\"Lydia2\\"`.\\n\\n`{ name: \\"Lydia\\" }` is an object. Neither a number nor an object is a string, so it stringifies both. Whenever we stringify a regular object, it becomes `\\"[object Object]\\"`. `\\"[object Object]\\"` concatenated with `\\"2\\"` becomes `\\"[object Object]2\\"`.","id":102,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"What\'s the value of output?"},{"answer":2,"code":"Promise.resolve(5);","codeLanguage":"javascript","explanation":"We can pass any type of value we want to `Promise.resolve`, either a promise or a non-promise. The method itself returns a promise with the resolved value (`<fulfilled>`). If you pass a regular function, it\'ll be a resolved promise with a regular value. If you pass a promise, it\'ll be a resolved promise with the resolved value of that passed promise.\\n\\nIn this case, we just passed the numerical value `5`. It returns a resolved promise with the value `5`.","id":103,"options":["`5`","`Promise {<pending>: 5}`","`Promise\xa0{<fulfilled>: 5}`","`Error`"],"question":"What\'s its value?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\'Not the same!\');\\n  } else {\\n    console.log(\'They are the same!\');\\n  }\\n}\\n\\nconst person = { name: \'Lydia\' };\\n\\ncompareMembers(person);","codeLanguage":"javascript","explanation":"Objects are passed by reference. When we check objects for strict equality (`===`), we\'re comparing their references.\\n\\nWe set the default value for `person2` equal to the `person` object, and passed the `person` object as the value for `person1`.\\n\\nThis means that both values have a reference to the same spot in memory, thus they are equal.\\n\\nThe code block in the `else` statement gets run, and `They are the same!` gets logged.","id":104,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"What\'s its value?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n};\\n\\nconst colors = [\'pink\', \'red\', \'blue\'];\\n\\nconsole.log(colorConfig.colors[1]);","codeLanguage":"javascript","explanation":"In JavaScript, we have two ways to access properties on an object: bracket notation, or dot notation. In this example, we use dot notation (`colorConfig.colors`) instead of bracket notation (`colorConfig[\\"colors\\"]`).\\n\\nWith dot notation, JavaScript tries to find the property on the object with that exact name. In this example, JavaScript tries to find a property called `colors` on the `colorConfig` object. There is no property called `colors`, so this returns `undefined`. Then, we try to access the value of the first element by using `[1]`. We cannot do this on a value that\'s `undefined`, so it throws a `TypeError`: `Cannot read property \'1\' of undefined`.\\n\\nJavaScript interprets (or unboxes) statements. When we use bracket notation, it sees the first opening bracket `[` and keeps going until it finds the closing bracket `]`. Only then, it will evaluate the statement. If we would\'ve used `colorConfig[colors[1]]`, it would have returned the value of the `red` property on the `colorConfig` object.","id":105,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"What\'s its value?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\');","codeLanguage":"javascript","explanation":"Under the hood, emojis are unicodes. The unicodes for the heart emoji is `\\"U+2764 U+FE0F\\"`. These are always the same for the same emojis, so we\'re comparing two equal strings to each other, which returns true.","id":106,"options":["`true`","`false`"],"question":"What\'s its value?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\'];\\n\\nemojis.map(x => x + \'\u2728\');\\nemojis.filter(x => x !== \'\ud83e\udd51\');\\nemojis.find(x => x !== \'\ud83e\udd51\');\\nemojis.reduce((acc, cur) => acc + \'\u2728\');\\nemojis.slice(1, 2, \'\u2728\');\\nemojis.splice(1, 2, \'\u2728\');","codeLanguage":"javascript","explanation":"With `splice` method, we modify the original array by deleting, replacing or adding elements. In this case, we removed 2 items from index 1 (we removed `\'\ud83e\udd51\'` and `\'\ud83d\ude0d\'`) and added the \u2728 emoji instead.\\n\\n`map`, `filter` and `slice` return a new array, `find` returns an element, and `reduce` returns a reduced value.","id":107,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"Which of these methods modifies the original array?"},{"answer":0,"code":"const food = [\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\'];\\nconst info = { favoriteFood: food[0] };\\n\\ninfo.favoriteFood = \'\ud83c\udf5d\';\\n\\nconsole.log(food);","codeLanguage":"javascript","explanation":"We set the value of the `favoriteFood` property on the `info` object equal to the string with the pizza emoji, `\'\ud83c\udf55\'`. A string is a primitive data type. In JavaScript, primitive data types don\'t interact by reference.\\n\\nIn JavaScript, primitive data types (everything that\'s not an object) interact by _value_. In this case, we set the value of the `favoriteFood` property on the `info` object equal to the value of the first element in the `food` array, the string with the pizza emoji in this case (`\'\ud83c\udf55\'`). A string is a primitive data type, and interact by value (see my [blogpost](https://www.theavocoder.com/complete-javascript/2018/12/21/by-value-vs-by-reference) if you\'re interested in learning more)\\n\\nThen, we change the value of the `favoriteFood` property on the `info` object. The `food` array hasn\'t changed, since the value of `favoriteFood` was merely a _copy_ of the value of the first element in the array, and doesn\'t have a reference to the same spot in memory as the element on `food[0]`. When we log food, it\'s still the original array, `[\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`.","id":108,"options":["`[\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`[\'\ud83c\udf5d\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`[\'\ud83c\udf5d\', \'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":0,"code":"JSON.parse();","codeLanguage":"javascript","explanation":"With the `JSON.parse()` method, we can parse JSON string to a JavaScript value.\\n\\n```javascript\\n// Stringifying a number into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonNumber = JSON.stringify(4); // \'4\'\\nJSON.parse(jsonNumber); // 4\\n\\n// Stringifying an array value into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify([1, 2, 3]); // \'[1, 2, 3]\'\\nJSON.parse(jsonArray); // [1, 2, 3]\\n\\n// Stringifying an object  into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify({ name: \'Lydia\' }); // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray); // { name: \'Lydia\' }\\n```","id":109,"options":["Parses JSON to a JavaScript value","Parses a JavaScript object to JSON","Parses any JavaScript value to JSON","Parses JSON to a JavaScript object only"],"question":"What does this method do?"},{"answer":3,"code":"let name = \'Lydia\';\\n\\nfunction getName() {\\n  console.log(name);\\n  let name = \'Sarah\';\\n}\\n\\ngetName();","codeLanguage":"javascript","explanation":"Each function has its own _execution context_ (or _scope_). The `getName` function first looks within its own context (scope) to see if it contains the variable `name` we\'re trying to access. In this case, the `getName` function contains its own `name` variable: we declare the variable `name` with the `let` keyword, and with the value of `\'Sarah\'`.\\n\\nVariables with the `let` keyword (and `const`) are hoisted, but unlike `var`, don\'t get <i>initialized</i>. They are not accessible before the line we declare (initialize) them. This is called the \\"temporal dead zone\\". When we try to access the variables before they are declared, JavaScript throws a `ReferenceError`.\\n\\nIf we wouldn\'t have declared the `name` variable within the `getName` function, the javascript engine would\'ve looked down the _scope chain_. The outer scope has a variable called `name` with the value of `Lydia`. In that case, it would\'ve logged `Lydia`.\\n\\n```javascript\\nlet name = \'Lydia\';\\n\\nfunction getName() {\\n  console.log(name);\\n}\\n\\ngetName(); // Lydia\\n```","id":110,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne();\\nconst two = generatorTwo();\\n\\nconsole.log(one.next().value);\\nconsole.log(two.next().value);","codeLanguage":"javascript","explanation":"With the `yield` keyword, we `yield` values in a generator function. With the `yield*` keyword, we can yield values from another generator function, or iterable object (for example an array).\\n\\nIn `generatorOne`, we yield the entire array `[\'a\', \'b\', \'c\']` using the `yield` keyword. The value of `value` property on the object returned by the `next` method on `one` (`one.next().value`) is equal to the entire array `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value); // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value); // undefined\\n```\\n\\nIn `generatorTwo`, we use the `yield*` keyword. This means that the first yielded value of `two`, is equal to the first yielded value in the iterator. The iterator is the array `[\'a\', \'b\', \'c\']`. The first yielded value is `a`, so the first time we call `two.next().value`, `a` is returned.\\n\\n```javascript\\nconsole.log(two.next().value); // \'a\'\\nconsole.log(two.next().value); // \'b\'\\nconsole.log(two.next().value); // \'c\'\\nconsole.log(two.next().value); // undefined\\n```","id":111,"options":["`a` and `a`","`a` and `undefined`","`[\'a\', \'b\', \'c\']` and `a`","`a` and `[\'a\', \'b\', \'c\']`"],"question":"What\'s the output?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`);","codeLanguage":"javascript","explanation":"Expressions within template literals are evaluated first. This means that the string will contain the returned value of the expression, the immediately invoked function `(x => x)(\'I love\')` in this case. We pass the value `\'I love\'` as an argument to the `x => x` arrow function. `x` is equal to `\'I love\'`, which gets returned. This results in `I love to program`.","id":112,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"What\'s the output?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\');\\n  }, 1000),\\n};\\n\\nconfig = null;","codeLanguage":"javascript","explanation":"Normally when we set objects equal to `null`, those objects get _garbage collected_ as there is no reference anymore to that object. However, since the callback function within `setInterval` is an arrow function (thus bound to the `config` object), the callback function still holds a reference to the `config` object. As long as there is a reference, the object won\'t get garbage collected. Since it\'s not garbage collected, the `setInterval` callback function will still get invoked every 1000ms (1s).","id":113,"options":["The `setInterval` callback won\'t be invoked","The `setInterval` callback gets invoked once","The `setInterval` callback will still be called every second","We never invoked `config.alert()`, config is `null`"],"question":"What will happen?"},{"answer":1,"code":"const myMap = new Map();\\nconst myFunc = () => \'greeting\';\\n\\nmyMap.set(myFunc, \'Hello world!\');\\n\\n//1\\nmyMap.get(\'greeting\');\\n//2\\nmyMap.get(myFunc);\\n//3\\nmyMap.get(() => \'greeting\');","codeLanguage":"javascript","explanation":"When adding a key/value pair using the `set` method, the key will be the value of the first argument passed to the `set` function, and the value will be the second argument passed to the `set` function. The key is the _function_ `() => \'greeting\'` in this case, and the value `\'Hello world\'`. `myMap` is now `{ () => \'greeting\' => \'Hello world!\' }`.\\n\\n1 is wrong, since the key is not `\'greeting\'` but `() => \'greeting\'`.\\n3 is wrong, since we\'re creating a new function by passing it as a parameter to the `get` method. Object interact by _reference_. Functions are objects, which is why two functions are never strictly equal, even if they are identical: they have a reference to a different spot in memory.","id":114,"options":["1","2","2 and 3","All of them"],"question":"Which method(s) will return the value `\'Hello world!\'`?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nconst changeAge = (x = { ...person }) => (x.age += 1);\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1;\\n  x.name = \'Sarah\';\\n};\\n\\nchangeAge(person);\\nchangeAgeAndName();\\n\\nconsole.log(person);","codeLanguage":"javascript","explanation":"Both the `changeAge` and `changeAgeAndName` functions have a default parameter, namely a _newly_ created object `{ ...person }`. This object has copies of all the key/values in the `person` object.\\n\\nFirst, we invoke the `changeAge` function and pass the `person` object as its argument. This function increases the value of the `age` property by 1. `person` is now `{ name: \\"Lydia\\", age: 22 }`.\\n\\nThen, we invoke the `changeAgeAndName` function, however we don\'t pass a parameter. Instead, the value of `x` is equal to a _new_ object: `{ ...person }`. Since it\'s a new object, it doesn\'t affect the values of the properties on the `person` object. `person` is still equal to `{ name: \\"Lydia\\", age: 22 }`.","id":115,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"What\'s the output?"},{"answer":2,"code":"function sumValues(x, y, z) {\\n  return x + y + z;\\n}","codeLanguage":"javascript","explanation":"With the spread operator `...`, we can _spread_ iterables to individual elements. The `sumValues` function receives three arguments: `x`, `y` and `z`. `...[1, 2, 3]` will result in `1, 2, 3`, which we pass to the `sumValues` function.","id":116,"options":["`sumValues([...1, 2, 3])`","`sumValues([...[1, 2, 3]])`","`sumValues(...[1, 2, 3])`","`sumValues([1, 2, 3])`"],"question":"Which of the following options will return `6`?"},{"answer":1,"code":"let num = 1;\\nconst list = [\'\ud83e\udd73\', \'\ud83e\udd20\', \'\ud83e\udd70\', \'\ud83e\udd2a\'];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"With the `+=` operand, we\'re incrementing the value of `num` by `1`. `num` had the initial value `1`, so `1 + 1` is `2`. The item on the second index in the `list` array is \ud83e\udd70, `console.log(list[2])` prints \ud83e\udd70.","id":117,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":1,"code":"const person = {\\n  firstName: \'Lydia\',\\n  lastName: \'Hallie\',\\n  pet: {\\n    name: \'Mara\',\\n    breed: \'Dutch Tulip Hound\',\\n  },\\n  getFullName() {\\n    return `${this.firstName} ${this.lastName}`;\\n  },\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"With the optional chaining operator `?.`, we no longer have to explicitly check whether the deeper nested values are valid or not. If we\'re trying to access a property on an `undefined` or `null` value (_nullish_), the expression short-circuits and returns `undefined`.\\n\\n`person.pet?.name`: `person` has a property named `pet`: `person.pet` is not nullish. It has a property called `name`, and returns `Mara`.\\n`person.pet?.family?.name`: `person` has a property named `pet`: `person.pet` is not nullish. `pet` does _not_ have a property called `family`, `person.pet.family` is nullish. The expression returns `undefined`.\\n`person.getFullName?.()`: `person` has a property named `getFullName`: `person.getFullName()` is not nullish and can get invoked, which returns `Lydia Hallie`.\\n`member.getLastName?.()`: `member` is not defined: `member.getLastName()` is nullish. The expression returns `undefined`.","id":118,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `ReferenceError`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"What\'s the output?"},{"answer":1,"code":"const groceries = [\'banana\', \'apple\', \'peanuts\'];\\n\\nif (groceries.indexOf(\'banana\')) {\\n  console.log(\'We have to buy bananas!\');\\n} else {\\n  console.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"We passed the condition `groceries.indexOf(\\"banana\\")` to the if-statement. `groceries.indexOf(\\"banana\\")` returns `0`, which is a falsy value. Since the condition in the if-statement is falsy, the code in the `else` block runs, and `We don\'t have to buy bananas!` gets logged.","id":119,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"What\'s the output?"},{"answer":3,"code":"const config = {\\n  languages: [],\\n  set language(lang) {\\n    return this.languages.push(lang);\\n  },\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"The `language` method is a `setter`. Setters don\'t hold an actual value, their purpose is to _modify_ properties. When calling a `setter` method, `undefined` gets returned.","id":120,"options":["`function language(lang) { this.languages.push(lang }`","`0`","`[]`","`undefined`"],"question":"What\'s the output?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\n\\nconsole.log(!typeof name === \'object\');\\nconsole.log(!typeof name === \'string\');","codeLanguage":"javascript","explanation":"`typeof name` returns `\\"string\\"`. The string `\\"string\\"` is a truthy value, so `!typeof name` returns the boolean value `false`. `false === \\"object\\"` and `false === \\"string\\"` both return`false`.\\n\\n(If we wanted to check whether the type was (un)equal to a certain type, we should\'ve written `!==` instead of `!typeof`)","id":121,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"What\'s the output?"},{"answer":0,"code":"const add = x => y => z => {\\n  console.log(x, y, z);\\n  return x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"The `add` function returns an arrow function, which returns an arrow function, which returns an arrow function (still with me?). The first function receives an argument `x` with the value of `4`. We invoke the second function, which receives an argument `y` with the value `5`. Then we invoke the third function, which receives an argument `z` with the value `6`. When we\'re trying to access the value `x`, `y` and `z` within the last arrow function, the JS engine goes up the scope chain in order to find the values for `x` and `y` accordingly. This returns `4` `5` `6`.","id":122,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"What\'s the output?"},{"answer":2,"code":"async function* range(start, end) {\\n  for (let i = start; i <= end; i++) {\\n    yield Promise.resolve(i);\\n  }\\n}\\n\\n(async () => {\\n  const gen = range(1, 3);\\n  for await (const item of gen) {\\n    console.log(item);\\n  }\\n})();","codeLanguage":"javascript","explanation":"The generator function `range` returns an async object with promises for each item in the range we pass: `Promise{1}`, `Promise{2}`, `Promise{3}`. We set the variable `gen` equal to the async object, after which we loop over it using a `for await ... of` loop. We set the variable `item` equal to the returned Promise values: first `Promise{1}`, then `Promise{2}`, then `Promise{3}`. Since we\'re _awaiting_ the value of `item`, the resolved promsie, the resolved _values_ of the promises get returned: `1`, `2`, then `3`.","id":123,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"What\'s the output?"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n  console.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"`myFunc` expects an object with properties `x`, `y` and `z` as its argument. Since we\'re only passing three separate numeric values (1, 2, 3) instead of one object with properties `x`, `y` and `z` ({x: 1, y: 2, z: 3}), `x`, `y` and `z` have their default value of `undefined`.","id":124,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"What\'s the output?"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat(\'en-US\', {\\n    style: \'unit\',\\n    unit: \'mile-per-hour\'\\n  }).format(speed);\\n\\n  const formattedAmount = new Intl.NumberFormat(\'en-US\', {\\n    style: \'currency\',\\n    currency: \'USD\'\\n  }).format(amount);\\n\\n  return `The driver drove ${formattedSpeed} and has to pay ${formattedAmount}`;\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"With the `Intl.NumberFormat` method, we can format numeric values to any locale. We format the numeric value `130` to the `en-US` locale as a `unit` in `mile-per-hour`, which results in `130 mph`. The numeric value `300` to the `en-US` locale as a `currency` in `USD` results in `$300.00`.","id":125,"options":["The driver drove 130 and has to pay 300","The driver drove 130 mph and has to pay $300.00","The driver drove undefined and has to pay undefined","The driver drove 130.00 and has to pay 300.00"],"question":"What\'s the output?"},{"answer":1,"code":"const spookyItems = [\'\ud83d\udc7b\', \'\ud83c\udf83\', \'\ud83d\udd78\'];\\n({ item: spookyItems[3] } = { item: \'\ud83d\udc80\' });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"By destructuring objects, we can unpack values from the right-hand object, and assign the unpacked value to the value of the same property name on the left-hand object. In this case, we\'re assigning the value \\"\ud83d\udc80\\" to `spookyItems[3]`. This means that we\'re modifying the `spookyItems` array, we\'re adding the \\"\ud83d\udc80\\" to it. When logging `spookyItems`, `[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]` gets logged.","id":126,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"What\'s the output?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"With the `Number.isNaN` method, you can check if the value you pass is a _numeric value_ and equal to `NaN`. `name` is not a numeric value, so `Number.isNaN(name)` returns `false`. `age` is a numeric value, but is not equal to `NaN`, so `Number.isNaN(age)` returns `false`.\\n\\nWith the `isNaN` method, you can check if the value you pass is not a number. `name` is not a number, so `isNaN(name)` returns true. `age` is a number, so `isNaN(age)` returns `false`.","id":127,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"What\'s the output?"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n  console.log(typeof randomValue);\\n  const randomValue = \'Lydia Hallie\';\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"Variables declared with the `const` keyword are not referencable before their initialization: this is called the _temporal dead zone_. In the `getInfo` function, the variable `randomValue` is scoped in the functional scope of `getInfo`. On the line where we want to log the value of `typeof randomValue`, the variable `randomValue` isn\'t initialized yet: a `ReferenceError` gets thrown! The engine didn\'t go down the scope chain since we declared the variable `randomValue` in the `getInfo` function.","id":128,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":2,"code":"const myPromise = Promise.resolve(\'Woah some cool data\');\\n\\n(async () => {\\n  try {\\n    console.log(await myPromise);\\n  } catch {\\n    throw new Error(`Oops didn\'t work`);\\n  } finally {\\n    console.log(\'Oh finally!\');\\n  }\\n})();","codeLanguage":"javascript","explanation":"In the `try` block, we\'re logging the awaited value of the `myPromise` variable: `\\"Woah some cool data\\"`. Since no errors were thrown in the `try` block, the code in the `catch` block doesn\'t run. The code in the `finally` block _always_ runs, `\\"Oh finally!\\"` gets logged.","id":129,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"What\'s the output?"},{"answer":1,"code":"const emojis = [\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"With the `flat` method, we can create a new, flattened array. The depth of the flattened array depends on the value that we pass. In this case, we passed the value `1` (which we didn\'t have to, that\'s the default value), meaning that only the arrays on the first depth will be concatenated. `[\'\ud83e\udd51\']` and `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]` in this case. Concatenating these two arrays results in `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":130,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"What\'s the output?"},{"answer":3,"code":"class Counter {\\n  constructor() {\\n    this.count = 0;\\n  }\\n\\n  increment() {\\n    this.count++;\\n  }\\n}\\n\\nconst counterOne = new Counter();\\ncounterOne.increment();\\ncounterOne.increment();\\n\\nconst counterTwo = counterOne;\\ncounterTwo.increment();\\n\\nconsole.log(counterOne.count);","codeLanguage":"javascript","explanation":"`counterOne` is an instance of the `Counter` class. The counter class contains a `count` property on its constructor, and an `increment` method. First, we invoked the `increment` method twice by calling `counterOne.increment()`. Currently, `counterOne.count` is `2`.\\n\\n<img src=\\"https://i.imgur.com/KxLlTm9.png\\" width=\\"400\\">\\n\\nThen, we create a new variable `counterTwo`, and set it equal to `counterOne`. Since objects interact by reference, we\'re just creating a new reference to the same spot in memory that `counterOne` points to. Since it has the same spot in memory, any changes made to the object that `counterTwo` has a reference to, also apply to `counterOne`. Currently, `counterTwo.count` is `2`.\\n\\nWe invoke the `counterTwo.increment()`, which sets the `count` to `3`. Then, we log the count on `counterOne`, which logs `3`.\\n\\n<img src=\\"https://i.imgur.com/BNBHXmc.png\\" width=\\"400\\">","id":131,"options":["`0`","`1`","`2`","`3`"],"question":"What\'s the output?"},{"answer":3,"code":"const myPromise = Promise.resolve(Promise.resolve(\'Promise!\'));\\n\\nfunction funcOne() {\\n  myPromise.then(res => res).then(res => console.log(res));\\n  setTimeout(() => console.log(\'Timeout!\', 0));\\n  console.log(\'Last line!\');\\n}\\n\\nasync function funcTwo() {\\n  const res = await myPromise;\\n  console.log(await res);\\n  setTimeout(() => console.log(\'Timeout!\', 0));\\n  console.log(\'Last line!\');\\n}\\n\\nfuncOne();\\nfuncTwo();","codeLanguage":"javascript","explanation":"First, we invoke `funcOne`. On the first line of `funcOne`, we call the `myPromise` promise, which is an _asynchronous_ operation. While the engine is busy completing the promise, it keeps on running the function `funcOne`. The next line is the _asynchronous_ `setTimeout` function, from which the callback is sent to the Web API. (see my article on the event loop here.)\\n\\nBoth the promise and the timeout are asynchronous operations, the function keeps on running while it\'s busy completing the promise and handling the `setTimeout` callback. This means that `Last line!` gets logged first, since this is not an asynchonous operation. This is the last line of `funcOne`, the promise resolved, and `Promise!` gets logged. However, since we\'re invoking `funcTwo()`, the call stack isn\'t empty, and the callback of the `setTimeout` function cannot get added to the callstack yet.\\n\\nIn `funcTwo` we\'re, first _awaiting_ the myPromise promise. With the `await` keyword, we pause the execution of the function until the promise has resolved (or rejected). Then, we log the awaited value of `res` (since the promise itself returns a promise). This logs `Promise!`.\\n\\nThe next line is the _asynchronous_ `setTimeout` function, from which the callback is sent to the Web API.\\n\\nWe get to the last line of `funcTwo`, which logs `Last line!` to the console. Now, since `funcTwo` popped off the call stack, the call stack is empty. The callbacks waiting in the queue (`() => console.log(\\"Timeout!\\")` from `funcOne`, and `() => console.log(\\"Timeout!\\")` from `funcTwo`) get added to the call stack one by one. The first callback logs `Timeout!`, and gets popped off the stack. Then, the second callback logs `Timeout!`, and gets popped off the stack. This logs `Last line! Promise! Promise! Last line! Timeout! Timeout!`","id":132,"options":["`Promise! Last line! Promise! Last line! Last line! Promise!`","`Last line! Timeout! Promise! Last line! Timeout! Promise!`","`Promise! Last line! Last line! Promise! Timeout! Timeout!`","`Last line! Promise! Promise! Last line! Timeout! Timeout!`"],"question":"What\'s the output?"},{"answer":2,"code":"// sum.js\\nexport default function sum(x) {\\n  return x + x;\\n}\\n\\n// index.js\\nimport * as sum from \'./sum\';","codeLanguage":"javascript","explanation":"With the asterisk `*`, we import all exported values from that file, both default and named. If we had the following file:\\n\\n```javascript\\n// info.js\\nexport const name = \'Lydia\';\\nexport const age = 21;\\nexport default \'I love JavaScript\';\\n\\n// index.js\\nimport * as info from \'./info\';\\nconsole.log(info);\\n```\\n\\nThe following would get logged:\\n\\n```javascript\\n{\\n  default: \\"I love JavaScript\\",\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n```\\n\\nFor the `sum` example, it means that the imported value `sum` looks like this:\\n\\n```javascript\\n{ default: function sum(x) { return x + x } }\\n```\\n\\nWe can invoke this function, by calling `sum.default`","id":133,"options":["`sum(4)`","`sum.sum(4)`","`sum.default(4)`","Default aren\'t imported with `*`, only named exports"],"question":"How can we invoke `sum` in `index.js` from `sum.js?`"},{"answer":2,"code":"const handler = {\\n  set: () => console.log(\'Added a new property!\'),\\n  get: () => console.log(\'Accessed a property!\'),\\n};\\n\\nconst person = new Proxy({}, handler);\\n\\nperson.name = \'Lydia\';\\nperson.name;","codeLanguage":"javascript","explanation":"With a Proxy object, we can add custom behavior to an object that we pass to it as the second argument. In this case, we pass the `handler` object which contained to properties: `set` and `get`. `set` gets invoked whenever we _set_ property values, `get` gets invoked whenever we _get_ (access) property values.\\n\\nThe first argument is an empty object `{}`, which is the value of `person`. To this object, the custom behavior specified in the `handler` object gets added. If we add a property to the `person` object, `set` will get invoked. If we access a property on the `person` object, `get` gets invoked.\\n\\nFirst, we added a new property `name` to the proxy object (`person.name = \\"Lydia\\"`). `set` gets invoked, and logs `\\"Added a new property!\\"`.\\n\\nThen, we access a property value on the proxy object, the `get` property on the handler object got invoked. `\\"Accessed a property!\\"` gets logged.","id":134,"options":["`Added a new property!`","`Accessed a property!`","`Added a new property!` `Accessed a property!`","Nothing gets logged"],"question":"What\'s the output?"},{"answer":0,"code":"const person = { name: \'Lydia Hallie\' };\\n\\nObject.seal(person);","codeLanguage":"javascript","explanation":"With `Object.seal` we can prevent new properies from being _added_, or existing properties to be _removed_.\\n\\nHowever, you can still modify the value of existing properties.","id":135,"options":["`person.name = \\"Evan Bacon\\"`","`person.age = 21`","`delete person.name`","`Object.assign(person, { age: 21 })`"],"question":"Which of the following will modify the `person` object?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia Hallie\',\\n  address: {\\n    street: \'100 Main St\',\\n  },\\n};\\n\\nObject.freeze(person);","codeLanguage":"javascript","explanation":"The `Object.freeze` method _freezes_ an object. No properties can be added, modified, or removed.\\n\\nHowever, it only _shallowly_ freezes the object, meaning that only _direct_ properties on the object are frozen. If the property is another object, like `address` in this case, the properties on that object aren\'t frozen, and can be modified.","id":136,"options":["`person.name = \\"Evan Bacon\\"`","`delete person.address`","`person.address.street = \\"101 Main St\\"`","`person.pet = { name: \\"Mara\\" }`"],"question":"Which of the following will modify the `person` object?"},{"answer":0,"code":"const add = x => x + x;\\n\\nfunction myFunc(num = 2, value = add(num)) {\\n  console.log(num, value);\\n}\\n\\nmyFunc();\\nmyFunc(3);","codeLanguage":"javascript","explanation":"First, we invoked `myFunc()` without passing any arguments. Since we didn\'t pass arguments, `num` and `value` got their default values: num is `2`, and `value` the returned value of the function `add`. To the `add` function, we pass `num` as an argument, which had the value of `2`. `add` returns `4`, which is the value of `value`.\\n\\nThen, we invoked `myFunc(3)` and passed the value `3` as the value for the argument `num`. We didn\'t pass an argument for `value`. Since we didn\'t pass a value for the `value` argument, it got the default value: the returned value of the `add` function. To `add`, we pass `num`, which has the value of `3`. `add` returns `6`, which is the value of `value`.","id":137,"options":["`2` `4` and `3` `6`","`2` `NaN` and `3` `NaN`","`2` `Error` and `3` `6`","`2` `4` and `3` `Error`"],"question":"What\'s the output?"},{"answer":1,"code":"const teams = [\\n  { name: \'Team 1\', members: [\'Paul\', \'Lisa\'] },\\n  { name: \'Team 2\', members: [\'Laura\', \'Tim\'] },\\n];\\n\\nfunction* getMembers(members) {\\n  for (let i = 0; i < members.length; i++) {\\n    yield members[i];\\n  }\\n}\\n\\nfunction* getTeams(teams) {\\n  for (let i = 0; i < teams.length; i++) {\\n    // \u2728 SOMETHING IS MISSING HERE \u2728\\n  }\\n}\\n\\nconst obj = getTeams(teams);\\nobj.next(); // { value: \\"Paul\\", done: false }\\nobj.next(); // { value: \\"Lisa\\", done: false }","codeLanguage":"javascript","explanation":"In order to iterate over the `members` in each element in the `teams` array, we need to pass `teams[i].members` to the `getMembers` generator function. The generator function returns a generator object. In order to iterate over each element in this generator object, we need to use `yield*`.\\n\\nIf we would\'ve written `yield`, `return yield`, or `return`, the entire generator function would\'ve gotten returned the first time we called the `next` method.","id":138,"options":["`yield getMembers(teams[i].members)`","`yield* getMembers(teams[i].members)`","`return getMembers(teams[i].members)`","`return yield getMembers(teams[i].members)`"],"question":"What\'s missing?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia Hallie\',\\n  hobbies: [\'coding\'],\\n};\\n\\nfunction addHobby(hobby, hobbies = person.hobbies) {\\n  hobbies.push(hobby);\\n  return hobbies;\\n}\\n\\naddHobby(\'running\', []);\\naddHobby(\'dancing\');\\naddHobby(\'baking\', person.hobbies);\\n\\nconsole.log(person.hobbies);","codeLanguage":"javascript","explanation":"The `addHobby` function receives two arguments, `hobby` and `hobbies` with the default value of the `hobbies` array on the `person` object.\\n\\nFirst, we invoke the `addHobby` function, and pass `\\"running\\"` as the value for `hobby` and an empty array as the value for `hobbies`. Since we pass an empty array as the value for `y`, `\\"running\\"` gets added to this empty array.\\n\\nThen, we invoke the `addHobby` function, and pass `\\"dancing\\"` as the value for `hobby`. We didn\'t pass a value for `hobbies`, so it gets the default value, the `hobbies` property on the `person` object. We push the hobby `dancing` to the `person.hobbies` array.\\n\\nLast, we invoke the `addHobby` function, and pass `\\"bdaking\\"` as the value for `hobby`, and the `person.hobbies` array as the value for `hobbies`. We push the hobby `baking` to the `person.hobbies` array.\\n\\nAfter pushing `dancing` and `baking`, the value of `person.hobbies` is `[\\"coding\\", \\"dancing\\", \\"baking\\"]`","id":139,"options":["`[\\"coding\\"]`","`[\\"coding\\", \\"dancing\\"]`","`[\\"coding\\", \\"dancing\\", \\"baking\\"]`","`[\\"coding\\", \\"running\\", \\"dancing\\", \\"baking\\"]`"],"question":"What\'s the output?"},{"answer":1,"code":"class Bird {\\n  constructor() {\\n    console.log(\\"I\'m a bird. \ud83e\udda2\\");\\n  }\\n}\\n\\nclass Flamingo extends Bird {\\n  constructor() {\\n    console.log(\\"I\'m pink. \ud83c\udf38\\");\\n    super();\\n  }\\n}\\n\\nconst pet = new Flamingo();","codeLanguage":"javascript","explanation":"We create the variable `pet` which is an instance of the `Flamingo` class. When we instantiate this instance, the `constructor` on `Flamingo` gets called. First, `\\"I\'m pink. \ud83c\udf38\\"` gets logged, after which we call `super()`. `super()` calls the constructor of the parent class, `Bird`. The constructor in `Bird` gets called, and logs `\\"I\'m a bird. \ud83e\udda2\\"`.","id":140,"options":["`I\'m pink. \ud83c\udf38`","`I\'m pink. \ud83c\udf38` `I\'m a bird. \ud83e\udda2`","`I\'m a bird. \ud83e\udda2` `I\'m pink. \ud83c\udf38`","Nothing, we didn\'t call any method"],"question":"What\'s the output?"},{"answer":3,"code":"const emojis = [\'\ud83c\udf84\', \'\ud83c\udf85\ud83c\udffc\', \'\ud83c\udf81\', \'\u2b50\'];\\n\\n/* 1 */ emojis.push(\'\ud83e\udd8c\');\\n/* 2 */ emojis.splice(0, 2);\\n/* 3 */ emojis = [...emojis, \'\ud83e\udd42\'];\\n/* 4 */ emojis.length = 0;","codeLanguage":"javascript","explanation":"The `const` keyword simply means we cannot _redeclare_ the value of that variable, it\'s _read-only_. However, the value itself isn\'t immutable. The properties on the `emojis` array can be modified, for example by pushing new values, splicing them, or setting the length of the array to 0.","id":141,"options":["1","1 and 2","3 and 4","3"],"question":"Which of the options result(s) in an error?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia Hallie\\",\\n  age: 21\\n}\\n\\n[...person] // [\\"Lydia Hallie\\", 21]","codeLanguage":"javascript","explanation":"Objects aren\'t iterable by default. An iterable is an iterable if the iterator protocol is present. We can add this manually by adding the iterator symbol `[Symbol.iterator]`, which has to return a generator object, for example by making it a generator function `*[Symbol.iterator]() {}`. This generator function has to yield the `Object.values` of the `person` object if we want it to return the array `[\\"Lydia Hallie\\", 21]`: `yield* Object.values(this)`.","id":142,"options":["Nothing, object are iterable by default","`*[Symbol.iterator]() { for (let x in this) yield* this[x] }`","`*[Symbol.iterator]() { yield* Object.values(this) }`","`*[Symbol.iterator]() { for (let x in this) yield this }`"],"question":"What do we need to add to the `person` object to get `[\\"Lydia Hallie\\", 21]` as the output of `[...person]`?"},{"answer":2,"code":"let count = 0;\\nconst nums = [0, 1, 2, 3];\\n\\nnums.forEach(num => {\\n\\tif (num) count += 1\\n})\\n\\nconsole.log(count)","codeLanguage":"javascript","explanation":"The `if` condition within the `forEach` loop checks whether the value of `num` is truthy or falsy. Since the first number in the `nums` array is `0`, a falsy value, the `if` statement\'s code block won\'t be executed. `count` only gets incremented for the other 3 numbers in the `nums` array, `1`, `2` and `3`. Since `count` gets incremented by `1` 3 times, the value of `count` is `3`.","id":143,"options":["1","2","3","4"],"question":"What\'s the output?"},{"answer":3,"code":"function getFruit(fruits) {\\n\\tconsole.log(fruits?.[1]?.[1])\\n}\\n\\ngetFruit([[\'\ud83c\udf4a\', \'\ud83c\udf4c\'], [\'\ud83c\udf4d\']])\\ngetFruit()\\ngetFruit([[\'\ud83c\udf4d\'], [\'\ud83c\udf4a\', \'\ud83c\udf4c\']])","codeLanguage":"javascript","explanation":"The `?` allows us to optionally access deeper nested properties within objects. We\'re trying to log the item on index `1` within the subarray that\'s on index `1` of the `fruits` array. If the subarray on index `1` in the `fruits` array doesn\'t exist, it\'ll simply return `undefined`. If the subarray on index `1` in the `fruits` array exists, but this subarray doesn\'t have an item on its `1` index, it\'ll also return `undefined`. \\n\\nFirst, we\'re trying to log the second item in the `[\'\ud83c\udf4d\']` subarray of `[[\'\ud83c\udf4a\', \'\ud83c\udf4c\'], [\'\ud83c\udf4d\']]`. This subarray only contains one item, which means there is no item on index `1`, and returns `undefined`.\\n\\nThen, we\'re invoking the `getFruits` function without passing a value as an argument, which means that `fruits` has a value of `undefined` by default. Since we\'re conditionally chaining the item on index `1` of`fruits`, it returns `undefined` since this item on index `1` does not exist. \\n\\nLastly, we\'re trying to log the second item in the `[\'\ud83c\udf4a\', \'\ud83c\udf4c\']` subarray of `[\'\ud83c\udf4d\'], [\'\ud83c\udf4a\', \'\ud83c\udf4c\']`. The item on index `1` within this subarray is `\ud83c\udf4c`, which gets logged.","id":144,"options":["`null`, `undefined`, \ud83c\udf4c","`[]`, `null`, \ud83c\udf4c","`[]`, `[]`, \ud83c\udf4c","`undefined`, `undefined`, \ud83c\udf4c"],"question":"What\'s the output?"},{"answer":0,"code":"class Calc {\\n\\tconstructor() {\\n\\t\\tthis.count = 0 \\n\\t}\\n\\n\\tincrease() {\\n\\t\\tthis.count ++\\n\\t}\\n}\\n\\nconst calc = new Calc()\\nnew Calc().increase()\\n\\nconsole.log(calc.count)","codeLanguage":"javascript","explanation":"We set the variable `calc` equal to a new instance of the `Calc` class. Then, we instantiate a new instance of `Calc`, and invoke the `increase` method on this instance. Since the count property is within the constructor of the `Calc` class, the count property is not shared on the prototype of `Calc`. This means that the value of count has not been updated for the instance calc points to, count is still `0`.","id":145,"options":["`0`","`1`","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":1,"code":"const user = {\\n\\temail: \\"e@mail.com\\",\\n\\tpassword: \\"12345\\"\\n}\\n\\nconst updateUser = ({ email, password }) => {\\n\\tif (email) {\\n\\t\\tObject.assign(user, { email })\\n\\t}\\n\\n\\tif (password) {\\n\\t\\tuser.password = password\\n\\t}\\n\\n\\treturn user\\n}\\n\\nconst updatedUser = updateUser({ email: \\"new@email.com\\" })\\n\\nconsole.log(updatedUser === user)","codeLanguage":"javascript","explanation":"The `updateUser` function updates the values of the `email` and `password` properties on user, if their values are passed to the function, after which the function returns the `user` object. The returned value of the `updateUser` function is the `user` object, which means that the value of updatedUser is a reference to the same `user` object that `user` points to. `updatedUser === user` equals `true`.","id":146,"options":["`false`","`true`","`TypeError`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":2,"code":"const fruit = [\'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']\\n\\nfruit.slice(0, 1)\\nfruit.splice(0, 1)\\nfruit.unshift(\'\ud83c\udf47\')\\n\\nconsole.log(fruit)","codeLanguage":"javascript","explanation":"First, we invoke the `slice` method on the fruit array. The slice method does not modify the original array, but returns the value that it sliced off the array: the banana emoji.\\nThen, we invoke the `splice` method on the fruit array. The splice method does modify the original array, which means that the fruit array now consists of `[\'\ud83c\udf4a\', \'\ud83c\udf4e\']`.\\nAt last, we invoke the `unshift` method on the `fruit` array, which modifies the original array by adding the provided value, \u2018\ud83c\udf47\u2019 in this case,  as the first element in the array.  The fruit array now consists of `[\'\ud83c\udf47\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`.","id":147,"options":["`[\'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf47\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf47\', \'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`"],"question":"What\'s the output?"},{"answer":1,"code":"const animals = {};\\nlet dog = { emoji: \'\ud83d\udc36\' }\\nlet cat = { emoji: \'\ud83d\udc08\' }\\n\\nanimals[dog] = { ...dog, name: \\"Mara\\" }\\nanimals[cat] = { ...cat, name: \\"Sara\\" }\\n\\nconsole.log(animals[dog])","codeLanguage":"javascript","explanation":"Object keys are converted to strings. \\n\\nSince the value of  `dog` is an object,  `animals[dog]` actually means that we\u2019re creating a new property called `\\"object Object\\"` equal to the new object. `animals[\\"object Object\\"]` is now equal to `{ emoji: \\"\ud83d\udc36\\", name: \\"Mara\\"}`.\\n\\n`cat` is also an object, which means that `animals[cat]` actually means that we\u2019re overwriting the value of  `animals[``\\"``object Object``\\"``]` with the new cat properties. \\n\\nLogging `animals[dog]`, or actually `animals[\\"object Object\\"]` since converting the `dog` object to a string results `\\"object Object\\"`, returns the `{ emoji: \\"\ud83d\udc08\\", name: \\"Sara\\" }`.","id":148,"options":["`{ emoji: \\"\ud83d\udc36\\", name: \\"Mara\\" }`","`{ emoji: \\"\ud83d\udc08\\", name: \\"Sara\\" }`","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":0,"code":"const user = {\\n\\temail: \\"my@email.com\\",\\n\\tupdateEmail: email => {\\n\\t\\tthis.email = email\\n\\t}\\n}\\n\\nuser.updateEmail(\\"new@email.com\\")\\nconsole.log(user.email)","codeLanguage":"javascript","explanation":"The `updateEmail` function is an arrow function, and is not bound to the `user` object. This means that the `this` keyword is not referring to the `user` object, but refers to  the global scope in this case. The value of `email` within the `user` object does not get updated. When logging the value of `user.email`, the original value of `my@email.com` gets returned.","id":149,"options":["`my@email.com`","`new@email.com`","`undefined`","`ReferenceError`"],"question":"What\'s the output?"},{"answer":3,"code":"const promise1 = Promise.resolve(\'First\')\\nconst promise2 = Promise.resolve(\'Second\')\\nconst promise3 = Promise.reject(\'Third\')\\nconst promise4 = Promise.resolve(\'Fourth\')\\n\\nconst runPromises = async () => {\\n\\tconst res1 = await Promise.all([promise1, promise2])\\n\\tconst res2  = await Promise.all([promise3, promise4])\\n\\treturn [res1, res2]\\n}\\n\\nrunPromises()\\n\\t.then(res => console.log(res))\\n\\t.catch(err => console.log(err))","codeLanguage":"javascript","explanation":"The `Promise.all` method runs the passed promises in parallel. If one promise fails, the `Promise.all` method _rejects_ with the value of the rejected promise. In this case, `promise3` rejected with the value `\\"Third\\"`. We\u2019re catching the rejected value in the chained `catch` method on the `runPromises` invocation to catch any errors  within the `runPromises` function. Only `\\"Third\\"` gets logged, since `promise3` rejected with this value.","id":150,"options":["`[[\'First\', \'Second\'], [\'Fourth\']]`","`[[\'First\', \'Second\'], [\'Third\', \'Fourth\']]`","`[[\'First\', \'Second\']]`","`\'Third\'`"],"question":"What\'s the output?"},{"answer":2,"code":"const keys = [\\"name\\", \\"age\\"]\\nconst values = [\\"Lydia\\", 22]\\n\\nconst method = /* ?? */\\nObject[method](keys.map((_, i) => {\\n\\treturn [keys[i], values[i]]\\n})) // { name: \\"Lydia\\", age: 22 }","codeLanguage":"javascript","explanation":"The `fromEntries` method turns a 2d array into an object. The first element in each subarray will be the key, and the second element in each subarray will be the value. In this case, we\u2019re mapping over the `keys` array, which returns an array which first element is the item on the key array on the current index, and the second element is the item of the values array on the current index. \\n\\nThis creates an array of subarrays containing the correct keys and values, which results in `{ name: \\"Lydia\\", age: 22 }`","id":151,"options":["`entries`","`values`","`fromEntries`","`forEach`"],"question":"What should the value of `method` be to log `{ name: \\"Lydia\\", age: 22 }`?"},{"answer":2,"code":"const createMember = ({ email, address = {}}) => {\\n\\tconst validEmail = /.+@.+..+/.test(email)\\n\\tif (!validEmail) throw new Error(\\"Valid email pls\\")\\n\\n\\treturn {\\n\\t\\temail,\\n\\t\\taddress: address ? address : null\\n\\t}\\n}\\n\\nconst member = createMember({ email: \\"my@email.com\\" })\\nconsole.log(member)","codeLanguage":"javascript","explanation":"The default value of `address` is an empty object `{}`. When we set the variable `member` equal to the object returned by the `createMember` function, we didn\'t pass a value for address, which means that the value of address is the default empty object `{}`. An empty object is a truthy value, which means that the condition of the `address ? address : null` conditional returns `true`. The value of address is the empty object `{}`.","id":152,"options":["`{ email: \\"my@email.com\\", address: null }`","`{ email: \\"my@email.com\\" }`","`{ email: \\"my@email.com\\", address: {} }`","`{ email: \\"my@email.com\\", address: undefined }`"],"question":"What\'s the output?"},{"answer":1,"code":"let randomValue = { name: \\"Lydia\\" }\\nrandomValue = 23\\n\\nif (!typeof randomValue === \\"string\\") {\\n\\tconsole.log(\\"It\'s not a string!\\")\\n} else {\\n\\tconsole.log(\\"Yay it\'s a string!\\")\\n}","codeLanguage":"javascript","explanation":"The condition within the `if` statement checks whether the value of `!typeof randomValue` is equal to `\\"string\\"`. The `!` operator converts the value to a boolean value. If the value is truthy, the returned value will be `false`, if the value is falsy, the returned value will be `true`. In this case, the returned value of `typeof randomValue` is the truthy value `\\"number\\"`, meaning that the value of `!typeof randomValue` is the boolean value `false`.\\n\\n`!typeof randomValue === \\"string\\"` always returns false, since we\'re actually checking `false === \\"string\\"`. Since the condition returned `false`, the code block of the `else` statement gets run, and `Yay it\'s a string!` gets logged.","id":153,"options":["`It\'s not a string!`","`Yay it\'s a string!`","`TypeError`","`undefined`"],"question":"What\'s the output?"}],"locale":"en-EN"},{"isRTL":false,"language":"\ud83c\udde7\ud83c\udde6 Bosanski","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Unutar funkcije, najprije deklari\u0161emo varijablu `name` s` var`\\nklju\u010dne rije\u010di. To zna\u010di da se varijabla podi\u017ee (memorijski prostor je postavljen\\ntijekom faze izrade) sa zadanom vrijedno\u0161\u0107u `undefined`,\\ndok zapravo ne do\u0111emo do linije gdje definiramo varijablu. Mi\\njo\u0161 nismo definirali varijablu na liniji gdje poku\u0161avamo prijaviti\\nvarijabla `name`, tako da jo\u0161 uvijek sadr\u017ei vrijednost` undefined`.\\n\\nVarijable s klju\u010dnom rije\u010di `let` (i` const`) su podignute, ali za razliku od njih\\n`var`, ne bivaju <i> inicijalizirane </i>. Nisu dostupni prije\\nlinije na kojo ih progla\u0161avamo (inicijaliziramo). To se naziva \\"temporal dead zone\\".\\nKada poku\u0161amo pristupiti varijablama prije nego \u0161to budu deklarirane,\\nJavaScript iz bacuje `ReferenceError`.\\n\\n\\n\\n\\n* * * * *","id":0,"options":["\\"Lydia\\" i \\"undefined\\"","\\"Lydia\\" i \\"ReferenceError\\"","\\"ReferenceError\\" i \\"21\\"","`undefined` i` ReferenceError`"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Zbog reda doga\u0111aja u JavaScriptu, povratni poziv `setTimeout`\\nfunction se zove * nakon \u0161to je izvr\u0161ena petlja. Od\\nvarijabla `i` u prvoj petlji je deklarirana pomo\u0107u klju\u010dne rije\u010di` var`,\\nta je vrijednost bila globalna. Tijekom petlje pove\u0107avamo vrijednost `i`\\nsvaki put \'1\', koriste\u0107i unarni operator `++`. Do vremena\\nPozvana je function povratnog poziva `setTimeout`,` i` je bila jednaka `3` u\\nu prvom primjeru.\\n\\nU drugoj petlji, varijabla `i` je deklarirana pomo\u0107u` let`\\nklju\u010dna rije\u010d: varijable deklarirane s klju\u010dnom rije\u010di `let` (i` const`) su\\nblock-scoped (blok je sve izme\u0111u `{}`). Tijekom svake iteracije,\\n`i` \u0107e imati novu vrijednost, a svaka vrijednost \u0107e biti obuhva\u0107ena unutar petlje.\\n\\n\\n\\n\\n* * * * *","id":1,"options":["`0 1 2` i` 0 1 2`","\\"0 1 2\\" i \\"3 3 3\\"","\\"3 3 3\\" i \\"0 1 2\\""],"question":"\u0160to je izlaz?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"Imajte na umu da je vrijednost \\"promjera\\" uobi\u010dajena function, dok je vrijednost promjera\\nvrijednost \\"perimetra\\" je function strelice.\\n\\nSa functionma strelica, klju\u010dna rije\u010d \\"this\\" odnosi se na njegovo trenutno\\nokolno podru\u010dje, za razliku od uobi\u010dajenih function! To zna\u010di kada\\nnazovemo \'perimetar\', ne odnosi se na objekt oblika, ve\u0107 na njegov\\nokru\u017eenje (primjerice, prozor).\\n\\nNa tom objektu nema vrijednosti `radius` koja vra\u0107a` undefined`.\\n\\n\\n\\n\\n* * * * *","id":2,"options":["\\"20\\" i \\"62.83185307179586\\"","\\"20\\" i \\"NaN\\"","\\"20\\" i \\"63\\"","\\"NaN\\" i \\"63\\""],"question":"\u0160to je izlaz?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"Unary plus poku\u0161ava pretvoriti operand u broj. \\"true\\" je \\"1\\",\\ni \\"false\\" je \\"0\\".\\n\\nNiz \'\' Lydia \'\' je istinita vrijednost. Ono \u0161to zapravo tra\u017eimo jest\\n\\"je li ta istinita vrijednost la\u017ena?\\". Ovo vra\u0107a \\"false\\".\\n\\n\\n\\n\\n* * * * *","id":3,"options":["\\"1\\" i \\"false\\"","\\"false\\" i \\"NaN\\"","\\"false\\" i \\"false\\""],"question":"\u0160to je izlaz?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"U JavaScriptu su svi key-evi objekta stringovi (osim ako to nije simbol). \u010cak\\niako ih mo\u017eda ne * upisujemo kao * nizove, oni se uvijek pretvaraju\\nu String ispod \\"haube\\".\\n\\nJavaScript tuma\u010di (ili odla\u017ee) izjave. Kada koristimo zagradu\\nnotacija, on vidi prvu otvarnu zagradu ```i nastavlja dalje do nje\\npronalazi zavr\u0161nu zagradu `]`. Tek tada \u0107e procijeniti\\nizjava.\\n\\n`mouse [bird.size]`: Prvo procjenjuje `bird.size`, \u0161to je` `small``.\\n`mouse [\\" small \\"]` vra\u0107a \\"true\\"\\n\\nMe\u0111utim, s to\u010dkastom notacijom, to se ne doga\u0111a. `mi\u0161a \'nema a\\nkey naziva se \'bird\', \u0161to zna\u010di da je `mouse.bird`` undefined`. Zatim,\\ntra\u017eimo \\"veli\u010dinu\\" koriste\u0107i to\u010dkovni zapis: `mouse.bird.size \'. Od\\n`mouse.bird` je` undefined`, zapravo pitamo `undefined.size`.\\nTo nije valjano, a bit \u0107e u pitanju pogre\u0161ka sli\u010dna onoj\\n`Cannot read property \\"size\\" of undefined`.\\n\\n\\n\\n\\n* * * * *","id":4,"options":["`mouse.bird.size \'nije valjan","`mouse [bird.size]` nije va\u017ee\u0107a","`mi\u0161 [bird [\\" veli\u010dina \\"]]` nije va\u017ee\u0107a","Svi su valjani"],"question":"Koja je istina?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"U JavaScriptu, svi objekti me\u0111usobno djeluju * referencom * kada ih postavljaju\\njednaki.\\n\\nPrvo, varijabla `c` sadr\u017ei vrijednost objekta. Kasnije dodijelimo `d`\\ns istom referencom koju `c \'ima na objekt.\\n\\n<img src = \\"https://i.imgur.com/ko5k0fs.png\\" width = \\"200\\">\\n\\nKada promijenite jedan objekt, mijenjate ih sve.\\n\\n\\n\\n\\n* * * * *","id":5,"options":["\\"Zdravo\\"","\'Hej\'","`undefined`","\\"ReferenceError\\"","`TypeError`"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number ()` je ugra\u0111eni konstruktor function. Iako izgleda\\nkao broj, to zapravo nije broj: ima gomilu ekstra dodataka\\npa je zbog toga objekt.\\n\\nKada koristimo `==` operatora, on samo provjerava ima li isti\\n*vrijednost*. Obje imaju vrijednost `3`, pa se vra\u0107a \'true\'.\\n\\nMe\u0111utim, kada koristimo `===` operator, obje vrijednosti * i * trebaju biti\\nisto. To nije: `new Number ()` nije broj, to je ** objekt **.\\nOba vra\u0107aju \\"false\\"\\n\\n\\n\\n\\n* * * * *","id":6,"options":["`true`` false` `true`","`false`` false` `true`","`true`` false` `false`","`false`` true` `true`"],"question":"\u0160to je izlaz?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"function `colorChange` je stati\u010dna. Namijenjene su stati\u010dkim metodama\\n\u017eive samo na konstruktoru u kojem su stvoreni i ne mogu biti proslije\u0111eni \\nbilo kojem childu. Budu\u0107i da je `freddie` child, function je\\nnije proslije\u0111ena, i nije dostupan na `freddie` instanci: a\\nIzba\u010den je `TypeError`.\\n\\n\\n\\n\\n* * * * *","id":7,"options":["\'naran\u010dasta\'","\\"ljubi\u010dasta\\"","\\"zelena\\"","`TypeError`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Zapisuje objekt, jer smo upravo stvorili prazan objekt na\\nglobalni objekt! Kada smo pogre\u0161no ukucali `pozdrav` kao` greeting`, JS\\ninterpreter je zapravo to vidio kao `global.greeting = {}` (ili\\n`window.greeting = {}` u pregledniku).\\n\\nKako bismo to izbjegli, mo\u017eemo koristiti `` use strict \'\'. To osigurava to\\nda ste deklarirali varijablu prije nego je postavite na bilo \u0161to.\\n\\n\\n\\n\\n* * * * *","id":8,"options":["`{}`","`ReferenceError: greetign nije definiran \'","`undefined`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"To je mogu\u0107e u JavaScriptu, jer su funkcije objekti!\\n(Sve osim primitivnih tipova su objekti)\\n\\nfunction je posebna vrsta objekta. Kod koji sami napi\u0161ete\\nnije stvarna function. function je objekt sa svojstvima.\\nOva nekretnina je nepovratna.\\n\\n\\n\\n\\n* * * * *","id":9,"options":["Ni\u0161ta, ovo je u redu!","`SyntaxError`. Na ovaj na\u010din ne mo\u017eete dodavati svojstva funkciji.","`undefined`","\\"ReferenceError\\""],"question":"\u0160to se doga\u0111a kada to u\u010dinimo?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Ne mo\u017eete dodati svojstva konstruktoru kao \u0161to mo\u017eete s uobi\u010dajenim\\nobjekti. Ako \u017eelite dodati zna\u010dajku svim objektima odjednom, imate\\numjesto toga koristiti prototip. Dakle, u ovom slu\u010daju,\\n\\n```{.js}\\nPerson.prototype.getFullName = function () {\\n  return `$ {this.ime} $ {this.prezime}`;\\n};\\n```\\n\\nbi u\u010dinio `member.getFullName ()`. Za\u0161to je to korisno? Re\u0107i \u0107e mo\\nda smo tu metodu dodali samom konstruktoru. Mo\u017eda ne svaki\\nPrimjer \\"Person\\" trebao je ovu metodu. To bi tro\u0161ilo puno memorije\\nscopa (prostora), jer bi oni jo\u0161 uvijek imali tu svojinu, koja uzima memoriju\\nscopa za svaku instancu. Umjesto toga, ako ga samo dodamo prototipu, mi\\n\u0107e mo je imati na jednom mjestu u memoriji, ali svi imaju pristup!\\n\\n\\n\\n\\n* * * * *","id":10,"options":["`TypeError`","`SyntaxError`","\\"Lydia Hallie\\"","`undefined`` undefined`"],"question":"Kakav je rezultat?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"Za `sarah` nismo koristili klju\u010dnu rije\u010d` new`. Kada koristite \\"new\\", to\\nodnosi se na new prazni objekt koji stvaramo. Me\u0111utim, ako ne dodate\\n`new` se odnosi na ** globalni objekt **!\\n\\nRekli smo da je \\"this.ime\\" jednako \\"Sarah\\" i `this.prezime`\\njednak je \\"Smithu\\". Ono \u0161to smo zapravo u\u010dinili jest definiranje\\n`global.ime = \'Sarah\'` i` global.prezime =\' Smith\'`. `sarah`\\nsam je ostavljen \'undefined\'.\\n\\n\\n\\n\\n* * * * *","id":11,"options":["`Person {ime:\\" Lydia \\", prezime:\\" Hallie \\"} i` undefined`","`Person {ime:\\" Lydia \\", prezime:\\" Hallie \\"} i","`Person {ime:\\" Lydia \\", prezime:\\" Hallie \\"}` i `{}`","`Person {ime:\\" Lydia \\", prezime:\\" Hallie \\"} i"],"question":"\u0160to je izlaz?"},{"answer":3,"explanation":"Tijekom ** capturing ** doga\u0111aj prolazi kroz pretka\\nelemente do ciljnog elementa. Zatim dose\u017ee ** target **\\ni ** bubbling **.\\n\\n<img src = \\"https://i.imgur.com/N18oRgd.png\\" width = \\"200\\">\\n\\n\\n\\n\\n* * * * *","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Koje su tri faze propagiranja doga\u0111aja?"},{"answer":0,"explanation":"Svi objekti imaju prototipove, osim ** osnovnog objekta **. Upori\u0161te\\nobjekt ima pristup nekim metodama i svojstvima, kao \u0161to je `.toString`.\\nTo je razlog za\u0161to mo\u017eete koristiti ugra\u0111ene JavaScript metode! Sve od\\ntakve su metode dostupne na prototipu. Iako JavaScript ne mo\u017ee\\nprona\u0107i ga izravno na va\u0161em objektu, ide niz lanac prototipa i\\nnalazi ga tamo, \u0161to ga \u010dini dostupnim.\\n\\n\\n\\n\\n* * * * *","id":13,"options":["la\u017eno"],"question":"Svi objekti imaju prototipove."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript je ** dinami\u010dki upisani jezik **: ne navodimo \u0161to\\nvrste su odre\u0111ene varijable. Vrijednosti se mogu automatski pretvoriti u\\ndrugi tip bez va\u0161eg znanja, koji se zove * implicitni tip\\nprisila *. ** Prisila ** pretvara iz jednog tipa u drugi.\\n\\nU ovom primjeru JavaScript pretvara broj `1` u niz, u\\nkako bi function imala smisla i vratila vrijednost. Tijekom\\ndodavanje numeri\u010dkog tipa (`1`) i tipa niza (` \'2\'`), broja\\nse tretira kao niz. Mo\u017eemo sli\u010dno spojiti\\n\\"\\" Zdravo \\"+\\" Svijet \\"`, tako da se ovdje doga\u0111a ``````````````````\\nvra\u0107a `\\" 12 \\"`.\\n\\n\\n\\n\\n* * * * *","id":14,"options":["\\"NaN\\"","`TypeError`","\\"12\\"","`3`"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"** postfix ** unarni operator `++`:\\n\\n1. Vra\u0107a vrijednost (ovo vra\u0107a `0`)\\n2. Pove\u0107ava vrijednost (broj je sada `1`)\\n\\n** prefiks ** unary operator `++`:\\n\\n1. Pove\u0107ava vrijednost (broj je sada `2`)\\n2. Vra\u0107a vrijednost (ovo vra\u0107a `2`)\\n\\nOvo vra\u0107a `0 2 2`.\\n\\n\\n\\n\\n* * * * *","id":15,"options":["`1`` 1` `2`","`1`` 2` `2`","`0`` 2` `2`","`0`` 1` `2`"],"question":"\u0160to je izlaz?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"Ako koristite literale s oznakom predlo\u017eaka, vrijednost prvog argumenta je\\nuvijek niz vrijednosti vrijednosti niza. Preostali argumenti dobivaju\\nvrijednosti pro\u0161lih izraza!\\n\\n\\n\\n\\n* * * * *","id":16,"options":["`` Lydia` ``````````````````````````````````````","```````````````````````````````````````````````````````````````````````````","`` Lydia` ``````````````````````````````````````````````````````````"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Prilikom ispitivanja jednakosti, primitivi se uspore\u0111uju prema njihovoj * vrijednosti *, dok\\nobjekti se uspore\u0111uju prema njihovoj * referenci *. JavaScript provjerava ako\\nobjekti imaju referencu na isto mjesto u memoriji.\\n\\nDva predmeta koje uspore\u0111ujemo nemaju: objekt mi\\nproslije\u0111eno kao parametar odnosi se na drugo mjesto u memoriji od\\nobjekt koji smo koristili kako bismo provjerili jednakost.\\n\\nZato i `{age: 18} === {age: 18}` i\\n`{age: 18} == {age: 18}` return `false \'.\\n\\n\\n\\n\\n* * * * *","id":17,"options":["\\"Vi ste odrasla osoba!\\"","\\"Vi ste jo\u0161 uvijek odrasla osoba.\\"","\'Hmm .. Nemam godina za koju pretpostavljam\'"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"Operator spread (`... args`.) Vra\u0107a niz s argumentima.\\narray je objekt, pa `typeof args` vra\u0107a` `objekt \'`\\n\\n\\n\\n\\n* * * * *","id":18,"options":["`\\" broj \\"","`` niz \'\'","`` objekt \'\'","\\"NaN\\""],"question":"\u0160to je izlaz?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Sa `` use strict \'\', mo\u017eete se uvjeriti da nije slu\u010dajno\\ndeklarisana globalna varijabla. Nikada nismo objavili varijablu \\"age\\" i\\nbudu\u0107i da koristimo `` use strict \'\', ona \u0107e na\u010diniti referentnu pogre\u0161ku. Ako mi\\nnije koristio \\"\\" strict \\", to bi i\u0161lo od vlasni\u0161tva\\n`age` bi se dodao u globalni objekt.\\n\\n\\n\\n\\n* * * * *","id":19,"options":["`21`","`undefined`","\\"ReferenceError\\"","`TypeError`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` procjenjuje kodove koji su pro\u0161li kao niz. Ako je to izraz,\\nkao u ovom slu\u010daju, on ocjenjuje izraz. Izraz je\\n`10 * 10 + 5`. Ovo vra\u0107a broj \\"105\\".\\n\\n\\n\\n\\n* * * * *","id":20,"options":["\\"105\\"","`\\" 105 \\"`","`TypeError`","`\\" 10 * 10 + 5 \\"`"],"question":"\u0160to je vrijednost `suma \'?"},{"answer":0,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"Podaci spremljeni u `sessionStorage` se uklanjaju nakon zatvaranja * tab *.\\n\\nAko ste koristili `localStorage`, podaci bi bili tamo zauvijek, osim ako\\nna primjer, `localStorage.clear ()` je pozvan.\\n\\n\\n\\n\\n* * * * *","id":21,"options":["Kada korisnik zatvori karticu.","Kada korisnik zatvori cijeli preglednik, ne samo karticu.","Kada korisnik isklju\u010di svoje ra\u010dunalo."],"question":"Koliko dugo je cool  _secret dostupan?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Pomo\u0107u klju\u010dne rije\u010di `var` mo\u017eete deklarirati vi\u0161e varijabli s istom\\nIme. Varijabla \u0107e tada sadr\u017eavati zadnju vrijednost.\\n\\nTo ne mo\u017eete u\u010diniti s `let` ili` const` jer su blokirani.\\n\\n\\n\\n\\n* * * * *","id":22,"options":["`8`","\\"10\\"","`SyntaxError`","\\"ReferenceError\\""],"question":"\u0160to je izlaz?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"Sve tipke objekta (osim simbola) su \u017eice ispod haube, \u010dak i ako\\nne upisujete sami kao niz znakova. To je razlog za\u0161to\\n`obj.hasOwnProperty (\'1\')` tako\u0111er vra\u0107a true.\\n\\nTo ne radi tako za skup. U na\u0161em setu ne postoji \\"1\\":\\n`set.has (\'1\')` vra\u0107a `false`. Ima numeri\u010dki tip \\"1\\",\\n`set.has (1)` vra\u0107a `true`.\\n\\n\\n\\n\\n* * * * *","id":23,"options":["`false`` true` `false`` true`","`false`` true` `true`` true`","`true`` true` `false`` true`","`true`` true` `true`` true`"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Ako imate dva klju\u010da s istim imenom, klju\u010d \u0107e biti zamijenjen. To\\ni dalje \u0107e biti na prvom mjestu, ali s posljednjom navedenom vrijedno\u0161\u0107u.\\n\\n\\n\\n\\n* * * * *","id":24,"options":["`{a:\\" jedan \\", b:\\" dva \\"}`","`{b:\\" dva \\", a:\\" tri \\"}`","`{a:\\" tri \\", b:\\" dva \\"}`","`SyntaxError`"],"question":"\u0160to je izlaz?"},{"answer":0,"explanation":"Kontekst izvr\u0161enja baze je kontekst globalnog izvr\u0161avanja: to je ono \u0161to je\\ndostupno svugdje u va\u0161em kodu.\\n\\n\\n\\n\\n* * * * *","id":25,"options":["la\u017eno","to ovisi"],"question":"Globalni kontekst izvo\u0111enja JavaScripta za vas stvara dvije stvari: globalni objekt i \\"ovu\\" klju\u010dnu rije\u010d."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"Izjava `continue` preska\u010de iteraciju ako je odre\u0111eno stanje\\nvra\u0107a \\"true\\".\\n\\n\\n\\n\\n* * * * *","id":26,"options":["`1`` 2`","`1`` 2` `3`","`1`` 2` `4`","`1`` 3` `4`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String \'je ugra\u0111eni konstruktor, kojem mo\u017eemo dodati svojstva. ja\\nsamo je dodao metodu u svoj prototip. Primitivni nizovi su\\nautomatski se pretvara u string objekt, generiran stringom\\nprototipna function. Dakle, svi nizovi (objekti stringova) imaju pristup tome\\nna\u010din!\\n\\n\\n\\n\\n* * * * *","id":27,"options":["`` Ve\u0107 daj Lizijinu pizzu! ``","`TypeError: nije function`","`SyntaxError`","`undefined`"],"question":"\u0160to je izlaz?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Tipke objekta automatski se pretvaraju u nizove. Poku\u0161avamo\\npostavite objekt kao klju\u010d za objekt \\"a\\", s vrijedno\u0161\u0107u \\"123\\".\\n\\nMe\u0111utim, kada stringificiramo objekt, on postaje `` [Objekt objekt] \'`. Tako\\nono \u0161to ovdje govorimo je da je `a [\\" Objekt objekt \\"] = 123`. Onda, mi\\nmo\u017ee ponovno poku\u0161ati u\u010diniti isto. \\"c\\" je jo\u0161 jedan objekt koji jesmo\\nimplicitno ograni\u010davaju. Dakle, `a [\\" Objekt objekt \\"] = 456`.\\n\\nZatim zapisujemo `a [b]`, \u0161to je zapravo `a [\\" Objekt objekt \\"]`. Upravo smo postavili\\nda na `456`, tako da se vra\u0107a` 456`.\\n\\n\\n\\n\\n* * * * *","id":28,"options":["\'123\'","\\"456\\"","`undefined`","\\"ReferenceError\\""],"question":"\u0160to je izlaz?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Imamo funkciju \\"setTimeout\\" i prvo je pozvali. Ipak, bio je prijavljen\\nposljednji.\\n\\nTo je zato \u0161to u preglednicima nemamo samo runtime engine, mi\\ntako\u0111er imaju ne\u0161to \u0161to se zove \\"WebAPI\\". \\"WebAPI\\" nam daje\\n`setTimeout` function za po\u010detak, i na primjer DOM.\\n\\nNakon \u0161to je * callback * preusmjeren na WebAPI, function `setTimeout`\\nsam (ali ne i povratni poziv!) iska\u010de iz stog.\\n\\n<img src = \\"https://i.imgur.com/X5wsHOg.png\\" width = \\"200\\">\\n\\nSada se `foo` poziva i` `Prvo`` se bilje\u017ei.\\n\\n<img src = \\"https://i.imgur.com/Pvc0dGq.png\\" width = \\"200\\">\\n\\n`foo` je iska\u010den iz stog, i` baz` se poziva. \\"Tre\u0107i\\" dobiva\\nprijavljeni.\\n\\n<img src = \\"https://i.imgur.com/WhA2bCP.png\\" width = \\"200\\">\\n\\nWebAPI ne mo\u017ee jednostavno dodati stvari u stog kad god je spreman.\\nUmjesto toga, on povla\u010di funkciju povratnog poziva u ne\u0161to \u0161to se zove\\n*red*.\\n\\n<img src = \\"https://i.imgur.com/NSnDZmU.png\\" width = \\"200\\">\\n\\nOvo je mjesto gdje petlja doga\u0111aja po\u010dinje raditi. ** ** krug doga\u0111aja ** gleda\\nred i red za zadatke. Ako je stog prazan, uzima prvi\\nstvar u redu i gura je u stog.\\n\\n<img src = \\"https://i.imgur.com/uyiScAI.png\\" width = \\"200\\">\\n\\n`bar` se priziva,` `Second`` se bilje\u017ei, i on se pojavio\\nstog.\\n\\n\\n\\n\\n* * * * *","id":29,"options":["`Prvi`` Drugi` `Tre\u0107i`","`Prvi`` Tre\u0107i` `Drugi`","`Drugi`` Prvi` `Tre\u0107i`","`Drugi`` Tre\u0107i` `Prvi`"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"{.html}","explanation":"Najdublji ugnije\u017e\u0111eni element koji je uzrokovao doga\u0111aj je cilj\\ndoga\u0111aj. Mo\u017eete zaustaviti mjehuri\u0107e \'event.stopPropagation\'\\n\\n\\n\\n\\n* * * * *","id":30,"options":["Vanjski \'div\'","Unutarnji \'div\'","`gumb \'","Niz svih ugnije\u017e\u0111enih elemenata."],"question":"\u0160to je event.target kada kliknete na gumb?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"{.html}","explanation":"Ako kliknemo `p`, vidimo dva zapisa:` p` i `div`. Tijekom doga\u0111aja\\nrazmno\u017eavanje, postoje 3 faze: hvatanje, ciljanje i mjehuri\u0107e. Po\\nzadani, rukovatelji doga\u0111aja izvr\u0161avaju se u fazi mjehuri\u0107a (osim ako vi\\npostavite `useCapture` na` true`). Ide od najdubljih ugnije\u017e\u0111enih elemenata\\nvan.\\n\\n\\n\\n\\n* * * * *","id":31,"options":["`p`` div`","`div`` p`","p","\\"div\\""],"question":"Kada kliknete na paragraf, \u0161to je zapisani izlaz?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"S oba, mo\u017eemo proslijediti objekt kojem \u017eelimo klju\u010dnu rije\u010d \\"this\\"\\nodnosi se na. Me\u0111utim, `.call` se tako\u0111er * izvr\u0161ava odmah *!\\n\\n`.bind.` vra\u0107a * copy * funkcije, ali s vezanim kontekstom! To\\nse ne izvr\u0161ava odmah.\\n\\n\\n\\n\\n* * * * *","id":32,"options":["`undefined is 21`` Lydia je 21`","function funkcije","`Lydia je 21`` Lydia je 21`","`Lydia je 21`` function`"],"question":"\u0160to je izlaz?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"function `sayHi` vra\u0107a vra\u0107enu vrijednost odmah\\npozvana function (IIFE). Ova function vratila je `0`, \u0161to je tip\\n` \\"Broj\\"`.\\n\\nFYI: postoji samo 7 ugra\u0111enih tipova: `null`,` undefined`, `boolean`,\\n\\"broj\\", \\"niz\\", \\"objekt\\" i \\"simbol\\". `` function \'\' nije tip,\\nbudu\u0107i da su funkcije objekti, to je tipa `` objekta \'`.\\n\\n\\n\\n\\n* * * * *","id":33,"options":["`\\" objekt \\"`","`\\" broj \\"","function \\"\\"","`\\" undefined \\"`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Postoji samo \u0161est krivotvorenih vrijednosti:\\n\\n- `undefined`\\n- \\"null\\"\\n- \\"NaN\\"\\n- `0`\\n- `\'\'` (prazan niz)\\n- \\"false\\"\\n\\nKonstruktori function, kao \u0161to su \'new Number\' i \'new Boolean\' su istiniti.\\n\\n\\n\\n\\n* * * * *","id":34,"options":["`0`,` ```,` undefined`","`0`,` new Number (0) `,` \'\' `,` new Boolean (false) `,` undefined \'","`0`,` \'\' `,` new Boolean (false) `,` undefined`","Svi su oni la\u017eni"],"question":"Koja od ovih vrijednosti su neistinite?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` vra\u0107a` `broj \'\'. `typeof\\" number \\"` return `` string \\"`\\n\\n\\n\\n\\n* * * * *","id":35,"options":["`\\" broj \\"","niz \\"\\"","`` objekt \'\'","`\\" undefined \\"`"],"question":"\u0160to je izlaz?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Kada postavite vrijednost na element u nizu koji prema\u0161uje duljinu\\niz niza, JavaScript stvara ne\u0161to \u0161to se naziva \\"prazni utori\\". To\\nzapravo imaju vrijednost `undefined`, ali vidjet \u0107ete ne\u0161to poput:\\n\\n`[1, 2, 3, 7 x prazno, 11]`\\n\\novisno o tome gdje ga pokre\u0107ete (razlikuje se za svaki preglednik, \u010dvor,\\nitd)\\n\\n\\n\\n\\n* * * * *","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x prazno, 11]`","`SyntaxError`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"Blok `catch` prima argument` x`. To nije isti `x` kao\\nvarijablu kada proslijedimo argumente. Ova varijabla `x` je blokirana.\\n\\nKasnije smo postavili ovu varijablu bloka koja je jednaka `1` i postavili vrijednost\\nvarijable `y \'. Sada, zapisujemo blok-scoped varijablu `x`, koja je\\njednako \\"1\\".\\n\\nIzvan \'catch\' bloka, `x \'je i dalje` undefined`, a `y` je` 2`.\\nKada \u017eelimo `console.log (x)` izvan `catch` bloka, to\\nvra\u0107a `undefined` i` y` vra\u0107a `2`.\\n\\n\\n\\n\\n* * * * *","id":37,"options":["`1`` undefined `` 2`","`undefined`` undefined` `undefined`","`1`` 1` `2`","`1`` undefined` `undefined`"],"question":"\u0160to je izlaz?"},{"answer":0,"explanation":"JavaScript ima samo primitivne tipove i objekte.\\n\\nPrimitivni tipovi su \\"boolean\\", \\"null\\", \\"undefined\\", \\"bigint\\", \\"number\\",\\n\'string\' i \'simbol\'.\\n\\nOno \u0161to razlikuje primitiv od objekta je to \u0161to primitivci to ne \u010dine\\nimaju bilo kakva svojstva ili metode; me\u0111utim, to \u0107ete primijetiti\\n`\'foo\'.toUpperCase ()` vrednuje za\' \'FOO\'` i ne rezultira a\\n`TypeError`. To je zato \u0161to kada poku\u0161ate pristupiti svojstvu ili metodi\\nna primitivnom poput stringa, JavaScript \u0107e implicitet omotati objekt\\nkoriste\u0107i jednu od klasa omota\u010da, tj. `String \', a zatim odmah\\nodbacite omota\u010d nakon \u0161to se izraz procijeni. Svi primitivci\\nosim \\"null\\" i \\"undefined\\" pokazuju ovo pona\u0161anje.\\n\\n\\n\\n\\n* * * * *","id":38,"options":["primitivni ili objektni","function ili objekt","trik pitanje! samo objekti","broj ili objekt"],"question":"Sve u JavaScriptu je ili ..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"\\"[1, 2]\\" je na\u0161a po\u010detna vrijednost. To je vrijednost s kojom po\u010dinjemo i\\nvrijednost prvog `acc`. Tijekom prvog kruga, \\"acc\\" je \\"[1,2]\\",\\ni `cur` je` [0, 1] `. Spojimo ih, \u0161to rezultira\\n`[1, 2, 0, 1]`.\\n\\nTada je `[1, 2, 0, 1]` `acc` i` [2, 3] `````. Ulan\u010davamo se\\ni dobiti `[1, 2, 0, 1, 2, 3]`\\n\\n\\n\\n\\n* * * * *","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","\\"[1, 2, 0, 1, 2, 3]\\"","`[1, 2, 6]`"],"question":"\u0160to je izlaz?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` je la\u017ean. `! null` vra\u0107a \'true\'. `! true \'vra\u0107a\\" false \\".\\n\\n```` je neistinit. `!\\" `` vra\u0107a `true \'. `! true \'vra\u0107a\\" false \\".\\n\\n\\"1\\" je istina. `! 1` vra\u0107a \'false\'. `! false \'vra\u0107a\' true \'.\\n\\n\\n\\n\\n* * * * *","id":40,"options":["`false`` true` `false`","`false`` false` `true`","`false`` true` `true`","`true`` true` `false`"],"question":"\u0160to je izlaz?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Vra\u0107a jedinstveni ID. Taj se ID mo\u017ee koristiti za brisanje tog intervala\\n`clearInterval ()` function.\\n\\n\\n\\n\\n* * * * *","id":41,"options":["jedinstveni ID","odre\u0111ena koli\u010dina milisekundi","pro\u0161la function","`undefined`"],"question":"\u0160to se vra\u0107a metoda `setInterval`?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"Niz je iterabilan. Operator \u0161irenja mapira svaki znak\\niterabilan na jedan element.","id":42,"options":["`[\\" L \\",\\" y \\",\\" d \\",\\" i \\",\\" a \\"]`","`[\\" Lydia \\"]`","`[[],\\" Lydia \\"]`","`[[\\" L \\",\\" y \\",\\" d \\",\\" i \\",\\" a \\"]]`"],"question":"\u0160to se to vra\u0107a?"}],"locale":"bs-BS"},{"isRTL":true,"language":"\ud83c\uddea\ud83c\uddec \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0639\u0627\u0645\u064a\u0629","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u062c\u0648\u0627 \u0627\u0644\u062f\u0627\u0644\u0629 \u0627\u062d\u0646\u0627 \u0627\u0644\u0627\u0648\u0644 \u0639\u0645\u0644\u0646\u0627 \u0645\u062a\u063a\u064a\u0631 `name` \u0628\u0627\u0644\u0643\u0644\u0645\u0629 \u0627\u0644\u062f\u0627\u0644\u0629 `var`. \u062f\u0647 \u0645\u0639\u0646\u0627\u0647 \u0627\u0646 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u062f\u0647 \u0647\u064a\u0643\u0648\u0646 \u0645\u0648\u062c\u0648\u062f \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0641\u064a \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0628\u0627\u0644\u0642\u064a\u0645\u0629 `undefined` \u0642\u0628\u0644 \u0645\u0627 \u0627\u0644\u0643\u0648\u062f \u064a\u0634\u062a\u063a\u0644 \u0644\u062d\u062f \u0645\u0627 \u0646\u0648\u0635\u0644 \u062a\u062d\u062f\u064a\u062f\u0627\u064b \u0644\u0644\u0633\u0637\u0631 \u0627\u0644\u0644\u064a \u0641\u064a\u0647 \u0628\u0646\u062d\u0637 \u0642\u064a\u0645\u0629 \u0644\u0644\u0645\u062a\u063a\u064a\u0631 \u062f\u0647. \u0627\u062d\u0646\u0627 \u0628\u0642\u0649 \u0644\u062d\u062f \u0627\u0644\u0633\u0637\u0631 \u0627\u0644\u0644\u064a \u0628\u0646\u0628\u0637\u0639 \u0641\u064a\u0647 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u062f\u0647 \u0645\u0643\u0627\u0646\u0634 \u0644\u0633\u0647 \u0627\u062a\u0639\u0645\u0644 \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0643\u0627\u0646 \u0644\u0633\u0647 \u0641\u064a\u0647 \u0642\u064a\u0645\u0629 `undefined`.\\n\\n\u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0627\u0644\u0644\u064a \u0628\u062a\u062a\u0639\u0645\u0644 \u0628\u0643\u0644\u0645\u0629 `let` \u0648 `const` \u0628\u064a\u0639\u0645\u0644\u0648\u0627 \u0646\u0641\u0633 \u0627\u0644\u0645\u0648\u0636\u0648\u0639, \u0628\u0633 \u0627\u0644\u0641\u0631\u0642 \u0627\u0646 \u0645\u0628\u0646\u0642\u062f\u0631\u0634 \u0646\u0627\u062e\u062f \u0642\u064a\u0645 \u0645\u0646\u0647\u0645 \u0627\u0644\u0627 \u0644\u062d\u062f \u0645\u0627 \u0646\u0636\u064a\u0641\u0644\u0647\u0645 \u0642\u064a\u0645 \u0645\u0646 \u0627\u0644\u0623\u0633\u0627\u0633. \u062f\u064a \u0627\u0633\u0645\u0647\u0627 `temporal dead zone` \u0627\u0648 \u0628\u0627\u0644\u0639\u0631\u0628\u064a \\"\u0645\u0646\u0637\u0642\u0629 \u0627\u0644\u0645\u0648\u062a \u0627\u0644\u0645\u0624\u0642\u062a\u0629\\". \u0644\u0645\u0627 \u0628\u0646\u062d\u0627\u0648\u0644 \u0646\u0627\u062e\u062f \u0642\u064a\u0645\u0629 \u0645\u062a\u063a\u064a\u0631 \u0642\u0628\u0644 \u0645\u0627 \u0646\u0639\u0645\u0644\u0647 \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0628\u062a\u0631\u062c\u0639 \u062e\u0637\u0623 \u0645\u0646 \u0646\u0648\u0639 `ReferenceError`","id":0,"options":["`Lydia` \u0648 `undefined`","`Lydia` \u0648 `ReferenceError`","`ReferenceError` \u0648 `21`","`undefined` \u0648 `ReferenceError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"\u0627\u0644\u0641\u0646\u0643\u0634\u0646 \u0627\u0644\u0644\u064a`setTimeout` \u0628\u062a\u0634\u063a\u0644\u0647\u0627 \u0628\u064a\u062a\u0645 \u062a\u0634\u063a\u0644\u064a\u0647\u0627 _\u0628\u0639\u062f_ \u0645\u0627 \u0627\u0644\u0644\u0648\u0648\u0628 \u062a\u062e\u0644\u0635 \u0628\u0633\u0628\u0628 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0627\u062d\u062f\u0627\u062b `event queue` \u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a. \u0628\u0645\u0627 \u0627\u0646 \u0627\u0648\u0644 \u0644\u0648\u0648\u0628 \u0627\u062a\u0639\u0645\u0644\u062a \u0643\u0627\u0646 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u0628\u062a\u0627\u0639\u0647\u0627 \u0645\u0639\u0645\u0648\u0644 \u0628\u0643\u0644\u0645\u0629 `var` \u0627\u0630\u0627 \u0643\u0627\u0646 `global` \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0641\u064a \u0627\u0644\u0644\u0648\u0628 \u0627\u062d\u0646\u0627 \u0643\u0644 \u0634\u0648\u064a\u0629 \u0643\u0646\u0627 \u0628\u0646\u0632\u0648\u062f `i` \u0644\u062d\u062f \u0645\u0627 \u0648\u0635\u0644 \u0644 3 \u0648 _\u0628\u0639\u062f_ \u0643\u062f\u0647 \u0642\u0627\u0645\u062a \u0627\u0644\u0641\u0646\u0643\u0634\u0646 \u0627\u0644\u0644\u064a \u062c\u0648\u0627 `setTimeout` \u0627\u0634\u062a\u063a\u0644\u062a. \u062f\u0647 \u0643\u062f\u0647 \u0627\u0648\u0644 \u0644\u0648\u0648\u0628. \\n\\n\u0627\u0645\u0627 \u0628\u0642\u0649 \u0641\u064a \u062a\u0627\u0646\u064a \u0644\u0648\u0648\u0628 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `i` \u0643\u0627\u0646 \u0645\u0639\u0645\u0648\u0644 \u0628\u0643\u0644\u0645\u0629 `let` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u0644\u0645\u0646\u0638\u0648\u0631 \u0628\u062a\u0627\u0639\u0647 `scope` \u0645\u062d\u062f\u062f \u0628\u0627\u0644\u0627\u0642\u0648\u0627\u0633 \u0627\u0644\u0645\u062d\u064a\u0637\u0629 \u0628\u064a\u0647 `block` \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0641\u064a \u0643\u0644 \u0645\u0631\u0647 \u0627\u0644\u0644\u0648\u0628 \u0647\u062a\u0632\u064a\u062f \u0647\u064a\u0643\u0648\u0646 \u0641\u064a \u0642\u064a\u0645\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0645\u0627\u0645\u0627\u064b \u0644\u0644\u0645\u062a\u063a\u064a\u0631 `i` \u0648 \u0643\u0644 \u0642\u064a\u0645\u0629 \u0645\u0646 \u062f\u0648\u0644 \u0645\u0648\u062c\u0648\u062f\u0647 \u062c\u0648\u0627 \u0627\u0644`block scope` \u0627\u0644\u0644\u064a \u0647\u064a \u062d\u0635\u0644\u062a \u0641\u064a\u0647, \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0647\u064a\u0628\u0642\u0649 \u0643\u0623\u0646 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0634\u0627\u064a\u0641 3 \u0642\u064a\u0645 \u0644\u0644\u0645\u062a\u063a\u064a\u0631 `i` \u0641\u064a 3 \u0627\u0645\u0627\u0643\u0646 \u0645\u062e\u062a\u0644\u0641\u0647!","id":1,"options":["`0 1 2` \u0648 `0 1 2`","`0 1 2` \u0648 `3 3 3`","`3 3 3` \u0648 `0 1 2`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"\u062e\u0644\u064a \u0628\u0627\u0644\u0643 \u0645\u0646 \u0646\u0648\u0639\u064a\u0629 \u0627\u0644\u0641\u0646\u0643\u0634\u0646 `diameter` \u0648 \u0647\u064a `regular`\u0648 \u0646\u0648\u0639\u064a\u0629 \u0627\u0644\u0641\u0646\u0643\u0634\u0646 `perimeter` \u0648\u0627\u0644\u0644\u064a \u0647\u064a `arrow function`.\\n\\n\u0641\u064a \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0627\u062e\u064a\u0631, \u0627\u0644\u0643\u0644\u0645\u0629 \u0627\u0644\u062f\u0627\u0644\u0629 `this` \u0628\u062a\u0634\u0627\u0648\u0631 \u0627\u0644\u0649 \u0627\u0644\u0645\u062d\u064a\u0637 \u0628\u0627\u0644\u062f\u0627\u0644\u0629 \u062f\u064a. \u0648\u062f\u0647 \u0645\u0639\u0646\u0627\u0647 \u0627\u0646\u0646\u0627 \u0644\u0645\u0627 \u0628\u0646\u0634\u063a\u0644 `perimeter` \u0627\u062d\u0646\u0627 \u0645\u0634 \u0628\u0646\u0634\u0627\u0648\u0631 \u0628`this` \u0639\u0644\u0649 `shape` \u0628\u0644 \u0628\u0646\u0634\u0627\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u062d\u064a\u0637 \u0648 \u0647\u0648 `window` \u0645\u062b\u0644\u0627\u064b! \\n\\n\u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0645\u0641\u064a\u0634 \u0642\u064a\u0645\u0629 `radius` \u0641\u064a \u0627\u0644\u0646\u0637\u0627\u0642 \u062f\u0647, \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0628\u064a\u062f\u064a\u0646\u0627 `undefined`.","id":2,"options":["`20` \u0648 `62.83185307179586`","`20` \u0648 `NaN`","`20` \u0648 `63`","`NaN` \u0648 `63`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\u0639\u0644\u0627\u0645\u0629 \u0627\u0644\u062c\u0645\u0639 \u062a\u062d\u0627\u0648\u0644 \u062f\u0627\u0626\u0645\u0627 \u0627\u0646 \u062a\u063a\u064a\u0631 \u0642\u064a\u0645 \u0645\u0646 \u0642\u064a\u0645 \u0645\u062f\u062e\u0644\u0627\u062a\u0647\u0627 \u0627\u0644\u0649 \u0631\u0642\u0645 \u0628\u0627\u0639\u062a\u0628\u0627\u0631 \u0627\u0646 \u0627\u064a \u0642\u064a\u0645\u0629 \u062d\u0642\u064a\u0642\u064a\u0629 \u0627\u064a\u062c\u0627\u0628\u064a\u0629 `true` \u064a\u062a\u0645 \u062a\u062d\u0648\u064a\u0644\u0647\u0627 \u0644\u0631\u0642\u0645 `1` \u0648 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0633\u0627\u0644\u0628\u064a\u0629 `false` \u062a\u062a\u062d\u0648\u0644 \u0627\u0644\u0649 `0`. \\nThe unary plus tries to convert an operand to a number. `true` is `1`, and `false` is `0`.\\n\\n\u0648 \u0641\u064a \u0627\u0644\u062d\u0627\u0644\u0629 \u062f\u064a \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0643\u062a\u0627\u0628\u064a\u0629 `\'Lydia\'` \u062a\u0639\u062a\u0628\u0631 \u0627\u064a\u062c\u0627\u0628\u064a\u0629. \u0647\u0646\u0627 \u0628\u0642\u0649 \u0627\u0644\u0633\u0624\u0627\u0644: \\"\u0647\u0644 \u0627\u0644\u0642\u064a\u0645\u0647 \u0627\u0644\u0627\u064a\u062c\u0627\u0628\u064a\u0647 \u062f\u064a \u0633\u0627\u0644\u0628\u064a\u0647\u061f \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u0644\u0627\u062c\u0627\u0628\u0629 \u0644\u0627 \u0627\u0644\u0644\u064a \u0647\u064a `false`.","id":3,"options":["`1` \u0648 `false`","`NaN` \u0648 `false`","`false` \u0648 `false`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"\u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0643\u0644 \u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u0639\u0646\u0627\u0635\u0631 `object keys` \u0645\u0646 \u0627\u0644\u0646\u0648\u0639 `string` \u0627\u0644\u0627 \u0641\u064a \u062d\u0627\u0644\u0629 \u0627\u0644\u0640 `symbol`. \u0648\u0639\u0644\u0649 \u0627\u0644\u0631\u063a\u0645 \u0645\u0646 \u0627\u0646\u0646\u0627 \u0645\u0645\u0643\u0646 \u0645\u0646\u0643\u062a\u0628\u0647\u0645\u0634 \u0641\u064a \u0634\u0643\u0644 `string` \u0641\u0647\u0645\u0627 \u062f\u0627\u064a\u0645\u0627\u064b \u0628\u064a\u062a\u062d\u0648\u0644\u0648\u0627 \u0644`string`\\n\u0628\u0635 \u0627\u0644\u0645\u062b\u0627\u0644: \\n<div dir=\\"ltr\\">\\n\\n```javascriptlet obj = {\\n  size: \'big\'\\n}\\n```\\n\\n\\n\u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644 \u062f\u0647 \u0627\u062d\u0646\u0627 \u0639\u0645\u0644\u0646\u0627 \u0639\u0646\u0635\u0631 \u0648 \u0643\u0627\u0646 \u0644\u064a\u0647 \u0645\u0641\u062a\u0627\u062d \u0627\u0633\u0645\u0647 size. \u0634\u0643\u0644 size \u0627\u062d\u0646\u0627 \u0639\u0627\u0645\u0644\u064a\u0646\u0647 \u0645\u0646 \u063a\u064a\u0631 \u0639\u0644\u0627\u0645\u0629 \u0627\u0644\u062a\u0646\u0635\u064a\u0635 `\\"\\"` \u0648\u0644\u0643\u0646 \u0644\u0645\u0627 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0628\u064a\u0634\u062a\u063a\u0644 \u0628\u064a\u062a\u0645 \u062a\u062d\u0648\u064a\u0644\u0647\u0627 \u0627\u0644\u0649 \u0633\u062a\u0631\u0646\u062c \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0628\u062a\u0643\u0648\u0646 \u0641\u064a \u0634\u0643\u0644 `\\"size\\"`\\n\\n\u063a\u064a\u0631 \u0628\u0642\u0649 \u0627\u0646 \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0628\u062a\u0641\u0643 \u0643\u0644 \u062c\u0645\u0644\u0647 \u0644\u0648\u062d\u062f\u0647\u0627. \u062f\u0647 \u0645\u0639\u0646\u0627\u0647 \u0627\u0646\u0647\u0627 \u0644\u0645\u0627 \u0628\u0646\u0633\u062a\u0639\u0645\u0644 \u0639\u0644\u0627\u0645\u0627\u062a \u0627\u0644 `[]` \u0648\u0627\u0633\u0645\u0647\u0627 `bracket notation` \u0647\u062a\u0641\u0636\u0644 \u062a\u0645\u0634\u064a \u0645\u0646 \u0627\u0648\u0644 `[` \u0644\u062d\u062f \u0645\u0627 \u062a\u0648\u0635\u0644 \u0644\u0644\u064a \u064a\u0642\u0641\u0644\u0647 \u0627\u0644\u0644\u064a \u0647\u0648 `]`. \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0647\u062a\u0642\u0648\u0645 \u0645\u0634\u063a\u0644\u0647 \u0627\u0644\u062c\u0645\u0644\u0647 \u0628\u0639\u062f \u0645\u0627 \u062a\u0639\u0631\u0641 \u0627\u0646 \u0627\u0644\u062c\u0645\u0644\u0647 \u062f\u064a \u0645\u0641\u064a\u0647\u0627\u0634 \u0627\u062e\u0637\u0627\u0621. \\n\\n\u0641\u0627 \u0639\u0634\u0627\u0646 \u0643\u062f\u0647 \u0639\u0646\u062f\u0646\u0627 `mouse[bird.size]` \u0627\u0644\u0627\u0648\u0644 \u0647\u062a\u062c\u064a\u0628 `bird.size` \u0627\u0644\u0644\u064a \u0642\u064a\u0645\u062a\u0647 `\\"small\\"` \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u062a\u0628\u0642\u0649 \u0627\u0644\u062c\u0645\u0644\u0647 `mouse[\\"small\\"]` \u0647\u062a\u0631\u062c\u0639 `true` \\n\\n\u0648\u0644\u0643\u0646 \u0644\u0645\u0627 \u0628\u0646\u0633\u062a\u0639\u0645\u0644 \u0627\u0644 `dot notation` \u0645\u0628\u064a\u062d\u0635\u0644\u0634 \u0643\u062f\u0647. `mouse` \u0645\u0644\u0648\u0634 \u0645\u0641\u062a\u0627\u062d \u0627\u0633\u0645\u0647 `bird` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u062d\u0646\u0627 \u0628\u0646\u0637\u0644\u0628 \u0642\u064a\u0645\u0647 \u0645\u0648\u062c\u0648\u062f\u0647 \u062c\u0648\u0627 \u062d\u0627\u062c\u0647 \u0645\u0634 \u0645\u0648\u062c\u0648\u062f\u0629 \u0627\u0635\u0644\u0627\u064b \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0628\u064a\u0631\u062c\u0639\u0644\u0646\u0627 \u062e\u0637\u0623 `cannot read property of undefined`.","id":4,"options":["`mouse.bird.size` \u0645\u062a\u0646\u0641\u0639\u0634","`mouse[bird.size]` \u0645\u062a\u0646\u0641\u0639\u0634","mouse[bird[\\"size\\"]]` \u0645\u062a\u0646\u0641\u0639\u0634","\u0643\u0644\u0647\u0645 \u064a\u0646\u0641\u0639\u0648\u0627"],"question":"\u0627\u062e\u062a\u0631 \u0627\u0644\u0627\u062c\u0627\u0628\u0629 \u0627\u0644\u0635\u062d\u064a\u062d\u0629"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"\u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 `objects` \u0628\u064a\u062a\u0639\u0627\u0645\u0644\u0648\u0627 \u0628\u0627\u0644\u0640`reference` \u0644\u0645\u0627 \u0628\u0646\u0633\u0627\u0648\u064a\u0647\u0645 \u0628\u0628\u0639\u0636. \u062f\u0647 \u0645\u0639\u0646\u0627\u0647 \u0627\u0646 \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a \u0645\u0634 \u0628\u064a\u062a\u0639\u0645\u0644 \u0645\u0646\u0647 \u0646\u0633\u062e\u0647 \u062c\u062f\u064a\u062f\u0629 \u0648 \u0627\u0646\u0645\u0627 \u0628\u064a\u062a\u0645 \u0627\u0644\u0627\u0634\u0627\u0631\u0629 \u0627\u0644\u064a\u0647 \u0628\u0623\u0633\u0645 \u062c\u062f\u064a\u062f \u0645\u0634 \u0627\u0643\u062a\u0631. \\n\\n\u0641\u064a \u0627\u0644\u0627\u0648\u0644 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `c` \u062c\u0648\u0627\u0647 \u0642\u064a\u0645\u0629 \u0627\u0648\u0628\u062c\u0643\u062a \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0628\u0646\u0642\u0648\u0645 \u0639\u0627\u0645\u0644\u064a\u0646 \u0627\u0634\u0627\u0631\u0629 \u0644\u0644\u0627\u0648\u0628\u062c\u0643\u062a \u062f\u0647 \u0639\u0646 \u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `d` \\n.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n\u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0644\u0645\u0627 \u0628\u062a\u063a\u064a\u0631 \u0645\u062a\u063a\u064a\u0631 \u0648\u0627\u062d\u062f \u0645\u0646\u0647\u0645 \u0627\u0646\u062a \u0628\u062a\u063a\u064a\u0631 \u0627\u0644\u0627\u062a\u0646\u064a\u0646 \u0644\u0627\u0646 \u0627\u0644\u0627\u062a\u0646\u064a\u0646 \u0628\u064a\u0634\u064a\u0631\u0648\u0627 \u0644\u0646\u0641\u0633 \u0627\u0644\u0639\u0646\u0635\u0631 \u0641\u064a \u0627\u0644\u0645\u064a\u0645\u0648\u0631\u064a.","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` \u062f\u0647 `constructor` \u0645\u0628\u0646\u064a \u0641\u064a \u0627\u0644\u0644\u063a\u0647 \u0648 \u0639\u0644\u0649 \u0627\u0644\u0631\u063a\u0645 \u0645\u0646 \u0627\u0646 \u0634\u0643\u0644 \u0627\u0644\u0642\u064a\u0645\u0647 \u0627\u0644\u0644\u064a \u0647\u062a\u0637\u0644\u0639 \u0645\u0646\u0647 \u0645\u062c\u0631\u062f \u0631\u0642\u0645 `primitive` \u0644\u0643\u0646 \u0627\u0644\u062d\u0642\u064a\u0642\u0647 \u0627\u0646 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0644\u064a \u0647\u062a\u064a\u062c\u064a `object` \u0648\u0647\u064a\u0643\u0648\u0646 \u0641\u064a\u0647 \u0632\u064a\u0627\u062f\u0627\u062a \u0632\u064a \u0627\u0644`methods` \u0648\u0647\u0643\u0630\u0627.\\n\\n\u0644\u0645\u0627 \u0628\u0646\u0633\u062a\u0639\u0645\u0644 \u0639\u0644\u0627\u0645\u0629 \u0627\u0644\u0645\u0633\u0627\u0648\u0627\u0647 `==` \u0627\u062d\u0646\u0627 \u0628\u0646\u0634\u0648\u0641 \u0628\u0633 \u0644\u0648 \u0627\u0644\u0642\u064a\u0645\u062a\u064a\u0646 \u0627\u0644\u0644\u064a \u0628\u0646\u0642\u0627\u0631\u0646\u0647\u0645 \u0644\u064a\u0647\u0645 \u0646\u0641\u0633 **\u0627\u0644\u0642\u064a\u0645\u0629** \u0641\u0642\u0637 \u0648\u0644\u0627 \u0644\u0627. \u0627\u0644\u0627\u062a\u0646\u064a\u0646 \u0644\u064a\u0647\u0645 \u0642\u064a\u0645\u0629 `3` \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0647\u062a\u0631\u062c\u0639 `true`\\n\\n\u0627\u0645\u0627 \u0628\u0642\u0649 \u0644\u0645\u0627 \u0628\u0646\u0633\u062a\u0639\u0645\u0644 \u0627\u0644\u0645\u0633\u0627\u0648\u0627\u0629 `===` \u0627\u062d\u0646\u0627 \u0628\u0646\u0634\u0648\u0641 **\u0627\u0644\u0642\u064a\u0645\u0629** \u0648 **\u0627\u0644\u0646\u0648\u0639** \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0628\u0645\u0627 \u0627\u0646 \u0627\u0644\u0627\u062a\u0646\u064a\u0646 `object` \u0628\u0633 \u0645\u0648\u062c\u0648\u062f\u064a\u0646 \u0641\u064a \u0627\u0645\u0627\u0643\u0646 \u0645\u062e\u062a\u0644\u0641\u0647 \u0641\u064a \u0627\u0644\u0645\u064a\u0645\u0648\u0631\u064a \u0627\u0630\u0627\u064b \u0627\u062d\u0646\u0627 \u0645\u0634 \u0639\u0627\u0645\u0644\u064a\u0646 \u0627\u0634\u0627\u0631\u0629 \u0644\u0646\u0641\u0633 \u0627\u0644\u0639\u0646\u0635\u0631 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0647\u062a\u0631\u062c\u0639 `false`.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"\u0627\u0644\u062f\u0627\u0644\u0629 `colorChange` \u0645\u0646 \u0646\u0648\u0639 `static` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0647\u064a \u0645\u0645\u0648\u062c\u0648\u062f\u0647 \u0641\u0642\u0637 \u0641\u064a \u0627\u0644`constructor` \u0627\u0644\u0644\u064a \u0628\u062a\u062a\u0639\u0645\u0644 \u0641\u064a\u0647 \u0648 \u0645\u0634 \u0628\u062a\u0631\u0648\u062d \u0644\u0623\u064a \u0639\u0646\u0635\u0631 \u0628\u064a\u062a\u0639\u0645\u0644 \u0645\u0646 \u0627\u0644`class` \u062f\u0647 \u0648 \u0628\u0645\u0627 \u0627\u0646 `freddie` \u062f\u0647 \u0639\u0646\u0635\u0631 \u0645\u0639\u0645\u0648\u0644 \u0645\u0646 \u0627\u0644\u0643\u0644\u0627\u0633 \u062f\u0647 \u0641\u0627 \u0627\u0644\u062f\u0627\u0644\u0629 `colorChange` \u0645\u0634 \u0628\u062a\u0631\u0648\u062d\u0644\u0647 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0645\u0634 \u0645\u0648\u062c\u0648\u062f\u0647 \u0645\u0639\u0627\u0647 \u0648 \u0639\u0634\u0627\u0646 \u0643\u062f\u0647 \u0647\u062a\u062f\u064a\u0646\u0627 `TypeError`.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"\u0628\u062a\u0637\u0628\u0639 \u0627\u0644\u0639\u0646\u0635\u0631 \u0627\u0644\u0641\u0627\u0636\u064a \u0644\u0623\u0646\u0646\u0627 \u0639\u0645\u0644\u0646\u0627 \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a \u062f\u0647 \u0645\u0646 \u0646\u0648\u0639 `global` \u0644\u0645\u0627 \u0643\u062a\u0628\u0646\u0627 `greetign` \u0628\u062f\u0644 `greeting` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0634\u0627\u0641 `greetign` \u0639\u0644\u0649 \u0627\u0646\u0647\u0627 `window.greetign={}` \u0644\u0648 \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u062d. \\n\\n\u0639\u0634\u0627\u0646 \u0646\u0628\u0639\u062f \u0639\u0646 \u0627\u0644\u0645\u0634\u0643\u0644\u0629 \u062f\u064a \u0646\u0642\u062f\u0631 \u0646\u0633\u062a\u0639\u0645\u0644 `\\"use strict\\"` \u0648 \u0627\u0644\u0644\u064a \u0628\u062f\u0648\u0631\u0647\u0627 \u0628\u062a\u062a\u0623\u0643\u062f \u0627\u0646 \u0627\u0646\u062a \u0639\u0645\u0644\u062a \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u0642\u0628\u0644 \u0645\u0627 \u062a\u062d\u0627\u0648\u0644 \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639\u0627\u0647.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"\u0643\u0644 \u062d\u0627\u062c\u0647 \u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 `object` \u062d\u062a\u0649 \u0627\u0644\u062f\u0648\u0627\u0644 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0646\u0642\u062f\u0631 \u0628\u0643\u0644 \u0633\u0647\u0648\u0644\u0629 \u0627\u0646\u0646\u0627 \u0646\u0639\u0645\u0644 \u0627\u0644\u0644\u064a \u0627\u062d\u0646\u0627 \u0639\u0645\u0644\u0646\u0627\u0647 \u0641\u064a \u0627\u0644\u0643\u0648\u062f \u0648 \u0646\u0636\u064a\u0641 \u0645\u0641\u0627\u062a\u064a\u062d \u0648 \u0642\u064a\u0645 \u0644\u0644\u062f\u0627\u0644\u0647 \u0639\u0644\u0649 \u0627\u0646\u0647\u0627 \u0639\u0646\u0635\u0631 \u0627\u0648\u0628\u062c\u0643\u062a \u0639\u0627\u062f\u064a \u062c\u062f\u0627\u064b.","id":9,"options":["\u0645\u0634 \u0647\u064a\u062d\u0635\u0644 \u0627\u064a \u062d\u0627\u062c\u0647 \u063a\u0644\u0637, \u0627\u0644\u0643\u0648\u062f \u062f\u0647 \u0635\u062d\u064a\u062d \u062a\u0645\u0627\u0645\u0627\u064b!","`SyntaxError`","`undefined`","`ReferenceError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062d\u0635\u0644 \u0644\u0645\u0627 \u0646\u0639\u0645\u0644 \u0643\u062f\u0647\u061f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"\u0645\u064a\u0646\u0641\u0639\u0634 \u062a\u0636\u064a\u0641 \u0642\u064a\u0645 \u0644\u0640 `constructor`\u0628\u0627\u0644\u0634\u0643\u0644 \u062f\u0647. \u0644\u0648 \u0639\u0627\u064a\u0632 \u062a\u0636\u064a\u0641 \u0642\u064a\u0645\u0629 \u0644\u0643\u0644 \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a\u0633 \u0627\u0644\u0644\u064a \u0645\u0639\u0645\u0648\u0644\u064a\u0646 \u0645\u0646 \u0627\u0644\u0640`constructor` \u062f\u0647 \u0644\u0627\u0632\u0645 \u062a\u0633\u062a\u0639\u0645\u0644 \u0627\u0644\u0640 `prototype` \\n\\n\u0628\u0635  \u0627\u0644\u0645\u062b\u0627\u0644 \u062f\u0647:\\n<div dir=\\"ltr\\">\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\n\\n\u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644 \u062f\u0647 \u0647\u0646\u0642\u062f\u0631 \u0646\u0636\u064a\u0641 \u0627\u0644\u0642\u064a\u0645\u0647 \u0644\u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0644\u064a \u0645\u0639\u0645\u0648\u0644\u0647 \u0645\u0646 \u0627\u0644\u0640`constructor` \u062f\u0647. \u0627\u064a\u0647 \u0627\u0644\u0641\u0627\u064a\u062f\u0647 \u0645\u0646 \u062f\u0647 \u0628\u0642\u0649\u061f \u062a\u062e\u064a\u0644 \u0645\u0639\u0627\u064a\u0627 \u0627\u0646 \u0627\u062d\u0646\u0627 \u0639\u0645\u0644\u0646\u0627 \u0643\u0648\u0628\u064a \u0645\u0646 \u062f\u0627\u0644\u0629 \u062f\u064a \u062c\u0648\u0627 \u0643\u0644 \u0639\u0646\u0635\u0631 \u0644\u0648\u062d\u062f\u0629 --\u0645\u0639 \u0627\u0644\u062a\u063a\u0627\u0636\u064a \u0639\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0627\u0646 \u0628\u0639\u0636\u0647\u0645 \u0645\u0645\u0643\u0646 \u0645\u064a\u0643\u0648\u0646\u0648\u0634 \u0645\u062d\u062a\u0627\u062c\u064a\u0646\u0647\u0627 \u0627\u0635\u0644\u0627\u064b-- \u0627\u062d\u0646\u0627 \u0643\u062f\u0647 \u0628\u0646\u0633\u062a\u062e\u062f\u0645 \u0645\u064a\u0645\u0648\u0631\u064a \u0643\u062a\u064a\u0631 \u062c\u062f\u0627\u064b \u0639\u0644\u0649 \u0627\u0644\u0641\u0627\u0636\u064a \u0628\u064a\u0646\u0645\u0627 \u0639\u0646 \u0637\u0631\u064a\u0642 \u0627\u0644\u0640`prototype` \u0628\u0646\u0642\u062f\u0631 \u0627\u0646\u0646\u0627 \u0646\u0639\u0645\u0644\u0647\u0627 \u0645\u0631\u0647 \u0648\u0627\u062d\u062f\u0629 \u0641\u0642\u0637 \u0648 \u0628\u062a\u0643\u0648\u0646 \u0645\u0648\u062c\u0648\u062f\u0647 \u0644\u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0644\u064a \u0645\u0639\u0645\u0648\u0644\u0647 \u0645\u0646\u0647\u0627!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"\u0643\u0644\u0645\u0629 `new` \u0628\u062a\u0634\u064a\u0631 \u0627\u0644\u0649 \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a \u0627\u0644\u0641\u0627\u0636\u064a \u0627\u0644\u062c\u062f\u064a\u062f \u0627\u0644\u0644\u064a \u0627\u062d\u0646\u0627 \u0628\u0646\u0639\u0645\u0644\u0647 \u0642\u0628\u0644 \u0645\u0627 \u064a\u062a\u0645 \u0627\u0636\u0627\u0641\u0629 \u0627\u064a \u0642\u064a\u0645 \u0644\u064a\u0647. \u0644\u0643\u0646 \u0644\u0645\u0627 \u0645\u0634 \u0628\u062a\u0633\u062a\u0639\u0645\u0644 `new` \u0628\u064a\u062a\u0645 \u0627\u0644\u0627\u0634\u0627\u0631\u0629 \u0627\u0644\u0649 \u0627\u0644\u0640`global` \u0627\u0648 `window` \u0639\u0644\u0649 \u062d\u0633\u0628 \u0627\u0646\u062a \u0628\u062a\u0634\u063a\u0644 \u0627\u0644\u0643\u0648\u062f \u0641\u064a\u0646 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0644\u0645\u0627 \u0639\u0645\u0644\u0646\u0627 `this.firstName = \\"Sarah\\"` \u0627\u062d\u0646\u0627 \u0643\u062f\u0647 \u0643\u0623\u0646\u0646\u0627 \u0642\u0648\u0644\u0646\u0627 `window.firstName = \\"Sarah\\"` \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a `sarah \u0646\u0641\u0633\u0647 \u0641\u0636\u0644 `undefined`","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0648 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0648 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0648 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0648 `ReferenceError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":3,"explanation":"\u0641\u064a \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0640`capturing` \u0627\u0644\u062d\u062f\u062b \u0628\u064a\u0645\u0631 \u0627\u0644\u0627\u0648\u0644 \u062e\u0644\u0627\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0643\u0628\u064a\u0631\u0647 \u0627\u0644\u0645\u062d\u062a\u0648\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0639\u0646\u0635\u0631 \u0627\u0644\u0644\u064a \u062d\u0635\u0644\u062a \u0641\u064a\u0647 \u0627\u0644\u062d\u062f\u062b \u0627\u0635\u0644\u0627\u064b \u0644\u062d\u062f \u0645\u0627 \u062a\u0648\u0635\u0644 \u0644\u0644\u0639\u0646\u0635\u0631 \u062f\u0647. \u0628\u0639\u062f \u0643\u062f\u0647 \u0628\u062a\u0648\u0635\u0644 \u0644\u0640 `target` \u0648\u0627\u0644\u0644\u064a \u0647\u0648 \u0627\u0644\u0639\u0646\u0635\u0631 \u0627\u0644\u0644\u064a \u0639\u0645\u0644 \u0627\u0644\u062d\u062f\u062b \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0628\u062a\u0631\u062f \u062a\u0627\u0646\u064a \u0644\u0641\u0648\u0642 \u0641\u064a \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0640`bubbling`\\n\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\u0627\u064a\u0647  \u0627\u0644\u06403 \u0645\u0631\u0627\u062d\u0644 \u0628\u062a\u0648\u0639 \u0627\u0644\u0640 `event propagation`\u061f"},{"answer":1,"explanation":"\u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0644\u064a\u0647\u0627 `prototype` \u0645\u0627 \u0639\u062f\u0627 \u0627\u0644\u0640**base object** \u0648 \u0627\u0644\u0644\u064a \u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0628\u062a\u0627\u062e\u062f \u0645\u0646\u0647 \u0627\u0644\u062f\u0648\u0627\u0644 \u0628\u062a\u0627\u0639\u062a\u0647. \u062f\u0647 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u0644\u064a \u0628\u064a\u062e\u0644\u064a\u0643 \u062a\u0642\u062f\u0631 \u062a\u0633\u062a\u0639\u0645\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 \u062f\u064a \u0641\u064a \u0627\u064a \u0639\u0646\u0635\u0631 \u062a\u0639\u0645\u0644\u0647.","id":13,"options":["\u0635\u062d\u064a\u062d\u0629","\u062e\u0637\u0623"],"question":"\u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 `objects` \u0644\u064a\u0647\u0645 `prototype`. \u0647\u0630\u0647 \u0627\u0644\u0639\u0628\u0627\u0631\u0629:"},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"\u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a `dynamic` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u062d\u0646\u0627 \u0645\u0634 \u0628\u0646\u062d\u062f\u062f \u0646\u0648\u0639 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u0644\u0645\u0627 \u0628\u0646\u0639\u0645\u0644\u0647 \u0648 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u0646\u0648\u0639\u0647 \u0628\u064a\u062a\u063a\u064a\u0631 \u0639\u0627\u062f\u064a \u062c\u062f\u0627\u064b \u0648 \u0645\u0645\u0643\u0646 \u062f\u0647 \u064a\u062d\u0635\u0644 \u0645\u0646 \u063a\u064a\u0631 \u0645\u0627 \u062a\u0639\u0631\u0641 \u062d\u062a\u0649 \u0648 \u062f\u0647 \u0627\u0633\u0645\u0647 `implicit coercion`. \\n\\n\u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644 \u062f\u0647 \u0628\u0642\u0649 \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0647\u062a\u062d\u0648\u0644 \u0631\u0642\u0645 `1` \u0627\u0644\u0649 `string` \u0639\u0634\u0627\u0646 \u0627\u0644\u062f\u0627\u0644\u0629 \u062a\u0642\u062f\u0631 \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639\u0627\u0647 \u0648 \u062a\u0631\u062c\u0639 \u0642\u064a\u0645\u0629. \u0648 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062c\u0645\u0639 \u0645\u0627\u0628\u064a\u0646 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0639\u062f\u062f\u064a\u0629 `1` \u0648 \u0627\u0644\u0633\u062a\u0631\u0646\u062c `\\"2\\"` \u0627\u0644\u0631\u0642\u0645 \u0647\u064a\u062a\u062d\u0648\u0644 \u0627\u0644\u0649 \u0633\u062a\u0631\u0646\u062c \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0647\u064a\u0642\u0648\u0645 \u0645\u062a\u0636\u0627\u0641 \u0627\u0644\u0649 \u0627\u0644\u0633\u062a\u0631\u0646\u062c \u0627\u0644\u062a\u0627\u0646\u064a\u0629 \u0639\u0634\u0627\u0646 \u064a\u0639\u0645\u0644 \u0633\u062a\u0631\u0646\u062c `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`12`","`3`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"\u0627\u0644\u0639\u0627\u0645\u0644 \u0627\u0644\u0628\u0639\u062f\u064a `x++` \u0628\u064a\u0631\u062c\u0639 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0627\u0635\u0644\u064a\u0629 \u0627\u0644\u0627\u0648\u0644 \u0628\u0639\u062f \u0643\u062f\u0647 \u064a\u0632\u0648\u062f \u0648\u0627\u062d\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\\n\\n\u0627\u0645\u0627 \u0627\u0644\u0639\u0627\u0645\u0644 \u0627\u0644\u0642\u0628\u0644\u064a `++x` \u0628\u064a\u0639\u062f\u0644 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0627\u0648\u0644 \u0648 \u064a\u0631\u062c\u0639 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0645\u0639\u062f\u0644\u0629","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"\u0644\u0648 \u0628\u062a\u0633\u062a\u0639\u0645\u0644 `tagged template literals` \u0627\u0648\u0644 \u0642\u064a\u0645\u0629 \u062f\u0627\u062e\u0644\u0647 \u0644\u0644\u062f\u0627\u0644\u0629 \u062f\u0627\u064a\u0645\u0627\u064b \u0647\u062a\u0643\u0648\u0646 `array` \u0645\u0644\u064a\u0627\u0646\u0647 \u0628\u0627\u0644\u0633\u062a\u0631\u0646\u062c \u0627\u0644\u0644\u064a \u062f\u0627\u062e\u0644\u0647 \u0641\u0642\u0637 \u0645\u0646 \u063a\u064a\u0631 \u0627\u064a \u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0648 \u0627\u0644\u0628\u0627\u0642\u064a \u0647\u064a\u0627\u062e\u062f\u0648\u0627 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0644\u064a \u062f\u0627\u062e\u0644\u0647 \u0628\u0627\u0644\u062a\u0631\u062a\u064a\u0628.","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f (\u062c\u0631\u0628 \u062a\u0634\u063a\u0644 \u0627\u0644\u0633\u0624\u0627\u0644 \u062f\u0647 \u0639\u0634\u0627\u0646 \u062a\u0641\u0647\u0645\u0647 \u0643\u0648\u064a\u0633)"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"\u0644\u0645\u0627 \u0628\u0646\u0642\u0627\u0631\u0646 \u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a, \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0640`primitive` \u0632\u064a \u0627\u0644\u0627\u0631\u0642\u0627\u0645 \u0648 \u0627\u0644\u0633\u062a\u0631\u0646\u062c \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0628\u064a\u062a\u0645 \u0645\u0642\u0627\u0631\u0646\u0629 \u0642\u064a\u0645\u062a\u0647\u0627 \u0641\u0642\u0637 \u0628\u064a\u0646\u0645\u0627 \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a\u0633 \u0628\u064a\u062a\u0645 \u0645\u0642\u0627\u0631\u0646\u0629 \u0627\u0644\u0627\u0634\u0627\u0631\u0629 \u0644\u064a\u0647\u0645 `reference`. \u064a\u0639\u0646\u064a \u0644\u0645\u0627 \u0628\u0646\u0642\u0627\u0631\u0646 \u0627\u0648\u0628\u062c\u0643\u062a\u0633 \u0628\u0628\u0639\u0636 \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0628\u062a\u0634\u0648\u0641 \u0647\u0644 \u0627\u0644\u0627\u062a\u0646\u064a\u0646 \u0628\u064a\u0634\u0627\u0648\u0631\u0648\u0627 \u0644\u0646\u0641\u0633 \u0627\u0644\u0645\u0643\u0627\u0646 \u0641\u064a \u0627\u0644\u0631\u0627\u0645 \u0648\u0644\u0627 \u0644\u0627.\\n\\n\u0648 \u0628\u0645\u0627 \u0627\u0646 \u0627\u0644\u0627\u0648\u0628\u062c\u0643\u062a\u0633 \u0627\u0644\u0644\u064a \u0628\u0646\u0642\u0627\u0631\u0646\u0647\u0645 \u0627\u062d\u0646\u0627 \u0647\u0646\u0627 \u062f\u0627\u062e\u0644\u064a\u0646 \u0639\u0644\u0649 \u0627\u0646\u0647\u0645 \u0642\u064a\u0645\u062a\u064a\u0646 \u0645\u062e\u062a\u0644\u0641\u062a\u064a\u0646 \u0644\u0644\u062f\u0627\u0644\u0647 \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0645\u0634 \u0628\u064a\u0634\u064a\u0631\u0648\u0627 \u0644\u0646\u0641\u0633 \u0627\u0644\u0645\u0643\u0627\u0646 \u0641 \u0627\u0644\u0631\u0627\u0645 \u064a\u0628\u0642\u0649 \u0645\u0634 \u0645\u062a\u0633\u0627\u0648\u064a\u064a\u0646 \u0648 \u062f\u0647 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u0644\u064a \u0628\u064a\u062e\u0644\u064a \u0627\u0644\u0627\u062c\u0627\u0628\u0629 \u0628\u0627\u0644\u0634\u0643\u0644 \u062f\u0647. \u0627\u0644\u0645\u0642\u0627\u0631\u0646\u0647 \u0639\u0634\u0627\u0646 \u062a\u062a\u0645 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d \u0628\u0642\u0649 \u0645\u0645\u0643\u0646 \u062a\u062d\u0648\u0644\u0647\u0645 \u0644 \u0633\u062a\u0631\u0646\u062c \u0627\u0648 \u062a\u0634\u0648\u0641 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0644\u064a \u062c\u0648\u0627 \u0643\u0644 \u0627\u0648\u0628\u062c\u0643\u062a.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062a\u0641\u0643\u064a\u0643 `spread operator ...args` \u0628\u064a\u0631\u062c\u0639 `array` \u0641\u064a\u0647\u0627 \u0627\u0644\u0640\u0642\u064a\u0645 \u0627\u0644\u0644\u064a \u062f\u0627\u062e\u0644\u0647 \u0644\u0644\u062f\u0627\u0644\u0629. \u0648 \u0628\u0645\u0627 \u0627\u0646 \u0643\u0644 \u062d\u0627\u062c\u0647 \u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 \u0627\u0648\u0628\u062c\u0643\u062a \u0628\u0645\u0627 \u0641\u064a\u0647\u0627 \u0627\u0644\u0640`array` \u064a\u0628\u0642\u0649 \u0627\u0644\u0642\u064a\u0645\u0647 \u0627\u0644\u0644\u064a \u0647\u062a\u0631\u062c\u0639 `\\"object\\"`","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"\u0644\u0645\u0627 \u0628\u0646\u0633\u062a\u0639\u0645\u0644 `\\"use strict\\"` \u062a\u0642\u062f\u0631 \u062a\u062a\u0623\u0643\u062f \u0627\u0646 \u0627\u0646\u062a \u0645\u0634 \u0628\u062a\u0639\u0645\u0644 \u0645\u062a\u063a\u064a\u0631\u0627\u062a `global` \u0639\u0646 \u0637\u0631\u064a\u0642 \u0627\u0644\u062e\u0637\u0623. \u0627\u062d\u0646\u0627 \u0647\u0646\u0627 \u0639\u0645\u0631\u0646\u0627 \u0645\u0627 \u0639\u0645\u0644\u0646\u0627 `declare` \u0644\u0644\u0645\u062a\u063a\u064a\u0631 `age` \u0627\u0635\u0644\u0627\u064b \u0648 \u0628\u0645\u0627 \u0627\u0646\u0646\u0627 \u0628\u0646\u0633\u062a\u0639\u0645\u0644 `\\"use strict\\"` \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0647\u064a\u062f\u064a\u0646\u0627 \u062e\u0637\u0623 \u0645\u0646 \u0646\u0648\u0639 `ReferenceError`.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"\u0627\u0644\u062f\u0627\u0644\u0629 `eval` \u0628\u062a\u0634\u063a\u0644 \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0644\u064a \u062f\u0627\u062e\u0644\u0647\u0627 \u0639\u0644\u0649 \u0647\u064a\u0626\u0629 `string`. \u0644\u0648 \u0627\u0644\u0633\u062a\u0631\u0646\u062c \u062f\u064a \u0628\u062a\u0639\u0628\u0631 \u0639\u0646 \u0639\u0645\u0644\u064a\u0629 \u062d\u0633\u0627\u0628\u064a\u0629 \u0645\u062b\u0644\u0627\u064b \u0647\u062a\u0642\u0648\u0645 \u0645\u0634\u063a\u0644\u0647 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u062f\u064a \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a `10 * 10 + 5` \u0647\u064a\u0631\u062c\u0639 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0639\u062f\u062f\u064a\u0629 `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"\u0627\u064a\u0647 \u0642\u064a\u0645\u0629 `sum`?"},{"answer":3,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"\u0627\u064a \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0628\u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0641\u064a \u0627\u0644\u0640`sessionStorage` \u0628\u062a\u062a\u0645\u0633\u062d \u0645\u062c\u0631\u062f \u0645\u0627 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u064a\u0642\u0641\u0644 \u0627\u0644\u062a\u0628\u0648\u064a\u0628.\\n\\n\u0644\u0648 \u0627\u0633\u062a\u062e\u062f\u0645\u062a `localStorage` \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0647\u062a\u0641\u0636\u0644 \u0645\u0648\u062c\u0648\u062f\u0647 \u0644\u0644\u0623\u0628\u062f \u0627\u0648 \u0644\u062d\u062f \u0645\u0627 \u062a\u0645\u0633\u062d\u0647\u0627 \u0627\u0646\u062a \u0628\u0646\u0641\u0633\u0643 \u0641\u064a \u0627\u0644\u0643\u0648\u062f.","id":21,"options":["\u0644\u0644\u0623\u0628\u062f, \u0639\u0645\u0631\u0647\u0627 \u0645\u0627 \u0647\u062a\u062a\u0645\u0633\u062d","\u0644\u0645\u0627 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u064a\u0642\u0641\u0644 \u0627\u0644\u062a\u0628\u0648\u064a\u0628","\u0644\u0645\u0627 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u064a\u0642\u0641\u0644 \u0646\u0627\u0641\u0630\u0629 \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u0643\u0644\u0647\u0627","\u0644\u0645\u0627 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u064a\u0637\u0641\u064a \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0628\u062a\u0627\u0639\u0647"],"question":"cool_secret \u0647\u062a\u0641\u0636\u0644 \u0645\u0648\u062c\u0648\u062f\u0647 \u0642\u062f \u0627\u064a\u0647\u061f"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"\u0645\u0639 \u0643\u0644\u0645\u0629 `var` \u0627\u062d\u0646\u0627 \u0628\u0646\u0639\u0645\u0644 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 \u0645\u0646 \u0627\u0648\u0644 \u0648 \u062c\u062f\u064a\u062f \u0628\u0646\u0641\u0633 \u0627\u0644\u0627\u0633\u0645 \u0648 \u0628\u0642\u064a\u0645 \u0645\u062e\u062a\u0644\u0641\u0647 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u062e\u0631 \u0642\u064a\u0645\u0647 \u0628\u0633 \u0647\u064a \u0627\u0644\u0644\u064a \u0647\u062a\u0643\u0648\u0646 \u0645\u0648\u062c\u0648\u062f\u0629. \u0645\u0634 \u0628\u064a\u062d\u0635\u0644 \u0643\u062f\u0647 \u0645\u0639 `let` \u0648 `const`.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"\u0643\u0644 \u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u0639\u0646\u0627\u0635\u0631 `object keys` \u0645\u0627 \u0639\u062f\u0627 \u0627\u0644\u0644\u064a \u0645\u0646 \u0646\u0648\u0639 `Symbol` \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 \u0642\u064a\u0645 `string` \u062d\u062a\u0649 \u0644\u0648 \u0627\u0646\u062a \u0645\u0634 \u0643\u0627\u062a\u0628\u0647\u0627 \u0643\u0633\u062a\u0631\u0646\u062c. \u0648 \u062f\u0647 \u0627\u0644\u0633\u0628\u0628 \u0627\u0646 `obj.hasOwnProperty(\'1\')` \u0628\u0631\u0636\u0647 \u0628\u062a\u0631\u062c\u0639 `true`\\n\\n\u0627\u0645\u0627 \u0628\u0627\u0644\u0646\u0633\u0628\u0647 \u0644\u0646\u0648\u0639 `set` \u0641\u0627 \u0627\u0644\u0644\u064a \u0645\u0639\u0627\u0646\u0627 \u062d\u0627\u0644\u064a\u0627\u064b \u062c\u0648\u0627\u0647\u0627 \u0642\u064a\u0645 \u0639\u062f\u062f\u064a\u0629 \u0641\u0642\u0637 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u0644\u0640`string` `\'1\'` \u0645\u0634 \u0645\u0648\u062c\u0648\u062f\u0647.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"\u0644\u0648 \u0639\u0646\u062f\u0643 \u0641\u064a \u0627\u0644\u0639\u0646\u0635\u0631 \u0627\u0643\u062a\u0631 \u0645\u0646 \u0642\u064a\u0645\u0629 `object key` \u0628\u0646\u0641\u0633 \u0627\u0644\u0627\u0633\u0645, \u0647\u064a\u062a\u0645 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0644\u064a \u0645\u0648\u062c\u0648\u062f\u0647 \u0628\u0622\u062e\u0631 \u0642\u064a\u0645\u0629 \u062a\u0645 \u062a\u0633\u062c\u064a\u0644\u0647\u0627.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"explanation":"\u0648 \u062f\u064a \u062d\u0627\u062c\u0647 \u0627\u0633\u0645\u0647\u0627 `global execution context` \u0648\u0627\u0644\u0644\u064a \u064a\u0645\u0643\u0646 \u0627\u0639\u062a\u0628\u0627\u0631\u0647 \u0639\u0646 \u0645\u062d\u064a\u0637 \u0627\u0648 \u0627\u0644\u0628\u064a\u0626\u0629 \u0627\u0644\u0644\u064a \u0627\u0644\u0643\u0648\u0648\u062f \u0628\u064a\u0634\u062a\u063a\u0644 \u0641\u064a\u0647 \u0648 \u0628\u064a\u0643\u0648\u0646 \u0641\u064a\u0647 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0627\u0644\u0640`global` \u0643\u0644\u0647\u0627.","id":25,"options":["\u0635\u062d\u064a\u062d\u0629","\u062e\u0627\u0637\u0626\u0629","\u062a\u0639\u062a\u0645\u062f"],"question":"\u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a, \u0628\u0646\u0644\u0627\u0642\u064a \u062d\u0627\u062c\u062a\u064a\u0646 \u0645\u0648\u062c\u0648\u062f\u064a\u0646 \u062f\u0627\u064a\u0645\u0627\u064b \u0648\u0647\u0645\u0627 \u0627\u0644\u0640 `global` \u0648 \u0643\u0644\u0645\u0629 \u0627\u0644 `this` \u0627\u0644\u0645\u0641\u062a\u0627\u062d\u064a\u0629. \u0627\u0644\u0639\u0628\u0627\u0631\u0629 \u062f\u064a:"},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"\u0643\u0644\u0645\u0629 `continue` \u0628\u062a\u062e\u0644\u064a \u0627\u0644\u0644\u0648\u0648\u0628 \u062a\u0643\u0645\u0644 \u0644\u0648 \u0627\u0644\u0634\u0631\u0637 \u0627\u0644\u0644\u064a \u0647\u064a \u062c\u0648\u0627\u0647 \u0627\u062a\u062d\u0642\u0642.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` \u0647\u0648 \u0641\u0646\u0643\u0634\u0646 `constructor` \u0648\u0627\u0644\u0644\u064a \u0628\u0646\u0642\u062f\u0631 \u0646\u0636\u064a\u0641 \u062e\u0648\u0627\u0635 \u0648 \u0642\u064a\u0645 \u0644\u064a\u0647. \u0627\u0646\u0627 \u0647\u0646\u0627 \u0636\u064a\u0641\u062a \u062f\u0627\u0644\u0629 \u0644\u0644\u0640`prototype` \u0628\u062a\u0627\u0639\u0647. \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0627\u0644\u0628\u062f\u0627\u0626\u064a\u0629 `primitive` \u0628\u064a\u062a\u0645 \u062a\u062d\u0648\u064a\u0644\u0647\u0627 \u0628\u0637\u0631\u064a\u0642\u0629 \u062a\u0644\u0642\u0627\u0626\u064a\u0627\u064b \u0627\u0644\u0649 \u0639\u0646\u0635\u0631 `object` \u0648\u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0628\u064a\u0643\u0648\u0646 \u0644\u064a\u0647\u0627 \u0627\u0644\u0642\u062f\u0631\u0647 \u0627\u0646\u0647\u0627 \u062a\u0634\u063a\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 \u0627\u0644\u062e\u0627\u0635\u0647 \u0628\u0627\u0644\u0646\u0648\u0639 \u062f\u0647.","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"\u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u0639\u0646\u0627\u0635\u0631 `Object keys` \u0628\u064a\u062a\u0645 \u062a\u062d\u0648\u064a\u0644\u0647\u0645 \u062a\u0644\u0642\u0627\u0626\u064a\u0627\u064b \u0627\u0644\u0649 string. \u0627\u062d\u0646\u0627 \u0647\u0646\u0627 \u0628\u0646\u062d\u0627\u0648\u0644 \u0646\u062d\u0637 \u0627\u0648\u0628\u062c\u0643\u062a \u0639\u0644\u0649 \u0627\u0646\u0647 \u0645\u0641\u062a\u0627\u062d \u0644\u0623\u0648\u0628\u062c\u0643\u062a \u062a\u0627\u0646\u064a. \u0628\u0633 \u0627\u0644\u0645\u0634\u0643\u0644\u0629 \u0627\u0646 \u0644\u0645\u0627 \u0646\u0639\u0645\u0644 \u0643\u062f\u0647 \u0645\u0634 \u0628\u064a\u062a\u0631\u062c\u0645 \u0644\u0623\u0633\u0645\u0647 \u0627\u0648 \u0644\u0645\u062d\u062a\u0648\u064a\u0627\u062a\u0647 \u0628\u0644 \u0628\u064a\u062a\u062d\u0648\u0644 \u0627\u0644\u0649 `[object Object] \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0627\u062d\u0646\u0627 \u0643\u0646\u0627 \u0643\u0623\u0646\u0646\u0627 \u0628\u0627\u0644\u0638\u0628\u0637 \u0639\u0627\u0645\u0644\u064a\u0646 `a[\\"object Object\\"]=123` \u0648 \u0628\u0646\u0643\u0631\u0631 \u0643\u062f\u0647 \u0645\u0639 `c` \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0628\u0646\u0642\u0648\u0645 \u0637\u0627\u0628\u0639\u064a\u0646 `a[b]` \u0627\u0644\u0644\u064a \u0627\u062d\u0646\u0627 \u0644\u0633\u0647 \u0645\u062e\u0644\u064a\u064a\u0646 \u0645\u0641\u062a\u0627\u062d\u0647\u0627 \u0645\u0646 \u0634\u0648\u064a\u0629 `a[\\"object Object\\"]` \u0648 \u062e\u0644\u064a\u0646\u0627 \u0627\u0644\u0642\u064a\u0645\u0629 \u0628\u062a\u0627\u0639\u062a\u0647 456 \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u062f\u064a \u0627\u0644\u0644\u064a \u0628\u062a\u0637\u0628\u0639.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"\u0639\u0646\u062f\u0646\u0627 \u062f\u0627\u0644\u0629 `setTimeout` \u0648 \u0627\u0644\u0645\u0641\u0631\u0648\u0636 \u062a\u0634\u062a\u063a\u0644 \u0627\u0644\u0627\u0648\u0644 \u0648 \u0644\u0643\u0646 \u0627\u0644\u0644\u064a \u062c\u0648\u0627\u0647\u0627 \u0627\u062a\u0634\u063a\u0644 \u0627\u062e\u0631 \u062d\u0627\u062c\u0647. \u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u062d\u0635\u0644\u061f \\n\\n\u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u062d\u0627\u062a \u0645\u062d\u0631\u0643 \u0627\u0644\u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0645\u0634 \u0644\u0648\u062d\u062f\u0647 \u0627\u0644\u0644\u064a \u0645\u0648\u062c\u0648\u062f, \u0628\u0644 \u0645\u0648\u062c\u0648\u062f \u0643\u0645\u0627\u0646 \u0645\u0639\u0627\u0647 \u062d\u0627\u062c\u0647 \u0627\u0633\u0645\u0647\u0627 `Web Application APIs` \u0648\u0627\u062e\u062a\u0635\u0627\u0631\u0647\u0627 `WebAPIs` \u0648\u062f\u064a \u0628\u062a\u062f\u064a\u0644\u0643 \u0634\u0648\u064a\u0629 \u062f\u0648\u0627\u0644 \u0648 \u062d\u0627\u062c\u0627\u062a \u0632\u064a\u0627\u062f\u0629 \u0639\u0646 \u0627\u0644\u0644\u063a\u0647 \u0627\u0644\u0627\u0633\u0627\u0633\u064a\u0629 \u0632\u064a `setTimeout` \u0627\u0644\u0644\u064a \u0645\u0634 \u0641\u064a \u0627\u0644\u0644\u063a\u0647 \u0627\u0635\u0644\u0627\u064b. \\n\\n\u0627\u0644\u0644\u064a \u0628\u064a\u062d\u0635\u0644 \u0628\u0642\u0649 \u0627\u0646 \u0627\u0644\u062f\u0627\u0644\u0629 \u0627\u0644\u0644\u064a \u062c\u0648\u0627 `setTimeout` \u0627\u0644\u0644\u064a \u0647\u064a \u0627\u0644\u0640 `callback` \u0628\u062a\u062a\u062c\u0647\u0632 \u0639\u0634\u0627\u0646 \u062a\u0634\u062a\u063a\u0644, \u0648 `setTimeout` \u0646\u0641\u0633\u0647\u0627 \u0628\u062a\u062e\u0644\u0635, \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0628\u064a\u0646\u0637 \u0639\u0644\u0649 \u0637\u0648\u0644 \u0639\u0644\u0649 \u0627\u0644\u062f\u0627\u0644\u0629 \u0627\u0644\u0644\u064a \u0628\u0639\u062f\u0647\u0627 \u0648 \u0628\u062a\u0634\u063a\u0644\u0647\u0627 \u0648 \u0627\u0644\u0644\u064a \u0628\u0639\u062f\u0647\u0627 \u0648 \u0628\u062a\u0634\u063a\u0644\u0647\u0627 \u0644\u062d\u062f \u0645\u0627 \u0645\u064a\u062a\u0628\u0642\u0627\u0634 \u062d\u0627\u062c\u0647 \u0634\u0627\u063a\u0644\u0647 \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u0628\u0639\u062f \u0643\u062f\u0647 \u064a\u0642\u0648\u0645 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0645\u0634\u063a\u0644 \u0627\u0644\u0640`callback` \u0627\u0644\u0644\u064a \u0643\u0627\u0646\u062a \u0645\u062a\u062c\u0647\u0632\u0647. \\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":3,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\u0647\u062f\u0641 \u0627\u0644\u062d\u062f\u062b \u0628\u064a\u0643\u0648\u0646 \u0627\u062e\u0631 \u0639\u0646\u0635\u0631 \u0641\u064a \u0633\u0644\u0633\u0644\u0629 \u0627\u0644\u0627\u0628\u0646\u0627\u0621 \u0648 \u062a\u0642\u062f\u0631 \u062a\u0645\u0646\u0639 \u062f\u0647 \u0639\u0646 \u0637\u0631\u064a\u0642 `event.stopPropagation`.","id":30,"options":["Outer `div`","Inner `div`","`button`","\u0627\u0631\u0627\u064a \u062c\u0648\u0627\u0647\u0627 \u0643\u0644 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0644\u064a \u062c\u0648\u0627 \u0627\u0644\u0632\u0631\u0627\u0631"],"question":"\u0627\u064a\u0647 \u0642\u064a\u0645\u0629 `event.target` \u0644\u0645\u0627 \u062a\u062f\u0648\u0633 \u0639\u0644\u0649 \u0627\u0644\u0632\u0631\u0627\u0631\u061f"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"\u0644\u0645\u0627 \u062a\u062f\u0648\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u0631\u062c\u0631\u0627\u0641 \u0647\u062a\u0644\u0627\u0642\u064a \u062d\u0627\u062c\u062a\u064a\u0646 \u0638\u0647\u0631\u0648\u0627: `p` \u0648 `div`. \u0648 \u0627\u062b\u0646\u0627\u0621 \u0645\u0627 \u0627\u0644\u062d\u062f\u062b \u0628\u064a\u062a\u0645 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639\u0627\u0647 \u0628\u064a\u062d\u0635\u0644 3 \u0645\u0631\u0627\u062d\u0644 \u0632\u064a \u0645\u0627 \u0642\u0648\u0644\u0646\u0627 \u0641\u064a \u0633\u0624\u0627\u0644 \u0642\u0628\u0644 \u0643\u062f\u0647. \u0627\u0644\u0627\u0633\u0627\u0633\u064a \u0627\u0646 \u0627\u0644\u062f\u0648\u0627\u0644 \u0627\u0644\u0644\u064a \u0627\u0646\u062a \u0628\u062a\u062d\u062f\u062f\u0647\u0627 \u0639\u0634\u0627\u0646 \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0627\u062d\u062f\u0627\u062b \u0628\u062a\u0634\u062a\u063a\u0644 \u0641\u064a \u0627\u062e\u0631 \u0645\u0631\u062d\u0644\u0647 \u0648 \u0647\u064a \u0627\u0644\u0640`Bubbling` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0647\u064a\u062a\u0634\u063a\u0644 \u0645\u0646 \u0627\u0639\u0645\u0642 \u0639\u0646\u0635\u0631 \u0627\u0644\u0649 \u0627\u0643\u0628\u0631 \u0639\u0646\u0635\u0631.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"\u0644\u0645\u0627 \u062a\u062f\u0648\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u0631\u062c\u0631\u0627\u0641 \u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"\u0641\u064a \u0627\u0644\u062d\u0627\u0644\u062a\u064a\u0646 \u0628\u0646\u0642\u062f\u0631 \u0646\u062d\u062f\u062f \u0627\u062d\u0646\u0627 \u0639\u0627\u064a\u0632\u064a\u0646 \u0643\u0644\u0645\u0629 `this` \u062a\u0634\u064a\u0631 \u0644\u0623\u064a\u0647 \u0628\u0627\u0644\u0638\u0628\u0637. \u0628\u0633 \u0627\u0644\u0641\u0631\u0642 \u0627\u0646 `call` \u0628\u062a\u0634\u062a\u063a\u0644 \u0639\u0644\u0649 \u0637\u0648\u0644 \u0627\u0645\u0627 `bind` \u0628\u062a\u0631\u062c\u0639 \u0646\u0633\u062e\u0629 \u062c\u062f\u064a\u062f\u0629 \u0645\u0646 \u0627\u0644\u062f\u0627\u0644\u0629 \u0627\u0644\u0644\u064a \u062f\u062e\u0644\u062a\u0644\u0647\u0627 \u0642\u064a\u0645\u0629 `this` \u0628\u062a\u0627\u0639\u062a\u0647\u0627 \u0627\u0644\u0644\u064a \u0627\u062d\u0646\u0627 \u0645\u062d\u062f\u062f\u064a\u0646\u0647\u0627 \u0628\u0633 \u0645\u0634 \u0628\u062a\u0634\u062a\u063a\u0644 \u0639\u0644\u0649 \u0637\u0648\u0644.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"\u0627\u0644\u062f\u0627\u0644\u0629 `sayHi` \u0628\u062a\u0631\u062c\u0639 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0644\u064a \u0628\u062a\u064a\u062c\u064a \u0645\u0646 \u0627\u0644\u062f\u0627\u0644\u0629 \u0630\u0627\u062a\u064a\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (IIFE) \u0648 \u0627\u0644\u0644\u064a \u0628\u062f\u0648\u0631\u0647\u0627 \u0628\u062a\u0631\u062c\u0639 \u0642\u064a\u0645\u0629 \u0646\u0648\u0639\u0647\u0627 `\\"number\\"`. \\n\\n\u0648\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0642\u0627\u0631\u0626: \u0641\u064a 3 \u0627\u0646\u0648\u0627\u0639 \u0641\u0642\u0637 \u0641\u064a \u0627\u0644\u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a: `null`, `undefined`, `boolean`, `number`, `string`, `object` \u0648 `symbol`. \u0627\u0644\u062f\u0648\u0627\u0644 \u0644\u064a\u0633\u062a \u0646\u0648\u0639 \u0648 \u0627\u0646\u0645\u0627 \u0647\u0645\u0627 \u0639\u0646\u0627\u0635\u0631 \u0645\u0646 \u0646\u0648\u0639 `object`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"\u0645\u0648\u062c\u0648\u062f \u0641\u064a \u0627\u0644\u0644\u063a\u0647 6 \u0642\u064a\u0645 \u0633\u0627\u0644\u0628\u064a\u0629 `false` \u0641\u0642\u0637:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (empty string)\\n- `false`\\n\\n\u0627\u064a `constructor` \u0628\u064a\u0643\u0648\u0646 \u0627\u064a\u062c\u0627\u0628\u064a `truthy` \u0639\u0644\u0634\u0627\u0646 \u0628\u064a\u0631\u062c\u0639 \u0642\u064a\u0645\u0629 \u0645\u0634 \u0648\u0627\u062d\u062f\u0629 \u0645\u0646 \u0627\u0644\u0644\u064a 6 \u062f\u0648\u0644.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","\u0643\u0644\u0647\u0645"],"question":"\u0627\u0646\u0647\u064a \u0642\u064a\u0645\u0629 \u0645\u0646 \u062f\u0648\u0644 \u0633\u0627\u0644\u0628\u064a\u0629 `false`\u061f"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` \u0647\u062a\u0631\u062c\u0639 `\\"number\\"` \u0648 \u0644\u0627\u062d\u0638 \u0627\u0646 \u062f\u064a \u0645\u0627\u0628\u064a\u0646 `\\"\\"` \u064a\u0639\u0646\u064a \u0633\u062a\u0631\u0646\u062c \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0644\u0645\u0627 \u062a\u062f\u062e\u0644 \u0641\u064a \u0627\u0644\u0640 `typeof \\"number\\"` \u0647\u062a\u0631\u062c\u0639 `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"\u0644\u0645\u0627 \u0628\u062a\u062d\u0637 \u0642\u064a\u0645\u0629 \u0641\u064a \u0645\u0643\u0627\u0646 \u0641\u064a `array` \u0648 \u0627\u0644\u0645\u0643\u0627\u0646 \u062f\u0647 \u0628\u064a\u062a\u0639\u062f\u0649 \u0639\u062f\u062f \u0627\u0644\u0645\u0633\u0627\u062d\u0627\u062a \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0647 \u0641\u064a \u0627\u0644\u0627\u0631\u0627\u064a (\u0637\u0648\u0644\u0647\u0627) \u0628\u062a\u0642\u0648\u0645 \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0628\u0639\u0645\u0644 \u062d\u0627\u062c\u0647 \u0627\u0633\u0645\u0647\u0627 \\"\u0645\u0633\u0627\u062d\u0627\u062a \u0641\u0627\u0631\u063a\u0647\\" \\"empty slots\\" \u0648\u0627\u0644\u0644\u064a \u0628\u064a\u0643\u0648\u0646\u0648\u0627 \u0642\u064a\u0645\u0647\u0645 `undefined` \u0648\u0644\u0643\u0646 \u0644\u0645\u0627 \u062a\u0628\u0635 \u0641\u064a \u0627\u0644\u0643\u0648\u0646\u0633\u0648\u0644 \u0628\u062a\u0627\u0639\u062a \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u0645\u062b\u0644\u0627\u064b \u0647\u062a\u0644\u0627\u0642\u064a \u0627\u0644\u0634\u0643\u0644 \u0637\u0627\u0644\u0639\u0644\u0643 \u0643\u062f\u0647: \\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\n\u0648 \u0627\u0644\u0634\u0643\u0644 \u0628\u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062d\u0633\u0628 \u0627\u0646\u062a \u0628\u062a\u0634\u063a\u0644 \u0627\u0644\u0643\u0648\u062f \u0641\u064a\u0646. \u0643\u0644 \u0645\u062a\u0635\u0641\u062d \u0628\u064a\u0637\u0644\u0639\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u062e\u062a\u0644\u0641, \u0648 \u062a\u0642\u062f\u0631 \u062a\u062c\u0631\u0628\u0647\u0627 \u0628\u0646\u0641\u0633\u0643.","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"\u062c\u0632\u0621 \u0627\u0644\u0640`catch` \u0628\u064a\u0633\u062a\u0644\u0645 \u0645\u062a\u063a\u064a\u0631 `x` \u0628\u0633 \u0627\u0644\u0641\u0631\u0642 \u0627\u0646 \u0627\u0644\u0627\u0643\u0633 \u0641\u064a \u0627\u0644\u062d\u0627\u0644\u0647 \u062f\u064a \u0645\u0634 \u0628\u062a\u0627\u0639\u062a \u0627\u0644\u062f\u0627\u0644\u0647 \u0648 \u0627\u0646\u0645\u0627 \u062f\u0647 \u0645\u062a\u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f \u0641\u0642\u0637 \u0644\u062c\u0632\u0621 \u0627\u0644\u0640 `catch`. \u0628\u0639\u062f \u0643\u062f\u0647 \u0627\u062d\u0646\u0627 \u0642\u0648\u0645\u0646\u0627 \u0645\u063a\u064a\u0631\u064a\u0646 \u0627\u0644\u0642\u064a\u0645\u0629 \u0628\u062a\u0627\u0639\u062a\u0647 \u0627\u0644\u0649 `1` \u0648 \u063a\u064a\u0631\u0646\u0627 \u0642\u064a\u0645\u0629 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `y` \u0627\u0644\u0649 `2`. \u0628\u0639\u062f \u0643\u062f\u0647 \u0642\u0648\u0645\u0646\u0627 \u0637\u0627\u0628\u0639\u064a\u0646 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0644\u064a \u0645\u0648\u062c\u0648\u062f\u0629 \u062c\u0648\u0627 \u062c\u0632\u0621 \u0627\u0644\u0640`catch` \u0641\u0642\u0637. \\n\\n\u0628\u0631\u0627 \u0627\u0644\u062c\u0632\u0621 \u0628\u062a\u0627\u0639 \u0627\u0644\u0640`catch` \u0627\u0643\u0633 \u0647\u064a\u0641\u0636\u0644 \u0628\u0631\u0636\u0647 `undefined` \u0648 `y` \u0628\u0645\u0627 \u0627\u0646 \u0645\u0641\u064a\u0634 \u0627\u0644\u0627 \u0648\u0627\u062d\u062f\u0629 \u0628\u0633 \u0648 \u0647\u064a \u0628\u062a\u0627\u0639\u062a \u0627\u0644\u062f\u0627\u0644\u0629 \u0627\u0644\u0627\u0633\u0627\u0633\u064a\u0629 \u0648\u0627\u062d\u0646\u0627 \u063a\u064a\u0631\u0646\u0627 \u0642\u064a\u0645\u062a\u0647\u0627 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0647\u062a\u0641\u0636\u0644 \u0639\u0644\u0649 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0647 \u0627\u0644\u0644\u064a \u0647\u064a `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"explanation":"\u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0641\u064a\u0647\u0627 \u0627\u0646\u0648\u0627\u0639 \u0628\u062f\u0627\u0626\u064a\u0629\u0628\u0633\u064a\u0637\u0629 `primitives` \u0648 \u0639\u0646\u0627\u0635\u0631 `object` \u0641\u0642\u0637. \u0627\u0644\u0627\u0646\u0648\u0627\u0639 \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0647\u0645\u0627:  `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, \u0648 `symbol` \\n\\n\u0627\u0644\u0641\u0631\u0642 \u0628\u064a\u0646 \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0648 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0646 \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0645\u0641\u064a\u0647\u0627\u0634 \u0627\u064a \u062f\u0648\u0627\u0644 `methods` \u0648\u0644\u0643\u0646 \u0628\u0646\u0644\u0627\u062d\u0638 \u0627\u0646 \u0644\u0645\u0627 \u0645\u062b\u0644\u0627\u064f \u0628\u0646\u062d\u0627\u0648\u0644 \u0646\u0634\u063a\u0644 \u062f\u0627\u0644\u0629 \u0639\u0644\u0649 \u0646\u0648\u0639 \u0628\u0633\u064a\u0637 \u0632\u064a `\'foo\'.toUpperCase()` \u0627\u0644\u062f\u0627\u0644\u0647 \u0628\u062a\u0634\u062a\u063a\u0644 \u0639\u0627\u062f\u064a \u062c\u062f\u0627\u064b \u0645\u0646 \u063a\u064a\u0631 \u0645\u0627 \u062a\u062f\u064a\u0646\u0627 \u062e\u0637\u0623 `TypeError` \u0648 \u062f\u0647 \u0644\u0623\u0646 \u0632\u064a \u0645\u0627 \u0642\u0648\u0644\u0646\u0627 \u0641\u064a \u0627\u062c\u0627\u0628\u0629 \u0633\u0627\u0628\u0642\u0647 \u0627\u0646 \u0644\u0645\u0627 \u0628\u0646\u062d\u0627\u0648\u0644 \u0646\u0633\u062a\u063a\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 \u062f\u0648\u0644 \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a \u0628\u062a\u0642\u0648\u0645 \u062a\u0644\u0642\u0627\u0626\u064a\u0627\u064b \u0628\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0628\u062f\u0627\u0626\u064a\u0629 \u0627\u0644\u0644\u064a \u0628\u0646\u062d\u0627\u0648\u0644 \u0646\u0634\u063a\u0644 \u0639\u0644\u064a\u0647\u0627 \u0627\u0644\u062f\u0648\u0627\u0644 \u062f\u064a \u0627\u0644\u0649 \u0642\u064a\u0645 \u0645\u0646 \u0646\u0648\u0639 `object` \u0639\u0634\u0627\u0646 \u062a\u0642\u062f\u0631 \u062a\u0634\u063a\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 \u062f\u0648\u0644 \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u062a\u0631\u062c\u0639\u0647\u0627 \u0632\u064a \u0645\u0627 \u0643\u0627\u0646\u062a. \u0643\u0644 \u0627\u0644\u0627\u0646\u0648\u0627\u0639 \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0628\u064a\u0646\u0637\u0628\u0642 \u0639\u0644\u064a\u0647\u0627 \u0627\u0644\u0643\u0644\u0627\u0645 \u062f\u0647 \u0645\u0627 \u0639\u062f\u0627 `undefined` \u0648 `null`.","id":38,"options":["primitive \u0627\u0648  \u0639\u0646\u0635\u0631 `object`","function \u0627\u0648 \u0639\u0646\u0635\u0631 `object`","\u0639\u0646\u0627\u0635\u0631 `object` \u0628\u0633!","\u0631\u0642\u0645 \u0627\u0648 \u0639\u0646\u0635\u0631 `object`"],"question":"\u0643\u0644 \u062d\u0627\u062c\u0647 \u0641\u064a \u062c\u0627\u0641\u0627\u0633\u0643\u0631\u0628\u062a ..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"\u0627\u0644\u0627\u0631\u0627\u064a `[1,2]` \u0647\u064a \u0627\u0644\u0642\u064a\u0645\u0647 \u0627\u0644\u0627\u0633\u0627\u0633\u064a\u0629 \u0627\u0644\u0644\u064a \u0645\u0639\u0627\u0646\u0627 \u0648 \u0627\u0644\u0644\u064a \u0647\u0646\u0628\u062f\u0623 \u0628\u064a\u0647\u0627 \u0648 \u0647\u064a \u0628\u0631\u0636\u0647 \u0627\u0648\u0644 \u0642\u064a\u0645\u0629 \u0644\u0644\u0645\u062a\u063a\u064a\u0631 `acc`. \u0641\u064a \u0627\u0644\u062f\u0648\u0631\u0629 \u0627\u0644\u0627\u0648\u0644\u0649 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `acc` \u0642\u064a\u0645\u062a\u0647 `[1,2]` \u0648 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `cur` \u0642\u064a\u0645\u062a\u0647 `[0,1]` \u0648 \u0644\u0645\u0627 \u0646\u062c\u0645\u0639\u0647\u0645 \u0633\u0648\u0627 \u0628\u064a\u0643\u0648\u0646 \u0627\u0644\u0646\u0627\u062a\u062c `[1,2,0,1]` \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0627\u0644\u0645\u062a\u063a\u064a\u0631 `acc` \u0628\u064a\u0627\u062e\u062f \u0627\u0644\u0642\u064a\u0645\u0629 \u062f\u064a \u0648 \u064a\u0642\u0648\u0645 \u062f\u0627\u0645\u062c\u0647\u0627 \u0645\u0639 `[2,3]` \u0627\u0644\u0644\u064a \u0647\u064a \u0642\u064a\u0645\u0629 `cur` \u0641\u064a \u0627\u0644\u062f\u0648\u0631\u0629 \u0627\u0644\u062a\u0627\u0646\u064a\u0629 \u0648 \u0627\u0644\u0644\u064a \u0628\u062f\u0648\u0631\u0647 \u0628\u064a\u062f\u064a \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0646\u0647\u0627\u0626\u064a `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` \u0642\u064a\u0645\u0629 \u0633\u0627\u0644\u0628\u064a\u0629 `falsy` \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a `!null` \u0647\u062a\u0631\u062c\u0639 \u0642\u064a\u0645\u0629 \u0627\u064a\u062c\u0627\u0628\u064a\u0629 `true` \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0628\u062a\u062e\u0634 `!true` \u0641\u0627 \u062a\u062a\u062d\u0648\u0644 `false` \\n\\n\u0648\u0632\u064a \u0645\u0627 \u0642\u0648\u0644\u0646\u0627 `\\"\\"` \u062f\u064a \u0642\u064a\u0645\u0629 \u0633\u0627\u0644\u0628\u064a\u0629 \u0644\u0645\u0627 \u0646\u062c\u064a\u0628 \u0639\u0643\u0633\u0647\u0627 \u0647\u062a\u062a\u062d\u0648\u0644 \u0647\u064a \u0644\u0640`false` \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u0627\u0644\u0633\u0627\u0644\u0628 \u0628\u062a\u0627\u0639\u0647\u0627 \u0647\u064a\u0643\u0648\u0646 `true` \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u062a\u062f\u062e\u0644 \u0641\u064a \u0633\u0627\u0644\u0628 \u062a\u0627\u0646\u064a \u0641\u062a\u0628\u0642\u0649 `false`\\n\\n\u0628\u0639\u062f \u0643\u062f\u0647 \u0639\u0646\u062f\u0646\u0627 \u0631\u0642\u0645 `1` \u0627\u0644\u0644\u064a \u0647\u0648 \u0642\u064a\u0645\u0629 \u0627\u064a\u062c\u0627\u0628\u064a\u0629 \u0648 \u0628\u062f\u0648\u0631\u0647 \u0628\u064a\u062a\u062d\u0648\u0644 \u0645\u0631\u0647 \u064a\u0628\u0642\u0649 \u0633\u0627\u0644\u0628\u064a\u0629 \u0648 \u0628\u0639\u062f \u0643\u062f\u0647 \u064a\u0628\u0642\u0649 \u0627\u064a\u062c\u0627\u0628\u064a\u0629 `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0644\u064a \u0647\u064a\u062a\u0637\u0628\u0639\u061f"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"\u062f\u0627\u0644\u0629 `setInterval` \u0628\u062a\u0631\u062c\u0639 \u0627\u0633\u0645 \u062a\u0639\u0631\u064a\u0641\u064a \u0641\u0631\u064a\u062f \u062a\u0642\u062f\u0631 \u062a\u0633\u062a\u0639\u0645\u0644\u0647 \u0641\u064a `clearInterval` \u0639\u0634\u0627\u0646 \u062a\u0648\u0642\u0641 \u0628\u064a\u0647 \u0627\u0644\u062a\u0643\u0631\u0627\u0631.","id":41,"options":["\u0627\u0633\u0645 \u062a\u0639\u0631\u064a\u0641\u064a \u0641\u0631\u064a\u062f \u0645\u0646 \u0646\u0648\u0639\u0647 `unique id`","\u0627\u0644\u0648\u0642\u062a \u0627\u0644\u0645\u062d\u062f\u062f","\u0627\u0644\u062f\u0627\u0644\u0647 \u0627\u0644\u0645\u062f\u062e\u0644\u0647 \u0645\u0639\u0627\u0647\u0627","`undefined`"],"question":"\u062f\u0627\u0644\u0629 `setInterval` \u0628\u062a\u0631\u062c\u0639 \u0627\u064a\u0647 \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u062d\u061f"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"\u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0644\u064a \u0645\u0646 \u0646\u0648\u0639 `string` \u0628\u0646\u0642\u062f\u0631 \u0646\u0639\u062f\u064a \u0639\u0644\u064a\u0647\u0627 \u0639\u0627\u062f\u064a \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u0628\u0646\u0642\u062f\u0631 \u0646\u0633\u062a\u0639\u0645\u0644 \u0627\u0644\u0640 Spread operator `...x` \u0639\u0634\u0627\u0646 \u0646\u062d\u0648\u0644 \u0643\u0644 \u062d\u0631\u0641 \u0627\u0644\u0649 \u0639\u0646\u0635\u0631 \u0641\u064a \u0627\u0631\u0627\u064a.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\u0627\u064a\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0644\u064a \u0647\u062a\u0637\u0644\u0639 \u0647\u0646\u0627\u061f"}],"locale":"ar-EG"},{"isRTL":false,"language":"\ud83c\uddf0\ud83c\uddf7 \ud55c\uad6d\uc5b4","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\ud568\uc218 \ub0b4\uc5d0\uc11c, \uc6b0\uc120 `var` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574 `name` \ubcc0\uc218\ub97c \uc120\uc5b8\ud574\uc694. \uc774\uac83\uc740 \ubcc0\uc218\uac00 \uc815\uc758\ub41c \ud589\uc5d0 \uc2e4\uc81c\ub85c \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0, `undefined`\uc758 \uae30\ubcf8\uac12\uc73c\ub85c \ud638\uc774\uc2a4\ud305 \ub418(\uc0dd\uc131\ub2e8\uacc4\uc5d0 \uba54\ubaa8\ub9ac \uacf5\uac04\uc774 \uc124\uc815)\ub294 \uac83\uc744 \uc758\ubbf8\ud574\uc694. `name` \ubcc0\uc218\ub97c \ucd9c\ub825\ud558\ub824\ub294 \uc904\uc5d0\uc11c \uc544\uc9c1 \ubcc0\uc218\ub97c \uc815\uc758\ud558\uace0 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0, `undefined` \uac12\uc744 \uc720\uc9c0\ud558\uace0 \uc788\uc5b4\uc694.\\n\\n`let` \ud0a4\uc6cc\ub4dc(\uadf8\ub9ac\uace0 `const`)\ub97c \uac00\uc9c0\ub294 \ubcc0\uc218\ub4e4\uc740, `var`\uc640\ub294 \ub2ec\ub9ac, \ud638\uc774\uc2a4\ud305 \ub418\uc9c0\ub9cc <i>\ucd08\uae30\ud654</i> \ub418\uc9c0 \uc54a\uc544\uc694. \uadf8\uac83\ub4e4\uc744 \uc120\uc5b8(\ucd08\uae30\ud654)\ud558\ub294 \uc904 \uc804\uc5d0\ub294 \uc811\uadfc\ud560 \uc218 \uc5c6\uc5b4\uc694. \uc774\uac83\uc740 \\"\uc77c\uc2dc\uc801 \uc0ac\uac01\uc9c0\ub300\\"\ub77c\uace0 \ubd88\ub824\uc694. \uc120\uc5b8\ub418\uae30 \uc804 \ubcc0\uc218\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74, JavaScript\ub294 `ReferenceError`\ub97c \ub358\uc838\uc694.","id":0,"options":["`Lydia` \uadf8\ub9ac\uace0 `undefined`","`Lydia` \uadf8\ub9ac\uace0 `ReferenceError`","`ReferenceError` \uadf8\ub9ac\uace0 `21`","`undefined` \uadf8\ub9ac\uace0 `ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"JavaScript\uc758 \uc774\ubca4\ud2b8 \ud050 \ub54c\ubb38\uc5d0, `setTimeout`\uc758 \ucf5c\ubc31 \ud568\uc218\ub294 \ub8e8\ud504\uac00 \uc2e4\ud589\ub41c _\ud6c4\uc5d0_ \ud638\ucd9c\ub3fc\uc694. \uccab \ubc88\uc9f8\uc758 \ub8e8\ud504 \ubcc0\uc218 `i`\ub294 `var` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574 \uc120\uc5b8\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc774 \uac12\uc740 \uc804\uc5ed \ubcc0\uc218\uac00 \ub3fc\uc694. \ub8e8\ud504 \ub3d9\uc548, \ub2e8\ud56d \uc5f0\uc0b0\uc790 `++`\ub97c \uc0ac\uc6a9\ud558\uc5ec, \ub9e4\ubc88 `i`\uc758 \uac12\uc744 `1`\uc529 \uc99d\uac00\ud588\uc5b4\uc694. `setTimeout`\ucf5c\ubc31 \ud568\uc218\uac00 \ud638\ucd9c\ub418\uae30\uae4c\uc9c0, \uccab \ubc88\uc9f8 \uc608\uc5d0\uc11c `i`\ub294 `3`\uc774\uc5d0\uc694.\\n\\n\ub450 \ubc88\uc9f8 \ub8e8\ud504\uc5d0\uc11c, \ubcc0\uc218 `i`\ub294 `let` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574 \uc120\uc5b8\ub418\uc5c8\uc5b4\uc694: `let`(\uadf8\ub9ac\uace0 `const`) \ud0a4\uc6cc\ub4dc\ub85c \uc120\uc5b8\ub41c \ubcc0\uc218\ub294 \ube14\ub85d \ubc94\uc704\uc608\uc694(\ube14\ub85d\uc740 `{ }` \uc0ac\uc774\uc758 \ubaa8\ub4e0 \uac83). \uac01\uac01\uc758 \ubc18\ubcf5 \ub3d9\uc548, `i`\ub294 \uc0c8\ub85c\uc6b4 \uac12\uc744 \uac00\uc9c0\uace0, \uac01\uac01\uc758 \uac12\uc740 \ub8e8\ud504 \uc548\ucabd \ubc94\uc704\uc5d0 \uc788\uc5b4\uc694.","id":1,"options":["`0 1 2` \uadf8\ub9ac\uace0 `0 1 2`","`0 1 2` \uadf8\ub9ac\uace0 `3 3 3`","`3 3 3` \uadf8\ub9ac\uace0 `0 1 2`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());","codeLanguage":"javascript","explanation":"`diameter`\uc758 \uac12\uc740 \uc815\uaddc \ud568\uc218\uc9c0\ub9cc, `perimeter`\uc758 \uac12\uc740 \ud654\uc0b4\ud45c \ud568\uc218\ub77c\ub294 \uc810\uc744 \uc720\uc758\ud558\uc138\uc694.\\n\\n\ud654\uc0b4\ud45c \ud568\uc218\uc5d0\uc11c, `this` \ud0a4\uc6cc\ub4dc\ub294 \ud1b5\uc0c1\uc801\uc778 \ud568\uc218\uc640\ub294 \ub2e4\ub974\uac8c \ud604\uc7ac \uc8fc\uc704\uc758 \ubc94\uc704\ub97c \ucc38\uc870\ud574\uc694! \uc774\uac83\uc740 `perimeter`\ub97c \ubd80\ub974\uba74, shape \uac1d\uccb4\uac00 \uc544\ub2cc \uadf8 \uc8fc\uc704\uc758 \ubc94\uc704(\uc608\ub97c \ub4e4\uba74 window)\ub97c \ucc38\uc870\ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud574\uc694.\\n\\n\uadf8 \uac1d\uccb4\uc5d0\ub294 `radius`\ub77c\ub294 \uac12\uc740 \uc5c6\uae30 \ub54c\ubb38\uc5d0 `undefined`\ub97c \ub9ac\ud134\ud574\uc694.","id":2,"options":["`20` \uadf8\ub9ac\uace0 `62.83185307179586`","`20` \uadf8\ub9ac\uace0 `NaN`","`20` \uadf8\ub9ac\uace0 `63`","`NaN` \uadf8\ub9ac\uace0 `63`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\ub2e8\ud56d \ub354\ud558\uae30\ub294 \ud53c\uc5f0\uc0b0\uc790\ub97c \uc22b\uc790\ub85c \ubcc0\ud658\ud558\ub824 \uc2dc\ub3c4\ud574\uc694. `true`\ub294 `1`\uc774\uace0, `false`\ub294 `0`\uc774\uc5d0\uc694.\\n\\n\ubb38\uc790\uc5f4 `\'Lydia\'`\ub294 \ucc38 \uac19\uc740 \uac12\uc774\uc5d0\uc694. \uc2e4\uc81c\ub85c\ub294, \\"\uc774 \ucc38 \uac19\uc740 \uac12\uc774 \uac70\uc9d3 \uac19\uc740 \uac12\uc778\uac00?\\"\ub97c \ubb3c\uc5b4\ubcf4\uace0 \uc788\uc5b4\uc694. \uc774\uac83\uc740 `false`\ub97c \ub9ac\ud134\ud574\uc694.","id":3,"options":["`1` \uadf8\ub9ac\uace0 `false`","`false` \uadf8\ub9ac\uace0 `NaN`","`false` \uadf8\ub9ac\uace0 `false`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"JavaScript\uc5d0\uc11c, \ubaa8\ub4e0 \uac1d\uccb4 \ud0a4\ub294 \ubb38\uc790\uc5f4\uc774\uc5d0\uc694 (\uc2ec\ubcfc\uc774 \uc544\ub2cc \ud55c). \ube44\ub85d \uadf8\uac83\uc744 \ubb38\uc790\uc5f4 _\ud615_ \uc73c\ub85c \uc785\ub825\ud558\uc9c0 \uc54a\uc544\ub3c4, \ud56d\uc0c1 \ub0b4\ubd80\uc801\uc73c\ub85c \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ub3fc\uc694.\\n\\nJavaScript\ub294 \ubb38\uc7a5\uc744 \ud574\uc11d(\ub610\ub294 \ubc15\uc2a4 \ud574\uc81c)\ud574\uc694. \ub300\uad04\ud638 \ud45c\uae30\ub97c \uc0ac\uc6a9\ud558\uba74, \uccab \ubc88\uc9f8 \uc5f4\ub9b0 \ub300\uad04\ud638 `[`\ub97c \ubcf4\uace0 \ub2eb\ud78c \ub300\uad04\ud638 `]`\ub97c \ucc3e\uc744 \ub54c\uae4c\uc9c0 \uc9c4\ud589\ud574\uc694. \uadf8\ub54c\uc5d0\ub9cc, \uadf8 \ubb38\uc7a5\uc744 \ud3c9\uac00\ud560 \uac70\uc608\uc694.\\n\\n`mouse[bird.size]`: \uba3c\uc800 `\\"small\\"`\uc778 `bird.size`\ub97c \ud3c9\uac00\ud574\uc694. `mouse[\\"small\\"]` \uc740 `true`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n\uadf8\ub7ec\ub098, \ub2f7 \ud45c\uae30\ubc95\uc5d0\uc11c, \uc774\uac83\uc740 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc544\uc694, `mouse`\ub294 `bird`\ub77c\uace0 \ubd88\ub9ac\ub294 \ud0a4\ub97c \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\uc544\uc694. \uc989, `mouse.bird`\ub294 `undefined`\ub97c \uc758\ubbf8\ud574\uc694. \uadf8 \ud6c4, \ub2f7 \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud574 `size`\ub97c \ubb3c\uc5b4\ubd10\uc694. `mouse.bird.size`. `mouse.bird`\ub294 `undefined`\ub85c, \uc2e4\uc81c\ub85c\ub294 `undefined.size`\ub97c \ubb3c\uc5b4\ubcf4\uace0 \uc788\uc5b4\uc694. \uc774\uac83\uc740 \uc720\ud6a8\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0, `Cannot read property \\"size\\" of undefined`\uc640 \ube44\uc2b7\ud55c \uc5d0\ub7ec\ub97c \ub358\uc9c8 \uac70\uc608\uc694.","id":4,"options":["`mouse.bird.size` \ub294 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc544\uc694","`mouse[bird.size]` \ub294 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc544\uc694","`mouse[bird[\\"size\\"]]` \ub294 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc544\uc694","\uc774 \ubaa8\ub4e0 \uac83\ub4e4\uc740 \uc720\ud6a8\ud574\uc694."],"question":"\uc815\ub2f5\uc740 \uc5b4\ub290 \uac83\uc77c\uae4c\uc694?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"JavaScript\uc5d0\uc11c, \ubaa8\ub4e0 \uac1d\uccb4\ub294 \uc11c\ub85c \ub3d9\uc77c\ud558\uac8c \uc124\uc815\ud558\uba74 _\ucc38\uc870_ \uc5d0 \ub530\ub77c \uc0c1\ud638\uc791\uc6a9\ud574\uc694.\\n\\n\uc6b0\uc120 \ubcc0\uc218 `c`\ub294 \uac1d\uccb4\uc5d0 \ub300\ud55c \uac12\uc744 \uc720\uc9c0\ud574\uc694. \uadf8 \ud6c4, `c`\uc640 \ub3d9\uc77c\ud55c \uac1d\uccb4 \ucc38\uc870\ub97c `d`\uc5d0 \ud560\ub2f9\ud574\uc694.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n\ud55c \uac1c\uc758 \uac1d\uccb4\ub97c \ubcc0\uacbd\ud558\uba74, \uadf8\uac83\ub4e4 \ubaa8\ub450 \ubcc0\uacbd\ud574\uc694.","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()`\ub294, \ub0b4\uc7a5 \ud568\uc218 \uc0dd\uc131\uc790\uc608\uc694. \uc22b\uc790\ucc98\ub7fc \ubcf4\uc774\uc9c0\ub9cc, \uc2e4\uc81c\ub85c\ub294 \uc22b\uc790\uac00 \uc544\ub2c8\uc5d0\uc694: \ub9ce\uc740 \ucd94\uac00 \ud2b9\uc131\uc774 \uc788\uace0 \uadf8\uac83\uc740 \uac1d\uccb4\uc608\uc694.\\n\\n`==`\uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c, \uadf8\uac74 \uac19\uc740 _\uac12_ \uc744 \uac00\uc84c\ub294\uc9c0 \uc5ec\ubd80\ub9cc \ud655\uc778\ud574\uc694. \uadf8\uac83\ub4e4\uc740 \ubaa8\ub450`3`\uc758 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\ubbc0\ub85c, `true`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n\uadf8\ub7ec\ub098, `===`\uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c, \uac12 _\uacfc_ \ud615 \ub458 \ub2e4 \uac19\uc544\uc57c \ud574\uc694. \uc774\uac74 \uc544\ub2c8\uc5d0\uc694: `new Number()`\ub294 \uc22b\uc790\uac00 \uc544\ub2c8\uc5d0\uc694. **\uac1d\uccb4**\uc5d0\uc694. \uadf8\ub798\uc11c \ub458 \ub2e4 `false`\ub97c \ub9ac\ud134\ud574\uc694.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nconsole.log(freddie.colorChange(\\"orange\\"));","codeLanguage":"javascript","explanation":"`colorChange`\ud568\uc218\ub294 \uc815\uc801\uc774\uc5d0\uc694. \uc815\uc801 \uba54\uc18c\ub4dc\ub294 \uadf8\uac83\ub4e4\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\ub294 \uc0dd\uc131\uc790 \uc0c1\uc5d0\uc11c\ub9cc \uc0b4\uc544\uc788\ub3c4\ub85d \uc124\uacc4\ub418\uc5b4 \uc788\uc5b4, \uc5b4\ub5a4 \uc790\uc2dd\ub4e4\ub3c4 \uc0c1\uc18d\ubc1b\uc744 \uc218 \uc5c6\uc5b4\uc694. `freddie`\ub294 \uc790\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0, \uc774 \ud568\uc218\ub294 \uc0c1\uc18d\ub418\uc9c0 \uc54a\uace0, `freddie`\uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub294 \uc774\uc6a9\ud560 \uc218 \uc5c6\uc5b4\uc694: `TypeError`\uac00 \ub358\uc838\uc838\uc694.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"let greeting; // Typo!\\ngreetign = {};\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"\uc5ed \uac1d\uccb4\uc5d0 \ube48 \uac1d\uccb4\ub97c \ubc29\uae08 \ub9cc\ub4e4\uc5c8\uae30 \ub54c\ubb38\uc5d0, \uac1d\uccb4\ub294 \ucd9c\ub825\ub3fc\uc694. `greeting`\uc744 `greettign`\uc73c\ub85c \uc798\ubabb \uc785\ub825\ud588\uc744 \uacbd\uc6b0, JS \uc778\ud130\ud504\ub9ac\ud130\ub294 \uc2e4\uc81c\ub85c \uc774\uac83\uc744 `global.greettign = {}` (\ub610\ub294 \ube0c\ub77c\uc6b0\uc800\uc758 `window.greetign = {}`) \ub77c\uace0 \uac04\uc8fc\ud574\uc694.\\n\\n\uc774\uac83\uc744 \ud53c\ud558\uae30 \uc704\ud574\uc11c, `\\"use strict\\"`\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5b4\uc694. \uc774\ub807\uac8c \ud558\uba74 \ubcc0\uc218\ub97c \uc5b4\ub5a4 \uac83\uacfc \ub3d9\uc77c\ud558\uac8c \uc124\uc815\ud558\uae30 \uc804\uc5d0 \ubcc0\uc218\ub97c \uc120\uc5b8\ud588\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc5b4\uc694.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"\ud568\uc218\ub294 \uac1d\uccb4\uc774\uae30 \ub54c\ubb38\uc5d0, \uc774\uac74 JavaScript\uc5d0\uc11c\ub294 \uac00\ub2a5\ud574\uc694! (\uc708\uc2dc\ud615 \uc774\uc678\ub294 \ubaa8\ub450 \uac1d\uccb4)\\n\\n\ud568\uc218\ub294 \ud2b9\ubcc4\ud55c \uc885\ub958\uc758 \uac1d\uccb4\uc608\uc694. \ub2f9\uc2e0\uc774 \uc4f4 \ucf54\ub4dc\ub294 \uc2e4\uc81c \ud568\uc218\uac00 \uc544\ub2c8\uc5d0\uc694. \ud568\uc218\ub294 \uc18d\uc131\uc744 \uac00\uc9c4 \uac1d\uccb4\uc608\uc694. \uc774 \uc18d\uc131\uc740 \ud638\ucd9c\uc774 \uac00\ub2a5\ud574\uc694.","id":9,"options":["\ubcc4\uc77c \uc5c6\uc5b4\uc694, \uc774\uac74 \uc644\uc804\ud788 \uad1c\ucc2e\uc544\uc694!","`SyntaxError` \uc774 \ubc29\ubc95\uc73c\ub85c \ud568\uc218\uc5d0 \uc18d\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc5c6\uc5b4\uc694.","`\\"Woof\\"`\uc774 \ucd9c\ub825\ub3fc\uc694.","`ReferenceError`"],"question":"\uc774\ub807\uac8c \ud558\uba74 \ubb34\uc2a8 \uc77c\uc774 \uc0dd\uae38\uae4c\uc694?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"\uc0dd\uc131\uc790\uc5d0\ub294 \ubcf4\ud1b5\uc758 \uac1d\uccb4\ucc98\ub7fc \uc18d\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc5c6\uc5b4\uc694. \ud55c \ubc88\uc5d0 \ubaa8\ub4e0 \uac1d\uccb4\uc5d0 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \uc2f6\ub2e4\uba74, \ud504\ub85c\ud1a0\ud0c0\uc785\uc744 \uc0ac\uc6a9\ud574\uc57c \ud574\uc694. \uadf8\ub798\uc11c \uc774 \uacbd\uc6b0\uc5d0,\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\n`member.getFullName()`\uc740 \uc791\ub3d9\ud574\uc694. \uc774\uac83\uc740 \uc65c \uc720\uc775\ud560\uae4c\uc694? \uc774 \uba54\uc18c\ub4dc\ub97c \uc0dd\uc131\uc790 \uc790\uccb4\uc5d0 \ucd94\uac00\ud588\ub2e4\uace0 \ud560\uac8c\uc694. \uc544\ub9c8\ub3c4 \ubaa8\ub4e0 `Person` \uc778\uc2a4\ud134\uc2a4\ub294 \uc774 \uba54\uc18c\ub4dc\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uc5b4\uc694. \uadf8 \uacbd\uc6b0 \uadf8\ub4e4\uc740 \uacc4\uc18d\ud574\uc11c \uc18d\uc131\uc744 \uac16\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, \uac01\uac01\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc704\ud55c \uba54\ubaa8\ub9ac \uacf5\uac04\uc744 \uc18c\ube44\ud558\uac8c \ub418\uc5b4, \ub9ce\uc740 \uba54\ubaa8\ub9ac \uacf5\uac04\uc744 \ub0ad\ube44\ud558\uac8c \ub420 \uac70\uc608\uc694. \ub300\uc2e0\uc5d0, \ud504\ub85c\ud1a0\ud0c0\uc785\uc744 \ucd94\uac00\ud558\ub294 \uac83\ub9cc\uc73c\ub85c, \uba54\ubaa8\ub9ac\uc758 \ud55c \uc9c0\uc810\uc744 \uac00\uc9c0\uc9c0\ub9cc, \ubaa8\ub4e0 \uac83\ub4e4\uc740 \uadf8\uac83\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc694.","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"`sarah`\uc5d0\uac8c `new` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\uc5b4\uc694. `new`\ub97c \uc0ac\uc6a9\ud55c \uacbd\uc6b0, \uc774\uac83\uc740 \uc6b0\ub9ac\uac00 \ub9cc\ub4e0 \uc0c8\ub85c\uc6b4 \ube48 \uac1d\uccb4\ub97c \ucc38\uc870\ud574\uc694. \uadf8\ub7ec\ub098, `new`\ub97c \ucd94\uac00\ud558\uc9c0 \uc54a\uc73c\uba74 **\uc804\uc5ed\ubcc0\uc218**\ub97c \ucc38\uc870\ud574\uc694!\\n\\n`this.firstName`\uc740 `\\"Sarah\\"`\uc774\uace0, `this.lastName`\uc740 `\\"Smith\\"`\uc774\ub9ac\uace0 \ub9d0\ud588\uc5c8\uc5b4\uc694. (\uadf8\ub807\uc9c0\ub9cc) \uc6b0\ub9ac\ub294 \uc2e4\uc81c\ub85c \ud55c \uc77c\uc740 `global.firstName = \'Sarah\'` \uadf8\ub9ac\uace0 `global.lastName = \'Smith\'`\ub97c \uc815\uc758\ud558\ub294 \uac83\uc774\uc5d0\uc694. `sarah` \uc790\uccb4\ub294 `undefined`\ub85c \ub0a8\uc544\uc788\uc5b4\uc694. \ub530\ub77c\uc11c `Person`\ud568\uc218\uc758 \uac12\uc744 \ub9ac\ud134\ud558\uc9c0 \uc54a\uc544\uc694.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \uadf8\ub9ac\uace0 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \uadf8\ub9ac\uace0 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \uadf8\ub9ac\uace0 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \uadf8\ub9ac\uace0 `ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"explanation":"**capturing** \ub2e8\uacc4 \ub3d9\uc548\uc5d0, \uc774\ubca4\ud2b8\ub294 \uc870\uc0c1 \uc694\uc18c\ub97c \uac70\uccd0 \ubaa9\ud45c \uc694\uc18c\uae4c\uc9c0 \ub0b4\ub824\uac00\uc694. \uadf8\ub7f0 \ub2e4\uc74c **target** \uc694\uc18c\uc5d0 \ub3c4\ub2ec\ud558\uace0, **bubbling**\uc774 \uc2dc\uc791\ub3fc\uc694.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\uc774\ubca4\ud2b8 \uc804\ub2ec\uc758 3\ub2e8\uacc4\ub294 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":1,"explanation":"**\uae30\ubcf8 \uac1d\uccb4**\ub97c \uc81c\uc678\ud55c, \ubaa8\ub4e0 \uac1d\uccb4\ub294 \ud504\ub85c\ud1a0\ud0c0\uc785\uc744 \uac00\uc838\uc694. \uae30\ubcf8 \uac1d\uccb4\ub294 \uc0ac\uc6a9\uc790\uc5d0 \uc758\ud574 \ub9cc\ub4e4\uc5b4\uc9c0\uac70\ub098 `new` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uc5b4\uc838\uc694. \uae30\ubcf8 \uac1d\uccb4\ub294 `.toString`\uacfc \uac19\uc740 \uba87 \uac1c\uc758 \uba54\uc18c\ub4dc\uc640 \uc18d\uc131\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc694. \uc774\uac83\uc774 \ub0b4\uc7a5 JavaScript \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc774\uc720\uc8e0! \uc774\ub7ec\ud55c \ubaa8\ub4e0 \uba54\uc18c\ub4dc\ub294 \ud504\ub85c\ud1a0\ud0c0\uc785\uc5d0\uc11c \uc774\uc6a9\ud560 \uc218 \uc788\uc5b4\uc694. JavaScript\uac00 \ub2f9\uc2e0\uc758 \uac1d\uccb4\ub97c \uc9c1\uc811 \ucc3e\uc744 \uc218 \uc5c6\ub354\ub77c\ub3c4, \ub2f9\uc2e0\uc774 \uc811\uadfc\ud560 \uc218 \uc788\ub3c4\ub85d \ud504\ub85c\ud1a0\ud0c0\uc785 \uccb4\uc778\uc73c\ub85c \ub0b4\ub824\uac00\uc11c \ucc3e\uc744 \uac70\uc5d0\uc694.","id":13,"options":["true","false"],"question":"\ubaa8\ub4e0 \uac1d\uccb4\ub294 \ud504\ub85c\ud1a0 \ud0c0\uc785\uc744 \uac00\uc838\uc694."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript\ub294 **\ub3d9\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uc5b8\uc5b4**\uc5d0\uc694: \ud2b9\uc815 \ubcc0\uc218\uac00 \uc5b4\ub5a4 \ud615\uc778\uc9c0 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc544\uc694. \ubcc0\uc218\ub294 \ub2f9\uc2e0\uc774 \ubaa8\ub974\ub294 \uc0ac\uc774\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub2e4\ub978 \ud615\uc73c\ub85c \ubcc0\ud658\ub420 \uc218 \uc788\ub294\ub370, \uc774\uac78 _\uc554\ubb35\uc801 \ud615 \ubcc0\ud658_ \uc774\ub77c\uace0 \ubd88\ub7ec\uc694. **Coercion**\uc740 \ud558\ub098\uc758 \ud615\uc744 \ub2e4\ub978 \ud615\uc73c\ub85c \ubcc0\ud658\ud574\uc694.\\n\\n\uc774 \uc608\uc81c\uc5d0\uc11c, \ud568\uc218\uac00 \uc774\ud574\ud558\uace0 \uac12\uc744 \ub9ac\ud134\ud558\ub3c4\ub85d, JavaScript\ub294 \uc22b\uc790 `1`\uc744 \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud574\uc694. \uc218\ud615 (`1`)\uc640 \ubb38\uc790\uc5f4\ud615 (`\'2\'`)\uc758 \ucd94\uac00 \uc911\uc5d0\ub294, \uc22b\uc790\ub294 \ubb38\uc790\uc5f4\ub85c \ucde8\uae09\ud574\uc694. `\\"Hello\\" + \\"World\\"`\ucc98\ub7fc \ubb38\uc790\uc5f4\uc744 \uc5f0\uacb0\ud560 \uc218 \uc788\uc5b4\uc694, \ub530\ub77c\uc11c \uc5ec\uae30 `\\"1\\" + \\"2\\"`\ub294 `\\"12\\"`\uc744 \ub9ac\ud134\ud558\ub294 \uc77c\uc774 \ubc1c\uc0dd\ud574\uc694.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"**\uc811\ubbf8\uc0ac** \ub2e8\ud56d \uc5f0\uc0b0\uc790 `++`:\\n\\n1. \uac12 \ub9ac\ud134 (\uc774\uac83\uc740 `0`\uc744 \ub9ac\ud134\ud574\uc694)\\n2. \uac12 \uc99d\uac00 (number\ub294 \uc9c0\uae08 `1`\uc774\uc5d0\uc694)\\n\\n**\uc811\ub450\uc0ac** \ub2e8\ud56d \uc5f0\uc0b0\uc790 `++`:\\n\\n1. \uac12 \uc99d\uac00 (number\ub294 \uc9c0\uae08 `2`\uc774\uc5d0\uc694)\\n2. \uac12 \ub9ac\ud134 (\uc774\uac83\uc740 `2`\uc744 \ub9ac\ud134\ud574\uc694)\\n\\n\uc774\uac74 `0 2 2`\ub97c \ub9ac\ud134\ud574\uc694.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"\ud0dc\uadf8\ub4dc \ud15c\ud50c\ub9bf \ub9ac\ud130\ub7f4\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uccab \ubc88\uc9f8 \uc778\uc218\uc758 \uac12\uc740 \ud56d\uc0c1 \ubb38\uc790\uc5f4 \uac12\uc758 \ubc30\uc5f4\uc774\uc5d0\uc694. \ub098\uba38\uc9c0 \uc778\uc218\ub294 \uc2dd\uc744 \ud1b5\uacfc\ud55c \uac12\uc744 \uc5bb\uc5b4\uc694.","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"\ub3d9\ub4f1\uc131\uc744 \ud14c\uc2a4\ud2b8\ud560 \ub54c, \uc6d0\uc2dc\ud615\uc740 \uadf8 _\uac12_ \uc5d0 \ub530\ub77c \ube44\uad50\ub418\uba70, \uac1d\uccb4\ub294 \uadf8\ub4e4\uc758 _\ucc38\uc870_ \uc5d0 \ub530\ub77c \ube44\uad50\ub3fc\uc694. JavaScript \uac1d\uccb4\uac00 \uba54\ubaa8\ub9ac \ub0b4\uc758 \uac19\uc740 \uc7a5\uc18c\ub97c \ucc38\uc870\ud558\uace0 \uc788\ub294\uc9c0\ub97c \ud655\uc778\ud574\uc694.\\n\\n\ube44\uad50\ud558\uace0 \uc788\ub294 \ub450 \uac1c\uc758 \uac1d\uccb4\ub294 \uadf8\uac83\uc774 \uc5c6\uc5b4\uc694: \ud30c\ub77c\ubbf8\ud130\ub85c \uc804\ub2ec\ub41c \uac1d\uccb4\uc640 \ub3d9\ub4f1\uc131\uc744 \ud655\uc778\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud55c \uac1d\uccb4\ub294 \uba54\ubaa8\ub9ac \ub0b4\uc758 \ub2e4\ub978 \uc7a5\uc18c\ub97c \ucc38\uc870\ud574\uc694.\\n\\n\uc774\uac83\uc774 `{ age: 18 } === { age: 18 }` \uadf8\ub9ac\uace0 `{ age: 18 } == { age: 18 }` \ub450 \uac1c \ub2e4 `false`\ub97c \ub9ac\ud134\ud558\ub294 \uc774\uc720\uc8e0.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"rest \ud30c\ub77c\ubbf8\ud130 (`...args`.)\ub294 \ubaa8\ub4e0 \ub0a8\uc544\uc788\ub294 \uc778\uc218\ub4e4\uc744 \ud558\ub098\uc758 \ubc30\uc5f4\ub85c \\"\uc9d1\ud569\\" \ud574\uc694. \ubc30\uc5f4\uc740 \uac1d\uccb4\uc774\ubbc0\ub85c, `typeof args`\ub294 `\\"object\\"`\ub97c \ub9ac\ud134\ud574\uc694.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"`\\"use strict\\"`\uc744 \uc0ac\uc6a9\ud558\uba74, \uc2e4\uc218\ub85c \uc804\uc5ed \ubcc0\uc218\ub97c \uc120\uc5b8\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\uc5b4\uc694. `age`\ub77c\ub294 \ubcc0\uc218\ub97c \uc120\uc5b8\ud55c \uc801\uc774 \uc804\ud600 \uc5c6\uace0, `\\"use strict\\"`\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\ubbc0\ub85c, \ucc38\uc870 \uc5d0\ub7ec\ub97c \ub358\uc9c0\uac8c \ub420 \uac70\uc608\uc694. \ub9cc\uc57d `\\"use strict\\"`\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74, \uc774\uac74 \uc791\ub3d9\ud560 \uac70\uc608\uc694, `age` \uc18d\uc131\uc774 \uc804\uc5ed \uac1d\uccb4\uc5d0 \ucd94\uac00\ub41c \uac83\uc774\uae30 \ub54c\ubb38\uc774\uc8e0.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` \ubb38\uc790\uc5f4\ub85c\uc11c \ud1b5\uacfc\ub41c \ucf54\ub4dc\ub97c \ud3c9\uac00\ud574\uc694. \uc774 \uacbd\uc6b0\uc640 \uac19\uc774 \ub9cc\uc57d \uadf8\uac83\uc774 \ud45c\ud604\uc2dd\uc774\ub77c\uba74, \ud45c\ud604 \uc2dd\uc744 \ud3c9\uac00\ud574\uc694. \ud45c\ud604 \uc2dd\uc740 `10 * 10 + 5`\uc774\uc5d0\uc694. \uc774\uac83\uc740 \uc22b\uc790 `105`\ub97c \ub9ac\ud134\ud574\uc694.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"`sum`\uc758 \uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"`sessionStorage`\uc5d0 \uc800\uc7a5\ub41c \ub370\uc774\ud130\ub294 _\ud0ed_ \uc744 \ub2eb\uc740 \ud6c4\uc5d0 \uc0ad\uc81c\ub3fc\uc694.\\n\\n\ub9cc\uc57d `localStorage`\ub97c \uc0ac\uc6a9\ud588\ub2e4\uba74, \uc608\ub97c \ub4e4\uc5b4 `localStorage.clear()`\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294 \ud55c, \ub370\uc774\ud130\ub294 \uc601\uc6d0\ud560 \uac70\uc608\uc694.","id":21,"options":["\uc601\uc6d0\ud788, \ub370\uc774\ud130\ub294 \uc0ac\ub77c\uc9c0\uc9c0 \uc54a\uc544\uc694.","\uc0ac\uc6a9\uc790\uac00 \ud0ed\uc744 \ub2eb\uc744 \ub54c.","\uc0ac\uc6a9\uc790\uac00 \ud0ed\ubfd0\ub9cc \uc544\ub2c8\ub77c, \ube0c\ub77c\uc6b0\uc800 \uc804\uccb4\ub97c \ub2eb\uc744 \ub54c.","\uc0ac\uc6a9\uc790\uac00 \uc790\uc2e0\uc758 \ucef4\ud4e8\ud130\ub97c \uc885\ub8cc\uc2dc\ucf30\uc744 \ub54c."],"question":"cool_secret\uc5d0 \uba87 \uc2dc\uac04\uc774\ub098 \uc811\uadfc\uc774 \uac00\ub2a5\ud560\uae4c\uc694?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"`var` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \uac19\uc740 \uc774\ub984\uc73c\ub85c \ubcf5\uc218\uc758 \ubcc0\uc218\ub97c \uc120\uc5b8\ud560 \uc218 \uc788\uc5b4\uc694. \ubcc0\uc218\ub294 \ucd5c\uc2e0\uc758 \uac12\uc744 \uc720\uc9c0\ud574\uc694.\\n\\n\ube14\ub85d \uc2a4\ucf54\ud504\uc758 `let` \ub610\ub294 `const`\uc5d0\uc11c\ub294 \ud560 \uc218 \uc5c6\uc5b4\uc694.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"\ubaa8\ub4e0 \uac1d\uccb4 \ud0a4\ub294(\uc2ec\ubcfc \uc81c\uc678) \ubb38\uc790\uc5f4\ub85c \uc9c1\uc811 \uc785\ub825\ud558\uc9c0 \uc54a\uc544\ub3c4, \ub0b4\ubd80\uc801\uc73c\ub85c\ub294 \ubb38\uc790\uc5f4\uc774\uc5d0\uc694. \uc774\uac83\uc774 `obj.hasOwnProperty(\'1\')`\ub3c4 true\ub97c \ub9ac\ud134\ud558\ub294 \uc774\uc720\uc8e0.\\n\\nset\uc5d0\uc11c\ub294 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc544\uc694. set\uc5d0\ub294 `\'1\'`\uc774 \uc5c6\uc5b4\uc694: `set.has(\'1\')`\ub294 `false`\ub97c \ub9ac\ud134\ud574\uc694. \uadf8\uac83\uc740 \uc218\ud615\uc778 `1`\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4, `set.has(1)`\ub294 `true`\ub97c \ub9ac\ud134\ud574\uc694.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"\uac19\uc740 \uc774\ub984\uc758 \ud0a4\ub97c \ub450 \uac1c \uac00\uc9c0\uace0 \uc788\ub2e4\uba74, \uc5ec\uc804\ud788 \uccab \ubc88\uc9f8 \uc704\uce58\uc5d0 \uc788\uc9c0\ub9cc, \ub9c8\uc9c0\ub9c9\uc5d0 \uc9c0\uc815\ub41c \uac12\uc73c\ub85c \ub300\uccb4\ub420 \uac70\uc608\uc694.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"explanation":"\uae30\ubcf8\uc801\uc778 \uc2e4\ud589 \ucf58\ud14d\uc2a4\ud2b8\ub294 \uc804\uc5ed \uc2e4\ud589 \ubb38\uc7a5\uc774\uc5d0\uc694: \ub2f9\uc2e0\uc758 \ucf54\ub4dc \ubaa8\ub4e0 \uacf3\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc694.","id":25,"options":["true","false","\uacbd\uc6b0\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc694"],"question":"JavaScript\uc758 global execution context\ub294 \ub450\uac1c\ub97c \uc791\uc131\ud574\uc694. : \uc804\uc5ed\uac1d\uccb4\uc640 \\"this\\" \ud0a4\uc6cc\ub4dc\uc5d0\uc694."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"`continue` \ud45c\ud604 \uc2dd\uc740 \ud2b9\uc815 \uc870\uac74\uc774 `true`\ub97c \ub9ac\ud134\ud558\uba74 \ubc18\ubcf5 \ucc98\ub9ac\ub97c \uac74\ub108\ub6f0\uc5b4\uc694.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String`\uc740 \ub0b4\uc7a5 \uc0dd\uc131\uc790\ub85c \uc18d\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc5b4\uc694. \ub2e8\uc9c0 \ud504\ub85c\ud1a0\ud0c0\uc785\uc774\ub77c\ub294 \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud588\uc5b4\uc694. \uc6d0\uc2dc\ud615 \ubb38\uc790\uc5f4\uc740 \ubb38\uc790\uc5f4 \ud504\ub85c\ud1a0\ud0c0\uc785 \ud568\uc218\uc5d0 \uc758\ud574 \uc0dd\uc131\ub41c \ubb38\uc790\uc5f4 \uac1d\uccb4\ub85c \uc790\ub3d9 \ubcc0\ud658\ub3fc\uc694. \uadf8\ub798\uc11c, \ubaa8\ub4e0 \ubb38\uc790\uc5f4(\ubb38\uc790\uc5f4 \uac1d\uccb4)\uc740 \uadf8 \uba54\uc18c\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc694!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"\uac1d\uccb4 \ud0a4\ub294 \uc790\ub3d9\uc73c\ub85c \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ub3fc\uc694. \uac1d\uccb4 `a`\uc758 \ud0a4 \uac12\uc73c\ub85c `123`\uc744 \uc138\ud305\ud558\ub824\uace0 \ud574\uc694.\\n\\n\uadf8\ub7ec\ub098, \uac1d\uccb4\ub97c \ubb38\uc790\uc5f4\ud654 \ud558\uba74 `\\"[object Object]\\"`\uac00 \ub3fc\uc694. \uadf8\ub798\uc11c \uc5ec\uae30\uc11c \ub9d0\ud558\uace0\uc790 \ud558\ub294 \uac74 `a[\\"object Object\\"] = 123`\uc774\ub77c\ub294 \uac70\uc608\uc694. \uadf8 \ud6c4, \uac19\uc740 \uc77c\uc744 \ub2e4\uc2dc \uc2dc\ub3c4\ud574\uc694. `c`\ub294 \uc554\ubb35\uc801\uc73c\ub85c \ubb38\uc790\uc5f4\ud654 \ud55c \ub2e4\ub978 \uac1d\uccb4\uc5d0\uc694. \uadf8\ub798\uc11c `a[\\"object Object\\"] = 456`\uc774 \ub3fc\uc694.\\n\\n\uadf8 \ud6c4, `a[b]`\ub294 \ucd9c\ub825\ud558\uba74 \uc2e4\uc81c\ub85c\ub294 `a[\\"object Object\\"]`\uc5d0\uc694. \ub2e8\uc9c0 `456`\uc744 \uc124\uc815\ud588\uae30 \ub54c\ubb38\uc5d0, `456`\uc744 \ub9ac\ud134\ud574\uc694.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"\ucc98\uc74c\uc5d0 `setTimeout`\ud568\uc218\ub97c \ud638\ucd9c\ud588\uc5b4\uc694. \uadf8\ub7ec\ub098 \uadf8\uac83\uc740 \ub9c8\uc9c0\ub9c9\uc5d0 \ucd9c\ub825\ub3fc\uc694.\\n\\n\ube0c\ub77c\uc6b0\uc800\uc5d0\ub294 \ub7f0\ud0c0\uc784 \uc5d4\uc9c4\ubfd0\ub9cc \uc544\ub2c8\ub77c `WebAPI`\ub77c\uace0 \ubd88\ub9ac\ub294 \uac83\ub3c4 \uc788\uae30 \ub54c\ubb38\uc774\uc5d0\uc694. `WebAPI`\ub294 `setTimeout`\ud568\uc218\ub97c \ucd5c\ucd08\uc5d0 \ubd80\uc5ec\ud558\ub294\ub370, DOM\uc744 \uc608\ub85c \ub4e4 \uc218 \uc788\uc5b4\uc694.\\n\\n_callback_ \uc774 WebAPI\uc5d0 \ud478\uc2dc\ub41c \ud6c4, `setTimeout`\ud568\uc218 \uc790\uccb4(callback\uc774 \uc544\ub2c8\uc5d0\uc694!)\ub294 stack\uc5d0 \uc0ac\ub77c\uc84c\uc5b4\uc694.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\uc9c0\uae08, `foo` \ub294 \ud638\ucd9c\ub418\uc5c8\uace0, `\\"First\\"`\ub294 \ucd9c\ub825\ub418\uc5c8\uc5b4\uc694.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo`\ub294 stack\uc5d0 \uc0ac\ub77c\uc9c0\uace0, `baz`\uac00 \ud638\ucd9c\ub418\uc5c8\uc5b4\uc694. `\\"Third\\"`\uac00 \ucd9c\ub825\ub418\uc5c8\uc5b4\uc694.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI\ub294 \uc900\ube44\uac00 \ub420 \ub54c\ub9c8\ub2e4 stack\uc5d0 \ud56d\ubaa9\uc744 \ucd94\uac00\ud560 \uc218 \uc5c6\uc5b4\uc694. \ub300\uc2e0\uc5d0, _queue_ \ub77c\uace0 \ubd88\ub9ac\ub294 \uac83\uc5d0 callback \ud568\uc218\ub97c \ud478\uc2dc\ud574\uc694.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\uc5ec\uae30\uc11c event loop\uac00 \uc791\ub3d9\ud558\uae30 \uc2dc\uc791\ud574\uc694. **event loop**\ub294 stack\uacfc task queue\ub97c \ubd10\uc694. stack\uc774 \ube44\uc5b4\uc788\ub2e4\uba74, queue\uc5d0 \uccab \ubc88\uc9f8\uc758 \uac83\uc744 \uac00\uc838\ub2e4\uac00 stack \uc704\ub85c \ud478\uc2dc\ud574\uc694.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar`\uac00 \ud638\ucd9c\ub418\uc5c8\uace0, `\\"Second\\"`\uac00 \ucd9c\ub825\ub418\uc5c8\uc73c\uba70, stack\uc5d0\uc11c \uc0ac\ub77c\uc84c\uc5b4\uc694.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\uac00\uc7a5 \uae4a\uc774 \uc911\ucca9\ub41c \uc694\uc18c\uac00 \uc774\ubca4\ud2b8\ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc774\ubca4\ud2b8 \ub300\uc0c1\uc774\uc5d0\uc694. `event.stopPropagation`\uc744 \ud1b5\ud574\uc11c \ubc84\ube14\ub9c1\uc744 \uc911\ub2e8\ud560 \uc218 \uc788\uc5b4\uc694.","id":30,"options":["\uc678\ubd80\uc758 `div`","\ub0b4\ubd80\uc758 `div`","`button`","\uc911\ucca9\ub41c \ubaa8\ub4e0 \uc694\uc18c\uc758 \ubc30\uc5f4"],"question":"\ubc84\ud2bc\uc744 \ud074\ub9ad\ud588\uc744\ub54c event.target\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"`p`\ub97c \ud074\ub9ad\ud558\uba74, 2\uac1c\uc758 \ub85c\uadf8\ub97c \ubcfc \uc218 \uc788\uc5b4\uc694: `p` \uadf8\ub9ac\uace0 `div`. \uc774\ubca4\ud2b8\uc758 \uc804\ud30c \uc911\uc5d0\ub294 3\ub2e8\uacc4\uac00 \uc788\uc5b4\uc694: \ucea1\ucc98\ub9c1, \ud0c0\uac9f, \ubc84\ube14\ub9c1. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \ubc84\ube14\ub9c1 \ub2e8\uacc4\uc5d0\uc11c \uc2dc\uc791\ub3fc\uc694. (`useCapture`\ub97c `true`\ub85c \uc124\uc815\ud558\uc9c0 \uc54a\ub294 \ud55c). \uac00\uc7a5 \uae4a\uac8c \uc911\ucca9\ub41c \uc694\uc18c\ub85c\ubd80\ud130 \ubc14\uae65\ucabd\uc73c\ub85c \ub098\uac00\uc694.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"p\ud0dc\uadf8\ub97c \ud074\ub9ad\ud558\uba74 \ub85c\uadf8\uc758 \ucd9c\ub825\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"\ub450 \uac1c \ubaa8\ub450, `this` \ud0a4\uc6cc\ub4dc\ub97c \ucc38\uc870\ud558\uace0\uc790 \ud558\ub294 \uac1d\uccb4\ub85c \ubcf4\ub0bc \uc218 \uc788\uc5b4\uc694. \uadf8\ub7ec\ub098, `.call`\uc740 _\uc989\uc2dc \uc2e4\ud589\ub3fc\uc694_!\\n\\n`.bind.`\ub294 \ud568\uc218\uc758 _\ubcf5\uc0ac\ubcf8_ \uc744 \ub9ac\ud134\ud558\uc9c0\ub9cc, \ubc14\uc778\ub529 \ucf58\ud14d\uc2a4\ud2b8\uc8e0! \uc774\uac74 \uc989\uc2dc \uc2e4\ud589\ub418\uc9c0 \uc54a\uc544\uc694.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"`sayHi`\ud568\uc218\ub294 \uc989\uc2dc \ud638\ucd9c \ud568\uc218(IIFE)\ub85c\uc11c \ub9ac\ud134\ub41c \uac12\uc744 \ub9ac\ud134\ud574\uc694. \uc774 \ud568\uc218\ub294 `0`\uc744 \ub9ac\ud134\ud558\uace0, \ud615\uc740 `\\"number\\"`\uc774\uc5d0\uc694.\\n\\n\ucc38\uace0: \ub2e8 7\uac1c\uc758 \ub0b4\uc7a5\ud615\uc774 \uc788\uc5b4\uc694: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol` \uadf8\ub9ac\uace0 `bigint`. `\\"function\\"`\uc740 \uac1d\uccb4\uc774\uae30 \ub54c\ubb38\uc5d0 \ud615\uc774 \uc544\ub2c8\ub77c `\\"object\\"`\ud615\uc774\uc5d0\uc694.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"\ub2e8 6\uac1c\uc758 \uac70\uc9d3 \uac19\uc740 \uac12\uc774 \uc788\uc5b4\uc694:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (\ube48 \ubb38\uc790\uc5f4)\\n- `false`\\n\\n`new Number` \uadf8\ub9ac\uace0 `new Boolean`\uacfc \uac19\uc740 \uc0dd\uc131\uc790 \ud568\uc218\ub294 \ucc38 \uac19\uc740 \uac12\uc774\uc5d0\uc694.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","\ubaa8\ub4e0 \uac12\uc740 \uac70\uc9d3"],"question":"\uc774 \uac12\ub4e4 \uc911 \uc5b4\ub290 \uac83\uc774 \uac70\uc9d3 \uac19\uc740 \uac12 \uc77c\uae4c\uc694?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` \uc740 `\\"number\\"`\ub97c \ub9ac\ud134\ud574\uc694.\\n`typeof \\"number\\"`\uc740 `\\"string\\"`\uc744 \ub9ac\ud134\ud574\uc694.","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"\ubc30\uc5f4\uc758 \uae38\uc774\ub97c \ucd08\uacfc\ud55c \uac12\uc744 \ubc30\uc5f4\uc758 \uc694\uc18c\ub85c \uc124\uc815\ud558\uace0\uc790 \ud560 \ub54c, JavaScript\ub294 \\"empty slots\\"\ub77c\uace0 \ubd88\ub9ac\ub294 \uac83\uc744 \uc0dd\uc131\ud574\uc694. \uc774\uac83\uc740 \uc2e4\uc81c\ub85c `undefined`\uc758 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\uc9c0\ub9cc, \ub2e4\uc74c\uacfc \uac19\uc740 \uac83\uc744 \ubcf4\uac8c \ub420 \uac70\uc608\uc694:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\ndepending on where you run it (it\'s different for every browser, node, etc.)\\n\uc2e4\ud589 \uc704\uce58\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc694 (\ube0c\ub77c\uc6b0\uc800, node \ub4f1\ub9c8\ub2e4 \ub2ec\ub77c\uc694.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"`catch`\ube14\ub85d\uc740 `x`\uc758 \uc778\uc218\ub97c \ubc1b\uc544\uc694. \uc774\uac83\uc740 \uc778\uc218\ub97c \uc804\ub2ec\ud560 \ub54c \ubcc0\uc218\ub85c\uc11c\uc758 `x`\uc640\ub294 \ub2ec\ub77c\uc694. \uc774 `x` \ubcc0\uc218\ub294 \ube14\ub85d-\uc2a4\ucf54\ud504\uc608\uc694.\\n\\n\ud6c4\uc5d0, \ube14\ub85d-\uc2a4\ucf54\ud504 \ubcc0\uc218\ub294 `1`\ub85c \uc124\uc815\ud558\uace0, \ubcc0\uc218 `y`\uc758 \uac12\uc744 \uc124\uc815\ud574\uc694. \uc5ec\uae30\uc11c, \ube14\ub85d-\uc2a4\ucf54\ud504\uc758 \ubcc0\uc218 `x`\ub97c \ucd9c\ub825\ud558\ub294\ub370, \uc774\uac83\uc740 `1`\uc774\uc5d0\uc694.\\n\\n`catch` \ube14\ub85d \ubc16\uc5d0\uc11c, `x`\ub294 \uc5ec\uc804\ud788 `undefined`\uc774\uace0 `y`\ub294 `2`\uc774\uc5d0\uc694. `catch` \ube14\ub85d \ubc16\uc5d0\uc11c `console.log(x)`\ub97c \ucd9c\ub825\ud558\uba74, `undefined`\ub97c \ub9ac\ud134\ud558\uace0. \uadf8\ub9ac\uace0 `y`\ub294 `2`\ub97c \ub9ac\ud134\ud574\uc694.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"explanation":"JavaScript\ub294 \uc6d0\uc2dc\ud615\uacfc \uac1d\uccb4\ub9cc \uac00\uc9c0\uace0 \uc788\uc5b4\uc694.\\n\\n\uc6d0\uc2dc\ud615\uc740 `boolean`, `null`, `undefined`, `bigint`, `number`, `string` \uadf8\ub9ac\uace0 `symbol`\uc774 \uc788\uc5b4\uc694.\\n\\n\uc6d0\uc2dc\ud615\uacfc \uac1d\uccb4\ub97c \uad6c\ubcc4\ud558\ub294 \ubc95\uc740 \uc6d0\uc2dc\ud615\uc5d0\ub294 \uc18d\uc131\uc774\ub098 \uba54\uc18c\ub4dc\uac00 \uc5c6\uc5b4\uc694. \uadf8\ub7ec\ub098 `\'foo\'.toUpperCase()`\ub294 `\'FOO\'`\ub85c \ud3c9\uac00\ub418\uc5b4, `TypeError`\uc758 \uacb0\uacfc\uac00 \ub418\uc9c0 \uc54a\uc544\uc694. \ubb38\uc790\uc5f4\uacfc \uac19\uc740 \uc6d0\uc2dc\ud615\uc774 \uc18d\uc131 \ub610\ub294 \uba54\uc18c\ub4dc\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud560 \ub54c, JavaScript\ub294 \ub798\ud37c \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc778 `String`\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc554\ubb35\uc801\uc73c\ub85c \uac10\uc2f8\uace0, \ud45c\ud604 \uc2dd\uc774 \ud3c9\uac00\ub41c \ud6c4 \uc989\uc2dc \ub798\ud37c\ub97c \ud3d0\uae30\ud558\uae30 \ub54c\ubb38\uc774\uc5d0\uc694. `null` \uadf8\ub9ac\uace0 `undefined`\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc6d0\uc2dc\ud615\uc740 \uc774\ub7ec\ud55c \ud589\ub3d9\uc744 \ud569\ub2c8\ub2e4.","id":38,"options":["primitive \ub610\ub294 object","function \ub610\ub294 object","\ud568\uc815 \ubb38\uc81c! objects\ub9cc","number \ub610\ub294 object"],"question":"JavaScript\uc758 \ubaa8\ub4e0 \uac83\uc740..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]`\uc740 \ucd08\uae43\uac12\uc774\uc5d0\uc694. \uc774\uac83\uc774 \ucd5c\ucd08\uc758 \uac12\uc73c\ub85c, \uc81c\uc77c \ucc98\uc74c\uc758 `acc`\uc758 \uac12\uc774\uc5d0\uc694. \ucc98\uc74c \ub77c\uc6b4\ub4dc \ub3d9\uc548\uc5d0 `acc`\ub294 `[1,2]`\uc774\uba70, `cur`\uc740 `[0, 1]`\uc774\uc5d0\uc694. \uadf8\uac83\ub4e4\uc744 \uc5f0\uacb0\ud558\uba74 \uacb0\uacfc\uc801\uc73c\ub85c `[1, 2, 0, 1]`\uc774 \ub3fc\uc694.\\n\\n\uadf8 \ud6c4, `[1, 2, 0, 1]`\uc740 `acc`\uc774\uace0, `[2, 3]`\uc740 `cur`\uc774 \uc5d0\uc694. \uadf8\uac83\ub4e4\uc744 \uc5f0\uacb0\ud558\uba74 `[1, 2, 0, 1, 2, 3]`\uc744 \uc5bb\uac8c \ub3fc\uc694.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null`\uc740 \uac70\uc9d3 \uac19\uc740 \uac12\uc774\uc5d0\uc694. `!null`\uc740 `true`\ub97c \ub9ac\ud134\ud574\uc694. `!true`\ub294 `false`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n`\\"\\"` \uc740 \uac70\uc9d3 \uac19\uc740 \uac12\uc774\uc5d0\uc694. `!\\"\\"`\uc740 `true`\ub97c \ub9ac\ud134\ud574\uc694. `!true`\ub294 `false`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n`1`\uc740 \ucc38 \uac19\uc740 \uac12\uc774\uc5d0\uc694. `!1`\uc740 `false`\ub97c \ub9ac\ud134\ud574\uc694. `!false`\ub294`true`\ub97c \ub9ac\ud134\ud574\uc694.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"\uc774\uac83\uc740 \uc720\ub2c8\ud06c\ud55c id\ub97c \ub9ac\ud134\ud574\uc694. \uc774 id\ub294 `clearInterval()` \ud568\uc218\ub85c \uac04\uaca9\uc744 \uc5c6\uc560\uae30 \uc704\ud574 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc5b4\uc694.","id":41,"options":["\uc720\ub2c8\ud06c\ud55c id","\uc9c0\uc815\ub41c \ubc00\ub9ac\ucd08","\ud1b5\uacfc\ub41c \ud568\uc218","`undefined`"],"question":"`setInterval` \uba54\uc18c\ub4dc\ub294 \ube0c\ub77c\uc6b0\uc800\uc5d0\uac8c \ubb34\uc5c7\uc744 \ub9ac\ud134 \ud560\uae4c\uc694?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"\ubb38\uc790\uc5f4\uc740 \ubc18\ubcf5 \uac00\ub2a5\ud55c \uac1d\uccb4\uc608\uc694. \uc2a4\ud504\ub808\ub4dc \uc5f0\uc0b0\uc790\ub294 \ubc18\ubcf5 \uac00\ub2a5\ud55c \uac1d\uccb4\uc758 \ubaa8\ub4e0 \ubb38\uc790\ub97c 1\uac1c\uc758 \uc694\uc18c\ub85c \ub9e4\ud551\ud574\uc694.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\uc774\uac83\uc740 \ubb34\uc5c7\uc744 \ub9ac\ud134\ud560\uae4c\uc694?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"\ubcf4\ud1b5\uc758 \ud568\uc218\ub294 \ud638\ucd9c \ud6c4\uc5d0 \uc911\ub2e8\ud560 \uc218 \uc5c6\uc5b4\uc694. \ud558\uc9c0\ub9cc, \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\ub294 \uc911\uac04\uc5d0 \\"\uba48\ucdc4\ub2e4\uac00\\", \ub098\uc911\uc5d0 \uc911\ub2e8\ub41c \ubd80\ubd84\ubd80\ud130 \uacc4\uc18d\ud560 \uc218 \uc788\uc5b4\uc694. \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\ub294 `yield` \ud0a4\uc6cc\ub4dc\ub97c \ub9cc\ub0a0 \ub54c\ub9c8\ub2e4, yield \ub4a4\uc5d0 \uc9c0\uc815\ub41c \uac12\uc744 \ub118\uaca8\uc918\uc694. \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\uc5d0\uc11c\ub294 \uac12\uc744 _\ub9ac\ud134_ \ud558\uc9c0 \uc54a\uace0, _\ub118\uaca8\uc900\ub2e4_ \ub294 \uac83\uc744 \uc720\uc758\ud558\uc138\uc694.\\n\\n\uc6b0\uc120, \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\uc5d0\uc11c `i`\ub97c `10`\uc73c\ub85c \ucd08\uae30\ud654\ud574\uc694. `next()` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574 \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\ub97c \ud638\ucd9c\ud574\uc694. \ucc98\uc74c\uc5d0 \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\ub97c \ud638\ucd9c\ud558\uba74, `i`\uc740 `10`\uc774\uc5d0\uc694. \uccab \ubc88\uc9f8 `yield` \ud0a4\uc6cc\ub4dc\ub97c \ub9cc\ub0ac\uc5b4\uc694: \uadf8\uac83\uc740 `i`\uc758 \uac12\uc744 \ub118\uaca8\uc918\uc694. \uc774\uc81c \uc81c\ub108\ub808\uc774\ud130\ub294 \\"\uba48\ucd94\uace0\\", `10`\uc744 \ucd9c\ub825\ud574\uc694.\\n\\n\uadf8 \ud6c4, `next()` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ub2e4\uc2dc \ud55c\ubc88 \ud568\uc218\ub97c \ud638\ucd9c\ud574\uc694. `i`\ub294 \uc5ec\uc804\ud788 `10`\uc774\uc5d0\uc694. \uc774\uc81c, \ub2e4\uc74c `yield` \ud0a4\uc6cc\ub4dc\ub97c \ub9cc\ub098 `i * 2`\ub97c \ub118\uaca8\uc918\uc694. `i`\ub294 `10`\uc774\ubbc0\ub85c, `10 * 2`, \uc989 `20`\uc744 \ub9ac\ud134\ud574\uc694. \uacb0\uacfc\ub294 `10, 20`\uc774\uc5d0\uc694.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10` \uadf8\ub9ac\uace0 `10, 20`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"\ubcf5\uc218\uc758 \ud504\ub85c\ubbf8\uc2a4\ub97c `Promise.race` \uba54\uc18c\ub4dc\uc5d0 \ub118\uaca8\uc8fc\uba74, _\ucd5c\ucd08_ \uc758 \ud504\ub85c\ubbf8\uc2a4\ub97c \ud574\uacb0/\uac70\ubd80\ud574\uc694. `setTimeout` \uba54\uc18c\ub4dc\uc5d0 \ud0c0\uc774\uba38\ub97c \uc804\ub2ec\ud574\uc694: \uccab \ubc88\uc9f8 \ud504\ub85c\ubbf8\uc2a4(`firstPromise`)\uc5d0\ub294 500ms, \ub450 \ubc88\uc9f8 \ud504\ub85c\ubbf8\uc2a4(`secondPromise`)\uc5d0\ub294 100ms. \uc774\uac83\uc740 `\'two\'`\uc758 \uac12\uc744 \uac00\uc9c4 `secondPromise`\uac00 \ucd5c\ucd08\ub85c \ud574\uacb0\ud55c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud574\uc694. \uc774\uc81c `res`\ub294 `\'two\'`\uc758 \uac12\uc744 \uc720\uc9c0\ud558\uace0 \ucd9c\ub825\ub3fc\uc694.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"\uc774\uac83\uc740 \ubb34\uc5c7\uc744 \ub9ac\ud134\ud560\uae4c\uc694?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\uc6b0\uc120, \ubcc0\uc218 `person`\uc758 \uac12\uc744 `name` \uc18d\uc131\uc744 \uac00\uc9c4 \uac1d\uccb4\ub85c \uc120\uc5b8\ud574\uc694.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\n\uadf8 \ud6c4, `members`\ub77c\ub294 \ubcc0\uc218\ub97c \uc120\uc5b8\ud574\uc694. \ubc30\uc5f4\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\uc5d0 `person` \ubcc0\uc218\uc758 \uac12\uc744 \ub300\uc785\ud574\uc694. \uc11c\ub85c\ub97c \uac19\uac8c \uc124\uc815\ud558\uba74 _\ucc38\uc870_ \uc5d0 \uc758\ud574 \uc0c1\ud638\uc791\uc6a9\ud574\uc694. \uc5b4\ub5a4 \ubcc0\uc218\uc5d0\uc11c \ub2e4\ub978 \ubcc0\uc218\ub85c \ucc38\uc870\ub97c \ud560\ub2f9\ud558\uba74, \uadf8 \ucc38\uc870\uc758 _\ubcf5\uc0ac\ubcf8_ \uc744 \ub9cc\ub4e4\uc5b4\uc694. (\uadf8\ub4e4\uc740 _\uac19\uc740_ \ucc38\uc870\ub97c \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \uc720\uc758\ud558\uc138\uc694!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\n\uadf8\ub9ac\uace0, \ubcc0\uc218 `person`\uc744 `null`\ub85c \uc124\uc815\ud574\uc694.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\n\ubc30\uc5f4\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\ub294 \uac1d\uccb4\uc5d0 \ub300\ud55c \ub2e4\ub978 (\ubcf5\uc0ac\ub41c) \ucc38\uc870\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, `person` \ubcc0\uc218\uc758 \uac12\ub9cc \ubcc0\uacbd\ud558\uace0, \ubc30\uc5f4\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\ub294 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc5b4\uc694. `members`\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\ub294 \uc5ec\uc804\ud788 \uc6d0\ubcf8 \uac1d\uccb4\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uc720\uc9c0\ud558\uace0 \uc788\uc5b4\uc694. `members` \ubc30\uc5f4\uc744 \ucd9c\ub825\ud560 \ub54c, \uccab \ubc88\uc9f8 \uc694\uc18c\ub294 \uc5ec\uc804\ud788 \uac1d\uccb4\uc758 \uac12\uc744 \uc720\uc9c0\ud558\uace0 \uc788\uc5b4 \ub85c\uadf8\uac00 \ucd9c\ub825\ub3fc\uc694.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"`for-in` \ub8e8\ud504\ub97c \uc0ac\uc6a9\ud558\uba74, \uac1d\uccb4 \ud0a4\ub97c \ud1b5\ud574\uc11c \ubc18\ubcf5\ud560 \uc218 \uc788\ub294\ub370, \uc774 \uacbd\uc6b0\uc5d0\uc11c\ub294 `name` \uadf8\ub9ac\uace0 `age`\uc5d0\uc694. \ub0b4\ubd80\uc801\uc73c\ub85c, \uac1d\uccb4 \ud0a4\ub294 \ubb38\uc790\uc5f4\uc774\uc5d0\uc694 (\uc2ec\ubcfc\uc774 \uc544\ub2c8\ub77c\uba74 \ub9d0\uc774\uc8e0). \ubaa8\ub4e0 \ub8e8\ud504\uc5d0\uc11c, `item`\uc758 \uac12\uc740 \ubc18\ubcf5\ub41c \ud604\uc7ac\uc758 \ud0a4 \uac12\uc73c\ub85c \uc124\uc815\ud574\uc694. \uc6b0\uc120, `item`\uc740 `name`\uc73c\ub85c \ucd9c\ub825\ub3fc\uc694. \uadf8 \ud6c4, `item`\uc740 `age`\ub85c \ucd9c\ub825\ub3fc\uc694.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"\uc5f0\uc0b0\uc790 \uacb0\ud569\uc131\uc740 \uc67c\ucabd\uc5d0\uc11c \uc624\ub978\ucabd \ub610\ub294 \uc624\ub978\ucabd\uc5d0\uc11c \uc67c\ucabd\uc73c\ub85c \ucef4\ud30c\uc77c\ub7ec\uac00 \ud45c\ud604 \uc2dd\uc744 \ud3c9\uac00\ud558\ub294 \uc21c\uc11c\uac00 \ub3fc\uc694. \uc774\uac83\uc740 \uc5f0\uc0b0\uc790\uac00 _\uac19\uc740_ \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uacbd\uc6b0\uc5d0\ub9cc \ud574\ub2f9\ub3fc\uc694. \uc5f0\uc0b0\uc790\uc758 \uc885\ub958\ub294 \ud55c \uac1c\ubfd0\uc774\uc5d0\uc694: `+`. \uac8c\ub2e4\uac00, \uacb0\ud569\uc131\uc740 \uc67c\ucabd\uc5d0\uc11c \uc624\ub978\ucabd\uc774\uc5d0\uc694.\\n\\n\ucc98\uc74c\uc73c\ub85c `3 + 4`\uac00 \ud3c9\uac00\ub3fc\uc694. \uacb0\uacfc\ub294 \uc22b\uc790 `7`\uc774\uc5d0\uc694.\\n\\n`7 + \'5\'`\uc758 \uacb0\uacfc\ub294 \uac15\uc81c\uc131 \ub54c\ubb38\uc5d0 `\\"75\\"`\uac00 \ub3fc\uc694. JavaScript\ub294 \uc22b\uc790 `7`\uc744 \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uace0, (\uc790\uc138\ud55c \ub0b4\uc6a9\uc740) \uc9c8\ubb38 15\ub97c \ubcf4\uc138\uc694. `+` \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud574\uc11c \ub450 \uac1c\uc758 \ubb38\uc790\uc5f4\uc744 \uc5f0\uacb0\ud560 \uc218 \uc788\uc5b4\uc694. `\\"7\\" + \\"5\\"`\uc758 \uacb0\uacfc\ub294 `\\"75\\"`\uc774\uc5d0\uc694.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"\ubb38\uc790\uc5f4\uc758 \uccab \ubc88\uc9f8 \uc22b\uc790\ub9cc \ub9ac\ud134\ub3fc\uc694. _\uc9c4\ubc95_ \uc5d0 \uadfc\uac70\ud558\uc5ec (\ud30c\uc2f1\ud558\uace0\uc790 \ud558\ub294 \uc22b\uc790\uc758 \uae30\uc900\uc744 \uba85\uc2dc\ud558\uae30 \uc704\ud55c \ub450 \ubc88\uc9f8 \uc778\uc218: \uae30\ubcf8\uc801\uc778 10\uc9c4\uc218, 6\uc9c4\uc218, 8\uc9c4\uc218, 2\uc9c4\uc218 \ub4f1), `parseInt`\ub294 \ubb38\uc790\uc5f4 \ub0b4\uc758 \ubb38\uc790\uac00 \ud0c0\ub2f9\ud55c\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud574\uc694. \uc9c4\uc218\uc5d0 \uc720\ud6a8\ud55c \uc22b\uc790\uac00 \uc544\ub2cc \ubb38\uc790\ub97c \ub9cc\ub098\uba74, \ud30c\uc2f1\uc744 \uba48\ucd94\uace0, \ub2e4\uc74c \ubb38\uc790\ub97c \ubb34\uc2dc\ud574\uc694.\\n\\n`*`\uc740 \uc720\ud6a8\ud55c \uc22b\uc790\uac00 \uc544\ub2c8\uc5d0\uc694. `\\"7\\"`\ub9cc \uc2ed\uc9c4\uc218\uc758 `7`\ub85c \ud30c\uc2f1 \ub3fc\uc694. \uc774\uc81c `num`\uc740 `7`\uc758 \uac12\uc744 \uc720\uc9c0\ud574\uc694.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"`num`\uc758 \uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n  });","codeLanguage":"javascript","explanation":"\ubc30\uc5f4\uc744 \ub9e4\ud551\ud560 \ub54c, `num`\uc758 \uac12\uc740 \ud5cc\uc7ac \uc21c\ud658\ud558\uace0 \uc788\ub294 \uc694\uc18c\uc608\uc694. \uc774 \uacbd\uc6b0, \uc694\uc18c\ub294 \uc22b\uc790\uc774\uae30 \ub54c\ubb38\uc5d0, if \ubb38\uc758 \uc870\uac74 `typeof num === \\"number\\"`\ub294 `true`\ub97c \ub9ac\ud134\ud574\uc694. map \ud569\uc218\ub294 \uc0c8\ub85c\uc6b4 \ubc30\uc5f4\uc744 \ub9cc\ub4e4\uace0 \ud568\uc218\uc5d0\uc11c \ub9ac\ud134\ub41c \uac12\uc744 \uc0bd\uc785\ud574\uc694.\\n\\n\uadf8\ub7ec\ub098, \uac12\uc744 \ub9ac\ud134\ud558\uc9c0 \uc54a\uc544\uc694. \ud568\uc218\ub294 \uac12\uc744 \ub9ac\ud134\ud558\uc9c0 \uc54a\uc744 \ub54c, `undefined`\ub97c \ub9ac\ud134\ud574\uc694. \ubc30\uc5f4\uc5d0\uc11c\uc758 \ubaa8\ub4e0 \uc694\uc18c\uc5d0 \ub300\ud574 \ube14\ub85d \ud568\uc218\uac00 \ud638\ucd9c\ub418\uae30 \ub54c\ubb38\uc5d0, \uac01 \uc694\uc18c\uc5d0 \ub300\ud574 `undefined`\ub97c \ub9ac\ud134\ud574\uc694.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"\uc778\uc218\ub4e4\uc758 \uac12\uc774 \uac1d\uccb4\uac00 \uc544\ub2cc \ud55c _\uac12_ \uc5d0 \uc758\ud574 \uc804\ub2ec\ub3fc\uc694. \uadf8 \ud6c4 _\ucc38\uc870_ \uc5d0 \uc758\ud574 \uc804\ub2ec\ub3fc\uc694. `birthYear`\ub294 \uac1d\uccb4\uac00 \uc544\ub2c8\ub77c \ubb38\uc790\uc5f4\uc774\uae30 \ub54c\ubb38\uc5d0 \uac12\uc5d0 \uc758\ud574 \uc804\ub2ec\ub3fc\uc694. \uac12\uc73c\ub85c \uc804\ub2ec\ud558\uba74 \uac12\uc758 _\ubcf5\uc0ac\ubcf8_ \uc774 \ub9cc\ub4e4\uc5b4\uc838\uc694(\uc9c8\ubb38 46\uc744 \ubcf4\uc138\uc694).\\n\\n\ubcc0\uc218 `birthYear`\ub294 `\\"1997\\"`\uac12\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uac00\uc838\uc694. \uc778\uc218 `year` \ub610\ud55c `\\"1997\\"`\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uac00\uc9c0\uc9c0\ub9cc, `birthYear`\uac00 \uac00\uc9c4 \ucc38\uc870 \uac12\uacfc\ub294 \ub2ec\ub77c\uc694. `year`\uc5d0 `\\"1998\\"`\uc744 \ub300\uc785\ud558\uc5ec `year`\uc758 \uac12\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c, `year`\uc758 \uac12\ub9cc \uc5c5\ub370\uc774\ud2b8\ud574\uc694. `birthYear`\ub294 \uc5ec\uc804\ud788 `\\"1997\\"`\uc774\uc5d0\uc694.\\n\\n`person`\uc758 \uac12\uc740 \uac1d\uccb4\uc608\uc694. \uc778\uc218 `member`\ub294 _\uac19\uc740_ \uac1d\uccb4\uc758 (\ubcf5\uc0ac\ub41c) \ucc38\uc870 \uac12\uc744 \uac00\uc838\uc694. `member`\uac1d\uccb4\uc758 \uc18d\uc131\uc774 \uac16\ub294 \ucc38\uc870\ub97c \ubcc0\uacbd\ud558\uba74, \ub450 \uac1c \ubaa8\ub450 \uac19\uc740 \uac1d\uccb4\ub97c \ucc38\uc870 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, `person`\uc758 \uac12 \ub610\ud55c \ubcc0\uacbd\ub3fc\uc694. \uc774\uc81c `person`\'\uc758 `name` \uc18d\uc131\uc740\uac12 `\\"Lydia\\"`\uc5d0\uc694.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error:\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"`throw`\ubb38\uc744 \uc0ac\uc6a9\ud574, \ucee4\uc2a4\ud140 \uc5d0\ub7ec\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc5b4\uc694. \uc774 \ud45c\ud604 \uc2dd\uc744 \uc0ac\uc6a9\ud574, \uc608\uc678\ub97c \ub358\uc9c8 \uc218 \uc788\uc5b4\uc694. \uc608\uc678\ub294 <b>string</b>, a <b>number</b>, a <b>boolean</b> or an <b>object</b>\uc774 \ub420 \uc218 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0, \uc608\uc678\ub294 `\'Hello world\'` \ubb38\uc790\uc5f4\uc774\uc5d0\uc694.\\n\\n`catch` \ubb38\uc744 \uc0ac\uc6a9\ud574, `try` \ube14\ub85d\uc5d0\uc11c \uc608\uc678\uac00 \ub358\uc838\uc84c\uc744 \uacbd\uc6b0\uc5d0 \ubb34\uc5c7\uc744 \ud560\uc9c0 \uba85\uc2dc\ud560 \uc218 \uc788\uc5b4\uc694. \uc608\uc678\uac00 \ub358\uc838\uc84c\uc5b4\uc694: \ubb38\uc790\uc5f4 `\'Hello world\'`. `e`\ub294 \uc774\uc81c \ubb38\uc790\uc5f4\uc774\uace0, \uadf8\uac83\uc744 \ucd9c\ub825\ud574\uc694. \uacb0\uacfc\ub294 `\'Oh an error: Hello world\'`\uc608\uc694.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined\\"`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error: Hello world!\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"\uc18d\uc131\uc744 \ub9ac\ud134\ud560 \ub54c, \uc18d\uc131\uac12\uc740 \uc0dd\uc131\uc790\uc5d0 \uc124\uc815\ud55c \uac12\uc774 \uc544\ub2cc, _\ub9ac\ud134\ub41c_ \uac12\uacfc \uac19\uc544\uc694. `\\"Maserati\\"` \ubb38\uc790\uc5f4\uc744 \ub9ac\ud134\ud558\uae30 \ub54c\ubb38\uc5d0, `myCar.make`\ub294 `\\"Maserati\\"`\uc5d0\uc694.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;`\uc740 \ub2e4\uc74c\uc758 \ub2e8\ucd95\ud615\uc774\uc5d0\uc694:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\n`y`\uc5d0 `10`\uc744 \ub300\uc785\ud558\uba74, \uc2e4\uc81c\ub85c\ub294 \uc804\uc5ed \uac1d\uccb4\uc5d0 \uc18d\uc131 `y`\ub97c \ucd94\uac00\ud574\uc694(\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c\ub294 `window`, Node\uc5d0\uc11c\ub294 `global`). \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c, `window.y`\ub294 \uc774\uc81c `10`\uc774\uc5d0\uc694.\\n\\n\uadf8 \ud6c4, \ubcc0\uc218 `x`\ub97c `10`\uc778 `y`\ub97c \uac12\uc73c\ub85c \uc120\uc5b8\ud574\uc694. `let`\ud0a4\uc6cc\ub4dc\ub85c \uc120\uc5b8\ub41c \ubcc0\uc218\ub294 _\ube14\ub85d \uc2a4\ucf54\ud504_ \ub85c, \uc120\uc5b8\ub41c \ube14\ub85d \ub0b4\uc5d0\uc11c\ub9cc \uc815\uc758\ub3fc\uc694: \uc774 \uacbd\uc6b0 \uc989\uc2dc \ud638\ucd9c \ud568\uc218\uc608\uc694(IIFE). `typeof`\uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c, \ud53c\uc5f0\uc0b0\uc790 `x`\ub294 \uc815\uc758\ub418\uc9c0 \uc54a\uc558\uc5b4\uc694: \uc120\uc5b8\ub41c \ube14\ub85d \ubc16\uc5d0\uc11c \uc811\uadfc\ud558\ub824 \ud588\uc5b4\uc694. \uc774\uac83\uc740 `x`\uac00 \uc120\uc5b8\ub418\uc9c0 \uc54a\uc74c\uc744 \uc758\ubbf8\ud574\uc694. \uac12\uc744 \ud560\ub2f9\ud558\uac70\ub098 \uc120\uc5b8\ud558\uc9c0 \uc54a\uc740 \ubcc0\uc218\ub294 `\\"undefined\\"` \ud615\uc774\uc5d0\uc694. `console.log(typeof x)`\ub294 `\\"undefined\\"`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n\uadf8\ub7ec\ub098, `y`\ub97c `10`\uc73c\ub85c \uc124\uc815\ud560 \ub54c \uc804\uc5ed \ubcc0\uc218 `y`\ub97c \ub9cc\ub4e4\uc5c8\uc5b4\uc694. \uc774 \uac12\uc740 \ucf54\ub4dc \ub0b4 \uc5b4\ub514\uc5d0\uc11c\ub098 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc694. `y`\ub294 \uc815\uc758\ub418\uc5c8\uace0, `\\"number\\"`\ud615\uc758 \uac12\uc744 \uc720\uc9c0\ud574\uc694. `console.log(typeof y)`\ub294 `\\"number\\"`\uc744 \ub9ac\ud134\ud574\uc694.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"\ud504\ub85c\ud1a0\ud0c0\uc785\uc5d0\uc11c\ub3c4 `delete`\ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574, \uac1d\uccb4\ub85c\ubd80\ud130 \uc18d\uc131\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc5b4\uc694. \ud504\ub85c\ud1a0\ud0c0\uc785\uc5d0\uc11c \uc18d\uc131\uc744 \uc0ad\uc81c\ud558\uba74, \ud504\ub85c\ud1a0\ud0c0\uc785 \uccb4\uc778\uc5d0\uc11c \ub354\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub3fc\uc694. \uc774 \uacbd\uc6b0, `bark` \ud568\uc218\ub294 `delete Dog.prototype.bark` \ud6c4\uc5d0 \ud504\ub85c\ud1a0\ud0c0\uc785\uc5d0\uc11c \ub354\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub418\uc9c0\ub9cc, \uadf8\ub798\ub3c4 \uc5ec\uc804\ud788 \uadf8\uac83\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud574\uc694.\\n\\n\ud568\uc218\uac00 \uc544\ub2cc \uac83\uc744 \ud638\ucd9c\ud558\ub824\uace0 \ud560 \ub54c, `TypeError`\uac00 \ub358\uc838\uc838\uc694. \uc774 \uacbd\uc6b0 `pet.bark`\ub294 `undefined`\uc774\uae30 \ub54c\ubb38\uc5d0, `TypeError: pet.bark is not a function`\uc608\uc694.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"`Set`\uc740 _unique_ \uac12\uc758 \uc9d1\ud569 \uac1d\uccb4\uc608\uc694: \uac12\uc740 set \ub0b4\uc5d0\uc11c \ub2e8 \ud55c \ubc88\ub9cc \ubc1c\uc0dd\ud574\uc694.\\n\\n\uc911\ubcf5 \uac12 `1`\uc744 \uac00\uc9c4 \ubc18\ubcf5 \uac00\ub2a5\ud55c `[1, 1, 2, 3, 4]`\uc744 \uc804\ub2ec\ud558\uae30 \ub54c\ubb38\uc5d0, \uadf8\ub4e4 \uc911 \ud558\ub098\ub294 \uc0ad\uc81c\ub3fc\uc694. \uc774\uac83\uc740 \uacb0\uacfc\uc801\uc73c\ub85c `{1, 2, 3, 4}`\ub3fc\uc694.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"import \ub41c \ubaa8\ub4c8\uc740 _read-only_ \uc608\uc694 : import \ub41c \ubaa8\ub4c8\uc740 \uc218\uc815\ud560 \uc218 \uc5c6\uc5b4\uc694. export \ud55c \ubaa8\ub4c8\ub9cc \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc5b4\uc694.\\n\\n`myCounter`\uc758 \uac12\uc744 \uc99d\uac00\uc2dc\ud0a4\ub824\uace0 \ud560 \ub54c, \uc5d0\ub7ec\ub97c \ub358\uc838\uc694: `myCounter`\ub294 read-only\uc774\uace0 \uc218\uc815\ud560 \uc218 \uc5c6\uc5b4\uc694.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"`delete`\uc5f0\uc0b0\uc790\ub294 \ubd88\ub9b0 \uac12\uc744 \ub9ac\ud134\ud574\uc694: \uc131\uacf5\uc801\uc73c\ub85c \uc0ad\uc81c\ub97c \ud55c \uacbd\uc6b0 `true`\ub97c, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 `false`\ub97c \ub9ac\ud134\ud574\uc694. \uadf8\ub7ec\ub098, `var`, `const` \ub610\ub294 `let` \ud0a4\uc6cc\ub4dc\ub85c \uc120\uc5b8\ub41c \ubcc0\uc218\ub4e4\uc740 `delete`\uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud574\uc11c \uc0ad\uc81c\ub420 \uc218 \uc5c6\uc5b4\uc694.\\n\\n`name` \ubcc0\uc218\ub294 `const`\ud0a4\uc6cc\ub4dc\ub85c \uc120\uc5b8\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0, \uc0ad\uc81c\uc5d0 \uc2e4\ud328\ud574\uc694. `age`\ub97c `21`\ub85c \uc124\uc815\ud560 \ub54c, \uc2e4\uc81c\ub85c\ub294 `age`\ub77c\ub294 \uc18d\uc131\uc744 \uc804\uc5ed \uac1d\uccb4\uc5d0 \ucd94\uac00\ud55c \uac70\uc8e0. \uc774 \ubc29\ubc95\uc73c\ub85c \uac1d\uccb4, \uc804\uc5ed \uac1d\uccb4\uc758 \uc18d\uc131\ub4e4\uc744 \uc131\uacf5\uc801\uc73c\ub85c \uc0ad\uc81c\ud560 \uc218 \uc788\uc5b4\uc694. `delete age`\ub294 `true`\ub97c \ub9ac\ud134\ud574\uc694.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"\uad6c\uc870 \ubd84\ud574 \ud560\ub2f9\uc744 \ud1b5\ud574 \uac1d\uccb4\uc758 \ubc30\uc5f4 \ub610\ub294 \uc18d\uc131\ub4e4\ub85c\ubd80\ud130 \ubcc0\uc218\ub97c \ud574\uccb4\ud560 \uc218 \uc788\uc5b4\uc694. \uc608\ub97c \ub4e4\uc5b4:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\n`a`\ub294 \uc774\uc81c `1`\uc774\uace0, `b`\ub294 \uc774\uc81c `2`\uc608\uc694. \uc9c8\ubb38\uc5d0\uc11c \uc2e4\uc81c\ub85c \ud55c \uac74 \ub2e4\uc74c\uacfc \uac19\uc544\uc694:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\n\uc774\uac83\uc740 `y`\uc758 \uac12\uc740 \uc22b\uc790 `1`\uc778 \ubc30\uc5f4\uc758 \uccab \ubc88\uc9f8 \uac12\uacfc \uac19\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud558\uc8e0. `y`\ub97c \ucd9c\ub825\ud558\uba74 `1`\uc774 \ub9ac\ud134\ub3fc\uc694.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"\uc2a4\ud504\ub808\ub4dc \uc5f0\uc0b0\uc790 `...` \ub97c \uc0ac\uc6a9\ud574 \uac1d\uccb4\ub97c \uacb0\ud569\ud560 \uc218 \uc788\uc5b4\uc694. \uc774\uac83\uc740 \ud558\ub098\uc758 \uac1d\uccb4\uc758 \ud0a4/\uac12\uc758 \uc30d\ub4e4\uc744 \ubcf5\uc0ac\ubcf8\ub4e4\ub85c \ub9cc\ub4e4\uc5b4, \ub2e4\ub978 \uac1d\uccb4\uc5d0 \ucd94\uac00\ud574\uc694. \uc774 \uacbd\uc6b0, `user` \uac1d\uccb4\uc758 \ubcf5\uc0ac\ubcf8\ub4e4\uc744 \ub9cc\ub4e4\uc5b4, `admin` \uac1d\uccb4\uc5d0 \ucd94\uac00\ud574\uc694. `admin` \uac1d\uccb4\ub294 \uc774\uc81c \ubcf5\uc0ac\ub41c \ud0a4/\uac12\uc758 \uc30d\ub4e4\uc774 \ub4e4\uc5b4\uc788\uace0, \uacb0\uacfc\ub294 `{ admin: true, name: \\"Lydia\\", age: 21 }` \uc608\uc694.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"`defineProperty`\uba54\uc18c\ub4dc\ub85c, \uac1d\uccb4\uc5d0 \uc0c8\ub85c\uc6b4 \uc18d\uc131\ub4e4\uc744 \ucd94\uac00\ud558\uac70\ub098, \uae30\uc874 \uac83\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc5b4\uc694. `defineProperty` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574 \uac1d\uccb4\uc758 \uc18d\uc131\uc744 \ucd94\uac00\ud560 \ub54c, \uae30\ubcf8\uc801\uc73c\ub85c \uac1d\uccb4\uc758 \uc18d\uc131\ub4e4\uc740 _\ube44 \uc5f4\uac70\uc790_ \uc608\uc694. `Object.keys`\uba54\uc18c\ub4dc\ub294 \ubaa8\ub4e0 _\uc5f4\uac70\uc790_ \uac1d\uccb4\uc758 \uc18d\uc131 \uc774\ub984\ub4e4\uc744 \ub9ac\ud134\ud558\ub294\ub370, \uc774 \uacbd\uc6b0\ub294 `\\"name\\"` \ubfd0\uc774\uc5d0\uc694.\\n\\n`defineProperty`\ub97c \uc0ac\uc6a9\ud574 \ucd94\uac00\ub41c \uc18d\uc131\ub4e4\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc5b4\uc694. `writable`, `configurable` \uadf8\ub9ac\uace0 `enumerable` \uc18d\uc131\ub4e4\uc744 \uc0ac\uc6a9\ud574 \ub36e\uc5b4\uc4f0\uae30 \ud560 \uc218 \uc788\uc5b4\uc694. `defineProperty`\uba54\uc18c\ub4dc\uc758 \ubc29\ubc95\uc740 \uac1d\uccb4\uc5d0 \ucd94\uac00\ud560 \uc18d\uc131\ub4e4\uc744 \ud6e8\uc52c \ub354 \uc815\uad50\ud558\uac8c \uc81c\uc5b4\ud558\ub3c4\ub85d \ud574\uc918\uc694.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"`JSON.stringify` \ub450 \ubc88\uc9f8 \uc778\uc218\ub294 _replacer_ \uc608\uc694. replacer\ub294 \ud568\uc218 \ub610\ub294 \ubc30\uc5f4 \ub458 \uc911 \ud558\ub098\uac00 \ub420 \uc218 \uc788\uace0, stringify \ud560 \ub300\uc0c1\uacfc \ubc29\ubc95\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uac8c \ud574\uc918\uc694.\\n\\nreplacer\uac00 _\ubc30\uc5f4_ \uc774\ub77c\uba74, \ubc30\uc5f4\uc5d0 \uc774\ub984\uc774 \ud3ec\ud568\ub41c \uc18d\uc131\ub9cc JSON \ubb38\uc790\uc5f4\uc5d0 \ucd94\uac00\ub420 \uac70\uc5d0\uc694. \uc774 \uacbd\uc6b0, \uc774\ub984\uc744 \uac00\uc9c4 `\\"level\\"` \uadf8\ub9ac\uace0 `\\"health\\"`\uc18d\uc131\ub4e4\ub9cc \ud3ec\ud568\ub418\uace0, `\\"username\\"`\uc740 \uc81c\uc678 \ub3fc\uc694. `data` \uc740 \uc774\uc81c `\\"{\\"level\\":19, \\"health\\":90}\\"`\uc5d0\uc694.\\n\\nreplacer\uac00 _\ud568\uc218_ \ub77c\uba74, stringifying \ud560 \uac1d\uccb4\uc758 \ubaa8\ub4e0 \uc18d\uc131\uc5d0 \ud638\ucd9c\ub3fc\uc694. \uc774 \ud568\uc218\ub85c\ubd80\ud130 \ub9ac\ud134\ub41c \uac12\uc740 JSON \ubb38\uc790\uc5f4\uc5d0 \ucd94\uac00\ub420 \ub54c \uc18d\uc131\uc758 \uac12\uc774 \ub420 \uac70\uc608\uc694. \ub9cc\uc57d \uac12\uc774 `undefined`\ub77c\uba74, \uc774 \uc18d\uc131\uc740 JSON \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc81c\uc678\ub3fc\uc694.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"\ub2e8\ud56d \uc5f0\uc0b0\uc790 `++`\ub294 _\uc6b0\uc120_ \ud53c\uc5f0\uc0b0\uc790\uc758 \uac12\uc744 _\ub9ac\ud134\ud558\uace0_, _\uadf8 \ud6c4_ \ud53c\uc5f0\uc0b0\uc790\uc758 \uac12\uc744 _\uc99d\uac00\ud574\uc694_. `increaseNumber` \ud568\uc218\uac00 \ucc98\uc74c\uc73c\ub85c \ub9ac\ud134 \ud55c `num`\uc758 \uac12\uc740 `10` \uc774\uae30 \ub54c\ubb38\uc5d0, `num1`\uc758 \uac12\uc740 `10`\uc774\uace0, \uadf8 \ud6c4\uc5d4 `num`\uc758 \uac12\ub9cc \uc99d\uac00\ud574\uc694.\\n\\n`num1`\uc744 `increasePassedNumber`\ub85c \uc804\ub2ec\ud588\uae30 \ub54c\ubb38\uc5d0, `num2`\ub294 `10`\uc774\uc5d0\uc694. `number`\ub294 `10`\uc774\uc5d0\uc694(`num1`\uc758 \uac12\uc740, \ub2e4\uc2dc \ud55c\ubc88, \ub2e8\ud56d \uc5f0\uc0b0\uc790\uac00 `++`\ub294 _\uc6b0\uc120_ \ud53c\uc5f0\uc0b0\uc790\uc758 \uac12\uc744 _\ub9ac\ud134\ud558\uace0_, _\uadf8 \ud6c4_ \ud53c\uc5f0\uc0b0\uc790\uc758 \uac12\uc744 _\uc99d\uac00\ud574\uc694_. `number`\uc758 \uac12\uc740 `10`\uc774\uc5d0\uc694 \uc989, `num2`\ub294 `10`\uc774\uc8e0.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log(x.number *= 2);\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"ES6\uc5d0\uc11c\ub294, \uae30\ubcf8\uac12\uc73c\ub85c \ud30c\ub77c\ubbf8\ud130\ub97c \ucd08\uae30\ud654\ud560 \uc218 \uc788\uc5b4\uc694. \ud568\uc218\uc5d0 \uac12\uc774 \uc5c6\uc774 \uc804\ub2ec\ub418\uac70\ub098, \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc774 `\\"undefined\\"`\ub77c\uba74, \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc740 \uae30\ubcf8\uac12\uc774 \ub420 \uac70\uc608\uc694. \uc774 \uacbd\uc6b0, `value` \uac1d\uccb4\uc758 \uc18d\uc131\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \uac1d\uccb4 \uc548\uc73c\ub85c \uc804\uac1c\ud574\uc694. \ub530\ub77c\uc11c `x`\ub294 `{ number: 10 }`\uc744 \uae30\ubcf8\uac12\uc73c\ub85c \uac00\uc838\uc694.\\n\\n\uae30\ubcf8 \uc778\uc218\ub294 _\ud638\ucd9c \uc2dc\uc810_ \uc5d0 \ud3c9\uac00\ub3fc\uc694! \ud568\uc218\ub97c \ubd80\ub97c \ub54c\ub9c8\ub2e4, _\uc0c8\ub85c\uc6b4_ \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc694. \ucc98\uc74c\uc5d0 \ub450 \ubc88\uc740 \uac12 \uc804\ub2ec \uc5c6\uc774 `multiply` \ud568\uc218\ub97c \ud638\ucd9c\ud574\uc694: `x`\ub294 `{ number: 10 }`\uc758 \uae30\ubcf8\uac12\uc744 \uac00\uc838\uc694. \uadf8\ub2e4\uc74c \uadf8 \uc22b\uc790\ub97c \uacf1\uc148\ud55c \uac12\uc778 `20`\uc744 \ucd9c\ub825\ud574\uc694.\\n\\n\uc138 \ubc88\uc9f8\ub85c \uacf1\uc148\uc744 \ud638\ucd9c\ud560 \ub54c, \uc778\uc218\ub97c \uc804\ub2ec\ud574\uc694: \uadf8 \uac1d\uccb4\ub294 `value`\ub97c \ubd88\ub7ec\uc694. `*=` \uc5f0\uc0b0\uc790\ub294 \uc2e4\uc81c\ub85c\ub294 `x.number = x.number * 2`\uc758 \uc904\uc784\ub9d0\uc774\uc5d0\uc694: `x.number`\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uace0, \uacf1\uc148\ud55c \uac12 `20`\uc744 \ucd9c\ub825\ud574\uc694\\n\\n\ub124 \ubc88\uc9f8\uc5d0\ub294, `value` \uac1d\uccb4\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc804\ub2ec\ud574\uc694. `x.number`\ub294 \uc774\uc804\uc5d0 `20`\uc73c\ub85c \ubc14\ub00c\uc5c8\uae30 \ub54c\ubb38\uc5d0, `x.number *= 2`\ub294 `40`\uc744 \ucd9c\ub825\ud574\uc694.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"`reduce` \uba54\uc18c\ub4dc\uac00 \ubc1b\uc740 \uccab \ubc88\uc9f8 \uc778\uc218\ub294 _\ub204\uc0b0\uae30_ \uc608\uc694, \uc774 \uacbd\uc6b0\uc5d4 `x`\uc8e0. \ub450 \ubc88\uc9f8 \uc778\uc218 `y`\ub294 _\ud604\uc7ac \uac12_ \uc608\uc694. reduce \uba54\uc18c\ub4dc\uc5d0\uc11c, \ubc30\uc5f4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc694\uc18c\uc5d0 \ucf5c\ubc31 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ubbc0\ub85c \uad81\uadf9\uc801\uc73c\ub85c\ub294 \ud558\ub098\uc758 \uac12\uc744 \uc5bb\uc744 \uc218 \uc788\uc5b4\uc694.\\n\\n\uc774 \uc608\uc81c\uc5d0\uc11c\ub294, \uac12\uc744 \ub9ac\ud134\ud558\uc9c0 \uc54a\uace0, \ub2e8\uc9c0 \ub204\uc801\ub41c \uac12\uacfc \ud604\uc7ac \uac12\uc744 \ucd9c\ub825\ud574\uc694.\\n\\n\ub204\uc0b0\uae30\uc758 \uac12\uc740 \ucf5c\ubc31 \ud568\uc218\uac00 \uc774\uc804\uc5d0 \ub9ac\ud134\ud55c \uac12\uc774\uc5d0\uc694. \ub9cc\uc57d \ucd94\uac00\uc801\uc778 `\ucd08\uae30\uac12` \uc778\uc218\ub97c `reduce` \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74, \ub204\uc0b0\uae30\ub294 \uccab\ubc88\uc9f8 \ubd80\ub978 \uccab \ubc88\uc9f8 \uc694\uc18c\uc640 \ub3d9\uc77c\ud574\uc694.\\n\\n\uccab \ubc88\uc9f8 \ubd80\ub97c \ub550, \ub204\uc0b0\uae30 (`x`)\ub294 `1` \uc774\uc5d0\uc694, \uadf8\ub9ac\uace0 \ud604\uc7ac \uac12\uc778 (`y`)\ub294 `2`\uc608\uc694. \ucf5c\ubc31 \ud568\uc218\ub85c\ubd80\ud130 \ub9ac\ud134\ub418\uc9c0 \uc54a\uc558\uc5b4\uc694, \ub204\uc0b0\uae30\uc640 \ud604\uc7ac \uac12\uc744 \ucd9c\ub825\ud574\uc694: `1` \uadf8\ub9ac\uace0 `2`\uac00 \ucd9c\ub825\ub3fc\uc694.\\n\\n\ud568\uc218\uc5d0\uc11c \uac12\uc744 \ub9ac\ud134\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74, `undefined`\ub97c \ub9ac\ud134\ud574\uc694. \ub2e4\uc74c\ubc88\uc5d0 \ubd80\ub97c \ub54c, \ub204\uc0b0\uae30\ub294 `undefined`\uace0, \uadf8\ub9ac\uace0 \ud604\uc7ac \uac12\uc740 `3`\uc774\uc5d0\uc694. `undefined` \uadf8\ub9ac\uace0 `3`\uc774 \ucd9c\ub825\ub3fc\uc694.\\n\\n\ub124 \ubc88\uc9f8 \ubd80\ub97c \ub550, \ub610 \ucf5c\ubc31 \ud568\uc218\uc5d0\uc11c \ub9ac\ud134\ubc1b\uc9c0 \uc54a\uc558\uc5b4\uc694. \ub204\uc0b0\uae30\ub294 \ub2e4\uc2dc `undefined`\uace0, \ud604\uc7ac \uac12\uc740 `4`\uc608\uc694. `undefined` \uadf8\ub9ac\uace0 `4`\uac00 \ucd9c\ub825\ub3fc\uc694.","id":64,"options":["`1` `2` \uadf8\ub9ac\uace0 `3` `3` \uadf8\ub9ac\uace0 `6` `4`","`1` `2` \uadf8\ub9ac\uace0 `2` `3` \uadf8\ub9ac\uace0 `3` `4`","`1` `undefined` \uadf8\ub9ac\uace0 `2` `undefined` \uadf8\ub9ac\uace0 `3` `undefined` \uadf8\ub9ac\uace0 `4` `undefined`","`1` `2` \uadf8\ub9ac\uace0 `undefined` `3` \uadf8\ub9ac\uace0 `undefined` `4`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"\uc774 \ud30c\uc0dd \ud074\ub798\uc2a4\uc5d0\uc11c, `super`\ub97c \ubd80\ub974\uae30 \uc804\uc5d0\ub294 `this` \ud0a4\uc6cc\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc5b4\uc694. \uadf8\ub807\uac8c \ud558\ub824\uace0 \ud55c\ub2e4\uba74, \ucc38\uc870\uc5d0\ub7ec\ub97c \ub358\uc9c8 \uac70\uc5d0\uc694: 1\uacfc 4\ub294 \ucc38\uc870 \uc5d0\ub7ec\ub97c \ub358\uc838\uc694\\n\\n`super` \ud0a4\uc6cc\ub4dc\ub97c \uac00\uc9c0\uace0, \ubd80\ubaa8 \ud074\ub798\uc2a4 \uc0dd\uc131\uc790\uc5d0 \uc8fc\uc5b4\uc9c4 \uc778\uc218\ub4e4\uc744 \ubd80\ub97c \uc218 \uc788\uc5b4\uc694. \ubd80\ubaa8 \uc0dd\uc131\uc790\ub294 `name` \uc778\uc218\ub97c \ubc1b\uc544\uc694, \uadf8\ub798\uc11c `name`\uc744 `super`\ub85c \uc804\ub2ec\ud574\uc57c \ud574\uc694. \\n\\n`Labrador` \ud074\ub798\uc2a4\ub294 \uc778\uc218\ub97c 2\uac1c \ubc1b\ub294\ub370, `Dog`\ub85c \ubd80\ud130 \ud655\uc7a5\ub41c `name`\uacfc `Labrador` \ud074\ub798\uc2a4\uc758 \ucd94\uac00 \uc18d\uc131\uc778 `size`\uc608\uc694. \uadf8 \ub450 \uac1c\ub294 `Labrador` \uc0dd\uc131\uc790 \ud568\uc218\uc5d0 \uc804\ub2ec\ub418\uc5b4\uc57c \ud558\ub294\ub370, \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ub41c \uac74 2\ubc88\uc9f8 \uc0dd\uc131\uc790\uc608\uc694.","id":65,"options":["1","2","3","4"],"question":"`Dog` \ud074\ub798\uc2a4\ub97c \uc131\uacf5\uc801\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \uc0dd\uc131\uc790\ub294 \uc5b4\ub290 \uac83\uc77c\uae4c\uc694?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"`import` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \ubaa8\ub4e0 import\ub41c modules\uc740 _\uc6b0\uc120-\ud30c\uc2f1_ \ub418\uc5b4\uc694. import\ub41c \ubaa8\ub4c8\uc740 _\ucc98\uc74c\uc5d0_ \uc2e4\ud589\ub418\ub294 \uac83\uc744 \uc758\ubbf8\ud558\uace0, import\ud55c \ud30c\uc77c \uc548\uc5d0 \uc788\ub294 \ucf54\ub4dc\ub294 _\ub098\uc911\uc5d0_ \uc2e4\ud589\ub3fc\uc694.\\n\\n\uc774\uac83\uc740 CommonJSd\uc758 `require()`\uc640 `import`\uc758 \ucc28\uc774\uc608\uc694! `require()`\uc744 \uc0ac\uc6a9\ud558\uba74, \ub7f0\ud0c0\uc784 \uc911 \ucf54\ub4dc\uc5d0\uc11c \ud544\uc694\ud55c \uc2dc\uc810\uc5d0 \uc758\uc874\uc131 \ubaa8\ub4c8\uc744 \ub85c\ub4dc \ud560 \uc218 \uc788\uc5b4\uc694. \ub9cc\uc57d `import` \ub300\uc2e0\uc5d0 `require`\uc744 \uc0ac\uc6a9\ud558\uba74, `running index.js`, `running sum.js`, `3`\uc73c\ub85c \ucf58\uc194\uc5d0 \ucd9c\ub825\ub420 \uac70\uc5d0\uc694.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"\ubaa8\ub4e0 \uc2ec\ubcfc\uc740 \uc644\uc804\ud788 \uc720\ub2c8\ud06c\ud574\uc694. \uc2ec\ubcfc\uc5d0 \uc804\ub2ec\ub41c \uc778\uc218\uc758 \ubaa9\uc801\uc740, \uc2ec\ubcfc\uc5d0 \uc124\uba85\uc744 \uc81c\uacf5\ud558\ub294 \uac70\uc5d0\uc694. \uc2ec\ubcfc\uc758 \uac12\uc740 \uc804\ub2ec\ub41c \uc778\uc218\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c0\uc9c0 \uc54a\uc544\uc694. \ub3d9\ub4f1\uc131\uc744 \ud14c\uc2a4\ud2b8\ud560 \ub54c, \uc0c8\ub85c\uc6b4 \uc2ec\ubcfc \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc694: \uccab\ubc88\uc9f8 `Symbol(\'foo\')`\uc640 \ub450\ubc88\uc9f8 `Symbol(\'foo\')`. \uc774 \ub450\uac1c\uc758 \uac12\ub4e4\uc740 \uc720\ub2c8\ud06c\ud558\uba70, \uc11c\ub85c \uac19\uc9c0 \uc54a\uc544\uc694, `Symbol(\'foo\') === Symbol(\'foo\')`\ub294 `false`\ub97c \ub9ac\ud134\ud574\uc694.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"`padStart` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \ubb38\uc790\uc5f4\uc758 \uc2dc\uc791 \ubd80\ubd84\uc5d0 \ud328\ub529\uc744 \ucd94\uac00\ud574 \uc904 \uc218 \uc788\uc5b4\uc694. \uc774 \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec\ub41c \uac12\uc740 \ud328\ub529\uc744 \ud3ec\ud568\ud55c \ubb38\uc790\uc5f4\uc758 _\uc804\uccb4_ \uae38\uc774\uc608\uc694. \ubb38\uc790\uc5f4 `\\"Lydia Hallie\\"`\uc758 \uae38\uc774\ub294 `12`\uc608\uc694. `name.padStart(13)`\uc740 \ubb38\uc790\uc5f4\uc758 \uc2dc\uc791\uc810\uc5d0 1 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0bd\uc785\ud574\uc694, \ub530\ub77c\uc11c 12 + 1 \uc740 13\uc774\uc8e0.\\n\\n`padStart` \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec\ub41c \uc778\uc218\uac00 \ubc30\uc5f4\uc758 \uae38\uc774\ubcf4\ub2e4 \uc791\ub2e4\uba74, \ud328\ub529\uc740 \ucd94\uac00\ub418\uc9c0 \uc54a\uc744 \uac70\uc608\uc694.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"`+` \uc5f0\uc0b0\uc790\ub97c \uac00\uc9c0\uace0, \ubb38\uc790\uc5f4\uc744 \uc5f0\uacb0 \uc2dc\ud0ac \uc218 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0\uc5d0\ub294, \ubb38\uc790\uc5f4 `\\"\ud83e\udd51\\"`\uacfc \ubb38\uc790\uc5f4 `\\"\ud83d\udcbb\\"`\uc744 \uc5f0\uacb0\ud574, \uacb0\uacfc `\\"\ud83e\udd51\ud83d\udcbb\\"`\ub97c \uc5bb\uc5c8\uc5b4\uc694.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","\ud574\ub2f9 \ucf54\ub4dc \uc8fc\uc18c\ub97c \ud3ec\ud568\ud558\ub294 \ubb38\uc790\uc5f4","\uc5d0\ub7ec"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"\uc81c\ub108\ub808\uc774\ud130 \ud568\uc218\ub294 `yield` \ud0a4\uc6cc\ub4dc\ub97c \ubcf4\uba74 \uc2e4\ud589\uc744 \\"\uba48\ucdb0\\"\uc694. \uccab \ubc88\uc9f8\ub85c, `game.next().value`\ub97c \ubd88\ub7ec, \ud568\uc218\uac00 \\"Do you love JavaScript?\\" \ubb38\uc790\uc5f4\uc744 \ub118\uaca8\uc8fc\ub3c4\ub85d \ud560 \uc218 \uc788\uc5b4\uc694.\\n\\n`yield` \ud0a4\uc6cc\ub4dc\ub97c \ucc98\uc74c\uc73c\ub85c \ucc3e\uae30 \uc804\uae4c\uc9c0, \ubaa8\ub4e0 \uc904\uc774 \uc2e4\ud589\ub418\uc694. \uccab \ubc88\uc9f8 \uc904\uc5d0 \uc788\ub294 \ud568\uc218\ub294 `yield` \ud0a4\uc6cc\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\uc694: \uccab \ubc88\uc9f8 yield\uc73c\ub85c \uc2e4\ud589\uc744 \uba48\ucdb0\uc694! _\uc774\uac83\uc740 `answer` \ubcc0\uc218\uac00 \uc544\uc9c1 \uc815\uc758\ub418\uc9c0 \uc54a\uc558\ub294 \ub73b\uc774\uc5d0\uc694_\\n\\n`game.next(\\"Yes\\").value`\uc744 \ubd80\ub97c\ub54c, `\\"Yes\\"`\uc758 \uacbd\uc6b0\uc5d0\uc11c \uc774\uc804 `yield`\ub294 `next()` \ud568\uc218\uac00 \uc804\ub2ec\ud55c \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc73c\ub85c \ub300\uccb4\ub3fc\uc694. `answer` \ubcc0\uc218\uc758 \uac12\uc740 \uc774\uc81c `\\"Yes\\"`\uc5d0\uc694. if\ubb38\uc758 \uc870\uac74\uc740 `false`\ub97c \ub9ac\ud134\ud574, `JavaScript loves you back \u2764\ufe0f`\ub97c \ucd9c\ub825\ub3fc\uc694","id":70,"options":["`game.next(\\"Yes\\").value` \uadf8\ub9ac\uace0 `game.next().value`","`game.next.value(\\"Yes\\")` \uadf8\ub9ac\uace0 `game.next.value()`","`game.next().value` \uadf8\ub9ac\uace0 `game.next(\\"Yes\\").value`","`game.next.value()` \uadf8\ub9ac\uace0 `game.next.value(\\"Yes\\")`"],"question":"console.log \ud45c\ud604\uc2dd \ub4a4\uc5d0 \uc5b8\uae09\ub41c \uac12\uc744 \uc5b4\ub5bb\uac8c \ucd9c\ub825\ud560 \uc218 \uc788\uc744\uae4c\uc694?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw`\ub294 escapes (`\\n`, `\\u000b`, `\\t` \ub4f1.)\uc5d0\uc11c\uc758 \ubb38\uc790\uc5f4\uc744 \ubb34\uc2dc\ud574\uc694! \ubc31\uc2ac\ub798\uc2dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ub05d\ub098\uba74 \ubb38\uc81c\uac00 \ub420 \uc218 \uc788\uc5b4\uc694\\n\\n``console.log(`C:DocumentsProjects\\table.html`)``\\n\\n\uc774\ub807\uac8c \ub420 \uac70\uc608\uc694:\\n\\n`C:DocumentsProjects able.html`\\n\\n`String.raw`\uc744 \uc0ac\uc6a9\ud558\uba74, \uac04\ub2e8\ud558\uac8c escape\ub97c \ubb34\uc2dc\ud558\uace0 \ucd9c\ub825\ud574\uc694:\\n\\n`C:DocumentsProjects\\table.html`\\n\\n\uc774 \uacbd\uc6b0, \ubb38\uc790\uc5f4\uc740 `Hello\\nworld`\uc774 \ucd9c\ub825\ub418\uc694.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"async \ud568\uc218\ub294 \ud56d\uc0c1 promise\ub97c \ub9ac\ud134\ud574\uc694. `await`\ub294 promise\uac00 resolve \ud560 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud574\uc694: pending promise\ub294 `data`\ub97c \uc124\uc815\ud558\uae30 \uc704\ud574 \ubd80\ub978 `getData()`\uac00 \ub9ac\ud134\ud55c \uac83\uc744 \uac00\uc838\uc694.\\n\\nresolve\ub41c \uac12 `\\"I made it\\"`\uc5d0 \uc811\uadfc\ud558\uace0 \uc2f6\ub2e4\uba74, `data`\uc5d0 `.then()` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc57c\ud574\uc694.\\n\\n`data.then(res => console.log(res))`\\n\\n\uc774\uac74 `\\"I made it!\\"`\uc744 \ucd9c\ub825\ud560 \uac70\uc608\uc694.","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"`.push()`\uba54\uc18c\ub4dc\ub294 \uc0c8\ub85c\uc6b4 \ubc30\uc5f4\uc758 _\uae38\uc774_ \ub97c \ub9ac\ud134\ud574\uc694! \uc774\uc804\uc5d0, \ubc30\uc5f4\uc740 \ud55c \uac1c\uc758 \uc694\uc18c(\ubb38\uc790\uc5f4 `\\"banana\\"`)\ub97c \ud3ec\ud568\ub418\uc5b4\uc788\uace0 \uae38\uc774\ub294 `1`\uc608\uc694. \ubc30\uc5f4\uc5d0 \ubb38\uc790\uc5f4 `\\"apple\\"`\uc744 \ucd94\uac00\ud55c \ud6c4, \ubc30\uc5f4\uc740 \ub450 \uac1c \uc694\uc18c\ub97c \ud3ec\ud568\ud558\uace0, \uadf8\ub9ac\uace0 \uae38\uc774 `2`\ub97c \uac00\uc838\uc694. `addToList` \ud568\uc218\ub85c\ubd80\ud130 \ub9ac\ud134\ub3fc\uc694.\\n\\n`push` \uba54\uc18c\ub4dc\ub294 \uc6d0\ubcf8 \ubc30\uc5f4\uc744 \uc218\uc815\ud574\uc694. \ub9cc\uc57d \ud568\uc218\ub85c\ubd80\ud130 _\ubc30\uc5f4\uc758 \uae38\uc774_ \ub300\uc2e0\uc5d0 _\ubc30\uc5f4_ \uc744 \ub9ac\ud134\ud558\uace0 \uc2f6\ub2e4\uba74, `item`\uc744 \ud478\uc2dc\ud55c \ud6c4 `list`\ub97c \ub9ac\ud134\ud574\uc57c\ud574\uc694.","id":73,"options":["`[\'banana\', \'apple\']`","`2`","`true`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze`\ub294 \uac1d\uccb4\uc758 \uc18d\uc131\ub4e4\uc744 \ucd94\uac00, \uc0ad\uc81c \ud639\uc740 \uc218\uc815\ud558\ub294 \uac78 \ubd88\uac00\ub2a5\ud558\uac8c \ub9cc\ub4e4\uc5b4\uc694(\ub2e4\ub978 \uac1d\uccb4\ub85c\uc11c\uc758 \uc18d\uc131\ub4e4\uc758 \uac12\uc774 \uc544\ub2cc \ud55c).\\n\\n\ubcc0\uc218 `shape`\uc744 \uc0dd\uc131\ud560 \ub54c, \ub3d9\uacb0 \uac1d\uccb4 `box`\uc640 \ub3d9\uc77c\ud558\uac8c \uc124\uc815\ud588\uace0, `shape` \uc5ed\uc2dc \ub3d9\uacb0 \uac1d\uccb4\ub97c \ucc38\uc870\ud574\uc694. `Object.isFrozen`\uc744 \uc0ac\uc6a9\ud574 \uac1d\uccb4\uc758 \ub3d9\uacb0 \uc5ec\ubd80\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0, `Object.isFrozen(shape)`\uc740 \ucc38\uc744 \ub9ac\ud134\ud558\uace0, \ub530\ub77c\uc11c \ubcc0\uc218 `shape`\ub294 \ub3d9\uacb0 \uac1d\uccb4 \ucc38\uc870\ub97c \uac00\uc838\uc694.\\n\\n`shape`\uac00 \ub3d9\uacb0 \uc0c1\ud0dc\uc774\ubbc0\ub85c, `x`\uc758 \uac12\uc740 \uac1d\uccb4\uac00 \uc544\ub2c8\uba70, `x`\uc758 \uc18d\uc131\uc744 \uc218\uc815\ud560 \uc218 \uc5c6\uc5b4\uc694. `x`\ub294 \uc5ec\uc804\ud788 `10`\uc774\uace0, `{ x: 10, y: 20 }`\uac00 \ucd9c\ub825\ub3fc\uc694.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"\uc624\ub978\ucabd\uc5d0 \uc788\ub294 \uac1d\uccb4\ub85c\ubd80\ud130 \uc18d\uc131 `name`\uc744 unpack\ud560 \ub54c, `myName`\ub77c\ub294 \uc774\ub984\uc744 \uac00\uc9c4 \ubcc0\uc218\uc5d0 \uac12 `\\"Lydia\\"`\uc744 \ud560\ub2f9\ud574\uc694.\\n\\n`{ name: myName }`\uc740, JavaScript\uc5d0\uac8c \uc624\ub978\ucabd\uc5d0 \uc788\ub294 `name`\uc18d\uc131 \uac12\uc744 \uac00\uc9c4 `myName`\uc774\ub77c\uace0 \ubd88\ub9ac\ub294 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\ub97c \ub9cc\ub4e0\ub2e4\uace0 \ub9d0\ud558\ub294 \uac70\uc608\uc694.\\n\\n`name`\uc744 \ucd9c\ub825\ud558\ub824\uace0 \ud558\uba74, \ubcc0\uc218\ub294 \uc815\uc758\ub418\uc9c0 \uc54a\uc544, ReferenceError\ub97c \ub358\uc9c8\uac70\uc608\uc694.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"pure \ud568\uc218\ub294 _\ud56d\uc0c1_ \uac19\uc740 \uacb0\uacfc\ub97c \ub9ac\ud134\ud558\ub294 \ud568\uc218\uc608\uc694, \ub9cc\uc57d \uac19\uc740 \uc778\uc218\uac00 \uc804\ub2ec \ub41c\ub2e4\uba74 \ub9d0\uc774\uc8e0.\\n\\n`sum` \ud568\uc218\ub294 \ud56d\uc0c1 \uac19\uc740 \uacb0\uacfc\ub97c \ub9ac\ud134\ud574\uc694. \ub9cc\uc57d `1`\uacfc `2`\ub97c \uc804\ub2ec\ud558\uba74, _\ud56d\uc0c1_ \ubd80\uc791\uc6a9 \uc5c6\uc774 `3`\uc744 \ub9ac\ud134\ud560 \uac70\uc608\uc694. `5`\uc640 `10`\uc744 \uc804\ub2ec\ud558\uba74, _\ud56d\uc0c1_ `15`\ub97c \ub9ac\ud134\ud560 \uac70\uc608\uc694. \uc774\uac8c pure \ud568\uc218\uc758 \uc815\uc758\uc608\uc694.","id":76,"options":["Yes","No"],"question":"\uc774\uac83\uc740 pure \ud568\uc218 \uc77c\uae4c\uc694?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"`add`\ud568\uc218\ub294 _memoization_ \ud568\uc218\uc608\uc694. memoization\uc73c\ub85c, \ud568\uc218 \uc2e4\ud589 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \ud568\uc218\uc758 \uacb0\uacfc\ub97c \uce90\uc2dc\uc5d0 \uc800\uc7a5\ud560 \uc218 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0, \uc774\uc804\uc5d0 \ub9ac\ud134\ub41c \uac12\uc744 \uc800\uc7a5\ud55c `cache` \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc694.\\n\\n\uac19\uc740 \uc778\uc218\ub85c `addFunction` \ud568\uc218\ub97c \ub2e4\uc2dc \ubd80\ub974\uba74, \uc6b0\uc120 cache \uc548\uc5d0 \uac12\uc744 \uac16\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc694. \ub9cc\uc57d \uadf8\ub807\ub2e4\uba74, \uce90\uc2dc\uc5d0 \uc800\uc7a5\ub41c \uac12\uc774 \ub9ac\ud134\ub418\uc5b4, \uc2e4\ud589\uc2dc\uac04\uc774 \uc808\uc57d\ub3fc\uc694. \uce90\uc2dc\uc5d0 \uc800\uc7a5\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74, \uac12\uc744 \uacc4\uc0b0\ud558\uace0 \ub098\uc911\uc5d0 \uc800\uc7a5\ud574\uc694.\\n\\n\uac19\uc740 \uac12\uc73c\ub85c `addFunction`\ud568\uc218\ub97c \uc138 \ubc88 \ubd88\ub7ec\uc694: \uccab \ubc88\uc9f8 \ud638\ucd9c \ub54c\uc5d0\ub294, `num`\uac00 `10`\uc77c \ub54c \ud568\uc218\uc758 \uac12\uc740 \uc544\uc9c1 \uc800\uc7a5\ub418\uc9c0 \uc54a\uc558\uc5b4\uc694. if\ubb38\uc758 \uc870\uac74 `num in cache` \uc740 `false`\uc744 \ub9ac\ud134\ud558\uace0, else \ube14\ub85d\uc774 \uc2e4\ud589\ub3fc\uc694: `Calculated! 20`\uc744 \ucd9c\ub825\ud558\uace0, \uacb0\uacfc \uac12\uc740 cache \uac1d\uccb4\uc5d0 \ucd94\uac00\ub3fc\uc694. `cache` \uc774\uc81c `{ 10: 20 }`\uc640 \uac19\uc544\uc694.\\n\\n\ub450 \ubc88\uc9f8\uc5d4, `cache`\uac1d\uccb4\ub294 `10`\uc744 \uc704\ud574 \ub9ac\ud134\ub420 \uac12\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc5b4\uc694. if\ubb38\uc758 \uc870\uac74 `num in cache`\uc740 `true`\ub97c \ub9ac\ud134\ud558\uace0, `\'From cache! 20\'`\uc774 \ucd9c\ub825\ub3fc\uc694.\\n\\n\uc138 \ubc88\uc9f8\uc5d0\ub294, `5 * 2`\uc744 `10`\uc73c\ub85c \ud3c9\uac00\ud558\uc5ec \ud568\uc218\uc5d0 \uc804\ub2ec\ud574\uc694. `cache` \uac1d\uccb4\ub294 `10`\uc744 \uc704\ud574 \ub9ac\ud134\ub420 \uac12\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc5b4\uc694. if\ubb38\uc758 \uc870\uac74 `num in cache`\uc740 `true`\ub97c \ub9ac\ud134\ud558\uace0, `\'From cache! 20\'`\uc774 \ucd9c\ub825\ub3fc\uc694.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item);\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"_for-in_ \ub8e8\ud504\uc5d0\uc11c\ub294, **\uc5f4\uac70 \uac00\ub2a5\ud55c** \uc18d\uc131\ub4e4\uc5d0 \ub300\ud574 \ubc18\ubcf5 \ud560 \uc218 \uc788\uc5b4\uc694. \ubc30\uc5f4\uc5d0\uc11c, \uc5f4\uac70 \uac00\ub2a5\ud55c \uc18d\uc131\ub4e4\uc740 \ubc30\uc5f4 \uc694\uc18c\ub4e4\uc758 \\"\ud0a4\\"\uc774\uace0, \uc2e4\uc81c\ub85c\ub294 \uadf8\ub4e4\uc758 \uc778\ub371\uc2a4\uc8e0. \ubc30\uc5f4\uc744 \ub2e4\uc74c\uacfc \uac19\uc774 \ubcfc \uc218 \uc788\uc5b4\uc694:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\n\uc5ec\uae30\uc11c \ud0a4\ub294 \uc5f4\uac70 \uac00\ub2a5\ud55c \uc18d\uc131\uc774\uc5d0\uc694. `0` `1` `2` `3`\uc774 \ucd9c\ub825\ub418\uc8e0.\\n\\n_for-of_ \ub8e8\ud504\uc5d0\uc11c\ub294, **\ubc18\ubcf5 \uac00\ub2a5\ud55c** \uc18d\uc131\uc744 \uac00\uc9c4 \uc694\uc18c\uc5d0 \ub300\ud574 \ubc18\ubcf5 \ud560 \uc218 \uc788\uc5b4\uc694. \ubc30\uc5f4\uc740 \ubc18\ubcf5 \uac00\ub2a5\ud574\uc694. \ubc30\uc5f4\uc744 \ubc18\ubcf5\ud560 \ub54c, \\"item\\" \ubcc0\uc218\ub294 \ud604\uc7ac \ubc18\ubcf5\uc911\uc778 \uc694\uc18c\ub85c, `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`\uc774 \ucd9c\ub825\ub3fc\uc694.","id":78,"options":["`0` `1` `2` `3` \uadf8\ub9ac\uace0 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \uadf8\ub9ac\uace0 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \uadf8\ub9ac\uace0 `0` `1` `2` `3`","`0` `1` `2` `3` \uadf8\ub9ac\uace0 `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list);","codeLanguage":"javascript","explanation":"\ubc30\uc5f4 \uc694\uc18c\ub4e4\uc740 \ubaa8\ub4e0 \uac12\uc744 \ud3ec\ud568 \ud560 \uc218 \uc788\uc5b4\uc694. Numbers, strings, objects, \ub2e4\ub978 arrays, null, boolean \uac12, undefined, \uadf8\ub9ac\uace0 \uc790\ub8cc\ud615, \ud568\uc218, \uc5f0\uc0b0\uc790\uc640 \uac19\uc740 \ud45c\ud604\uc2dd\ub4e4\\n\\n\uc694\uc18c\ub294 \ub9ac\ud134\ub41c \uac12\uacfc \uac19\uc544\uc9c8 \uac70\uc608\uc694. `1 + 2`\ub294 `3`\uc744 \ub9ac\ud134\ud558\uace0, `1 * 2`\ub294 `2`\ub97c \ub9ac\ud134\ud558\uace0, `1 / 2` \ub294 `0.5`\uc744 \ub9ac\ud134\ud574\uc694.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi());","codeLanguage":"javascript","explanation":"\uae30\ubcf8\uac12\uc73c\ub85c, \ud568\uc218\uc5d0 \uac12\uc774 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc73c\uba74, \uc778\uc218\ub294 `undefined` \uac12\uc744 \uac00\uc838\uc694. \uc774 \uacbd\uc6b0, `name` \uc778\uc218\ub97c \uc704\ud55c \uac12\uc744 \uc804\ub2ec\ud558\uc9c0 \uc54a\uc558\uc5b4\uc694. `name`\uc740 `undefined`\ub85c \ucd9c\ub825\ub3fc\uc694.\\n\\nES6\uc5d0\uc11c, \uae30\ubcf8\uac12 `undefined` \uac12\uc744 \uae30\ubcf8\uac12 \ud30c\ub77c\ubbf8\ud130\ub85c \ub36e\uc5b4\uc4f8 \uc218 \uc788\uc5b4\uc694. \uc608\ub97c \ub4e4\uba74:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\n\uc774 \uacbd\uc6b0, \uac12\uc744 \uc804\ub2ec\ud558\uc9c0 \uc54a\uac70\ub098 `undefined`\ub97c \uc804\ub2ec\ud558\uba74, `name`\uc740 \ud56d\uc0c1 \ubb38\uc790\uc5f4 `Lydia`\uac00 \ub420 \uac70\uc608\uc694.","id":80,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\";\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\";\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status;\\n    }\\n  };\\n\\n  console.log(data.getStatus());\\n  console.log(data.getStatus.call(this));\\n}, 0);","codeLanguage":"javascript","explanation":"`this`\ud0a4\uc6cc\ub4dc\uc758 \uac12\uc740 \uc0ac\uc6a9\ud558\ub294 \uacf3\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc694. **\uba54\uc18c\ub4dc**\uc5d0\uc11c `getStatus`\uba54\uc18c\ub4dc \ucc98\ub7fc, `this`\ud0a4\uc6cc\ub4dc\ub294 _\uba54\uc18c\ub4dc\uac00 \uc18d\ud55c \uac1d\uccb4_ \ub97c \ucc38\uc870\ud574\uc694. \uc774 \uba54\uc18c\ub4dc\ub294 `data` \uac1d\uccb4\uc5d0 \uc18d\ud574 \uc788\uc5b4, `this`\ub294 `data`\uac1d\uccb4\ub97c \ucc38\uc870\ud574\uc694. `this.status`\ub97c \ucd9c\ub825\ud560 \ub54c, `data`\uac1d\uccb4\uc758 `status` \uc18d\uc131 `\\"\ud83e\udd51\\"`\uc774 \ucd9c\ub825\ub3fc\uc694.\\n\\n`call` \uba54\uc18c\ub4dc\uc5d0\uc11c\ub294, `this` \ud0a4\uc6cc\ub4dc\uac00 \ucc38\uc870\ud558\ub294 \uac1d\uccb4\ub97c \ubc14\uafc0 \uc218 \uc788\uc5b4\uc694. **\ud568\uc218**\uc5d0\uc11c, `this` \ud0a4\uc6cc\ub4dc\ub294 _\ud568\uc218\uac00 \uc18d\ud55c \uac1d\uccb4_ \ub97c \ucc38\uc870\ud574\uc694. `setTimeout` \ud568\uc218\ub97c _\uc804\uc5ed \uac1d\uccb4_ \uc5d0 \uc120\uc5b8\ud588\uace0, `setTimeout` \ud568\uc218 \uc548\uc5d0\uc11c, `this`\ud0a4\uc6cc\ub4dc\ub294 _\uc804\uc5ed \uac1d\uccb4_ \ub97c \ucc38\uc870\ud574\uc694. \uc804\uc5ed \uac1d\uccb4\uc5d0\uc11c, \ubcc0\uc218\ub294 `\\"\ud83d\ude0e\\"`\uac12\uc744 \uac00\uc9c4 _status_ \ub97c \ubd80\ub974\uc8e0. `this.status`\ub97c \ucd9c\ub825\ud558\uba74, `\\"\ud83d\ude0e\\"`\uc774 \ucd9c\ub825\ub3fc\uc694.","id":81,"options":["`\\"\ud83e\udd51\\"` \uadf8\ub9ac\uace0 `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` \uadf8\ub9ac\uace0 `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` \uadf8\ub9ac\uace0 `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` \uadf8\ub9ac\uace0 `\\"\ud83d\ude0e\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nlet city = person.city;\\ncity = \\"Amsterdam\\";\\n\\nconsole.log(person);","codeLanguage":"javascript","explanation":"`city` \ubcc0\uc218\ub97c `person` \uac1d\uccb4\uc758 `city`\ub77c\uace0 \ubd88\ub9ac\ub294 \uc18d\uc131 \uac12\uc73c\ub85c \uc124\uc815 \ud588\uc5b4\uc694. \uc774 \uac1d\uccb4\uc5d0\uc11c\ub294 `city`\ub77c\uace0 \ubd88\ub9ac\ub294 \uc18d\uc131\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0, `city`\ub294 `undefined`\uc758 \uac12\uc744 \uac00\uc838\uc694. \\n\\n`person`\uac1d\uccb4 \uc790\uccb4\ub97c \ucc38\uc870 _\ud558\uc9c0\uc54a\ub294_ \ub2e4\ub294 \uac78 \ucc38\uace0\ud574\uc694! \ubcc0\uc218 `city`\ub294 `person` \uac1d\uccb4\uc758 `city` \ud604\uc7ac \uc18d\uc131 \uac12\uc73c\ub85c \uc124\uc815 \ud588\uc744 \ubfd0\uc774\uc8e0.\\n\\n\uadf8\ub7ec\ubbc0\ub85c, \uc6b0\ub9ac\ub294 `city`\ub97c \ubb38\uc790\uc5f4 `\\"Amsterdam\\"`\ub85c \uc124\uc815 \ud588\uc5b4\uc694. \uc774\uac74 person \uac1d\uccb4\ub97c \ubc14\uafb8\uc9c0 \uc54a\uc544\uc694: \uc5ec\uae30\uc11c \uac1d\uccb4\ub97c \ucc38\uc870\ud558\ub294 \uac74 \uc5c6\uc5b4\uc694.\\n\\n`person`\uac1d\uccb4\ub97c \ucd9c\ub825\ud560 \ub54c, \uc218\uc815\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\uac00 \ub9ac\ud134 \ubc1b\uc544\uc694.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\";\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\";\\n  }\\n\\n  return message;\\n}\\n\\nconsole.log(checkAge(21));","codeLanguage":"javascript","explanation":"`const`\uc640 `let` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud55c \ubcc0\uc218\ub294 _\ube14\ub85d-\uc2a4\ucf54\ud504_ \uc608\uc694. \ube14\ub85d\uc740 \uc911\uad04\ud638 (`{ }`) \uc0ac\uc774\uc5d0 \uc788\ub294 \uac83\uc774\uc8e0. \uc774 \uacbd\uc6b0, if/else \ud45c\ud604\uc2dd\uc758 \uc911\uad04\ud638\ub97c \uc758\ubbf8\ud574\uc694. \ube14\ub85d \uc548\uc5d0 \uc120\uc5b8\ub41c \uac74 \ube14\ub85d \ubc16\uc758 \ubcc0\uc218\ub4e4\uc744 \ucc38\uc870\ud558\uc9c0 \ubabb\ud574, ReferenceError\ub97c \ub358\uc838\uc694.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res));","codeLanguage":"javascript","explanation":"\ub450\ubc88\uc9f8 `.then`\uc5d0\uc11c\uc758 `res`\uc758 \uac12\uc740 \uc774\uc804`.then`\uc5d0\uc11c \ub9ac\ud134\ub41c \uac12\uc774\uc5d0\uc694. \uc774\uac83 \ucc98\ub7fc `.then`\uc744 \uacc4\uc18d\ud574\uc11c \uc5f0\uacb0\ud560 \uc218 \uc788\uace0, \uac12\uc740 \uacc4\uc18d\ud574\uc11c \ub2e4\uc74c \ud578\ub4e4\ub7ec\ub85c \uc804\ub2ec \ub3fc\uc694.","id":84,"options":["`fetch` \uba54\uc18c\ub4dc\uc758 \uacb0\uacfc","`fetch` \uba54\uc18c\ub4dc\uc758 \ub450\ubc88\uc9f8 \ud638\ucd9c \uacb0\uacfc","\uc774\uc804 `.then()`\uc5d0\uc11c callback\ub41c \uacb0\uacfc","\ud56d\uc0c1 undefined"],"question":"\uc5b4\ub5a4 \uc885\ub958\uc758 \uc815\ubcf4\uac00 \ucd9c\ub825\ub420\uae4c\uc694?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"`!!name`\uc5d0\uc11c, \uc6b0\ub9ac\ub294 `name`\uc758 \uac12\uc774 \ucc38 \uac19\uc740\uc9c0 \uac70\uc9d3 \uac19\uc740\uc9c0 \uacb0\uc815\ud574\uc694. \ub9cc\uc57d \ud14c\uc2a4\ud2b8 \ud558\ub824\ub294 name\uc774 \ucc38 \uac19\ub2e4\uba74, `!name`\uc740 `false`\ub97c \ub9ac\ud134\ud574\uc694. `!false` (\uc2e4\uc81c\ub85c\ub294 `!!name`)\ub294 `true`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n`hasName`\uc744 `name`\uc73c\ub85c \uc124\uc815\ud558\uba74, `hasName`\uc740 \ubd88\ub9b0 \uac12 `true`\uac00 \uc544\ub2c8\ub77c, `getName` \ud568\uc218\uc5d0 \uc804\ub2ec\ub41c \uac12\uc73c\ub85c \uc124\uc815\ud574\uc694.\\n\\n`new Boolean(true)`\uc740 \ubd88\ub9b0 \uac12 \uc790\uccb4\uac00 \uc544\ub2cc, \uac10\uc2fc \uac1d\uccb4\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n`name.length`\uc740 \uadf8\uac83\uc758 `true`\uc758 \uc5ec\ubd80\uac00 \uc544\ub2cc, \uc804\ub2ec\ub41c \uc778\uc218\uc758 \uae38\uc774\ub97c \ub9ac\ud134\ud574\uc694.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"`true`\ub97c \uc778\uc218\ub85c \uc804\ub2ec \ud560 \uc218 \uc5c6\ub3c4\ub85d \uc8fc\uc5b4\uc84c\uc744 \ub54c, `hasName`\uc744 `true`\ub85c \uc124\uc815\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc740 \uc5b4\ub290 \uac83 \uc77c\uae4c\uc694?"},{"answer":1,"code":"console.log(\\"I want pizza\\"[0]);","codeLanguage":"javascript","explanation":"\ubb38\uc790\uc5f4\uc758 \ud2b9\uc815 \uc778\ub371\uc2a4\uc758 \ubb38\uc790\ub97c \uc5bb\uc73c\ub824\uba74, \ub300\uad04\ud638 \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud558\uba74 \ub3fc\uc694. \ubb38\uc790\uc5f4\uc758 \uccab \ubc88\uc9f8 \ubb38\uc790\ub294 \uc778\ub371\uc2a4 0\uacfc \uae30\ud0c0\ub4f1\ub4f1\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0 \ubb38\uc790 `\\"I\'`\uc778 \uc778\ub371\uc2a4 0\uc774 \ucd9c\ub825\ub418\ub294 \uc694\uc18c\ub97c \uac16\uae38 \uc6d0\ud574\uc694.\\n\\n\uc774 \ubc29\ubc95\uc740 IE7 \uc774\ud558\uc5d0\uc11c\ub294 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc744 \uc720\uc758\ud558\uc138\uc694. \uc774 \uacbd\uc6b0, `.charAt()`\ub97c \uc0ac\uc6a9\ud558\uc138\uc694.","id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"\uae30\ubcf8 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc740 \uae30\ubcf8 \ud30c\ub77c\ubbf8\ud130\ub97c \uc815\uc758\ud558\uae30 _\uc804_ \uc774\ub77c\uba74, \ud568\uc218\uc758 \ub2e4\ub978 \ud30c\ub77c\ubbf8\ud130\uc640 \uac19\uac8c \uc124\uc815 \ud560 \uc218 \uc788\uc5b4\uc694. \uc6b0\ub9ac\ub294 `sum` \ud568\uc218\uc5d0 \uac12 `10`\uc744 \uc804\ub2ec \ud588\uc5b4\uc694. \ub9cc\uc57d `sum` \ud568\uc218\uc5d0 \uc778\uc218\uc758 \uac12\uc744 \ud558\ub098\ub9cc \ubc1b\uc558\ub2e4\uba74, `num2`\ub97c \uc704\ud55c \uac12\uc740 \uc804\ub2ec\ub418\uc9c0 \uc54a\uace0, `num1`\uc740 \uc804\ub2ec\ub41c \uac12\uacfc \uac19\ub2e4\ub294 \uc758\ubbf8\uc5d0\uc694. `num1`\uc758 \uae30\ubcf8\uac12\uc740 `num1`\uc758 \uac12\uc778 `10`\uacfc \uac19\uc544\uc694. `num1 + num2`\ub294 `20`\uc744 \ub9ac\ud134\ud574\uc694.\\n\\n\ub9cc\uc57d \uae30\ubcf8 \ud30c\ub9ac\ubbf8\ud130\uac00 \uc815\uc758\ub41c _\ud6c4_ (\uc624\ub978\ucabd\uc5d0) \uae30\ubcf8 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc744 \uc124\uc815\ud558\ub824\uace0 \uc2dc\ub3c4\ud55c\ub2e4\uba74, \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc740 \uc544\uc9c1 \ucd08\uae30\ud654\ub418\uc9c0 \uc54a\uc544, \uc624\ub958\ub97c \ub358\uc9c8 \uac70\uc5d0\uc694.","id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"`import * as name` \uc2e0\ud0dd\uc2a4\ub97c \uc0ac\uc6a9\ud574\uc11c, `module.js` \ud30c\uc77c\uc5d0 \uc788\ub294 _\ubaa8\ub4e0 exports_ \ub97c `index.js` \ud30c\uc77c \uc548\uc5d0 `data`\ub77c\uace0 \ubd88\ub9ac\ub294 \uc0c8\ub85c\uc6b4 \uac1d\uccb4\ub97c \uc0dd\uc131\ud574\uc694. `module.js` \ud30c\uc77c\uc5d0\ub294, 2\uac1c\uc758 export\uac00 \uc788\uc5b4\uc694: default export \uc640 named export. default export\ub294 \ubb38\uc790\uc5f4 `\\"Hello World\\"`\uc744 \ub9ac\ud134\ud558\ub294 \ud568\uc218\uace0, named export\ub294 \ubb38\uc790\uc5f4 `\\"Lydia\\"`\uc758 \uac12\uc744 \uac00\uc9c4 `name`\uc774\ub77c\uace0 \ubd88\ub9ac\ub294 \ubcc0\uc218\uc608\uc694.\\n\\n`data` \uac1d\uccb4\ub294 default export\ub97c \uc704\ud55c `default` \uc18d\uc131\uc744 \uac00\uc9c0\uace0, \ub2e4\ub978 \uc18d\uc131\ub4e4\uc740 named exports\uc758 \uc774\ub984\ub4e4\uacfc \uadf8\uc5d0 \ud574\ub2f9\ud558\ub294 \uac12\ub4e4\uc744 \uac00\uc838\uc694.","id":88,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"Class\ub294 \ud568\uc218 \uc0dd\uc131\uc790\ub97c \uc704\ud55c \ubb38\ubc95\uc801 \uc124\ud0d5\uc774\uc5d0\uc694. \ud568\uc218 \uc0dd\uc131\uc790\ub85c\uc11c `Person` \ud074\ub798\uc2a4\uc640 \ub3d9\ub4f1\ud55c \uac83\uc740 \ub2e4\uc74c\uacfc \uac19\uc544\uc694:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name;\\n}\\n```\\n\\n`new`\uc640 \ud568\uaed8 \ubd88\ub824\uc9c4 \ud568\uc218 \uc0dd\uc131\uc790\ub294 `Person`\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uace0, `typeof` \ud0a4\uc6cc\ub4dc\ub294 \uc778\uc2a4\ud134\uc2a4\uc758 `\\"object\\"`\ub97c \ub9ac\ud134\ud574\uc694. `typeof member`\ub294 `\\"object\\"`\uc744 \ub9ac\ud134\ud574\uc694.","id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"`.push` \uba54\uc18c\ub4dc\ub294 \ubc30\uc5f4 \uc790\uccb4\uac00 \uc544\ub2c8\ub77c, \ubc30\uc5f4\uc758 _\uc0c8\ub85c\uc6b4 \uae38\uc774_ \ub97c \ub9ac\ud134\ud574\uc694! `newList`\ub97c `[1, 2, 3].push(4)`\uacfc \ub3d9\uc77c\ud558\uac8c \uc124\uc815\ud568\uc73c\ub85c\uc368, `newList`\ub97c \ubc30\uc5f4\uc758 \uc0c8\ub85c\uc6b4 \uae38\uc774\uc640 \ub3d9\uc77c\ud558\uac8c \uc124\uc815\ud588\uc5b4\uc694: `4`.\\n\\n\uadf8\ub9ac\uace0\ub098\uc11c, `.push` \uba54\uc18c\ub4dc\ub97c `newList`\uc5d0 \uc0ac\uc6a9\ud558\ub824\uace0 \ud588\uc5b4\uc694. `newList`\ub294 \uc22b\uc790 \uac12 `4` \uc774\uae30 \ub54c\ubb38\uc5d0, `.push` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc5b4\uc694: TypeError\uac00 \ub358\uc838\uc838\uc694.","id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"`giveLydiaPizza`\uc640 \uac19\uc740 \uc815\uaddc \ud568\uc218\ub294, `\uc0dd\uc131\uc790` \uc18d\uc131\uc744 \uac00\uc9c4 `\ud504\ub85c\ud1a0\ud0c0\uc785` \uac1d\uccb4(\ud504\ub85c\ud1a0\ud0c0\uc785 \uac1d\uccb4)\ub97c \uc18d\uc131\uc73c\ub85c \uac00\uc838\uc694. \uadf8\ub7ec\ub098 `giveLydiaChocolate` \ud568\uc218\uc640 \uac19\uc740 \ud654\uc0b4\ud45c \ud568\uc218\uc5d0\uc11c\ub294, `prototype` \uc18d\uc131\uc744 \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\uc544\uc694. `giveLydiaChocolate.prototype`\uc744 \uc0ac\uc6a9\ud574 `prototype` \uc18d\uc131\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud560\ub54c, `undefined`\uc774 \ub9ac\ud134\ub420 \uac70\uc5d0\uc694.","id":91,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)`\uc740 \ud0a4\uc640 \uac12\uc744 \uc138\ud2b8\ub85c \uac00\uc9c4 \ubc30\uc5f4\uc758 \ubc30\uc5f4\uc744 \ub9ac\ud134\ud574\uc694:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]` \\n\\n`for-of` \ub8e8\ud504\ub97c \uc0ac\uc6a9\ud574\uc11c, \ubc30\uc5f4 \uc548\uc5d0 \uac01 \uc694\uc18c\ub97c \uacc4\uc18d\ud574\uc11c \ubc18\ubcf5\ud560 \uc218 \uc788\ub294\ub370, \uc774 \uacbd\uc6b0\uc5d4 \ud558\uc704 \ubc30\uc5f4\uc774\uc5d0\uc694. \ud558\uc704 \ubc30\uc5f4\uc744 `const [x, y]`\uc744 \uc0ac\uc6a9\ud574, for-of \ub8e8\ud504\uc5d0\uc11c \uc989\uc2dc \ubd84\ud574\ud560 \uc218 \uc788\uc5b4\uc694. `x`\ub294 \ud558\uc704 \ubc30\uc5f4\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\uc640 \uac19\uace0, `y`\ub294 \ud558\uc704 \ubc30\uc5f4\uc758 \ub450 \ubc88\uc9f8 \uc694\uc18c\uc640 \uac19\uc544\uc694.\\n\\n\uccab\ubc88\uc9f8 \ud558\uc704\uc694\uc18c\ub294 `[ \\"name\\", \\"Lydia\\" ]`\ub85c, `x`\ub294 `\\"name\\"`, `y`\ub294 `\\"Lydia\\"`\uc744 \ucd9c\ub825\ud574\uc694.\\n\ub450\ubc88\uc9f8 \ud558\uc704\uc694\uc18c\ub294 `[ \\"age\\", 21 ]`\ub85c, `x`\ub294 `\\"age\\"`, `y`\ub294 `21`\uc744 \ucd9c\ub825\ud574\uc694.","id":92,"options":["`name` `Lydia` \uadf8\ub9ac\uace0 `age` `21`","`[\\"name\\", \\"Lydia\\"]` \uadf8\ub9ac\uace0 `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` \uadf8\ub9ac\uace0 `undefined`","`Error`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\nconsole.log(getItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"))","codeLanguage":"javascript","explanation":"`...args`\uc740 \ub098\uba38\uc9c0 \ud30c\ub77c\ubbf8\ud130\uc608\uc694. \ub098\uba38\uc9c0 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc740 \ubaa8\ub4e0 \ub098\uba38\uc9c0 \uc778\uc218\ub4e4\uc744 \ud3ec\ud568\ud55c \ubc30\uc5f4\uc774\uba70, **\ub9c8\uc9c0\ub9c9 \ud30c\ub77c\ubbf8\ud130\ub9cc \ub420 \uc218 \uc788\uc5b4\uc694**! \uc9c0\uae08 \uc608\uc2dc\uc5d0\uc11c\ub294, \ub098\uba38\uc9c0 \ud30c\ub77c\ubbf8\ud130\ub294 \ub450\ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc608\uc694. \uc774\uac83\uc740 \ubd88\uac00\ub2a5\ud558\uace0, \uc2e0\ud0dd\uc2a4 \uc5d0\ub7ec\ub97c \ub358\uc9c0\uac8c \ub420\uac70\uc5d0\uc694.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nThe above example works. This returns the array `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"function nums(a, b) {\\n  if\\n  (a > b)\\n  console.log(\'a is bigger\')\\n  else \\n  console.log(\'b is bigger\')\\n  return \\n  a + b\\n}\\n\\nconsole.log(nums(4, 2))\\nconsole.log(nums(1, 2))","codeLanguage":"javascript","explanation":"JavaScript\uc5d0\uc11c, \uc138\ubbf8\ucf5c\ub860\uc744 (`;`)\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\ud558\uc5ec \uc4f0\uc9c0 _\uc54a_ \ub354\ub77c\ub3c4, JavaScript \uc5d4\uc9c4\uc740 \uc5ec\uc804\ud788 \ubb38 \ub4a4\uc5d0 \uadf8\ub4e4\uc744 \ucd94\uac00\ud574\uc918\uc694. \uc774\uac83\uc740 **\uc790\ub3d9 \uc138\ubbf8\ucf5c\ub860 \uc0bd\uc785**\uc774\ub77c\uace0 \ubd88\ub824\uc694. \uc608\ub97c \ub4e4\uc5b4 \ubb38\uc740 \ubcc0\uc218, \ub610\ub294 `throw`, `return`, `break` \ub4f1\uacfc \uac19\uc740 \ud0a4\uc6cc\ub4dc\uac00 \ub420 \uc218\ub3c4 \uc788\uc5b4\uc694.\\n\\n\uc5ec\uae30, `return`\ubb38\uc744 \uc37c\uace0, \ub2e4\ub978 \uac12 `a + b`\uc740 _\uc0c8\ub85c\uc6b4 \uc904_ \uc5d0 \uc4f0\uc600\uc5b4\uc694. \uadf8\ub7ec\ub098, \uc0c8\ub85c\uc6b4 \uc904\uc774\uae30 \ub54c\ubb38\uc5d0, \uc5d4\uc9c4\uc740 \uc2e4\uc81c\ub85c \uadf8 \uac12\uc774 \ub9ac\ud134\ub418\uae38 \ubc14\ub77c\ub294\uc9c0 \uc54c \uc218 \uc5c6\uc5b4\uc694. \ub300\uc2e0\uc5d0, \uc790\ub3d9\uc801\uc73c\ub85c `return` \ub4a4\uc5d0 \uc138\ubbf8\ucf5c\ub860\uc744 \ub354\ud574\uc918\uc694. \uc774\uac83\uc744 \ubcfc \uc218 \uc788\uc744\uac70\uc5d0\uc694:\\n\\n```javascript\\n  return;\\n  a + b\\n```\\n\\n`return` \ud0a4\uc6cc\ub4dc \ub4a4\uc5d0 \ud568\uc218\uac00 \uc2e4\ud589\ub418\ub294 \uac83\uc774 \uc911\ub2e8\ub418\uae30 \ub54c\ubb38\uc5d0, `a + b`\uc758 \uc758\ubbf8\ub294 \ub3c4\ub2ec\ub418\uc9c0 \uc54a\uc544\uc694. \uc5ec\uae30\uc11c \ucc98\ub7fc, \ub9cc\uc57d \uc544\ubb34 \uac12\ub3c4 \ub9ac\ud134\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74, \ud568\uc218\ub294 `undefined`\ub97c \ub9ac\ud134\ud560 \uac70\uc608\uc694. `if/else`\ubb38 \ub4a4\uc5d0\ub294 \uc790\ub3d9\uc73c\ub85c \uc0bd\uc785\ub418\ub294 \uac8c \uc5c6\ub2e4\ub294 \uac78 \uc720\uc758\ud574\uc694!","id":94,"options":["`a is bigger`, `6` \uadf8\ub9ac\uace0 `b is bigger`, `3`","`a is bigger`, `undefined` \uadf8\ub9ac\uace0 `b is bigger`, `undefined`","`undefined` \uadf8\ub9ac\uace0 `undefined`","`SyntaxError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"\ub2e4\ub978 \ud074\ub798\uc2a4/\ud568\uc218 \uc0dd\uc131\uc790\ub85c \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0, `Person`\uc744 `AnotherPerson`\ub85c \uc124\uc815\ud588\uc5b4\uc694. \uc774 \uc0dd\uc131\uc790\uc758 name\uc740 `Sarah`\uc608\uc694, \ub530\ub77c\uc11c \uc0c8\ub85c\uc6b4 `Person`\uc758 \uc778\uc2a4\ud134\uc2a4 `member`\uc758 name \uc18d\uc131\uc740 `\\"Sarah\\"`\uc608\uc694.","id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"\uc2ec\ubcfc\uc740 _\uc5f4\uac70 \ubd88\uac00\ub2a5_ \ud574\uc694. Object.keys \uba54\uc18c\ub4dc\ub294 \uac1d\uccb4\uc758 \ubaa8\ub4e0 _\uc5f4\uac70 \uac00\ub2a5_ \ud55c \ud0a4 \uc18d\uc131\ub4e4\uc744 \ub9ac\ud134\ud574\uc694. \uc2ec\ubcfc\uc740 \ubcf4\uc774\uc9c0 \uc54a\uace0, \ube48 \uac1d\uccb4\uac00 \ub9ac\ud134\ub3fc\uc694. \uac1d\uccb4 \uc804\uccb4\ub97c \ucd9c\ub825\ud560\ub54c, \ubaa8\ub4e0 \uc18d\uc131\ub4e4\uc740 \ubcf4\uc5ec\uc694, \uc2ec\uc9c0\uc5b4 \uc5f4\uac70 \ubd88\uac00\ub2a5\ud55c \uac83\uc774\ub77c\ud574\ub3c4.\\n\\n\uc774\uac83\uc740 \uc2ec\ubcfc\uc758 \ub9ce\uc740 \ud2b9\uc131 \uc911 \ud558\ub098\uc5d0\uc694: \uc644\uc804\ud788 \uace0\uc720\ud55c \uac12(\uc608\ub97c\ub4e4\uc5b4 2\uac1c\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uac19\uc740 \uac1d\uccb4\uc758 \uc18d\uc131\uc73c\ub85c \ucd94\uac00\ud558\uace0 \uc2f6\uc744\ub54c, \uac1d\uccb4\uc758 \uc6b0\uc5f0\ud55c \uc774\ub984 \ucda9\ub3cc\uc744 \ubc29\uc9c0\ud574\uc694)\uc744 \ub098\ud0c0\ub0b4\ub294 \uac83 \uc678\uc5d0, \uc774 \ubc29\ubc95\uc73c\ub85c \uac1d\uccb4\uc758 \uc18d\uc131\uc744 \\"\uc228\uae38\\" \uc218 \uc788\uc5b4\uc694(\ube44\ub85d \uc644\uc804\ud788\ub294 \uc544\ub2d0\uc9c0\ub77c\ub3c4. \uc5ec\uc804\ud788 `Object.getOwnPropertySymbols()` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574 \uc2ec\ubcfc\uc5d0 \uc811\uadfc \ud560 \uc218 \uc788\uc5b4\uc694).","id":96,"options":["`{Symbol(\'a\'): \'b\'}` \uadf8\ub9ac\uace0 `[\\"{Symbol(\'a\')\\"]`","`{}` \uadf8\ub9ac\uace0 `[]`","`{ a: \\"b\\" }` \uadf8\ub9ac\uace0 `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` \uadf8\ub9ac\uace0 `[]`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"`getList`\ud568\uc218\ub294 \ubc30\uc5f4\uc744 \uc778\uc218\ub85c \ubc1b\uc558\uc5b4\uc694. `getList` \ud568\uc218\uc758 \uad04\ud638 \uc0ac\uc774\uc5d0 \uc788\ub294 \ubc30\uc5f4\uc744 \uc989\uc2dc \ubd84\ud574 \ud588\uc5b4\uc694:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\n\ub098\uba38\uc9c0 \ud30c\ub77c\ubbf8\ud130\ub97c \uc0ac\uc6a9\ud574 `...y`\uc5d0 \ubaa8\ub4e0 \\"\ub0a8\uc740\\" \uc778\uc218\ub4e4\uc744 \ubc30\uc5f4\uc5d0 \ub123\uc5c8\uc5b4\uc694. \uc774 \uacbd\uc6b0\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \uc778\uc218\ub294 `2`, `3` \uadf8\ub9ac\uace0 `4`\uc608\uc694. `y`\uc758 \uac12\uc740 \ubc30\uc5f4\uc774\uace0, \ubaa8\ub4e0 \ub098\uba38\uc9c0 \ud30c\ub77c\ubbf8\ud130\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0 `x`\uc758 \uac12\uc740 `1`\uc774\uae30 \ub54c\ubb38\uc5d0, `[x, y]`\ub294 `[1, [2, 3, 4]]`\ub85c \ucd9c\ub825\ub3fc\uc694.\\n\\n`getUser` \ud568\uc218\ub294 \ubc30\uc5f4\uc744 \ubc1b\uc558\uc5b4\uc694. \ud654\uc0b4\ud45c \ud568\uc218\uc5d0\uc11c, \uc6b0\ub9ac\uac00 \ud55c\uac1c\uc758 \uac12\uc744 \ub9ac\ud134\ud55c\ub2e4\uba74 \uc911\uad04\ud638\ub97c \uc0ac\uc6a9\ud560 _\ud544\uc694_ \uac00 \uc5c6\uc5b4\uc694. \uadf8\ub7ec\ub098, \ub9cc\uc57d \ud654\uc0b4\ud45c \ud568\uc218\uc5d0\uc11c _\uac1d\uccb4_ \ub97c \ub9ac\ud134\ud558\uace0 \uc2f6\ub2e4\uba74, \uad04\ud638 \uc0ac\uc774\uc5d0 \ub9ac\ud134\ud560 \uac12\uc744 \uc368\uc57c\ud574\uc694, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc544\ubb34 \uac12\ub3c4 \ub9ac\ud134\ubc1b\uc744 \uc218 \uc5c6\uc5b4\uc694! \ub2e4\uc74c \ud568\uc218\uc5d0\uc11c\ub294 \uac1d\uccb4\uac00 \ub9ac\ud134 \ub420 \uac70\uc5d0\uc694:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\n\uc774 \uacbd\uc6b0 \uac12\uc774 \ub9ac\ud134\ub418\ub294 \uac12\uc774 \uc5c6\uc73c\ubbc0\ub85c, \ud568\uc218\ub294 `undefined`\uc744 \ub9ac\ud134\ud560\uac70\uc5d0\uc694.","id":97,"options":["`[1, [2, 3, 4]]` \uadf8\ub9ac\uace0 `undefined`","`[1, [2, 3, 4]]` \uadf8\ub9ac\uace0 `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` \uadf8\ub9ac\uace0 `{ name: \\"Lydia\\", age: 21 }`","`Error` \uadf8\ub9ac\uace0 `{ name: \\"Lydia\\", age: 21 }`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"\ubcc0\uc218 `name`\uc740 \ubb38\uc790\uc5f4\uc744 \uac12\uc73c\ub85c \uac00\uc9c0\uace0 \uc788\uace0, \ud568\uc218\uac00 \uc544\ub2c8\uc8e0, \ub530\ub77c\uc11c \ud638\ucd9c\ud560 \uc218 \uc5c6\uc5b4\uc694.\\n\\nTypeErrors\ub294 \uac12\uc774 \uc608\uc0c1\ub41c \uc720\ud615\uc774 \uc544\ub2d0 \uacbd\uc6b0 \ub358\uc838\uc838\uc694. JavaScript\ub294 `name`\uc744 \ud638\ucd9c\ud558\ub824\uace0 \ud588\uae30 \ub54c\ubb38\uc5d0 \ud568\uc218\uc77c\uac70\ub77c \uc608\uc0c1\ud588\uc5b4\uc694. \uadf8\ub7ec\ub098 \ubb38\uc790\uc5f4\uc774\uc600\uae30 \ub54c\ubb38\uc5d0, TypeError\uac00 \ub358\uc838\uc838\uc694: name\uc740 \ud568\uc218\uac00 \uc544\ub2c8\uc8e0!\\n\\nSyntaxErrors\ub294 \uc5b4\ub5a4 \uac83\uc744 \uc37c\uc744\ub54c JavaScript\uc5d0\uc11c \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \ub54c \ub358\uc838\uc838\uc694, \uc608\ub97c\ub4e4\uc5b4 `return`\uc744 `retrun`\ub85c \uc37c\uc744\ub54c \ub9d0\uc774\uc8e0.\\n\\nReferenceErrors\ub294 JavaScript\uac00 \uc811\uadfc\ud558\ub824\uace0 \ud558\ub294 \uac12\uc758 \ucc38\uc870\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c \ub358\uc838\uc838\uc694.","id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":1,"code":"// \ud83c\udf89\u2728 \uc774\ubc88\uc774 \ub0b4 100\ubc88\uc9f8 \uc9c8\ubb38\uc774\uc5d0\uc694! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]`\uc740 \ucc38 \uac19\uc740 \uac12\uc774\uc5d0\uc694. `&&` \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c, \ub9cc\uc57d \uc67c\ucabd\uc5d0 \uc788\ub294 \uac12\uc774 \ucc38 \uac19\uc740 \uac12\uc774\ub77c\uba74 \uc624\ub978\ucabd \uac12\uc740 \ub9ac\ud134\ub420 \uac70\uc5d0\uc694. \uc774 \uacbd\uc6b0, \uc67c\ucabd\uc758 \uac12 `[]`\uc740 \ucc38 \uac19\uc740 \uac12\uc774\uc5d0\uc694, \ub530\ub77c\uc11c `\'Im\'`\uc740 \ub9ac\ud134\ub420 \uac70\uc608\uc694.\\n\\n`\\"\\"`\uc740 \uac70\uc9d3 \uac19\uc740 \uac12\uc774\uc5d0\uc694. \ub9cc\uc57d \uc67c\ucabd \uac12\uc774 \uac70\uc9d3 \uac19\uc740 \uac12\uc774\ub77c\uba74, \ub9ac\ud134\ub418\ub294 \uac83\uc740 \uc5c6\uc5b4\uc694. `n\'t`\uc740 \ub9ac\ud134\ub418\uc9c0 \uc54a\uc544\uc694.","id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"output\uc758 \uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"`||` \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud558\uba74, \ucd5c\ucd08\uc758 \ucc38 \uac19\uc740 \ud53c\uc5f0\uc0b0\uc790\ub97c \ub9ac\ud134\ud574\uc694. \ub9cc\uc57d \ubaa8\ub4e0 \uac12\uc774 \uac70\uc9d3 \uac19\ub2e4\uba74, \ub9c8\uc9c0\ub9c9 \ud53c\uc5f0\uc0b0\uc790\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n`(false || {} || null)`: \ube48 \uac1d\uccb4 `{}`\ub294 \uc9c4\uc9dc \uac19\uc740 \uac12\uc774\uc5d0\uc694. \uc774\uac83\uc740 \ucd5c\ucd08\ub85c(\uadf8\ub9ac\uace0 \uc720\uc77c\ud558\uac8c) \uc9c4\uc9dc \uac19\uc740 \uac12\uc774\ub77c \ub9ac\ud134\ub3fc\uc694. `one`\uc740 `{}`\uc774\uc5d0\uc694.\\n\\n`(null || false || \\"\\")`: \ubaa8\ub4e0 \ud53c\uc5f0\uc0b0\uc790\ub294 \uac00\uc9dc \uac19\uc740 \uac12\uc774\uc5d0\uc694. \uc774\uac83\uc740 \ub9c8\uc9c0\ub9c9 \ud53c\uc5f0\uc0b0\uc790 `\\"\\"`\uac00 \ub9ac\ud134\ub41c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud574\uc694. `two`\ub294 `\\"\\"`\uc774\uc5d0\uc694.\\n\\n`([] || 0 || \\"\\")`: \ube48 \ubc30\uc5f4 `[]`\uc740 \uc9c4\uc9dc \uac19\uc740 \uac12\uc774\uc5d0\uc694. \uc774\uac83\uc740 \ucd5c\ucd08\uc758 \uc9c4\uc9dc \uac19\uc740 \uac12\uc774\ub77c \ub9ac\ud134\ub3fc\uc694. `three`\uc740 `[]`\uc774\uc5d0\uc694.","id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"promise\ub97c \uc0ac\uc6a9\ud558\uba74, \uae30\ubcf8\uc801\uc73c\ub85c _\uc774 \ud568\uc218\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\uc9c0\ub9cc, \uc2dc\uac04\uc774 \uc880 \uac78\ub9b4 \uc218 \uc788\uc73c\ub2c8 \uc2e4\ud589 \uc911\uc5d0 \uc7a0\uc2dc \ubbf8\ub904\ub458\uac70\uc5d0\uc694. \ud655\uc2e4\ud55c \uac12\uc774 resoloved(\ud639\uc740 rejected)\ub85c \uc804\ub2ec\ub418\uc5c8\uc744 \ub54c\uc640 \ucf5c \uc2a4\ud0dd\uc774 \ube44\uc5c8\uc744 \ub54c \uc774 \uac12\uc744 \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc5b4\uc694_ \ub77c\uace0 \ub9d0\ud574\uc694.\\n\\n`async` \ud568\uc218 \uc548\uc5d0\uc11c `.then`\uacfc `await` \ub450\uac1c\uc758 \ud0a4\uc6cc\ub4dc\uc5d0\uc11c \uac12\uc744 \uc5bb\uc744 \uc218 \uc788\uc5b4\uc694. \ube44\ub85d  `.then`\uacfc `await`\uc5d0\uc11c \ud504\ub77c\ubbf8\uc2a4\uc758 \uac12\uc744 \uc5bb\uc744 \uc218 \uc788\uc9c0\ub9cc, \uadf8\ub4e4\uc740 \uc57d\uac04 \ub2e4\ub974\uac8c \uc791\ub3d9\ud574\uc694.\\n\\n\uccab\ubc88\uc9f8 `firstFunction`\uc5d0\uc11c, (\ubb50\ub784\uae4c) myPromise \ud568\uc218\uac00 \uc2e4\ud589\ub418\ub294 \uac83\uc744 \ubbf8\ub918\uc9c0\ub9cc, \ub2e4\ub978 \ucf54\ub4dc\ub97c \uacc4\uc18d\ud574\uc11c \uc2e4\ud589\ud558\ub294\ub370, \uc774 \uacbd\uc6b0 `console.log(\'second\')`\uc5d0\uc694. \uadf8\ub9ac\uace0\ub098\uc11c, \ud568\uc218\ub294 \ucf5c\uc2a4\ud0dd\uc774 \ube44\uc6cc\uc838 \uc788\ub294 \uac78 \ubcf8 \ub2e4\uc74c \ucd9c\ub825\ub41c \ubb38\uc790\uc5f4 `I have resolved`\ub97c resolved\ub85c \uc804\ub2ec\ud574\uc694.\\n\\n`secondFunction`\uc5d0\uc11c\uc758 await \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \ub9d0 \uadf8\ub300\ub85c \ub2e4\uc74c \ub77c\uc778\uc73c\ub85c \uc62e\uae30\uae30 \uc804 \uac12\uc774 resoloved\ud568\uc218\ub85c \uc804\ub2ec\ub420 \ub54c \uae4c\uc9c0 async \ud568\uc218\uc758 \uc2e4\ud589\uc744 \uc911\ub2e8\ud574\uc694.\\n\\n\uc774\uac83\uc740 `myPromise`\uc774 \uac12 `I have resolved`\uc744 \uc5bb\uc744 \ub54c \uae4c\uc9c0 \uae30\ub2e4\ub9b0\ub2e4\ub294 \uc758\ubbf8\uc774\uba70, \ub2e8 \ud55c \ubc88 \ubc1c\uc0dd\ud558\uba74, \ub2e4\uc74c\ub77c\uc778\uc73c\ub85c \uc774\ub3d9\ud574\uc694: `second`\uc774 \ucd9c\ub825\ub418\uc8e0.","id":101,"options":["`I have resolved!`, `second` \uadf8\ub9ac\uace0 `I have resolved!`, `second`","`second`, `I have resolved!` \uadf8\ub9ac\uace0 `second`, `I have resolved!`","`I have resolved!`, `second` \uadf8\ub9ac\uace0 `second`, `I have resolved!`","`second`, `I have resolved!` \uadf8\ub9ac\uace0 `I have resolved!`, `second`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"`+` \uc5f0\uc0b0\uc790\ub294 \uc22b\uc790\ub85c \ub098\ud0c0\ub09c \uac12\uc744 \ub354\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ubb38\uc790\uc5f4\uc744 \uc5f0\uacb0\ud574\uc8fc\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc5b4\uc694. JavaScript \uc5d4\uc9c4\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \uac12\ub4e4\uc774 \uc22b\uc790\uac00 \uc544\ub2cc \uac83\uc744 \ubc1c\uacac \ud588\uc744 \ub54c, \uc22b\uc790\ub97c \ubb38\uc790\uc5f4\ub85c \uac15\uc81c\ub85c \ubcc0\ud658\ud574\uc694.\\n\\n\uccab\ubc88\uc9f8 `1`\uc740, \uc22b\uc790\ub85c\ub41c \uac12\uc774\uc5d0\uc694. `1 + 2`\ub294 \uc22b\uc790 3\uc744 \ub9ac\ud134\ud574\uc694.\\n\\n\uadf8\ub7ec\ub098, \ub450\ubc88\uc9f8\ub294 \ubb38\uc790\uc5f4 `\\"Lydia\\"`\uc774\uc5d0\uc694. `\\"Lydia\\"`\uc740 \ubb38\uc790\uc5f4\uc774\uace0, `2`\ub294 \uc22b\uc790\uc5d0\uc694: `2`\ub294 \ubb38\uc790\uc5f4\ub85c \uac15\uc81c \ubcc0\ud658\ub418\uc5b4\uc694. `\\"Lydia\\"`\uadf8\ub9ac\uace0 `\\"2\\"`\uc774 \uc5f0\uacb0\ub418\uc5b4, \ubb38\uc790\uc5f4 `\\"Lydia2\\"`\uc774 \ub9ac\ud134\ub418\uc694.\\n\\n`{ name: \\"Lydia\\" }`\uc740 \uac1d\uccb4\uc5d0\uc694. \uac1d\uccb4\uac00 \uc544\ub2cc \uc22b\uc790\ub098 \uac1d\uccb4\ub294 \ubb38\uc790\uc5f4\uc774 \uc544\ub2c8\ubbc0\ub85c, \ub458\ub2e4 \ubb38\uc790\ud654\ub418\uc5b4\uc694. \uc815\uaddc \uac1d\uccb4\ub97c \ubb38\uc790\ud654 \ud560\ub54c, `\\"[object Object]\\"`\uac00 \ub3fc\uc694. `\\"[object Object]\\"`\ub294 `\\"2\\"`\uc640 \uc5f0\uacb0\ub418\uc5b4 `\\"[object Object]2\\"`\uac00 \ub3fc\uc694.","id":102,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"promise\uc774\ub098 non-promise\uc774 \uc544\ub2c8\ub354\ub77c\ub3c4 \uac12\uc758 \ubaa8\ub4e0 \ud0c0\uc785\uc740 `Promise.resolve`\uc73c\ub85c \uc804\ub2ec \ud560 \uc218 \uc788\uc5b4\uc694. \uba54\uc18c\ub4dc \uadf8 \uc790\uccb4\ub294 resolved \uac12\uc744 \uac00\uc9c4 promise\ub97c \ub9ac\ud134\ud574\uc694 (`<fulfilled>`). \uc815\uaddc \ud568\uc218\ub97c \uc804\ub2ec\ud55c\ub2e4\uba74, \uc815\uaddc \uac12\uc744 \uac00\uc9c4 resolved promise\ub97c \uc5bb\uac8c \ub420\uac70\uc5d0\uc694. \ub9cc\uc57d promise\ub97c \uc804\ub2ec\ud55c\ub2e4\uba74, \uc804\ub2ec\ub41c promise\uc758 resolved \uac12\uacfc resolved promise\ub97c \uc5bb\uac8c \ub420\uac70\uc5d0\uc694.\\n\\n\uc774 \uacbd\uc6b0, \uc22b\uc790 \uac12 `5`\ub97c \uc804\ub2ec\ud588\uc5b4\uc694. \uc774\uac83\uc740 \uac12 `5`\ub97c \uac00\uc9c4 resolved promise\ub97c \ub9ac\ud134\ud574\uc694.","id":103,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"\uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"\uac1d\uccb4\ub294 \ucc38\uc870\uc5d0 \uc758\ud574 \uc804\ub2ec\ub418\uc5c8\uc5b4\uc694. \uc5c4\uaca9\ud55c \uac19\uc740 \ube44\uad50 (`===`)\ub85c \uac1d\uccb4\ub97c \uac80\uc0ac\ud55c\ub2e4\uba74, \uadf8\ub4e4\uc758 \ucc38\uc870\ub97c \ube44\uad50\ud560\uac70\uc5d0\uc694.\\n\\n`person2`\uc758 \uae30\ubcf8 \uac12\uc744 `person` \uac1d\uccb4\uc640 \ub3d9\uc77c\ud558\uac8c \uc124\uc815 \ud558\uace0, `person` \uac1d\uccb4\ub97c  `person1`\uc758 \uac12\uc73c\ub85c \uc804\ub2ec \ud588\uc5b4\uc694.\\n\\n\uc774\uac83\uc740 \ub450\uac1c\uc758 \uac12\uc740 \uba54\ubaa8\ub9ac\uc758 \uac19\uc740 \uc7a5\uc18c\uc758 \ucc38\uc870\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4\ub294 \uac78 \uc758\ubbf8\ud574\uc694, \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uadf8\ub4e4\uc740 \uac19\uc544\uc694.\\n\\n`else`\uad6c\ubb38 \uc548\uc5d0 \ucf54\ub4dc\ube14\ub7ed\uc774 \uc2e4\ud589\ub418\uba74, `They are the same!`\uc744 \ucd9c\ub825\ud574\uc694.","id":104,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"\uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"JavaScript\uc5d0\uc11c, \uac1d\uccb4\uc758 \uc18d\uc131\uc5d0 \uc811\uadfc\ud558\ub294 2\uac00\uc9c0 \ubc29\ubc95\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\uc694: \uad04\ud638 \ud45c\uae30\ubc95, \ub610\ub294 \uc810 \ud45c\uae30\ubc95. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294, \uad04\ud638\ud45c\uae30\ubc95 (`colorConfig[\\"colors\\"]`) \ub300\uc2e0 \uc810 \ud45c\uae30\ubc95 (`colorConfig.colors`)\uc744 \uc0ac\uc6a9 \ud588\uc5b4\uc694.\\n\\n\uc810 \ud45c\uae30\ubc95\uc5d0\uc11c, JavaScript\ub294 \uc815\ud655\ud55c \uc774\ub984\uc744 \uac00\uc9c4 \uac1d\uccb4\uc758 \uc18d\uc131\uc744 \ucc3e\uc73c\ub824 \ud574\uc694. \uc774 \uc608\uc81c\uc5d0\uc11c JavaScript\ub294 `colorConfig` \uac1d\uccb4\uc758 `colors`\ub77c\uace0 \ubd88\ub9ac\ub294 \uc18d\uc131\uc744 \ucc3e\uc73c\ub824\uace0 \ud588\uc5b4\uc694. \uadf8\uacf3\uc5d0\ub294 `colors`\ub77c\uace0 \ubd88\ub9ac\ub294 \uc18d\uc131\uc774 \uc5c6\uc5b4\uc694, \uadf8\ub798\uc11c `undefined`\uc744 \ub9ac\ud134\ud574\uc694. \uadf8\ub9ac\uace0 \ub098\uc11c, `[1]`\uc744 \uc0ac\uc6a9\ud574\uc11c \uccab\ubc88\uc9f8 \uc694\uc18c\uc758 \uac12\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud588\uc5b4\uc694. `undefined`\uc758 \uac12\uc5d0\ub294 \uc774\uac83\uc744 \ud560 \uc218 \uc5c6\uc5b4\uc694, \uadf8\ub798\uc11c `TypeError`\ub97c \ub358\uc838\uc694: `Cannot read property \'1\' of undefined`.\\n\\nJavaScript \ubb38\uc7a5\uc744 \ud574\uc11d(\ub610\ub294 \ucc38\uc870\ud615 \ubcc0\uc218\ub97c \uc6d0\uc2dc \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \ub9cc\ub4e4\uc5b4 \uc8fc\ub3c4\ub85d) \ud574\uc694. \uad04\ud638 \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud560\ub54c, \uccab\ubc88\uc9f8\ub85c \uc5f4\ub9b0 \uad04\ud638 `[`\uc744 \ubcf4\uace0 \ub2eb\ud78c \uad04\ud638 `]`\ub97c \ucc3e\uc744 \ub54c \uae4c\uc9c0 \uacc4\uc18d \uc9c4\ud589\ub418\ub294 \uac83\uc73c\ub85c \ubcf4\uc5ec\uc694. \uadf8\ub7ec\uace0 \ub098\uc11c\uc57c, \ubb38\uc7a5\uc744 \ud3c9\uac00\ud560\uac70\uc5d0\uc694. \ub9cc\uc57d `colorConfig[colors[1]]`\uc744 \uc0ac\uc6a9\ud588\ub2e4\uba74, `colorConfig` \uac1d\uccb4\uc758 \uc18d\uc131 `red` \uc758 \uac12\uc774 \ub9ac\ud134\ub420 \uac70\uc5d0\uc694.","id":105,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"\uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"\uc5d4\uc9c4\uc5d0\uc11c, \uc774\ubaa8\ud2f0\ucf58\uc740 \uc720\ub2c8\ucf54\ub4dc\uc5d0\uc694. \ud558\ud2b8 \uc774\ubaa8\ud2f0\ucf58\uc758 \uc720\ub2c8\ucf54\ub4dc\ub294 `\\"U+2764 U+FE0F\\"`\uc5d0\uc694. \uac19\uc740 \uc774\ubaa8\ud2f0\ucf58\uc758 \uc720\ub2c8\ucf54\ub4dc\ub294 \ud56d\uc0c1 \uac19\uc544\uc694, \ub530\ub77c\uc11c \uac01\uac01 \ub2e4\ub978 \ub450\uac1c\uc758 \uac19\uc740 \ubb38\uc790\uc5f4\uc744 \ube44\uad50\ud558\ub294 \uac83\uc774\ubbc0\ub85c true\ub97c \ub9ac\ud134\ud574\uc694.","id":106,"options":["`true`","`false`"],"question":"\uac12\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"`splice` method\ub97c \uc0ac\uc6a9\ud558\uba74, \uc694\uc18c\ub97c \uc0ad\uc81c, \ub300\uccb4\ud558\uac70\ub098 \ucd94\uac00\ud568\uc73c\ub85c\uc368 \uc6d0\ubcf8 \ubc30\uc5f4\uc744 \uc218\uc815\ud574\uc694. \uc774 \uacbd\uc6b0\uc5d0\uc11c, \uc778\ub371\uc2a4 1\uc5d0\uc11c \ubd80\ud130 2\uac1c\uc758 \uc544\uc774\ud15c\uc744 \uc81c\uac70\ud588\uc5b4\uc694. (`\'\ud83e\udd51\'` \uc640 `\'\ud83d\ude0d\'`\ub97c \uc0ad\uc81c\ud588\uc5b4\uc694) \uadf8\ub9ac\uace0 \u2728 \uc774\ubaa8\ud2f0\ucf58\uc744 \ub300\uc2e0 \ucd94\uac00\ud588\uc8e0.\\n\\n`map`, `filter` \uadf8\ub9ac\uace0 `slice` \ub294 \uc0c8\ub85c\uc6b4 \ubc30\uc5f4\uc744 \ub9ac\ud134\ud574\ud558\uace0, `find` \uc694\uc18c\ub97c \ub9ac\ud134\ud558\uba70,  `reduce` \uac10\uc18c\ub41c \uac12\uc744 \ub9ac\ud134\ud574\uc694.","id":107,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"\ub2e4\uc74c \uc911 \uc6d0\ubcf8 \ubc30\uc5f4\uc744 \uc218\uc815\ud558\ub294 method\ub294 \ubb34\uc5c7\uc77c\uae4c\uc694?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"`JSON.parse()`\uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, JSON \ubb38\uc790\uc5f4\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud558\uc5ec JavaScript \uac12\uc73c\ub85c \uc0dd\uc131\ud574\uc694.\\nWith the `JSON.parse()` method, we can parse JSON string to a JavaScript value. \\n\\n```javascript\\n// \uc22b\uc790\ub97c \uc720\ud6a8\ud55c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud574\uc694, \uadf8\ub9ac\uace0 \ub098\uc11c JSON \ubb38\uc790\uc5f4\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud574 JavaScript \uac12\uc73c\ub85c \uc0dd\uc131\ud574\uc694.\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// \ubc30\uc5f4 \uac12\uc744 \uc720\ud6a8\ud55c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud574\uc694, \uadf8\ub9ac\uace0 \ub098\uc11c JSON \ubb38\uc790\uc5f4\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud574 JavaScript \uac12\uc73c\ub85c \uc0dd\uc131\ud574\uc694.\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// \uac1d\uccb4\ub97c \uc720\ud6a8\ud55c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud574\uc694, \uadf8\ub9ac\uace0 \ub098\uc11c JSON \ubb38\uc790\uc5f4\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud574 JavaScript \uac12\uc73c\ub85c \uc0dd\uc131\ud574\uc694.\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":108,"options":["Parses JSON to a JavaScript value","Parses a JavaScript object to JSON","Parses any JavaScript value to JSON","Parses JSON to a JavaScript object only"],"question":"\uc774 \uba54\uc18c\ub4dc\ub294 \ubb34\uc5c7\uc744 \ud560\uae4c\uc694?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"\uac01 \uae30\ub2a5\uc5d0\ub294 \uc790\uccb4 _\uc2e4\ud589 \ucee8\ud14d\uc2a4\ud2b8_ (\ub610\ub294 _\ubc94\uc704_)\uac00 \uc788\uc5b4\uc694. `getName` \ud568\uc218\ub294 \uba3c\uc800 \uc790\uccb4 \ucee8\ud14d\uc2a4\ud2b8(\ubc94\uc704) \ub0b4\uc5d0\uc11c \uc811\uadfc\ud558\ub824\uace0 \ud558\ub294 \ubcc0\uc218 `name`\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubd10\uc694: `let` \ud0a4\uc6cc\ub4dc\uc640 \ud568\uaed8 \uc120\uc5b8 \ud588\uae30 \ub54c\ubb38\uc5d0 `\'Sarah\'`\uc758 \uac12\uc744 \uac00\uc838\uc694.\\n\\n`let` \ud0a4\uc6cc\ub4dc (\uadf8\ub9ac\uace0 `const`)\ub97c \uc0ac\uc6a9\ud55c \ubcc0\uc218\ub294 \ub04c\uc5b4\uc62c\ub824\uc9c0\uc9c0\ub9cc, `var`\uc640 \ub2e4\ub974\uac8c <i>\ucd08\uae30\ud654</i> \ub418\uc9c0\ub294 \uc54a\uc544\uc694. \uadf8\ub4e4\uc744 \uc120\uc5b8 (\ucd08\uae30\ud654) \ud558\ub294 \uc904 \uc804\uc5d0 \uc811\uadfc \ud560 \uc218 \uc5c6\uc5b4\uc694. \\"\uc77c\uc2dc\uc801 \uc0ac\uac01\uc9c0\ub300\\"\ub77c\uace0 \ubd88\ub824\uc694. \uadf8\ub4e4\uc744 \uc120\uc5b8\ud558\uae30 \uc804\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud55c\ub2e4\uba74, JavaScript\ub294 `ReferenceError`\ub97c \ub358\uc838\uc694.\\n\\n`getName` \ud568\uc218 \uc548\uc5d0 `name` \ubcc0\uc218\ub97c \uc120\uc5b8\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74, javaScript \uc5d4\uc9c4\uc740 _\uc2a4\ucf54\ud504 \uccb4\uc778_ \uc744 \ub0b4\ub824\ub2e4 \ubcf4\uc9c0 \uc54a\uc558\uc744 \uac70\uc608\uc694.  \uc678\ubd80 \ubc94\uc704\uc5d0 `Lydia`\uc758 \uac12\uc744 \uac00\uc9c4 `name` \ubcc0\uc218\uac00 \uc788\uc5b4\uc694. \uc774 \uacbd\uc6b0\uc5d4 `Lydia`\ub97c \ucd9c\ub825\ud560\uac70\uc608\uc694.\\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":109,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"`yield` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218 \uc548\uc758 \uac12\uc744 `\uc911\ub2e8` \ud588\uc5b4\uc694. `yield`\ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, \ub2e4\ub978 \uc81c\ub108\ub808\uc774\ud130 \ud568\uc218 \ub610\ub294 \ubc18\ubcf5 \uac00\ub2a5\ud55c \uac1d\uccb4(\uc608\ub97c\ub4e4\uba74 \ubc30\uc5f4)\uc758 \uac12\uc744 \uc911\ub2e8 \uc2dc\ud0ac \uc218 \uc788\uc5b4\uc694.\\n\\n`generatorOne`\uc5d0\uc11c, \uc804\uccb4 \ubc30\uc5f4 `[\'a\', \'b\', \'c\']`\uc744 `yield` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \uc911\ub2e8 \ud588\uc5b4\uc694. `one` (`one.next().value`)\uc758 `next` \uba54\uc18c\ub4dc\uac00 \ub9ac\ud134 \ud55c \uac1d\uccb4\uc758 `value`\uc18d\uc131 \uac12\uc740 \uc804\uccb4 \ubc30\uc5f4 `[\'a\', \'b\', \'c\']`\uacfc \uac19\uc544\uc694.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\n`generatorTwo`\uc5d0\uc11c, `yield*` \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud588\uc5b4\uc694. `two`\uc758 \uccab\ubc88\uc9f8 \uac12\uc774 \uc911\ub2e8 \ub418\uc5c8\ub2e4\ub294 \uc758\ubbf8\uc774\uace0, \ubc18\ubcf5\uc790\uc758 \uccab\ubc88\uc9f8\ub85c \uc911\ub2e8\ub41c \uac12\uacfc \uac19\uc544\uc694.\ubc18\ubcf5\uc790\ub294 \ubc30\uc5f4 `[\'a\', \'b\', \'c\']` \uc774\uc5d0\uc694.\\n\ucc98\uc74c\uc73c\ub85c \uc911\ub2e8\ub41c \uac12\uc740 `a`\uc774\uace0, \ub530\ub77c\uc11c \uccab\ubc88\uc9f8 \uc21c\uc11c\uc5d0\uc11c `two.next().value`\ub97c \ubd80\ub974\uba74 `a`\ub97c \ub9ac\ud134\ud574\uc694.\\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":110,"options":["`a` \uadf8\ub9ac\uace0 `a`","`a` \uadf8\ub9ac\uace0 `undefined`","`[\'a\', \'b\', \'c\']` \uadf8\ub9ac\uace0 `a`","`a` \uadf8\ub9ac\uace0 `[\'a\', \'b\', \'c\']`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"\ud15c\ud50c\ub9bf \ub9ac\ud130\ub7ec\ub97c \uc0ac\uc6a9\ud55c \ud45c\ud604\uc2dd\uc740 \uccab\ubc88\uc9f8\ub85c \ud3c9\uac00\ub3fc\uc694. \ubb38\uc790\uc5f4\uc740 \ud45c\ud604\uc2dd\uc758 \ub9ac\ud134\ub41c \uac12\uc744 \ud3ec\ud568\ud558\uac8c \ub41c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud558\uace0, \uc774 \uacbd\uc6b0 \ud568\uc218 `(x => x)(\'I love\')`\ub294 \uc989\uc2dc \ud638\ucd9c \ub3fc\uc694. \ud654\uc0b4\ud45c \ud568\uc218 `x => x`\uc758 \uc778\uc218 \uac12\uc73c\ub85c `I love`\ub97c \uc804\ub2ec \ud588\uc5b4\uc694. `x`\ub294 `\'I love\'`\uc774\uace0 \ub9ac\ud134 \ub420 \uac70\uc5d0\uc694. \uc774 \uacb0\uacfc\ub294 `I love to program` \uc774\uc5d0\uc694.","id":111,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\')\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"\uc77c\ubc18\uc801\uc73c\ub85c \uac1d\uccb4\ub97c `null`\ub85c \uc124\uc815\ud588\uc744\ub54c, \uac1d\uccb4\ub294 \ub354 \uc774\uc0c1\uc758 \uac1d\uccb4 \ucc38\uc870\uac00 \uc5c6\uc5b4 _\uc4f0\ub808\uae30 \uc218\uc9d1_ \ub418\uc5b4\uc694. \uadf8\ub7ec\ub098, `setInterval`\uc744 \uac00\uc9c4 \ucf5c\ubc31 \ud568\uc218\ub294 \ud654\uc0b4\ud45c \ud568\uc218 (`config` \uac1d\uccb4\ub85c \uac10\uc2f8\uc9c4) \uc774\uae30 \ub54c\ubb38\uc5d0, \ucf5c\ubc31 \ud568\uc218\ub294 \uc5ec\uc804\ud788 `config` \uac1d\uccb4\uc758 \ucc38\uc870\ub97c \uac16\uace0 \uc788\uace0, \uac1d\uccb4\ub294 \uc4f0\ub808\uae30 \uc218\uc9d1 \ub418\uc9c0 \uc54a\uc544\uc694. \uc4f0\ub808\uae30 \uc218\uc9d1 \ub418\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc5d0, `setInterval` \ucf5c\ubc31 \ud568\uc218\ub294 \uc5ec\uc804\ud788 \ub9e4 1000ms (1s) \ub9c8\ub2e4 \ud638\ucd9c \ub3fc\uc694,","id":112,"options":["`setInterval` \ucf5c\ubc31\uc740 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc744\uac70\uc5d0\uc694","`setInterval` \ucf5c\ubc31\uc740 \ud55c \ubc88\ub9cc \ud638\ucd9c\ub3fc\uc694","`setInterval` \ucf5c\ubc31\uc740 \uc5ec\uc804\ud788 \ub9e4 \ucd08\ub9c8\ub2e4 \ud638\ucd9c\ub3fc\uc694","\uacb0\ucf54 `config.alert()`\ub97c \ud638\ucd9c \ud558\uc9c0 \uc54a\uace0, config \ub294 `null`\uc774\uc5d0\uc694"],"question":"\ubb34\uc2a8\uc77c\uc774 \ubc1c\uc0dd\ud560\uae4c\uc694?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\')","codeLanguage":"javascript","explanation":"`set` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud0a4/\uac12\uc744 \uc30d\uc73c\ub85c \ucd94\uac00\ud560 \ub54c, \ud0a4\ub294 `set`\ud568\uc218\ub85c \uc804\ub2ec \ub41c \uccab \ubc88\uc9f8 \uc778\uc218\uc758 \uac12\uc774 \ub418\uace0, \uac12\uc740 `set`\ud568\uc218\ub85c \uc804\ub2ec\ub41c \ub450 \ubc88\uc9f8 \uc778\uc218\uc758 \uac12\uc774 \ub420\uac70\uc5d0\uc694. \uc774 \uacbd\uc6b0\uc5d0\uc120 \ud0a4\ub294 _\ud568\uc218_ `() => \'greeting\'`\uc774\uace0, \uac12\uc740 `\'Hello world\'` \uc5d0\uc694. `myMap`\uc740 \uc774\uc81c `{ () => \'greeting\' => \'Hello world!\' }` \uc608\uc694.\\n\\n1\uc740 \ud2c0\ub838\uc5b4\uc694, \ud0a4\ub294 `\'greeting\'`\uac00 \uc544\ub2c8\ub77c `() => \'greeting\'`\uc774\uae30 \ub54c\ubb38\uc774\uc5d0\uc694.\\n3\uc740 \ud2c0\ub838\uc5b4\uc694, `get`\uba54\uc18c\ub4dc\uc5d0 \uc0c8\ub85c \uc0dd\uc131\ud55c \ud568\uc218\ub97c \uc804\ub2ec \ud588\uae30 \ub54c\ubb38\uc774\uc5d0\uc694. \uac1d\uccb4\ub294 _\ucc38\uc870_\uc5d0 \uc758\ud574 \uc0c1\ud638\uc791\uc6a9\ud574\uc694. \ud568\uc218\ub294 \uac1d\uccb4\uc774\uace0, \uadf8\ub4e4\uc774 \uac19\ub2e4\uace0 \ud558\ub354\ub77c\ub3c4 \ub450 \ud568\uc218\uac00 \uc808\ub300\ub85c \uac19\uc9c0 \uc54a\uc740 \uc774\uc720\uc608\uc694: \uba54\ubaa8\ub9ac \uc548 \ub2e4\ub978 \uc7a5\uc18c\uc758 \ucc38\uc870\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\uc694.","id":113,"options":["1","2","2 \uadf8\ub9ac\uace0 3","\ubaa8\ub450"],"question":"\uc5b4\ub290 method\uac00 \uac12 `\'Hello world!\'`\ub97c \ub9ac\ud134 \ud560\uae4c\uc694?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"`changeAge`\uc640 `changeAgeAndName`\ud568\uc218 \ub458\ub2e4 \uae30\ubcf8 \ud30c\ub77c\ubbf8\ud130\ub97c \uac00\uc9c0\uace0 \uc788\ub294\ub370 \uc989, _\uc0c8\ub86d\uac8c_ \ub9cc\ub4e4\uc5b4\uc9c4 \uac1d\uccb4 `{ ...person }`\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\uc694. \uc774 \uac1d\uccb4\ub294 `person` \uac1d\uccb4\uc758 \ubaa8\ub4e0 \ud0a4/\uac12\uc758 \ubcf5\uc0ac\ubcf8\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\uc694.\\n\\n\uccab\ubc88\uc9f8\ub85c, `changeAge`\ud568\uc218\ub97c \ud638\ucd9c \ud588\uace0, \uadf8\uac83\uc758 \uc778\uc218\ub85c `person` \uac1d\uccb4\ub97c \uc804\ub2ec \ud588\uc5b4\uc694. \uc774 \ud568\uc218\ub294 `age`\uc18d\uc131\uc758 \uac12\uc744 1 \uc99d\uac00 \uc2dc\ucf1c\uc694. `person`\uc740 \uc774\uc81c `{ name: \\"Lydia\\", age: 22 }`\uc774\uc5d0\uc694.\\n\\n\uadf8\ub9ac\uace0\ub098\uc11c, `changeAgeAndName` \ud568\uc218\ub97c \ud638\ucd9c \ud588\uc9c0\ub9cc, \ud30c\ub77c\ubbf8\ud130\ub97c \uc804\ub2ec\ud558\uc9c0 \uc54a\uc558\uc5b4\uc694. \ub300\uc2e0\uc5d0, `x`\uc758 \uac12\uc740 _\uc0c8\ub85c\uc6b4_ \uac1d\uccb4\uc640 \uac19\uc544\uc694: `{ ...person }`. \uc0c8\ub85c\uc6b4 \uac1d\uccb4\uc774\uae30 \ub54c\ubb38\uc5d0, `person`\uac1d\uccb4\uc758 \uc18d\uc131\ub4e4\uc758 \uac12\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc544\uc694. `person`\uc740 \uc5ec\uc804\ud788 `{ name: \\"Lydia\\", age: 22 }`\uc640 \uac19\uc544\uc694.","id":114,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"\ubb34\uc5c7\uc774 \ucd9c\ub825 \ub420\uae4c\uc694?"}],"locale":"ko-KR"},{"isRTL":false,"language":"\ud83c\udde9\ud83c\uddea Deutsch","list":[{"answer":3,"code":"function sayHi() {\\n\\tconsole.log(name);\\n\\tconsole.log(age);\\n\\tvar name = \\"Lydia\\";\\n\\tlet age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Innerhalb der Funktion wird zuerst der `name` mit dem `var` Keyword gesetzt. Das bedeuted, dass die Variable mit dem Standardwert `undefined` gehoisted wird (Speicher wird w\xe4hrend der Erstellung bereitgestellt), bis zu der Zeile, wo wir die Variable definieren. Da wir die Variable auf der Zeile, wo wir den `name` loggen noch nicht gesetzt haben, ist dieser noch `undefined`.\\n\\nVariablen mit dem `let` (oder `const`) Keyword werden ebenfalls gehoisted, aber im Gegensatz zu `var` werden diese nicht <i>initialisiert</i>. Auf sie k\xf6nnen wir daher nicht zugreifen, bevor sie definiert wurden. JavaScript wirft einen `ReferenceError` aus.","id":0,"options":["`Lydia` und `undefined`","`Lydia` und `ReferenceError`","`ReferenceError` und `21`","`undefined` und `ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n\\tsetTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n\\tsetTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Aufgrund der Event Queue in JavaScript, wird die Callback Funktion in `setTimeout` _nach_ der Schleife ausgef\xfchrt. Da die Variable `i` in der ersten Schleife mit dem `var` Keyword definiert wurde, ist dieser Wert global verf\xfcgbar. W\xe4hrend der Schleife wird der Wert von `i` jedesmal mithilfe des `++` Operators um `1` erh\xf6ht. Zu dem Zeitpunkt, wenn die Callback Funktion in `setTimeout` aufgerufen wird, ist `i` gleich `3` im ersten Beispiel.\\n\\nIn der zweiten Schleife wurde die Variable `i` mit dem `let` Keyword definiert: Variablen, die mit `let` (oder `const`) deklariert werden sind block-scoped (Ein Block ist alles zwischen `{ }`). W\xe4hrend jedem Durchlauf bekommt `i` einen neuen Wert zugewiesen, der jeweils innerhalb des Scopes der Schleife liegt.","id":1,"options":["`0 1 2` und `0 1 2`","`0 1 2` und `3 3 3`","`3 3 3` und `0 1 2`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const shape = {\\n\\tradius: 10,\\n\\tdiameter() {\\n\\t\\treturn this.radius * 2;\\n\\t},\\n\\tperimeter: () => 2 * Math.PI * this.radius,\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"Merke, dass der Wert von `diameter` eine regul\xe4re Funktion ist, w\xe4hrend der Wert von `perimeter` eine Arrow Function ist.\\n\\nIn Arrow Functions bezieht sich das `this` Keyword auf den aktuellen Scope, was bei regul\xe4ren Funktionen nicht der Fall ist. Das bedeutet, wenn wir `perimeter` aufrufen, bezieht es sich nicht auf das shape Object, sondern auf den umliegenden Scope (zum Beispiel `window`).\\n\\nEs gibt keinen Wert `radius` in dem Object, daher wird `undefined` zur\xfcckgegeben.","id":2,"options":["`20` und `62.83185307179586`","`20` und `NaN`","`20` und `63`","`NaN` und `63`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"Das un\xe4re Plus versucht einen Operand zu einer Nummer umzuwandeln. `true` ist `1` und `false` ist `0`.\\n\\nDer String `\'Lydia\'` ist truthy. Was wir eigentlich fragen ist: \\"ist dieser truthy Wert falsy?\\". Die Antwort ist `false`.","id":3,"options":["`1` und `false`","`false` und `NaN`","`false` und `false`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const bird = {\\n\\tsize: \\"small\\",\\n};\\n\\nconst mouse = {\\n\\tname: \\"Mickey\\",\\n\\tsmall: true,\\n};","codeLanguage":"javascript","explanation":"In JavaScript sind alle Object Keys strings (au\xdfer bei Symbols). Selbst wenn diese nicht als strings _getyped_ sind, werden sie im Endeffekt zu Strings konvertiert.\\n\\nJavaScript interpretiert lediglich Aussagen. Wenn wir Bracket Notation verwenden, sieht JavaScript so zuerst eine \xf6ffnende eckige Klammer `[` und geht weiter, bis es eine schlie\xdfende eckige Klammer `]` findet. Erst dann wird die Aussage evaluiert.\\n\\n`mouse[bird.size]`: Erst wird `bird.size` evaluiert, was `\\"small\\"` zur\xfcck gibt. `mouse[\\"small\\"]` gibt `true` zur\xfcck.\\n\\nMit der Dot Notation ist das nicht der Fall. `mouse` hat keinen Key namens `bird`, was bedeutet, dass `mouse.bird` `undefined` ist. Dann fragen wir nach der `size` mit Dot Notation: `mouse.bird.size`. Da `mouse.bird` `undefined` ist, fragen wir eigentlich nach `undefined.size`. Das ist fehlerhaft und wirft daher einen Fehler, wie zum Beispiel `Cannot read property \\"size\\" of undefined` zur\xfcck.","id":4,"options":["`mouse.bird.size` ist nicht korrekt","`mouse[bird.size]` ist nicht korrekt","`mouse[bird[\\"size\\"]]` ist nicht korrekt","Keine der Antworten ist korrekt."],"question":"Was ist wahr?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"In JavaScript interagieren alle Objekte durch _Referenz_, wenn diese gleich sind.\\n\\nZuerst h\xe4lt die Variable `c` ein Object. Sp\xe4ter wird `d` die selbe Referenz zugewiesen wie `c`.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nWenn ein Object ge\xe4ndert wird, werden alle Referenzen zu diesem Object ebenfalls aktualisiert.","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` ist ein eingebauter Function Constructor. Auch wenn der Wert wie eine Nummer aussieht, ist es in Wirklichkeit keine Nummer, sondern beinhaltet eine Menge zus\xe4tzlicher Werte und ist daher ein Object.\\n\\nWenn wir `==` nutzen wird nur gepr\xfcft, ob der _Wert_ gleich ist. Da beide den Wert `3` haben, wird `true` zur\xfcckgegeben.\\n\\nWenn wir aber `===` nutzen m\xfcssen sowohl der Wert _als auch_ der Typ \xfcbereinstimmen. Das ist `false`, da `new Number()` keine Nummer, sondern ein **Object** ist.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"class Chameleon {\\n\\tstatic colorChange(newColor) {\\n\\t\\tthis.newColor = newColor;\\n\\t\\treturn this.newColor;\\n\\t}\\n\\n\\tconstructor({ newColor = \\"green\\" } = {}) {\\n\\t\\tthis.newColor = newColor;\\n\\t}\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"Die `colorChange` Funktion ist statisch (`static`). Statische Methoden existieren nur am Constructor wo sie erstellt wurden und k\xf6nnen nicht an ihre Kinder weitergegeben werden. Da `freddie` ein Kind ist, wird die Funktion nicht runter gereicht und ist daher auch nicht in der `freddie` Instanz verf\xfcgbar. Ein `TypeError` wird zur\xfcckgeworfen.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Das Object wird geloggt, da wir ein leeres Object am globalen Object erstellt haben. Als wir uns bei `greeting` verschrieben haben (als `greetign`) hat JavaScript das als neues Objekt `global.greetign = {}` (oder `window.greetign = {}` im Browser) angesehen.\\n\\nUm das zu verhindern, k\xf6nnen wir `\\"use strict\\"` verwenden. Das stellt sicher, dass eine Variable erst definiert sein muss, bevor dieser ein Wert zugewiesen werden kann.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"function bark() {\\n\\tconsole.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"In JavaScript ist das ohne Weiteres m\xf6glich, da Funktionen Objekte sind. (Alle Typen au\xdfer primitiven Typen sind Objekte)\\n\\nEine Funktion ist ein spezieller Typ eines Objekts. Der Code, den wir schreiben ist keine eigentliche Funktion, sondern ein Object mit Properties. Die Property ist aufrufbar.","id":9,"options":["Nichts, das ist absolut in Ordnung.","`SyntaxError`. Man kann einer Funktion keine Properties in der Form zuweisen.","`undefined`","`ReferenceError`"],"question":"Was passiert, wenn wir das tun?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n\\tthis.firstName = firstName;\\n\\tthis.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n\\treturn `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Man kann keine Properties einem Constructor zuweisen, wie es bei normalen Objects der Fall ist. Wenn man ein Feature allen Objects zugleich zuweisen m\xf6chte, muss man den Prototype verwenden. In diesem Fall also:\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n\\treturn `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nSo h\xe4tte `member.getFullName()` funktioniert. Warum ist das von Vorteil? Sagen wir, wir h\xe4tten diese Methode dem Constructor selbst zugewiesen, aber vielleicht ben\xf6tigt nicht jede Instanz von `Person` diese Methode. So h\xe4tte das eine Menge Arbeitsspeicher verschwendet, weil jede Instanz die Property zugewiesen bekommt, auch wenn sie diese gar nicht ben\xf6tigt.\\nStattdessen haben wir sie nur dem Prototype zugewiesen, sodass sie nur an einer Stelle im Arbeitsspeicher hinterlegt ist, aber dennoch haben alle Instanzen Zugriff darauf.","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n\\tthis.firstName = firstName;\\n\\tthis.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"F\xfcr `sarah` haben wir nicht das `new` Keyword verwendet. Wenn wir `new` verwenden, bezieht sich das auf das neue, leere Object, welches wir erstellen. Wenn wir allerdings das `new` Keyword nicht verwenden, bezieht es sich auf das **globale Objekt**.\\n\\nWir haben `this.firstName` den Wert `\\"Sarah\\"` zugewiesen und `this.lastName` den Wert `\\"Smith\\"`. Was wir damit eigentlich zugewiesen haben, ist `global.firstName = \'Sarah\'` und `global.lastName = \'Smith\'`. `sarah` selbst ist daher `undefined`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` und `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` und `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` und `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` und `ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":3,"explanation":"W\xe4hrend der **capturing** Phase geht das Event durch die Elternelemente bis hin zum Zielelement. Wenn dann das Ziel (**target**) erreicht ist, beginnt die **bubbling** Phase.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Was sind die drei Phasen der Event Propagation?"},{"answer":1,"explanation":"Alle Objekte haben Prototypes, au\xdfer dem **Basis Objekt**. Das Basis Objekt hat Zugriff auf einige Methoden und Properties, wie zum Beispiel `.toString`. Das ist der Grund, warum wir eingebaute JavaScript Methoden nutzen k\xf6nnen. All diese Methoden sind am Prototype verf\xfcgbar. Obwohl JavaScript diese nicht direkt am Objekt finden kann, folgt es der Prototype Chain, bis es die Property findet und damit verf\xfcgbar macht.","id":13,"options":["wahr","falsch"],"question":"Alle Objekte haben Prototypes."},{"answer":2,"code":"function sum(a, b) {\\n\\treturn a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript ist eine **Sprache mit dynamischen Typen**, was bedeutet, dass wir Variablen keine spezifischen Typen zuweisen. Werte k\xf6nnen automatisch in einen anderen Typ umgewandelt werden, was _implicit type coercion_ genannt wird. **Coercion** (dt. \\"Zwang\\") ist die Umwandlung von einem Typ zu einem anderen.\\n\\nIn diesem Beispiel wandelt JavaScript die Nummer `1` in einem String um, sodass die Funktion Sinn ergibt und einen Wert zur\xfcckgeben kann. W\xe4hrend der Addition eines numerischen Types (`1`) mit einem String (`\'2\'`) wird die Nummer wie ein String behandelt. Wir k\xf6nnen Strings mit einem Plus Symbol zusammensetzen, zum Beispiel: `\\"Hello\\" + \\"World\\"`. Genau das passiert hier, sodass `\\"1\\" + \\"2\\"` einen Wert von `\\"12\\"` zur\xfcckgibt.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"Der **Postfix** Unary Operator `++`:\\n\\n1. gibt den Wert zur\xfcck (hier: `0`)\\n2. erh\xf6ht den Wert (`number` ist jetzt `1`)\\n\\nDer **Prefix** Unary Operator `++`:\\n\\n1. erh\xf6ht den Wert (`number` ist jetzt `2`)\\n2. gibt den Wert zur\xfcck (hier: `2`)\\n\\nDer Output ist daher `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n\\tconsole.log(one);\\n\\tconsole.log(two);\\n\\tconsole.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"Wenn man Template Literals verwendet ist das erste Argument immer ein Array der String Werte. Die restlichen Argumente bekommen die Werte der \xfcbergebenen Expressions zugewiesen.","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"function checkAge(data) {\\n\\tif (data === { age: 18 }) {\\n\\t\\tconsole.log(\\"You are an adult!\\");\\n\\t} else if (data == { age: 18 }) {\\n\\t\\tconsole.log(\\"You are still an adult.\\");\\n\\t} else {\\n\\t\\tconsole.log(`Hmm.. You don\'t have an age I guess`);\\n\\t}\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Wenn man pr\xfcft, ob Werte gleich sind werden Primitives immer anhand ihrer _Value_ verglichen, w\xe4hrend Objects anhand der _Referenz_ verglichen werden. JavaScript pr\xfcft, ob die Objekte eine Referenz zur gleichen Stelle im Speicher haben.\\n\\nDie beiden Objekte, die wir hier vergleichen haben das nicht. Das Objekt, welches wir als Parameter \xfcbergeben haben bezieht sich auf eine andere Stelle im Speicher, als das Objekt, welches wir verwendet haben um die Werte zu vergleichen.\\n\\nDeshalb werfen sowohl `{ age: 18 } === { age: 18 }` als auch `{ age: 18 } == { age: 18 }` den Wert `false` zur\xfcck.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"function getAge(...args) {\\n\\tconsole.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"Der Spread Operator (`...args`) gibt ein Array mit Argumenten zur\xfcck. Ein Array ist ein Objekt, sodass `typeof args` `\\"object\\"` ausgibt.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"function getAge() {\\n\\t\\"use strict\\";\\n\\tage = 21;\\n\\tconsole.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Durch `\\"use strict\\"` kann man sicher stellen, dass man nicht versehentlich globale Variablen definiert. Da wir die Variable `age` nie definiert haben und `\\"use strict\\"` verwenden wirft JavaScript einen reference error aus. H\xe4tten wir `\\"use strict\\"` nicht verwendet, so h\xe4tte es funktioniert, da die property `age` dem globalen Objekt zugewiesen worden w\xe4re.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` evaluiert Code, der als String \xfcbergeben wurde. Falls es, wie in diesem Fall, eine Expression ist, so wird diese Expression auch evaluiert. Die Expression `10 * 10 + 5` gibt damit die nummer `105` aus.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"Was ist der Wert von `sum`?"},{"answer":2,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"Der Wert in `sessionStorage` geht verloren, wenn der _Tab_ geschlossen wird.\\n\\nWenn man stattdessen `localStorage` verwendet, bleibt der Wert f\xfcr immer bestehend, es sei denn `localStorage.clear()` wird ausgef\xfchrt.","id":21,"options":["F\xfcr immer, der Wert geht nicht verloren.","Wenn der User den Tab schlie\xdft.","Wenn der User den Browser schlie\xdft, nicht nur den Tab.","Wenn der User den Computer neu startet."],"question":"Wie lange ist cool_secret verf\xfcgbar?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Mit dem `var` Keyword kann man mehrere Variablen mit dem selben Namen definieren. Die Variable h\xe4lt dann den letzt gesetzten Wert.\\n\\nDas ist nicht m\xf6glich mit `let` oder `const`, da diese dem Block Scope unterliegen.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"Alle Object Keys (au\xdfgenommen Symbols) sind im Endeffekt Strings, selbst, wenn man diese nicht explizit als String definiert. Deshalb gibt `obj.hasOwnProperty(\'1\')` auch `true` zur\xfcck.\\n\\nDas funktioniert nicht f\xfcr Set. Da wir keine `\'1\'` in unserem Set haben wirft `set.has(\'1\')` den Wert `false` zur\xfcck. Der Typ von `1` ist numerisch und `set.has(1)` gibt daher `true` zur\xfcck.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Wenn man zwei Keys mit dem selben Namen hat, wird der erste Key ersetzt. Er wird immernoch an erster Stelle sein, allerdings mit dem zuletzt gesetzten Wert.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"Was wird ausgegeben?"},{"answer":0,"explanation":"Der Base Execution Context entspricht dem Global Execution Context und ist \xfcberall in unserem Code verf\xfcgbar.","id":25,"options":["wahr","falsch","kommt darauf an"],"question":"Der JavaScript Global Execution Context erstellt zwei Dinge: das globale Objekt und das \\"this\\" Keyword."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n\\tif (i === 3) continue;\\n\\tconsole.log(i);\\n}","codeLanguage":"javascript","explanation":"`continue` \xfcberspringt einen Durchlauf, wenn eine gewisse Bedingung erf\xfcllt ist und `true` zur\xfcck gibt.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n\\treturn \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` ist ein eingebauter Constructor, dem wir Properties zuweisen k\xf6nnen. Wir haben hier seinem Prototype eine Methode hinzugef\xfcgt. Primitive strings werden automatisch durch die String Prototype Function in ein String Objekt umgewandelt. Daher haben alle Strings (String Objects) Zugriff auf diese Methode.","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Objekt Keys werden automatisch in Strings umgewandelt. Wir versuchen ein Objekt mit dem Wert `123` als Key dem Objekt `a` zuzuweisen.\\n\\nAllerdings wird ein Object, wenn es in einen String umgewandelt wird als `\\"[object Object]\\"` ausgegeben. Was wir hier also sagen ist, dass `a[\\"object Object\\"] = 123` ist. Wir versuchen das gleiche erneut - `c` ist ein anderes Objekt, welches wir implizit zu einem String umwandeln, sodass `a[\\"object Object\\"] = 456` ist.\\n\\nDann loggen wir `a[b]`, was eigentlich `a[\\"object Object\\"]` ist und gerade von uns zu `456` gesetzt wurde, sodass `456` ausgegeben wird.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Wir haben eine `setTimeout` Funktion, die zuerst ausgef\xfchrt wird und dennoch als letztes ausgegeben wird.\\n\\nDer Grund daf\xfcr ist, dass Browser nicht nur die Runtime Engine, sondern auch eine `WebAPI` haben. Die `WebAPI` stellt uns `setTimeout` bereit.\\n\\nNachdem die _Callback Function_ an die WebAPI \xfcbergeben wurde wird `setTimeout` (aber nicht die Callback Function) ausgef\xfchrt und aus dem Stack entfernt.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nJetzt wird `foo` ausgef\xfchrt und `\\"First\\"` geloggt.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` wird aus dem Stack entfernt und `baz` wird ausgef\xfchrt. `\\"Third\\"` wird geloggt.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nDie WebAPI kann nicht einfach Dinge zum Stack hinzuf\xfcgen, wenn sie bereit ist, stattdessen wird die Callback Function zur _queue_ hinzugef\xfcgt.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nDas ist, wo die Event Loop ins Spiel kommt. Die **Event Loop** betrachtet den Stack und die Task Queue. Wenn der Stack leer ist wird das erste Element in der Queue zum Stack \xfcbertragen.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` wird ausgef\xfchrt, `\\"Second\\"` wird geloggt und aus dem Stack entfernt.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n\\t<div onclick=\\"console.log(\'second div\')\\">\\n\\t\\t<button onclick=\\"console.log(\'button\')\\">\\n\\t\\t\\tClick!\\n\\t\\t</button>\\n\\t</div>\\n</div>","codeLanguage":"html","explanation":"Das am tiefsten genestete Element, welches das Event ausl\xf6st ist das Event Target. Man kann den Bubbling Prozess mit `event.stopPropagation` anhalten.","id":30,"options":["\xc4u\xdferer `div`","Innerer `div`","`button`","Ein Array mit allen genesteten Elementen"],"question":"Was ist event.target wenn ein Button geklickt wird?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n\\t<p onclick=\\"console.log(\'p\')\\">\\n\\t\\tClick here!\\n\\t</p>\\n</div>","codeLanguage":"html","explanation":"Wenn wir auf den Paragraph klicken, sehen wir zwei logs: `p` und `div`. W\xe4hrend der Event Propagation werden drei Phasen ausgef\xfchrt: capturing, target und bubbling. Standardm\xe4\xdfig werden Event Handler in der Bubbling Phase ausgef\xfchrt (es sei denn man setzt `useCapture` auf `true`). Die Ausf\xfchrung beginnt vom tiefsten Element nach Au\xdfen.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Was ist der geloggte Output, wenn man auf den Paragraph klickt?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n\\tconsole.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"In beiden F\xe4llen k\xf6nnen wir das Objekt weiter reichen, auf welches sich das `this` Keyword beziehen soll. Allerdings wird `.call` _sofort ausgef\xfchrt_.\\n\\n`.bind.` gibt eine _Kopie_ der Funktion mit gebundenem Context zur\xfcck und wird daher nicht sofort ausgef\xfchrt.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"function sayHi() {\\n\\treturn (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"Die `sayHi` Funktion gibt den Wert der sofort ausgef\xfchrten Funktion (IIFE) zur\xfcck. Die Funktion gibt `0` zur\xfcck, was vom Typ `\\"number\\"` ist.\\n\\nEs gibt nur 7 eingebaute Typen in JavaScript: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, und `bigint`. `\\"function\\"` ist kein Typ, weil Funktionen Objekte sind und daher dem Typ `\\"object\\"` entsprechen.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Es gibt nur 6 falsy typen:\\n\\n-   `undefined`\\n-   `null`\\n-   `NaN`\\n-   `0`\\n-   `\'\'` (leerer String)\\n-   `false`\\n\\nFunktions-Constructor, wie `new Number` und `new Boolean` sind truthy.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","Alle sind falsy"],"question":"Welcher dieser Werte ist falsy?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` gibt `\\"number\\"` zur\xfcck.\\n`typeof \\"number\\"` gibt `\\"string\\"` zur\xfcck.","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Wenn Werte einem Element in einem Array zugewiesen werden, die die L\xe4nge des Arrays \xfcbersteigen, so erstellt JavaScript \\"empty slots\\" (leere Stellen). Diese haben den Wert `undefined`, aber das Array sieht dann in etwa so aus:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\nabh\xe4ngig davon wo das Array ausgef\xfchrt wird (die Ausgabe ist unterschiedlich f\xfcr verschiedene Browser, Node, etc.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"(() => {\\n\\tlet x, y;\\n\\ttry {\\n\\t\\tthrow new Error();\\n\\t} catch (x) {\\n\\t\\t(x = 1), (y = 2);\\n\\t\\tconsole.log(x);\\n\\t}\\n\\tconsole.log(x);\\n\\tconsole.log(y);\\n})();","codeLanguage":"javascript","explanation":"Der `catch` Block erh\xe4lt ein Argument `x`. Das ist nicht das selbe `x` wie die Variable, der wir Argumente zuweisen. Die Variable `x` ist block-scoped.\\n\\nSp\xe4ter setzen wir die block-scoped Variable gleich `1`, und setzen ebenfalls den Wert der Variable `y`. Jetzt loggen wir die block-scoped Variable `x` mit dem Wert `1`.\\n\\nAu\xdferhalb des `catch` Blocks ist `x` noch immer `undefined` und `y` ist `2`. Wenn wir `console.log(x)` au\xdferhalb des `catch` Block ausf\xfchren, wird f\xfcr `x` der Wert `undefined` und f\xfcr `y` der Wert `2` geloggt.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"Was wird ausgegeben?"},{"answer":0,"explanation":"JavaScript hat nur primitive Typen und Objekte.\\n\\nPrimitive Typen sind `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, und `symbol`.\\n\\nWas einen primitiven Typ von einem Objekt unterscheidet ist, dass Primitive keine Properties oder Methoden haben, obwohl zum Beispiel `\'foo\'.toUpperCase()` zu `\'FOO\'` wird und keinen `TypeError` auswirft. Der Grund daf\xfcr ist, wenn man eine Property oder Method an einem primitiven Typ wie einem String ausf\xfchrt, legt JavaScript eine Wrapper Class um das String Objekt, die danach sofort wieder entfernt wird, wenn die Expression ausgef\xfchrt wurde. Alle primitiven Typen au\xdfer `null` und `undefined` weisen dieses Verhalten auf.","id":38,"options":["Primitive oder Object","Function oder Object","Fangfrage: nur Objects!","Number oder Object"],"question":"Alles in JavaScript ist entweder ein ..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n\\t(acc, cur) => {\\n\\t\\treturn acc.concat(cur);\\n\\t},\\n\\t[1, 2],\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` ist unser urspr\xfcnglicher Wert. Zusammen mit dem ersten `acc` ist das der Wert, mit dem wir beginnen. W\xe4hrend dem ersten Durchlauf ist `acc` gleich `[1, 2]`, und `cur` ist `[0, 1]`. Wir verbinden diese, was `[1, 2, 0, 1]` ergibt.\\n\\nDann entspricht `acc` gleich `[1, 2, 0, 1]` und `cur` ist gleich `[2, 3]`. Wir verbinden diese und bekommen `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` ist falsy. `!null` gibt `true` zur\xfcck. `!true` gibt `false` zur\xfcck.\\n\\n`\\"\\"` ist falsy. `!\\"\\"` gibt `true` zur\xfcck. `!true` gibt `false` zur\xfcck.\\n\\n`1` ist truthy. `!1` gibt `false` zur\xfcck. `!false` gibt `true` zur\xfcck.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Es gibt eine unique id zur\xfcck. Diese id kann zum Beispiel verwendet werden um das Interval mit der `clearInterval()` Funktion zu leeren.","id":41,"options":["Eine unique id","Die definierte Anzahl von Millisekunden","Die Callback Function","`undefined`"],"question":"Was gibt die `setInterval` Method zur\xfcck?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"Ein String ist ein Iterable. Der Spread Operator mappt jedes Zeichen eines Iterables zu einem eigenen Element.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"Was wird hier ausgegeben?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Regul\xe4re Funktionen k\xf6nnen nicht angehalten werden, wenn sie bereits aufgerufen wurden. Eine Generator Funktion kann dagegen auch angehalten werden, nachdem sie aufgerufen wurde und sp\xe4ter fortgesetzt werden, wo sie angehalten wurde. Jedes Mal, wenn eine Generator Funktion ein `yield` Keyword findet, wirft die Funktion den danach ermittelten Wert aus. Wichtig: _yield_ ist nichtdas selbe wie _return_.\\n\\nZuerst initialisieren wir die Generator Funktion mit `i` gleich `10`. Wir rufen die Generator Funktion mit der `next()` Methode auf. Beim ersten Aufruf der Generator Funktion is `i` gleich `10`. Wenn wir bei `yield` ankommen wird der Wert von `i` ausgegeben. Der Generator wird angehalten und `10` wird geloggt.\\n\\nDann wird die Funktion erneut mit der `next()` Methode aufgerufen und beginnt von dort, wo sie zuletzt angehalten wurde, nach wie vor mit `i` gleich `10`. Jetzt erreichen wir das n\xe4chste `yield` Keyword bei `i * 2`. `i` ist gleich `10`, sodass das Ergebnis von `10 * 2` ausgegeben wird, was `20` ist. Das Ergebnis ist `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 und 10, 20`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"Wenn wir mehrere Promises in die `Promice.race` Methode eingegeben, wird das Promise, welches _zuerst_ gel\xf6st/abgelehnt wird auch hier gel\xf6st/abgelehnt. Die `setTimeout` Methode bekommt einen Timer von 500ms f\xfcr das erste Promise (`firstPromise`) \xfcbergeben, und 100ms f\xfcr das zweite Promise (`secondPromise`). Das bedeutet, dass `secondPromise` mit dem Wert `\'two\'` zuerst gel\xf6st wird und an `res` \xfcbergeben wird. Der Wert wird geloggt.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"Was wird hier ausgegeben?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"Zuerst definieren wir die Variable `person` mit dem Wert eines Objekts, welches eine `name` Property hat.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nDann definieren wir eine Variable namens `members`. Wir setzen das erste Element des Arrays gleich dem Wert der `person` Variable. Objekte interagieren durch eine _Referenz_, wenn diese gleichgesetzt werden. Wenn eine Referenz von einer Variable zur anderen gleichgesetzt wird, so wird eine _Kopie_ der Referenz erstellt (Wichtig: nicht die _selbe_ Referenz!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nDann setzen wir die Variable `person` gleich `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nWir \xe4ndern nur den Wert der Variable `person` und nicht das erste Element im Array, da das Element eine andere Referenz als das Objekt hat (Kopie). Das erste Element in `members` beinhaltet immernoch die Referenz zum original Objekt. Wenn wir das `members` Array loggen ist dieses immernoch der Wert des Objekts, welches dann geloggt wird.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"Mit einer `for-in` Schleife k\xf6nnen wir \xfcber Objekt Keys iterieren - in diesem Fall `name` und `age`. Im Endeffekt sind Objekt Keys Strings (oder Symbols). Bei jedem Durchlauf setzen wir den Wert von `item` gleich zum aktuellen Key. Zuerst ist `item` gleich `name` und wird geloggt. Dann wird `item` gleich `age` gesetzt und wird geloggt.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"Operator Assoziativit\xe4t ist die Reihenfolge, in der der Compiler die Expression evaluiert, entweder links-nach-rechts oder rechts-nach-links. Das funktioniert nur, wenn alle Operatoren die _gleiche_ Priorit\xe4t haben. Hier haben wir nur einen Operator: `+`. F\xfcr Addition ist die Assoziativit\xe4t links-nach-rechts.\\n\\n`3 + 4` wird zuerst errechnet, das Ergebnis ist `7`.\\n\\n`7 + \'5\'` ergibt `\\"75\\"` (aufgrund von Coercion). JavaScript wandelt `7` in einen String um (Siehe Frage 15). Zwei Strings werden durch den `+` Operator zusammengesetzt.`\\"7\\" + \\"5\\"` ergibt `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Nur die erste Zahl im String wird ausgegeben. Aufgrund des _radix_ (das zweite Argument definiert, welchen Typ einer Zahl wir parsen wollen: Basis 10, hexadezimal, Octal, Binary, etc.) pr\xfcft `parseInt` ob die Zeichen im String g\xfcltig sind. Wenn ein Zeichen erkannt wird, welches nicht g\xfcltig ist, wird der Parse Vorgang beendet und die nachfolgenden Zeichen werden ignoriert.\\n\\n`*` ist keine g\xfcltige Nummer, sodass nur `\\"7\\"` als Dezimal geparsed wird: `7`. `num` ist jetzt gleich `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"Was ist der Wert von `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Wenn man \xfcber das Array mappt, ist `num` gleich dem Element, welches gerade durchlaufen wird. In diesem Fall sind die Elemente Nummern, sodass die Kondition der If-Schleife `typeof num === \\"number\\"` erf\xfcllt ist und `true` zur\xfcck gibt. Die map Funktion erstellt ein neues Array und beinhaltet die Werte der Funktion.\\n\\nAllerdings geben wir keinen Wert aus. Wenn unsere Funktion keinen Wert ausgibt, ist der Standard \\"return\\" `undefined`. F\xfcr jedes Element im Array wird die Funktion aufgerufen, sodass f\xfcr jedes Element `undefined` ausgegeben wird.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = 1998;\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Argumente werden als _Wert_ \xfcbergeben, es sei denn ihr Wert ist ein Objekt, dann werden sie als _Referenz_ \xfcbergeben. `birthYear` wird als Wert \xfcbergeben, da es ein String ist und kein Objekt. Wenn Argumente als Wert \xfcbergeben werden, wird eine _Kopie_ des Wertes erstellt (Siehe Frage 46).\\n\\nDie Variable `birthYear` beinhaltet eine Referenz zum Wert `\\"1997\\"`. Das Argument `year` beinhaltet ebenso eine Referenz zum Wert `\\"1997\\"`, aber die Werte sind nicht identisch! Wenn wir den Wert von `year` \xe4ndern, indem wir ihn gleich `\\"1998\\"` setzen, \xe4ndern wir nur den Wert von `year`. `birthYear` ist immernoch `\\"1997\\"`.\\n\\nDer Wert von `person` ist ein Objekt, sodass das Argument `member` eine Kopie der Referenz des _gleichen_ Objekts hat. Wenn wir also eine Property dessen Objekt `member` eine Referenz enth\xe4lt, wird der Wert von `person` ebenso ge\xe4ndert, da beide die gleiche Referenz zum selben Objekt beinhalten. Die Property `name` von `person` ist jetzt gleich `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Mit dem `throw` Statement k\xf6nnen wir individuelle Fehlermeldungen erstellen und Exceptions erstellen. Eine Exception kann ein <b>String</b>, eine <b>Nummer</b>, ein <b>Boolean</b> oder ein <b>Objekt</b> sein. In diesem Fall ist unsere Exception der String `\'Hello world\'`.\\n\\nMit dem `catch` Statement k\xf6nnen wir definieren, was passiert, wenn die Exception im `try` Block eintritt. Wenn die Exception eintritt wird der String `\'Hello world\'` ausgegeben. Nun loggen wir `e`, was gleich dem String ist. Das Ergebnis ist `\'Oh an error: Hello world\'`.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined\\"`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error! Hello world!\\"`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Wenn man eine Property ausgibt ist der Wert der Property gleich dem ausgegeben Wert und nicht dem Wert, der im Constructor definiert wurde. Wir geben den String `\\"Maserati\\"` aus, sodass `myCar.make` gleich `\\"Maserati\\"` ist.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` ist kurz f\xfcr:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nWenn wir `y` gleich `10` setzen, erstellen wir eigentlich eine Property `y` im globalen Objekt (`window` im Browser oder `global` in Node). Im Browser ist jetzt `window.y` gleich `10`.\\n\\nDann erstellen wir eine Variable `x` mit dem Wert von `y` (`10`). Variablen, die mit `let` erstellt werden sind _Block-Scoped_, was bedeutet, dass sie nur in dem Block existieren, wo sie erstellt wurden \u2013 der hier erstellte Funktion (IIFE) in diesem Fall. Wenn wir den `typeof` Operator nutzen ist `x` nicht definiert. Wir versuchen auf `x` au\xdferhalb des Scopes zuzugreifen, was bedeutet, dass `x` `\\"undefined\\"` ist. `console.log(typeof x)` gibt daher `\\"undefined\\"` aus.\\n\\nDa wir die Variable `y` aber global erstellt haben ist ihr Wert `10` auch hier verf\xfcgbar und \xfcberall in userem Code aufrufbar. `y` ist definiert und beinhaltet einen Wert vom Typ `\\"number\\"`. `console.log(typeof y)` gibt daher `\\"number\\"` aus.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"Properties von Objekten k\xf6nnen mit dem `delete` Keyword entfernt werden, selbst am Prototype. Beim entfernen von Properties am Prototype ist zu beachten, dass diese dann aus der Prototypen-Kette verschwinden. In unserem Fall existiert die `bark` Funktion nicht mehr am Prototype nachdem `delete Dog.prototype.bark` ausgef\xfchrt wurde.\\n\\nWenn wir versuchen etwas auszuf\xfchren, was keine Funktion ist, wird ein `TypeError` ausgeworfen. In diesem Fall `TypeError: pet.bark is not a function`, da `pet.bark` `undefined` ist.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`,`\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"Das `Set` Objekt ist eine Sammlung von _eindeutigen_ Werten: jeder Wert kann nur ein Mal in einem Set vorkommen.\\n\\nWir \xfcbergeben `[1, 1, 2, 3, 4]` mit einer doppelten `1`. Da wir keine doppelten Werte in einem Set haben k\xf6nnen wird eine `1` entfernt. Das Ergebnis ist `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"Ein importiertes Modul ist _read-only_, was bedeutet, dass importierte Module nicht ge\xe4ndert werden k\xf6nnen. Nur das Modul, welches diese exportiert kann deren Wert \xe4ndern.\\n\\nWenn wir also den Wert von `myCounter` erh\xf6hen bekommen wir den Fehler `myCounter is read-only and cannot be modified`.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"Der `delete` Operator gibt einen Boolean Wert zur\xfcck: `true` bei erfolgreichem entfernen, oder andernfalls `false`. Variablen, die mit `var`, `let` oder `const` deklariert werden, k\xf6nnen andererseits  nicht mit `delete` entfernt werden.\\n\\nDer Wert von `name` wurde mit `const` deklariert, weshalb `delete` nicht m\xf6glich ist und `false` zur\xfcckgegeben wird. Als wir `age` den Wert `21` zugewiesen haben, haben wir eine Property `age` zum globalen Objekt hinzugef\xfcgt. Diese Properties kann man mit `delete` entfernen, sodass `delete age` `true` zur\xfcckgibt.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"Wir k\xf6nnen durch Destructuring Werte aus Arrays oder Properties aus Objekten entpacken. Zum Beispiel:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nDer Wert von `a` ist jetzt `1` und der Wert von `b` ist jetzt `2`. Was wir in der Frage eigentlich getan haben ist:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nDas bedeutet, dass der Wert von `y` gleich des ersten Wertes im Array ist, sprich der Zahl `1` entspricht. Wenn wir `y` loggen bekommen wir `1` ausgegeben.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"Es ist m\xf6glich Objekte mit dem Spread Operator `...` zu verbinden. Dieser erstellt Kopien der Key/Value Paare eines Objektes und f\xfcgt diese dem anderen Objekt hinzu. In diesem Fall wird eine Kopie des `user` Objekts erstellt und dem `admin` Objekt zugewiesen. Das `admin` Objekt beinhaltet nun die kopierten Key/Value Paare, sodass das Ergebnis `{ admin: true, name: \\"Lydia\\", age: 21 }` ist.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"Mit der `defineProperty` Methode k\xf6nnen wir neue Properties zu einem Objekt hinzuf\xfcgen oder bestehende modifizieren. Wenn wir mit der `defineProperty` Methode Properties einem Objekt hinzuf\xfcgen, sind diese standardm\xe4\xdfig _nicht z\xe4hlbar_. Die `Object.keys` Methode gibt alle _z\xe4hlbaren_ Property Namen eines Objektes zur\xfcck, in diesem Fall nur `\\"name\\"`.\\n\\nProperties, die mit `defineProperty` erstellt wurden sind standardm\xe4\xdfig unver\xe4nderbar. Man kann dieses Verhalten mit den `writable`, `configurable` und `enumerable` Properties ver\xe4ndern. Auf diese Art gibt die `defineProperty` Methode mehr Kontrolle \xfcber die Properties, die einem Objekt hinzugef\xfcgt werden.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Das zweite Argument von `JSON.stringify` ist ein _Replacer_. Der Replacer kann entweder eine Funktion oder ein Array sein und gibt uns Kontrolle dar\xfcber, wie die Werte in Strings umgewandelt werden sollen.\\n\\nWenn der Replacer ein _Array_ ist, werden nur die Properties dem JSON String hinzugef\xfcgt, die in dem Array aufgef\xfchrt sind. In diesem Fall sind das nur `\\"level\\"` und `\\"health\\"`. `\\"username\\"` ist ausgeschlossen. `data` ist jetzt gleich `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nWenn der Replacer eine _Funktion_ ist, so wird diese Funktion f\xfcr jede Property im Objekt aufgerufen, die in Strings umgewandelt wird. Der Wert, den die Funktion zur\xfcckgibt, ist der Wert der Property, die dem JSON String hinzugef\xfcgt wird. Ist der Wert `undefined`, so wird die Property ausgeschlossen.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"Der un\xe4re Operator `++` _gibt zuerst_ den Wert des Operanden aus und _erh\xf6ht danach_ den Wert des Operanden. Der Wert `num1` ist `10`, da `increaseNumber` zuerst den Wert von `num1` (`10`) ausgibt und ihn danach erh\xf6ht.\\n\\n`num2` ist gleich `10`, da wir `num1` `increasePassedNumber` zugewiesen haben. `number` ist gleich `10` (der Wert von `num1`). Der un\xe4re Operator `++` gibt erneut _zuerst_ den Wert des Operanden aus und _erh\xf6ht danach_ den Wert. Der Wert von `number` ist `10`, sodass `num2` ebenfalls `10` ist.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"Das erste Argument, welches die `reduce` Methode erh\xe4lt ist der _Akkumulator_ `x`. Das zweite Argument ist der _aktuelle Wert_, `y`. Durch die `reduce` Methode f\xfchren wir eine Callback Funktion an jedem Element des Arrays aus, was im Endeffekt einen einzelnen Wert ausgibt.\\n\\nIn diesem Beispiel geben wir nicht irgendwelche Werte aus, sondern loggen einfach nur den Akkumulator und den momentanen Wert.\\n\\nDer Wert des Akkumulators ist gleich dem vorhergehenden Wert der Callback Funktion. Wenn wir `initialValue` nicht an die `reduce` Methode \xfcbergeben bleibt der Akkumulator gleich dem ersten Element des ersten Calls.\\n\\nBeim ersten Call ist der Akkumulator (`x`) gleich `1` und der aktuelle Wert (`y`) ist `2`. Da wir in der Callback Funktion bleiben loggen wir den Akkumulator und den aktuellen Wert: `1` und `2`.\\n\\nWenn wir keinen Wert einer Funktion ausgeben wird `undefined` ausgegeben. Beim n\xe4chsten Call ist der Akkumulator daher `undefined` und der aktuelle Wert ist `3`. `undefined` und `3` werden geloggt.\\n\\nBeim vierten Call geben wir wieder nichts aus, sodass der Akkumulator wieder `undefined` ist und der aktuelle Wert `4`. `undefined` und `4` werden geloggt.","id":63,"options":["`1` `2` und `3` `3` und `6` `4`","`1` `2` und `2` `3` und `3` `4`","`1` `undefined` und `2` `undefined` und `3` `undefined` und `4` `undefined`","`1` `2` und `undefined` `3` und `undefined` `4`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1\\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4\\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"In einer abgeleiteten Klasse kann das `this` Keyword nicht aufgerufen werden, bevor `super` aufgerufen wurde. Wenn man das versucht wird ein ReferenceError ausgeworfen: 1 und 4 w\xfcrden daher einen Referenz-Fehler ausgeben.\\n\\nMit dem `super` Keyword k\xf6nnen wir den Constructor der Elternklasse mit gegebenen Argumenten aufrufen. Der Constructor der Elternklasse erh\xe4lt das `name` Argument, sodass wir `name` an `super` \xfcbergeben m\xfcssen.\\n\\nDie `Dog` Klasse erh\xe4lt zwei Argumente, `name` da es `Animal` erweitert und `size` als extra Property der `Dog` Klasse. Beide m\xfcssen an die Constructor Funktion von `Dog` \xfcbergeben werden, was nur bei Constructor 2 richtig ist.","id":64,"options":["1","2","3","4"],"question":"Mit welchem Constructor k\xf6nnen wir die `Dog` Klasse erweitern?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js);\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"Mit dem `import` Keyword werden alle importierten Module _vorgeparsed_. Das bedeutet, dass importierte Module _zuerst_ ausgef\xfchrt werden, der Code in der eigentlichen Datei wird _danach_ ausgef\xfchrt.\\n\\nDas ist der gro\xdfe Unterschied zwischen `require()` in CommonJS und `import`. Mit `require()` k\xf6nnen Dependencies bei Bedarf geladen werden, w\xe4hrend der Code ausgef\xfchrt wird. H\xe4tten wir `require()` anstelle von `import` verwendet, w\xe4re `running index.js`, `running sum.js`, `3` in der Konsole geloggt worden.","id":65,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"Mit welchem Constructor k\xf6nnen wir die `Dog` Klasse erweitern?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"Jedes Symbol ist eindeutig. Der Sinn des Argumentes, welches an das Symbol weitergegeben wird, ist dem Symbol eine Beschreibung zu geben. Der Wert des Symbols h\xe4ngt nicht von diesem Argument ab. Beim vergleichen der Symbole werden zwei komplett neue Symbole erstellt: das erste `Symbol(\'foo\')` und das zweite `Symbol(\'foo\')`. Diese beiden Werte sind eindeutig und nicht identisch, weshalb `Symbol(\'foo\') === Symbol(\'foo\')` `false` ausgibt.","id":66,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"Mit der `padStart` Methode k\xf6nnen wir Padding am Anfang des Strings hinzuf\xfcgen. Der Wert, der an die Methode \xfcbergeben wird ist die _absolute_ L\xe4nge des Strings mit dem Padding. Der String `\\"Lydia Hallie\\"` hat eine L\xe4nge von `12`. `name.padStart(13)` f\xfcgt ein Leerzeichen am Anfang des Strings ein, weil 12 + 1 = 13 ist.\\n\\nFalls der Wert, der an `padStart` \xfcbergeben wurde kleiner ist, als die L\xe4nge des Arrays, so wird kein Padding hinzugef\xfcgt.","id":67,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"Mit dem `+` Operator k\xf6nnen Strings zusammengesetzt werden. In diesem Fall werden die Strings `\\"\ud83e\udd51\\"` und `\\"\ud83d\udcbb\\"` zusammengesetzt, was `\\"\ud83e\udd51\ud83d\udcbb\\"` ergibt.","id":68,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","Ein String, der den Emoji Code beinhaltet","Error"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"function* startGame() {\\n  const Antwort = yield \\"Do you love JavaScript?\\";\\n  if (Antwort !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"Eine Generator Funktion pausiert die Ausf\xfchrung, wenn das `yield` Keyword vorliegt. Zuerst m\xfcssen wir den String \\"Do you love JavaScript?\\" abwarten, was mit `game.next().value` m\xf6glich ist.\\n\\nJede Zeile wird ausgef\xfchrt, bis das erste `yield` Keyword auftritt. Da auf der ersten Zeile ein `yield` in der Funktion vorliegt wird die Ausf\xfchrung damit angehalten. Das bedeutet, dass die Variable `Antwort` _noch nicht definiert_ wurde.\\n\\nWenn wir `game.next(\\"Yes\\").value` aufrufen wird das vorhergehende `yield` durch den Wert des Parameters ersetzt, der an `next()` \xfcbergeben wird - `\\"Yes\\"` in diesem Fall. Der Wert der Variable `Antwort` ist jetzt gleich `\\"Yes\\"`. Das if-Statement gibt `false` aus und `JavaScript loves you back \u2764\ufe0f` wird geloggt.","id":69,"options":["`game.next(\\"Yes\\").value` und `game.next().value`","`game.next.value(\\"Yes\\")` und `game.next.value()`","`game.next().value` und `game.next(\\"Yes\\").value`","`game.next.value()` und `game.next.value(\\"Yes\\")`"],"question":"Wie k\xf6nnen wir die Werte loggen, die nach dem `console.log` auskommentiert wurden?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` gibt einen String aus, in dem die Escapes (`\\n`, `\\u000b`, `\\t` etc.) ignoriert werden! Backslashes sind problematisch, weil man mit sowas in der Art rechnen muss:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nDas w\xfcrde dann wiefolgt gerendert werden:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nMit `String.raw` werden diese ignoriert und das Ergebnis ist:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nIn unserem Fall ist das Ergebnis `Hello\\nworld`, was geloggt wird.","id":70,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Eine `async` Funktion gibt immer ein Promise zur\xfcck. Mit `await` wird das Ergebnis des Promises abgewartet und ein ausstehendes Promise wird ausgegeben, wenn wir `getData()` aufrufen um `data` gleich zu setzen.\\n\\nWenn wir auf den finalen Wert `\\"I made it\\"` zugreifen wollen, nutzen wir die `.then()` Methode an `data`:\\n\\n`data.then(res => console.log(res))`\\n\\nDas h\xe4tte `\\"I made it!\\"` ausgegeben.","id":71,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"Die `.push()` Methode gibt die _L\xe4nge_ des Arrays aus! Das Array beinhaltete zuerst ein einziges Element (`\\"banana\\"`) und hatte eine L\xe4nge von `1`. Nachdem wir `\\"apple\\"` hinzugef\xfcgt haben beinhaltet das Array zwei Elemente und hat eine L\xe4nge von `2`. Das wird letztlich von der `addToList` Funktion ausgegeben.\\n\\nDie `push` Methode ver\xe4ndert das urspr\xfcngliche Array. Wenn wir das _Array_ der Funktion anstelle der _L\xe4nge des Arrays_ ausgeben m\xf6chten, h\xe4tten wir `list` ausgeben m\xfcssen.","id":72,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` macht es unm\xf6glich das Objekt zu ver\xe4ndern (hinzuf\xfcgen, entfernen, ver\xe4ndern), es sei denn der Wert ist ein weiteres Objekt.\\n\\nWenn wir die Variable `shape` erstellen und gleich dem eingefrorenen Objekt `box` setzen, ist `shape` ebenso eingefroren. Man kann mit `Object.isFrozen` pr\xfcfen, ob ein Objekt eingefroren ist.\\nIn unserem Fall gibt `Object.isFrozen(shape)` `true` zur\xfcck, da die Variable `shape` eine Referenz zu einem eingefrorenen Objekt ist.\\n\\nDa `shape` eingefroren ist und der Wert von `x` kein Objekt ist, k\xf6nnen wir den Wert von `x` nicht ver\xe4ndern. `x` ist immernoch gleich `10` und `{ x: 10, y: 20 }` wird geloggt.","id":73,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"Wenn wir die Property `name` aus dem Objekt auf der rechten Seite destructuren, weisen wir den Wert einer neuen Variable `myName` zu.\\n\\nMit `{ name: myName }` sagen wir JavaScript, dass wir eine neue Variable mit dem Namen `myName` erstellen m\xf6chten und den Wert von `name` zuweisen.\\n\\nDa `name` nicht definiert ist, wird ein ReferenceError ausgeworfen.","id":74,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"Eine pure Funktion ist eine Funktion, die _immer_ das gleiche Ergebnis zur\xfcck gibt, wenn die gleichen Argumente eingegeben werden.\\n\\nDie `sum` Funktion gibt daher immer das gleiche Ergebnis aus. Wenn wir `1` und `2` eingeben wird _immer_ `3` ausgegeben. Wenn wir `5` und `10` eingeben wird _immer_ `15` ausgegeben usw. Das ist die Definition einer puren Funktion.","id":75,"options":["Ja","Nein"],"question":"Is this a pure function?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"Die `add` Funktion ist _memoized_. Mit Memoization k\xf6nnen wir Ergebnisse einer Funktion cachen, um die Performance zu beschleunigen. In diesem Fall erstellen wir ein `cache` Objekt, welches die zuvor ausgegebenen Werte speichert.\\n\\nWenn wir die `addFunction` Funktion erneut mit den gleichen Argumenten aufrufen wird zuerst gepr\xfcft, ob der Wert bereits im Cache vorhanden sind. Ist das der Fall, so wird der Cache diesen Wert ausgeben und damit Ausf\xfchrzeit sparen. Wenn der Wert nicht gecached ist wird der neue Wert berechnet und danach im Cache gespeichert.\\n\\nWir rufen die `addFunction` Funktion drei mal mit dem gleichen Wert auf: bei der ersten Ausf\xfchrung. ist der Wert der Funktion `10` nicht im Cache. Die Kondition des if-Statements `num in cache` gibt `false` aus und der else Block wird ausgef\xfchrt: `Calculated! 20` wird geloggt und der Wert des Ergebnisses wird dem Cache Objekt hinzugef\xfcgt. `cache` sieht jetzt wiefolgt aus: `{ 10: 20 }`.\\n\\nBei der zweiten Ausf\xfchrung beinhaltet das `cache` Objekt den Wert `10`. Die Kondition des if-Statements `num in cache` gibt `true` aus und `\'From cache! 20\'` wird geloggt.\\n\\nBeim dritten Mal geben wir `5 * 2` als Argument in die Funktion ein, was `10` ergibt. Das `cache` Objekt beinhaltet den Wert `10` und das if-Statement `num in cache` gibt wieder `true` aus und `\'From cache! 20\'` wird geloggt.","id":76,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"Array Elemente k\xf6nnen jeden Wert halten: Nummern, Strings, Objekte, andere Arrays, null, Booleans, undefined und andere Expressions wie Funktionen, Berechnungen oder ein Datum.\\n\\nDas Element ist gleich dem ausgegebenen Wert. `1 + 2` ergibt `3`, `1 * 2` ergibt `2`, und `1 / 2` ergibt `0.5`.","id":77,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"Standardm\xe4\xdfig haben Argumente den Wert `undefined`, es sei denn der Funktion wurde ein Wert zugewiesen. In diesem Fall haben wir dem `name` Argument keinen Wert zugewiesen, weshalb `name` `undefined` ist.\\n\\nIn ES6 k\xf6nnen wir diesen Standardwert `undefined` mit Standard Parametern \xfcberschreiben, zum Beispiel:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nIn diesem Fall, falls wir kein Argument oder `undefined` eingeben ist `name` immer `Lydia`.","id":78,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"Der Wert des `this` Keywords h\xe4ngt davon ab, wo es verwendet wird. In einer **Methode**, wie `getStatus` bezieht sich das `this` Keyword auf das _Objekt, zu dem die Methode geh\xf6rt_. Die Methode geh\xf6rt zum `data` Objekt, sodass `this` sich auf das `data` Objekt bezieht. Wenn wir `this.status` loggen wird die `status` Property des `data` Objekts geloggt, was `\\"\ud83e\udd51\\"` ist.\\n\\nMit der `call` Methode k\xf6nnen wir das Objekt, auf welches sich das `this` Keyword bezieht \xe4ndern. In **Funktionen** bezieht sich `this` auf das _Objekt, zu dem die Funktion geh\xf6rt_. Wir erkl\xe4ren die `setTimeout` Funktion im _globalen Objekt_, sodass sich `this` in `setTimeout` auf das _globale Objekt_ bezieht. Im globalen Objekt gibt es _status_ mit dem Wert `\\"\ud83d\ude0e\\"`, was geloggt wird.","id":79,"options":["`\\"\ud83e\udd51\\"` und `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` und `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` und `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` und `\\"\ud83d\ude0e\\"`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"Wir setzen die Variable `city` gleich dem Wert der Property `city` am `person` Objekt. Da am `person` Objekt keine Property namens `city` existiert wird der Wert gleich `undefined` gesetzt.\\n\\nDa wir _nicht_ das `person` Objekt selbst referenzieren, sondern einfach die Variable `city` gleich dem aktuellen Wert von `city` am `person` Objekt setzen bleibt dieses `undefined`.\\n\\nDann setzen wir `city` gleich dem String `\\"Amsterdam\\"`. Das ver\xe4ndert aber nicht das `person` Objekt, da es keine Referenz dazu am Objekt gibt.\\n\\nWenn wir `person` loggen bekommen wir daher das unver\xe4nderte Objekt angezeigt.","id":80,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"Variablen mit dem `const` und `let` Keyword sind _block-scoped_. Ein Block ist alles zwischen geschweiften Klammern (`{ }`), in diesem Fall die geschweiften Klammern des if/else Statements. Es ist nicht m\xf6glich eine solche Variable au\xdferhalb des Blocks in dem sie erkl\xe4rt wurde aufzurufen, daher wird ein ReferenceError ausgegeben.","id":81,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"Der Wert von `res` im zweiten `.then` ist gleich dem ausgegebenen Wert des vorhergehenden `.then`. Man kann soviele `.then`s aneinander reihen, wie man m\xf6chte und der Wert wird immer an den n\xe4chsten Handler \xfcbergeben.","id":82,"options":["Das Ergebnis der `fetch` Methode.","Das Ergebnis des zweiten Aufrufs der `fetch` Methode.","Das Ergebnis des Callbacks im vorhergehenden `.then()`.","Immer `undefined`."],"question":"Welche Information wird geloggt?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"Mit `!!name` k\xf6nnen wir feststellen, ob `name` truthy oder falsey ist. Ist `name` truthy, so w\xfcrde `!name` `false` ausgeben. `!false` (das Gleiche wie `!!name`) ergibt `true`.\\n\\nWenn wir `hasName` gleich `name` setzen, so beinhaltet `hasName` den Wert von `name`, nicht den Boolean Wert `true`.\\n\\n`new Boolean(true)` gibt einen Objekt Wrapper aus, nicht ein Boolean ansich.\\n\\n`name.length` gibt die L\xe4nge des Arguments aus, nicht den Boolean Wert.","id":83,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"Wie k\xf6nnen wir `hasName` gleich `true` setzen, vorausgesetzt wir k\xf6nnen `true` nicht als Argument \xfcbergeben?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"Man kann den Wert eines Standard Parameters gleich einem anderen Parameter in der Funktion setzen, sofern diese _vor_ dem Standard Parameter definiert wurden. Wir \xfcbergeben den Wert `10` an die `sum` Funktion. Wenn die `sum` Funktion nur ein Argument \xfcbergeben bekommt bedeutet das, dass der Wert f\xfcr `num2` nicht gesetzt wurde und der Wert von `num1` ist gleich dem Wert `10`. Der Standardwert von `num2` ist gleich dem Wert von `num1`, sprich `10`. `num1 + num2` gibt `20` aus.\\n\\nWenn man den Wert des Standard Paramenters gleich dem Parameter setztm der _danach_ definiert wurde, bekommen wir einen Fehler ausgegeben, da der Wert noch nicht initialisiert wurde.","id":84,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"// module.js\\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js\\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"Mit `import * as name` importieren wir _alle Exporte_ der `module.js` in `index.js` als `data`. In der Datei `module.js` haben wir zwei Exporte: den Standard Export und einen benannten Export. Der Standard Export ist eine Funktion, die `\\"Hello World\\"` ausgibt und der benannte Export ist eine Variable namens `name` mit dem Wert `\\"Lydia\\"`.\\n\\nDas `data` Objekt hat eine Standard Property f\xfcr alle Standard Exporte, andere Properties haben die Namen des benannten Exports und der entsprechenden Werte.","id":85,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Globales Objekt von `module.js`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"Klassen sind syntaktischer Zucker f\xfcr Funktionskontruktoren. Das Equivalent der `Person` Klasse als Funktionskonstruktor w\xe4re:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\nDas Aufrufen eines Funktionskonstruktors mit `new` hat zur Folge, dass eine Instanz von `Person` erstellt wird. `typeof` gibt `\\"object\\"` f\xfcr die instanz aus. `typeof member` gibt `\\"object\\"` aus.","id":86,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"Die `.push` Methode gibt die _neue L\xe4nge_ des Arrays aus, nicht die L\xe4nge des Arrays selbst. Wenn wir `newList` gleich `[1, 2, 3].push(4)` setzen, setzen wir `newList` auch gleich der L\xe4nge des Arrays: `4`.\\n\\nDann versuchen wir die `.push` Methode auf `newList` anzuwenden. Da `newList` den numerischen Wert `4` beinhaltet k\xf6nnen wir die `.push` Methode nicht anwenden: ein TypeError wird ausgegeben.","id":87,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"Regul\xe4re Funktionen wie `giveLydiaPizza` haben eine `prototype` Property, die ein Objekt (Prototype Object) mit einem `constructor` ist. Arrow Funktionen dagegen (wie `giveLydiaChocolate`) haben keinen `prototype`. `undefined` wird ausgegeben, wenn wir versuchen den `prototype` mit `giveLydiaChocolate.prototype` aufzurufen.","id":88,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` gibt ein Array mit verschachtelten Arrays der Keys aus:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]`\\n\\nMit der `for-of` Schleife iterieren wir \xfcber jedes Element in dem Array, in diesem Fall die verschachtelten Arrays. Wir k\xf6nnen die verschachtelten Arrays mit `const [x, y]` in der for-of Schleife destrukturieren. `x` ist gleich dem ersten Element, `y` ist gleich dem zweiten Element in dem verschachtelten Array.\\n\\nDas erste verschachtelte Array ist `[ \\"name\\", \\"Lydia\\" ]`. `x` ist gleich `\\"name\\"` und `y` gleich `\\"Lydia\\"`, was geloggt wird.\\nDas zweite verschachtelte Array ist `[ \\"age\\", 21 ]`. `x` ist gleich `\\"age\\"` und `y` ist gleich `21`, was geloggt wird.","id":89,"options":["`name` `Lydia` und `age` `21`","`[\\"name\\", \\"Lydia\\"]` und `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` und `undefined`","`Error`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` ist ein Rest-Parameter. Der Wert des Rest-Parameters ist ein Array mit allen weiteren Argumenten **und kann nur der letzte Parameter sein**! In diesem Beispiel war der Rest-Parameter das zweite Argument, was nicht m\xf6glich ist und daher einen Syntax Error ausgibt.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nDieses Beispiel w\xfcrde funktionieren und `[ \'banana\', \'apple\', \'orange\', \'pear\' ]` ausgeben.","id":90,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"Wir k\xf6nnen Klassen gleich anderen Klassen oder Funktions Konstruktoren setzen. In diesem Beispiel setzen wir `Person` gleich `AnotherPerson`. Der Name in diesem Konstruktor ist `Sarah`, sodass die name-Property der neuen `Person` Instanz `member` gleich `\\"Sarah\\"` ist.","id":91,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"Ein Symbol ist nicht _z\xe4hlbar_. Die `Object.keys` Methode gibt alle z\xe4hlbaren Key Properties eines Objekts aus. Das Symbol ist nicht sichtbar, sodass ein leeres Array ausgegeben wird. Wenn wir das gesamte Objekt loggen sind alle Properties sichtbar, auch nicht z\xe4hlbare.\\n\\nDas ist einer der vielen Vorteile eines Symbols: nebem einem einzigartigen Wert (welcher verhindert, dass versehentlich zwei Objekte gleiche Namen haben, zum Beispiel wenn wir mit verschiedenen Libraries arbeiten) k\xf6nnen Properties von Objekten auf diese Art versteckt werden.\\nBedenke: Man kann die Symbole dennoch mit der `Object.getOwnPropertySymbols()` Methode einsehen.","id":92,"options":["`{Symbol(\'a\'): \'b\'}` und `[\\"{Symbol(\'a\')\\"]`","`{}` und `[]`","`{ a: \\"b\\" }` und `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` und `[]`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"Die `getList` Funktion bekommt ein Array als Argument zugewiesen. Zwischen den Klammern der `getList` Funktion wird das Array direkt destrukturiert. Man k\xf6nnte das auch wiefolgt sehen:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\nMit dem Rest Parameter `...y` packen wir alle \xfcbrigen Argumente in ein Array. Die \xfcbrigen Argumente sind in dem Fall `2`, `3` und `4`. Der Wert von `y` ist ein Array mit den restlichen Parametern. Der Wert von `x` ist gleich `1` sodass `[1, [2, 3, 4]]` geloggt wird.\\n\\nDie `getUser` Funktion bekommt ein Objekt zugewiesen. Bei Arrow Funktionen m\xfcssen wir keine geschweiften Klammern verwenden, wenn wir nur einen Wert ausgeben. Wenn wir aber ein _Objekt_ von einer Arrow Funktion ausgeben lassen m\xf6chten, so muss dieses zwischen Klammern stehen, ansonsten wird nichts ausgegeben. Die folgende Funktion h\xe4tte ein Objekt ausgegeben:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\nDa kein Wert ausgegeben wird, gibt die Funktion `undefined` aus.","id":93,"options":["`[1, [2, 3, 4]]` und `undefined`","`[1, [2, 3, 4]]` und `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` und `{ name: \\"Lydia\\", age: 21 }`","`Error` und `{ name: \\"Lydia\\", age: 21 }`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"Die Variable `name` beinhaltet einen String, welcher logischer Weise keine Funktion ist und daher nicht ausgef\xfchrt werden kann.\\n\\nTypeErrors werden ausgeworfen, wenn ein Wert einen falschen Typ aufweist. JavaScript hat eine Funktion erwartet, da wir `name` ausf\xfchren. Da es aber ein String war bekommen wir den TypeError: name is not a function!\\n\\nSyntaxErrors werden ausgeworfen, wenn wir etwas schreiben, was kein g\xfcltiger JavaScript Code ist, zum Beispiel wenn wir uns vertippen und anstatt `return` `retrun` schreiben.\\n\\nReferenceErrors werden ausgeworfen, wenn JavaScript eine Referenz zu einem Wert nicht finden kann.","id":94,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"// \ud83c\udf89\u2728 Das ist unsere 100. Frage! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` ist ein \\"truthy\\" Wert. Mit dem `&&` Operator geben wir den rechten Wert aus, wenn der linke truthy ist. In diesem Fall ist `[]` truthy, wodurch `\\"Im\'` ausgegeben wird.\\n\\n`\\"\\"` ein ein \\"falsy\\" Wert. Wenn der linke Wert falsy ist wird nichts ausgegeben. In diesem Fall wird `n\'t` _nicht_ ausgegeben.","id":95,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"Mit dem `||` Operator geben wir den ersten truthy Operand aus. Wenn alle Werte falsy sind wird der letzte Operand ausgegeben.\\n\\n`(false || {} || null)`: das leere Objekt `{}` ist truthy. Das ist der erste und einzige truthy Wert und wird daher ausgegeben. `one` ist gleich `{}`.\\n\\n`(null || false || \\"\\")`: alle Operanden sind falsy. Das bedeutet, dass der letzte Wert `\\"\\"` ausgegeben wird. `two` ist gleich `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: das leere Array `[]` ist truthy. Das ist der erste truthy Wert, und wird daher ausgegeben. `three` ist gleich `[]`.","id":96,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}","codeLanguage":"javascript","explanation":"Mit einem Promise sagen wir _Ich m\xf6chte diese Funktion ausf\xfchren, aber ich lege sie erstmal beiseite, weil sie eine Weile braucht. Erst wenn ein bestimmter Wert ausgegeben (oder rejected) wird und der Call Stack leer ist m\xf6chte ich den Wert nutzen._\\n\\nWir k\xf6nnen auf den Wert mit `.then()` oder `await` in einer `async` Funktion zugreifen, aber `.then()` und `await` unterscheiden sich in einem bestimmten Punkt.\\n\\nIn `firstFunction` legen wir `myPromise` beiseite, w\xe4hrend die Funktion durchl\xe4uft, aber wir arbeiten anderen Code ab, hier `console.log(\'second\')`.\\nDann wird die Funktion abgeschlossen und der String `I have resolved` wird ausgegeben, nachdem sich der Call Stack geleert hat.\\n\\nMit dem `await` Keyword in `secondFunction` wird die Funktion gestoppt bis der Wert ausgegeben wurde, erst dann wird die n\xe4chste Zeile ausgef\xfchrt.\\n\\nDas bedeutet, dass auf `myPromise` gewartet und dann der Wert `I have resolved` ausgegeben wird und erst dann wird die n\xe4chste Zeile ausgef\xfchrt und `second` wird geloggt.","id":97,"options":["`I have resolved!`, `second` und `I have resolved!`, `second`","`second`, `I have resolved!` und `second`, `I have resolved!`","`I have resolved!`, `second` und `second`, `I have resolved!`","`second`, `I have resolved!` und `I have resolved!`, `second`"],"question":"What\'s the value of output?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"Der `+` Operator wird nicht nur f\xfcr numerische Werte verwendet, wir k\xf6nnen mit ihm ebenso Strings zusammenf\xfcgen. Immer, wenn JavaScript merkt, dass mindestens ein Wert keine Nummer ist, wird ein String erstellt.\\n\\nDer erste Wert ist `1`, was ein numerischer Wert ist. `1 + 2` ergibt die Zahl `3`.\\n\\nDer zweite Wert hingegen ist der String `\\"Lydia\\"`. `\\"Lydia\\"` ist ein String und `2` ist eine Nummer: `2` wird in einem String umgewandelt. `\\"Lydia\\"` und `\\"2\\"` werden zusammengesetzt, was den String `\\"Lydia2\\"` ausgibt.\\n\\n`{ name: \\"Lydia\\" }` ist ein Objekt. Weder eine Nummer, noch ein Objekt sind ein String, aber beide werden zu Strings konvertiert und `\\"[object Object]\\"` wird ausgegeben. `\\"[object Object]\\"` zusammengesetzt mit `\\"2\\"` wird `\\"[object Object]2\\"`.","id":98,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"Wir k\xf6nnen jeden Wert an `Promise.resolve` \xfcbergeben, es muss nicht unbedingt ein Promise sein. Die Methode selbst gibt ein Promise zur\xfcck, was einen Wert ausgibt (`<fulfilled>`). Wenn man eine normale Funktion \xfcbergibt wird das Promise einen normalen Wert ausgeben. Wenn ein Promise \xfcbergeben wird so wird ein Promise gel\xf6st und der Wert des gel\xf6sten Promises ausgegeben.\\n\\nIn diesem Fall haben wir nur die Zahl `5` \xfcbergeben und diese wird genauso ausgegeben: `5`.","id":99,"options":["`5`","`Promise {<pending>: 5}`","`Promise\xa0{<fulfilled>: 5}`","`Error`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"Objekte werden durch eine Referenz \xfcbergeben. Wenn wir Objekte auf strikte Gleichheit (`===`) pr\xfcfen, vergleichen wir nur deren Referenz.\\n\\nWir setzen den Standardwert f\xfcr `person2` gleich dem `person` Objekt und \xfcbergeben dem `person` Objekt den Wert von `person1`.\\n\\nDas bedeutet, dass beide Werte eine Referenz zum gleichen Ort im Speicher aufweisen und daher gleich sind.\\n\\nDer Code im `else` Statement wird aufgerufen und `They are the same!` wird geloggt.","id":100,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"In JavaScript gibt es zwei Wege auf Properties an Objekten zuzugreifen: Punkt-Notation oder Klammern-Notation. In diesem Beispiel nutzen wir Punkt-Notation (`colorConfig.colors`) anstelle von Klammern-Notation (`colorConfig[\\"colors\\"]`).\\n\\nMit Punkt-Notation versucht JavaScript die Property am Objekt mit diesem exakten Namen zu finden. In unserem Beispiel `colors` im `colorConfig` Objekt. Da es keine Property `colorConfig` gibt wird `undefined` ausgegeben. Dann versuchen wir den Wert des ersten Elements mit `[1]` aufzurufen, was an `undefined` nicht m\xf6glich ist, wodurch wir `TypeError: Cannot read property \'1\' of undefined` ausgegeben bekommen.\\n\\nJavaScript interpretiert Statements. Wenn wir Klammern-Notation verwenden wird die erste Klammer `[` gefunden und JavaScript sucht solange, bis eine schlie\xdfende Klammer `]` gefunden wird. Erst dann wird das Statement interpretiert. H\xe4tten wir `colorConfig[colors[1]]` verwendet, w\xe4re der Wert `red` ausgegeben worden.","id":101,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"Emojis sind im Endeffekt nur Unicodes. Der Unicode f\xfcr das Herz Emoji ist `\\"U+2764 U+FE0F\\"`. Dieser ist immer gleich, f\xfcr das selbe Emoji und daher wird `true` ausgegeben.","id":102,"options":["`true`","`false`"],"question":"Was wird ausgegeben?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\')\\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"Mit der `splice` Methode \xe4ndern wir das urspr\xfcngliche Array durch l\xf6schen, ersetzen oder erg\xe4nzen von Elementen. In diesem Fall haben wir 2 Elemente vom Index 1 (`\'\ud83e\udd51\'` und `\'\ud83d\ude0d\'`) entfernt und \u2728 stattdessen eingef\xfcgt.\\n\\n`map`, `filter` und `slice` geben ein neues Array aus, `find` gibt ein Element aus und `reduce` gibt einen neuen Wert aus.","id":103,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"Welche Methode ver\xe4ndert das urspr\xfcngliche Array?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"Mit der `JSON.parse()` Methode k\xf6nnen wir einen JSON String zu einem JavaScript Wert umwandeln.\\n\\n```javascript\\n// Stringifying a number into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// Stringifying an array value into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// Stringifying an object  into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":104,"options":["Parsed JSON in einen JavaScript Wert","Parsed ein JavaScript Objekt zu JSON","Parsed jegliche JavaScript Werte zu JSON","Parsed JSON zu jeglichem JavaScript Objekt"],"question":"Was macht diese Methode?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"Jede Funktion hat ihren eigenen _Ausf\xfchrungskontext_ (oder _scope_). Die `getName` Funktion sucht zuerst in ihrem eigenen Kontext (scope) um zu sehen, ob sie den Wert `name` finden kann. In diesem Fall beinhaltet die `getName` Funktion ihre eigene Variable `name`: wir setzen die Variable `name` mit dem `let` Keyword und dem Wert `\'Sarah\'`.\\n\\nVariablen mit dem `let` und `const` Keyword werden gehoisted, aber entgegen `var` werden diese nicht _initialisiert_. Sie sind nicht aufrufbar, bevor wir sie deklarieren (initialisieren). Das ist eine \\"vor\xfcbergehende tote Zone\\" (temporal dead zone). Wir bekommen einen `ReferenceError` ausgegeben.\\n\\nH\xe4tten wir die `name` Variable nicht innerhalb `getName` deklariert, so h\xe4tte JavaScript au\xdferhalb der Funktion in der _Scope-Kette_ weitergesucht. Der \xe4u\xdfere Scope beinhaltet ebenfalls eine Variable `name` mit dem Wert `\'Lydia\'`. In diesem Fall w\xe4re `Lydia` geloggt worden.\\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":105,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"Mit dem `yield` Keyword, halten wir Werte in einer Generator-Funktion. Mit dem `yield*` Keyword k\xf6nnen wir Werte einer anderen Generator-Funktion oder Objekte und Arrays halten.\\n\\nIn `generatorOne` halten wir das gesamte Array `[\'a\', \'b\', \'c\']` mit dem `yield` Keyword. Der Wert von `value` am Objekt gibt die `next` Methode an `one` (`one.next().value`) aus, was dem gesamten Array entspricht: `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\nIn `generatorTwo` verwenden wir das `yield*` Keyword. Das bedeutet, dass der erste gehaltene Wert von `two` gleich dem ersten gehaltenen Wert ist. Das ist das Array `[\'a\', \'b\', \'c\']`. Der erste gehaltene Wert ist `a`, was ausgegeben wird.\\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":106,"options":["`a` and `a`","`a` and `undefined`","`[\'a\', \'b\', \'c\']` and `a`","`a` and `[\'a\', \'b\', \'c\']`"],"question":"Was wird ausgegeben?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"Expressions innerhalb von Template Literals werden zuerst berechnet. Das bedeutet, dass der String den ausgegebenen Wert der Expression beinhaltet, hier die IIFE (immediately invoked Function) `(x => x)(\'I love\')`. Wir geben den Wert `\'I love\'` als Argument an die `x => x` Arrow Funktion. `x` ist gleich `\'I love\'` und wird ausgegeben. Das Ergebnis ist `I love to program`.","id":107,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"Was wird ausgegeben?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!)\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"Wenn wir normalerweise Objekte gleich `null` setzen, werden diese _verworfen_, weil keine Referenz mehr zu ihnen existiert. Da die Callback Funktion in `setInterval` eine Arrow Funktion (und daher an `config` gebunden) ist, h\xe4lt die Callback Funktion immernoch eine Referenz zum `config` Objekt. Solange eine Referenz besteht, wird das Objekt nicht verworfen und die `setInterval` Funktion wird weiterhin alle 1000ms (1 Sekunde) aufgerufen.","id":108,"options":["Die `setInterval` Callback Funktion wird nicht aufgerufen","Die `setInterval` Callback Funktion wird ein Mal aufgerufen","Die `setInterval` Callback Funktion wird weiterhin jede Sekunde aufgerufen","Wir haben `config.alert()` nie aufgerufen, `config` ist `null`"],"question":"What will happen?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\'))","codeLanguage":"javascript","explanation":"Beim Setzen eines Key/Wert Paars mit der `set` Methode wird der Key als erstes Argument an die `set` Funktion \xfcbergeben und der Wert wird als zweites Argument eingegeben. Der Key ist die _Funktion_ `() => \'greeting\'` und der Wert ist `\'Hello world\'`. `myMap` ist jetzt `{ () => \'greeting\' => \'Hello world!\' }`.\\n\\n1 ist falsch, weil der Key nicht `\'greeting\'`, sondern `() => \'greeting\'` ist.\\n3 ist falsch, weil wir eine neue Funktion erstellen, indem wir sie als Argument \xfcbergeben. Objekte interagieren anhand von _Referenzen_. Funktionen sind Objekte, weshalb zwei Funktionen streng gesehen nie gleich sind, selbst wenn sie sich nicht unterscheiden.","id":109,"options":["1","2","2 und 3","Alle"],"question":"Welche Methode(n) geben den Wert `\'Hello world!\'` aus?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"Beide Funktionen, `changeAge` und `changeAgeAndName`, haben Standard Parameter, n\xe4mlich ein neu erstelltes Objekt `{ ...person }`. Dieses Objekt hat Kopien aller Key/Werte Paare im `person` Objekt.\\n\\nZuerst f\xfchren wir die `changeAge` Funktion aus und \xfcbergeben ihr das `person` Objekt als Argument. Daher wird `age` um 1 erh\xf6ht. `person` ist jetzt `{ name: \\"Lydia\\", age: 22 }`.\\n\\nDann f\xfchren wir `changeAgeAndName` aus, allerdings ohne Parameter. Stattdessen ist der Wert von `x` gleich dem neuen Objekt `{ ...person }`. Da dies ein neues Objekt ist hat es keinen Einfluss auf die Werte des `person` Objekts. `person` ist immernoch gleich `{ name: \\"Lydia\\", age: 22 }`.","id":110,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"Was wird ausgegeben?"},{"answer":1,"code":"let num = 1;\\nconst list = [\\"\ud83e\udd73\\", \\"\ud83e\udd20\\", \\"\ud83e\udd70\\", \\"\ud83e\udd2a\\"];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"Mit dem`+=` Operanden erh\xf6hen wir den Wert von `num` um `1`. `num` hatte den urspr\xfcnglichen Wert `1` und `1 + 1` ergibt `2`. Der Wert an zweiter Stelle im `list` Array ist \ud83e\udd70. `console.log(list[2])` gibt \ud83e\udd70 aus.","id":111,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"Was ist der Output??"},{"answer":1,"code":"const person = {\\n\\tfirstName: \\"Lydia\\",\\n\\tlastName: \\"Hallie\\",\\n\\tpet: {\\n\\t\\tname: \\"Mara\\",\\n\\t\\tbreed: \\"Dutch Tulip Hound\\"\\n\\t},\\n\\tgetFullName() {\\n\\t\\treturn `${this.firstName} ${this.lastName}`;\\n\\t}\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"Mit den optionalen Kettenoperator `?.` m\xfcssen wir nicht mehr pr\xfcfen, ob die tiefer genesteten Werte g\xfcltig sind oder nicht. Wenn wir die Property von `undefined` oder `null` aufrufen (_nullish_) gibt die Expression direkt `undefined` aus.\\n\\n`person.pet?.name`: `person` hat eine Property `pet`: `person.pet` ist nicht nullish. Diese hat eine Property `name` und gibt `Mara` aus.\\n`person.pet?.family?.name`: `person` hat eine Property `pet`: `person.pet` ist nicht nullish. `pet` hat _keine_ Property `family`, `person.pet.family` ist nullish. Die Expression gibt `undefined` aus.\\n`person.getFullName?.()`: `person` hat eine Property `getFullName`: `person.getFullName()` ist nicht nullish und wird ausgef\xfchrt: `Lydia Hallie` wird ausgegeben.\\n`member.getLastName?.()`: `member` ist undefined: `member.getLastName()` ist nullish. Die Expression gibt `undefined` aus.","id":112,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `undefined`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"Was ist der Output??"},{"answer":1,"code":"const groceries = [\\"banana\\", \\"apple\\", \\"peanuts\\"];\\n\\nif (groceries.indexOf(\\"banana\\")) {\\n\\tconsole.log(\\"We have to buy bananas!\\");\\n} else {\\n\\tconsole.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"Wir haben die Kondition `groceries.indexOf(\\"banana\\")` an das if-Statement \xfcbergeben. `groceries.indexOf(\\"banana\\")` gibt `0` aus, was ein _falsy_ Wert ist. Da die Kondition nicht erf\xfcllt ist wird der `else` Block ausgef\xfchrt und `We don\'t have to buy bananas!` wird geloggt.","id":113,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"Was ist der Output??"},{"answer":3,"code":"const config = {\\n\\tlanguages: [],\\n\\tset language(lang) {\\n\\t\\treturn this.languages.push(lang);\\n\\t}\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"Die Methode `language` ist ein `setter`. Setter halten keinen Wert, sondern \xe4ndern Properties. Wenn eine `setter` Methode aufgerufen wird, wird `undefined` zur\xfcckgegeben.","id":114,"options":["`function language(lang) { this.languages.push(lang) }`","`0`","`[]`","`undefined`"],"question":"Was ist der Output?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\n\\nconsole.log(!typeof name === \\"object\\");\\nconsole.log(!typeof name === \\"string\\");","codeLanguage":"javascript","explanation":"`typeof name` gibt `\\"string\\"` aus. Der String `\\"string\\"` ist _truthy_, sodass `!typeof name` den Boolean-Wert `false` ergibt. `false === \\"object\\"` und `false === \\"string\\"` geben beide `false` aus.\\n\\n(W\xfcrden wir pr\xfcfen wollen, oob der Typ (un)gleich zu einem bestimmten anderen Typen ist h\xe4tten wir `!==` anstelle von `!typeof` schreiben m\xfcssen)","id":115,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"Was ist der Output??"},{"answer":0,"code":"const add = x => y => z => {\\n\\tconsole.log(x, y, z);\\n\\treturn x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"Die `add` Funktion gibt eine Arrow Funktion zur\xfcck, welche eine Arrow Funktion zur\xfcckgibt, welche eine Arrow Funktion zur\xfcckgibt. Die erste Funktion erh\xe4lt ein Argument `x` mit dem Wert `4`. Wir f\xfchren die zweite Funktion aus, welche ein Argument `y` mit dem Wert `5` erh\xe4lt. Dann f\xfchren wir die dritte Funktion aus, die ein Argument `z` mit dem Wert `6` erh\xe4lt. Wenn wir versuchen die Werte von `x`, `y` und `z` der jeweils letzten Arrow Funktion aufzurufen geht die JavaScript Engine in der Scope-Kette nach oben um die jeweiligen Werte zu finden. Das gibt `4` `5` `6` aus.","id":116,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"Was ist der Output??"},{"answer":2,"code":"async function* range(start, end) {\\n\\tfor (let i = start; i <= end; i++) {\\n\\t\\tyield Promise.resolve(i);\\n\\t}\\n}\\n\\n(async () => {\\n\\tconst gen = range(1, 3);\\n\\tfor await (const item of gen) {\\n\\t\\tconsole.log(item);\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"Die Generator-Funktion `range` gibt ein asynchrones Objekt mit Promisen f\xfcr jeden Wert zur\xfcck: `Promise{1}`, `Promise{2}`, `Promise{3}`. Wir setzen die Variable `gen` gleich dem asynchronen Objekt. Danach loopen wir mit einer `for await ... of` Schleife dar\xfcber. Wir setzen die Variable `item` gleich dem ausgegebenen Promise: zuerst `Promise{1}`, dann `Promise{2}`, und dann `Promise{3}`. Da wir das Ergebnis von `item` _await_-en (erwarten), werden die gel\xf6sten Ergebnisse der Promises ausgegeben: `1`, `2` und `3`.","id":117,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"Was ist der Output??"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n\\tconsole.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"`myFunc` erwartet ein Objekt mit den Properties `x`, `y` und `z` als Argumente. Da wir nur drei separate Werte anstelle eines Objektes mit den Properties `x`, `y` und `z` ({x: 1, y: 2, z: 3}) eingeben, bekommen `x`, `y` und `z` den Standardwert `undefined` zugewiesen.","id":118,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"Was ist der Output??"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat(\'en-US\', {\\n    style: \'unit\',\\n    unit: \'mile-per-hour\'\\n  }).format(speed);\\n\\n  const formattedAmount = new Intl.NumberFormat(\'en-US\', {\\n    style: \'currency\',\\n    currency: \'USD\'\\n  }).format(amount);\\n\\n  return `The driver drove ${formattedSpeed} and has to pay ${formattedAmount}`;\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"Mit der Methode `Intl.NumberFormat` k\xf6nnen wir einen numerischen Wert in einen sprachabh\xe4ngigen Wert formatieren. Wir formatieren den Zahlenwert `130` zu einem Wert der Sprache `en-US` mit der Einheit (`unit`) in `mile-per-hour`, was `130 mph` ergibt. Analog formatieren wir `300` als eine W\xe4hrung (`currency`) der Sprache `en-US` in `USD`, was `$300.00` ergibt.","id":119,"options":["The driver drove 130 and has to pay 300","The driver drove 130 mph and has to pay $300.00","The driver drove undefined and has to pay undefined","The driver drove 130.00 and has to pay 300.00"],"question":"Was ist der Output?"},{"answer":1,"code":"const spookyItems = [\'\ud83d\udc7b\', \'\ud83c\udf83\', \'\ud83d\udd78\'];\\n({ item: spookyItems[3] } = { item: \'\ud83d\udc80\' });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"Durch die destrukturierende Zuweisung k\xf6nnen wir Werte des Ojekts von der rechten Seite der Zuweisung extrahieren und diese Werte einem Property mit dem selben Namen dem Objekt auf der linken Seite zuweisen. In diesem Fall wird der Wert \\"\ud83d\udc80\\" an `spookyItems[3]` zugewiesen. Das bedeutet, dass wir das Array `spookyItems` modifizieren, in dem wir \\"\ud83d\udc80\\" hinzuf\xfcgen. Beim Loggen von `spookyItems` wird darum `[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]` ausgegeben.","id":120,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"Was ist der Output?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"Mit der Methode `Number.isNaN` kann gepr\xfcft werden, ob der \xfcbergebene Parameter vom Typ _Number_ mit Wert  `NaN` ist. `name` ist kein numerischer Wert, deswegen ist der R\xfcckgabewert von `Number.isNaN(name)` in diesem Fall `false`. `age` ist zwar ein numerischer Wert, aber nicht gleich `NaN`, weswegen `Number.isNaN(age)` `false` ausgibt.\\n\\nDie Methode `isNaN` pr\xfcft, ob der Eingabeparameter nicht vom Typ _Number_ ist. `name` ist ein String, darum gibt `isNaN(name)` `true` zur\xfcck. `age` ist ein numerischer Wert, weswegen `isNaN(age)` `false` ausgibt.","id":121,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"Was ist der Output?"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n  console.log(typeof randomValue);\\n  const randomValue = \'Lydia Hallie\';\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"Variablen die mit `const` deklariert werden, k\xf6nnen nicht vor ihrer Initialisierung referenziert werden, das ist die so genannte \\"zeitweilige tote Zone\\" (_temporal dead zone_). In der Funktion `getInfo` befindet sich die Variable `randomValue` im Geltungsbereich der Funktion. In der Zeile, in welcher der Wert von `typeof randomValue` geloggt werden soll, ist die Variable noch nicht initialisiert. Entsprechend wird ein `ReferenceError` geworfen! Die Engine versucht nicht in der Kette der Geltungsbereiche hinab zu steigen, da die Variable `randomValue` im Geltungsbereich von `getInfo` deklariert und damit gefunden wurde.","id":122,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"Was ist der Output?"},{"answer":2,"code":"const myPromise = Promise.resolve(\'Woah some cool data\');\\n\\n(async () => {\\n  try {\\n    console.log(await myPromise);\\n  } catch {\\n    throw new Error(`Oops didn\'t work`);\\n  } finally {\\n    console.log(\'Oh finally!\');\\n  }\\n})();","codeLanguage":"javascript","explanation":"Im `try`-Block loggen wir den mit dem `await`-Operator den Wert der Variable `myPromise`: `\\"Woah some cool data\\"`. Da in diesem Block kein Fehler geworfen wird, wird der Code im `catch`-Block nicht ausgef\xfchrt. Der Code im `finally`-Block wird _immer_ ausgef\xfchrt, `\\"Oh finally!\\"` wird geloggt.","id":123,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"Was ist der Output?"},{"answer":1,"code":"const emojis = [\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"Mit der Methode `flat` erzeugen wir ein neues, \\"flacheres\\" Array. Die Tiefe des neuen Arrays h\xe4ngt vom Parameter ab, den wir an `flat` \xfcbergeben. In diesem Fall wird der Wert `1` \xfcbergeben (welcher der Standardwert der Funktion ist, wir h\xe4tten ihn in diesem Fall also nicht explizit \xfcbergeben m\xfcssen). Das bedeutet, das alle Arrays bis zur ersten Tiefe zusammengef\xfcgt werden: `[\'\ud83e\udd51\']` und `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]` in diesem Fall. Das Zusammenf\xfcgen dieser beiden Arrays resultiert in: `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":124,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"Was ist der Output?"},{"answer":3,"code":"class Counter {\\n  constructor() {\\n    this.count = 0;\\n  }\\n\\n  increment() {\\n    this.count++;\\n  }\\n}\\n\\nconst counterOne = new Counter();\\ncounterOne.increment();\\ncounterOne.increment();\\n\\nconst counterTwo = counterOne;\\ncounterTwo.increment();\\n\\nconsole.log(counterOne.count);","codeLanguage":"javascript","explanation":"`counterOne` ist eine Instanz der Klasse `Counter`. Diese Klasse enth\xe4lt ein Property `count` in seinem Konstruktor, sowie eine Methode `increment`. Zuerst wird die Methode `increment` zweimal durch `counterOne.increment()` aufgerufen. Der Wert von `counterOne.count` ist danach `2`.\\n\\n<img src=\\"https://i.imgur.com/KxLlTm9.png\\" width=\\"400\\">\\n\\nDanach erzeugen wir eine neue Variable `counterTwo` und setzen sie gleich `counterOne`. Da Objekte via Referenz \xfcbergeben werden, erzeugen wir somit lediglich eine neue Referenz auf den selben Bereich im Speicher, auf den auch `counterOne` zeigt. Da der gleiche Speicherbereich verwendet wird, haben alle \xc4nderungen, die am Objekt vorgenommen werden, auf das `counterTwo` zeigt, auch Auswirkungen auf `counterOne`. Aktuell ist `counterTwo.count` somit `2`.\\n\\nWir rufen nun `counterTwo.increment()` auf, wodurch der Wert von `count` auf `3` gesetzt wird. Danach loggen wir den Zustand von `counterOne`, wodurch `3` ausgegeben wird.\\n\\n<img src=\\"https://i.imgur.com/BNBHXmc.png\\" width=\\"400\\">","id":125,"options":["`0`","`1`","`2`","`3`"],"question":"Was ist der Output?"},{"answer":3,"code":"const myPromise = Promise.resolve(Promise.resolve(\'Promise!\'));\\n\\nfunction funcOne() {\\n  myPromise.then(res => res).then(res => console.log(res));\\n  setTimeout(() => console.log(\'Timeout!\', 0));\\n  console.log(\'Last line!\');\\n}\\n\\nasync function funcTwo() {\\n  const res = await myPromise;\\n  console.log(await res);\\n  setTimeout(() => console.log(\'Timeout!\', 0));\\n  console.log(\'Last line!\');\\n}\\n\\nfuncOne();\\nfuncTwo();","codeLanguage":"javascript","explanation":"Zuerst rufen wir die Funktion `funcOne()` auf. In der ersten Zeile in `funcOne` wird das Promise `myPromise` aufgerufen, was eine _asynchrone_ Operation ist. W\xe4hrend die Engine damit besch\xe4ftigt ist dieses Promise zu erf\xfcllen, wird die Funktion `funcOne` weiter ausgef\xfchrt. Die n\xe4chste Zeile ist die _asynchrone_ Funktion `setTimeout`, von welcher der Callback an die Web API geschickt wird (siehe mein Artikel zu Event Loops).\\n\\nSowohl Promise als auch Timeout sind asynchrone Operationen. Die Funktion l\xe4uft also weiter, w\xe4hrend sie parallel damit besch\xe4figt ist diese beiden Operationen zu bearbeiten. Das bedeutet, dass `Last line!` zuerst geloggt wird, da dies keine asynchrone Operation ist. Es ist die letzte Zeile von `funcOne`, das Promise wird erf\xfcllt und `Promise!` geloggt. Da wir jedoch auch `funcTwo()` aufrufen, ist der Call Stack nicht leer und der Callback der Funktion `setTimeout` kann noch nicht zum Call Stack hinzugef\xfcgt werden.\\n\\nIn `funcTwo` warten wir zuerst auf das Promise von `myPromise`. Mit dem `await`-Operator pausieren wir die Ausf\xfchrung der Funktion bis das Promise erf\xfcllt (oder zur\xfcck gewiesen) wurde. Anschlie\xdfend loggen wir (wieder mit dem `await-Operator`, da das Promise selbst ein Promise zur\xfcckgibt) den Wert von `res`. Dadurch wird `Promise!` geloggt.\\n\\nDie n\xe4chste Zeile ist die _asynchrone_ Funktion `setTimeout`, deren Callback an die Web API gesendet wird.\\n\\nWir kommen zur letzten Zeile in `funcTwo`, die `Last line!` in der Console ausgibt. Da `funcTwo` abgearbeitet und aus dem Call Stack entfernt wurde, ist der Call Stack leer. Die wartenden Callbacks (`() => console.log(\\"Timeout!\\")` aus `funcOne` und `() => console.log(\\"Timeout!\\")` aus `funcTwo`) werden dem Call Stack nacheinander hinzugef\xfcgt. Der erste Callback loggt `Timeout!` und wird aus dem Stack entfernt. Anschlie\xdfend loggt der zweite Callback `Timeout!` und wird aus dem Stack entfernt. Somit ist das Ergebnis `Last line! Promise! Promise! Last line! Timeout! Timeout!`","id":126,"options":["`Promise! Last line! Promise! Last line! Last line! Promise!`","`Last line! Timeout! Promise! Last line! Timeout! Promise!`","`Promise! Last line! Last line! Promise! Timeout! Timeout!`","`Last line! Promise! Promise! Last line! Timeout! Timeout!`"],"question":"Was ist der Output?"}],"locale":"de-DE"},{"isRTL":false,"language":"\ud83c\uddef\ud83c\uddf5 \u65e5\u672c\u8a9e","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u95a2\u6570\u5185\u3067\u3001\u307e\u305a `var`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066 `name`\u5909\u6570\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5909\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u884c\u306b\u5b9f\u969b\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u3001\u5909\u6570\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e `undefined`\u3067\u521d\u671f\u5316\u3055\u308c\u308b\uff08\u4f5c\u6210\u6642\u306b\u30e1\u30e2\u30ea\u7a7a\u9593\u304c\u8a2d\u5b9a\u3055\u308c\u308b\uff09\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \\n\\n`name`\u5909\u6570\u3092\u30ed\u30b0\u51fa\u529b\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u884c\u3067\u306f\u3001\u307e\u3060\u5909\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001`undefined`\u306e\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n`let`\u30ad\u30fc\u30ef\u30fc\u30c9\uff08\u307e\u305f\u306f`const`\uff09\u3092\u6301\u3064\u5909\u6570\u306f\u6301\u3061\u4e0a\u3052\u3089\u308c\u307e\u3059\u304c\u3001 `var`\u3068\u306f\u7570\u306a\u308a\u3001\u521d\u671f\u5316\u3055\u308c\u307e\u305b\u3093\u3002\u305d\u308c\u3089\u3092\u5ba3\u8a00\uff08\u521d\u671f\u5316\uff09\u3059\u308b\u884c\u306e\u524d\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u306f\\"temporal dead zone\\"\u3068\u547c\u3070\u308c\u307e\u3059\u3002\\n\\n\u5ba3\u8a00\u3055\u308c\u308b\u524d\u306b\u5909\u6570\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001JavaScript\u306f `ReferenceError`\u3092\u6295\u3052\u307e\u3059\u3002","id":0,"options":["`Lydia` \u3068 `undefined`","`Lydia` \u3068 `ReferenceError`","`ReferenceError` \u3068 `21`","`undefined` \u3068 `ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"JavaScript\u306e\u30a4\u30d9\u30f3\u30c8\u30ad\u30e5\u30fc\u306e\u305f\u3081\u3001`setTimeout`\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u30eb\u30fc\u30d7\u304c\u5b9f\u884c\u3055\u308c\u305f\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u6700\u521d\u306e\u30eb\u30fc\u30d7\u306e\u5909\u6570 `i`\u306f`var`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u5024\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u306a\u308a\u307e\u3059\u3002\u30eb\u30fc\u30d7\u306e\u9593\u3001\u5358\u9805\u6f14\u7b97\u5b50 `++`\u3092\u4f7f\u7528\u3057\u3066\u3001\u6bce\u56de `i`\u306e\u5024\u3092`1`\u305a\u3064\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u307e\u3057\u305f\u3002 \u6700\u521d\u306e\u4f8b\u3067\u306f `setTimeout`\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u307e\u3067\u306b`i`\u306f`3`\u3068\u306a\u308a\u307e\u3057\u305f\u3002\\n\\n2\u756a\u76ee\u306e\u30eb\u30fc\u30d7\u3067\u306f\u3001\u5909\u6570 `i`\u304c `let`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u5ba3\u8a00\u3055\u308c\u307e\u3057\u305f\u3002 `let`\uff08\u307e\u305f\u306f`const`\uff09\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306f\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u3067\u3059\uff08\u30d6\u30ed\u30c3\u30af\u306f `{}`\u306e\u9593\u306e\u3082\u306e\u3067\u3059\uff09\u3002\u305d\u308c\u305e\u308c\u306e\u7e70\u308a\u8fd4\u3057\u306e\u9593\u3001 `i`\u306f\u65b0\u3057\u3044\u5024\u3092\u6301\u3061\u3001\u305d\u308c\u305e\u308c\u306e\u5024\u306f\u30eb\u30fc\u30d7\u306e\u5185\u5074\u306b\u3042\u308a\u307e\u3059\u3002","id":1,"options":["`0 1 2` \u3068 `0 1 2`","`0 1 2` \u3068 `3 3 3`","`3 3 3` \u3068 `0 1 2`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"`diameter`\u306e\u5024\u306f\u6b63\u5247\u95a2\u6570\u3067\u3042\u308a\u3001`perimeter`\u306e\u5024\u306f\u30a2\u30ed\u30fc\u95a2\u6570\u3067\u3059\u3002\\n\\n\u30a2\u30ed\u30fc\u95a2\u6570\u3067\u306f\u3001`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u901a\u5e38\u306e\u95a2\u6570\u3068\u306f\u7570\u306a\u308a\u3001\u73fe\u5728\u306e\u5468\u56f2\u306e\u7bc4\u56f2\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001`perimeter`\u95a2\u6570\u3092\u547c\u3076\u3068\u3001shape\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u304f\u3001\u305d\u306e\u5468\u56f2\u306e\u7bc4\u56f2\uff08\u4f8b\u3048\u3070 window\uff09\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\\n\\n\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f`radius`\u3068\u3044\u3046\u5024\u306f\u306a\u304f\u3001`undefined`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":2,"options":["`20` \u3068 `62.83185307179586`","`20` \u3068 `NaN`","`20` \u3068 `63`","`NaN` \u3068 `63`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\u5358\u9805\u30d7\u30e9\u30b9\u306f\u3001\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002`true`\u306f`1`\u3001`false`\u306f`0`\u3067\u3059\\n\\n\u6587\u5b57\u5217\u300cLydia\u300d\u306f truthy value\u3067\u3059\u3002\u3053\u3053\u3067\u6c42\u3081\u3066\u3044\u308b\u306e\u306f\u3001\u300c\u3053\u306etruthy value\u306f\u3001falsy\u306a\u306e\u304b\u300d\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306f `false`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":3,"options":["`1` \u3068 `false`","`false` \u3068 `NaN`","`false` \u3068 `false`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"JavaScript\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u306f\u6587\u5b57\u5217\u3067\u3059\uff08Symbol\u3067\u306a\u3044\u9650\u308a\uff09\u3002\u305f\u3068\u3048\u305d\u308c\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u5165\u529b\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u3001\u305d\u308c\u3089\u306f\u5e38\u306b\u30d5\u30fc\u30c9\u306e\u4e0b\u3067\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\\n\\nJavaScript\u306f\u3001\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u89e3\u91c8\uff08\u307e\u305f\u306f\u3001\u30dc\u30c3\u30af\u30b9\u89e3\u9664\uff09\u3057\u307e\u3059\u3002\u5927\u62ec\u5f27\u8868\u8a18\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6700\u521d\u306e\u5de6\u5927\u62ec\u5f27 `[`\u3092\u898b\u3066\u3001\u53f3\u5927\u62ec\u5f27 `]`\u304c\u898b\u3064\u304b\u308b\u307e\u3067\u9032\u307f\u307e\u3059\u3002\u305d\u306e\u6642\u3060\u3051\u3001\u305d\u306e\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\\n\\n`mouse [bird.size]`\uff1a \u307e\u305a\u6700\u521d\u306b\u3001`bird.size`\u304c\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u6587\u5b57\u5217\u306e `\\"small\\"`\u3068\u306a\u308a\u307e\u3059\u3002 `mouse[\\"small\\"]`\u306f\u3001`true`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n\u3057\u304b\u3057\u3001\u30c9\u30c3\u30c8\u8868\u8a18\u3067\u306f\u3001\u3053\u308c\u306f\u8d77\u3053\u308a\u307e\u305b\u3093\u3002 `mouse`\u306f`bird`\u3068\u547c\u3070\u308c\u308b\u30ad\u30fc\u3092\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002 \u3064\u307e\u308a`mouse.bird`\u306f`undefined`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n\u307e\u305f\u3001\u30c9\u30c3\u30c8\u8868\u8a18\u3092\u4f7f\u3063\u3066 `size`\u3092\u6c42\u3081\u307e\u3059\uff1a `mouse.bird.size`\u3002 mouse.bird\u306f\u672a\u5b9a\u7fa9\u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u306fundefined.size\u3092\u8981\u6c42\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u6709\u52b9\u3067\u306f\u306a\u3044\u306e\u3067\u3001`Cannot read property \\"size\\" of undefined`\u3088\u3046\u306a\u3001\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u3002","id":4,"options":["`mouse.bird.size` is not valid","`mouse[bird.size]` is not valid","`mouse[bird[\\"size\\"]]` is not valid","\u3053\u308c\u3089\u3059\u3079\u3066\u6709\u52b9\u3067\u3059"],"question":"\u6b63\u89e3\u306f\u3069\u308c\u3067\u3057\u3087\u3046\uff1f"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"JavaScript\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u4e92\u3044\u306b\u7b49\u3057\u304f\u8a2d\u5b9a\u3059\u308b\u3068\u53c2\u7167\u306b\u3088\u3063\u3066\u76f8\u4e92\u4f5c\u7528\u3057\u307e\u3059\u3002\\n\\n\u307e\u305a\u3001\u5909\u6570`c`\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u5024\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001`c`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u6301\u3063\u3066\u3044\u308b\u5024\u3068\u540c\u3058\u53c2\u7167\u3067`d`\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n1\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5909\u66f4\u3059\u308b\u3068\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()`\u306f\u3001\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3059\u3002\u6570\u5b57\u306e\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u6570\u5b57\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u304f\u3055\u3093\u306e\u8ffd\u52a0\u6a5f\u80fd\u304c\u3042\u308a\u3001\u305d\u308c\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n`==`\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3068\u304d\u3001\u540c\u3058\u5024\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\uff1f \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3060\u3051\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u3089\u306f\u4e21\u65b9\u3068\u3082`3`\u306e\u5024\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n\u3057\u304b\u3057\u3001`===`\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u6642\u306f\u3001\u5024\u3068\u578b\u306f\u540c\u3058\u3067\u3042\u308b\u3079\u304d\u3067\u3059\u3002 \u305d\u3046\u3067\u306a\u3044\u306e\u3067: `new Number()`\u306f\u6570\u5024\u3067\u306f\u306a\u304f\u3001**\u30aa\u30d6\u30b8\u30a7\u30af\u30c8**\u3068\u306a\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u4e21\u65b9\u3068\u3082false\u3092\u8fd4\u3057\u307e\u3059\u3002","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"`colorChange`\u95a2\u6570\u306f\u9759\u7684\u3067\u3059\u3002\u9759\u7684\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u305d\u308c\u3089\u304c\u4f5c\u6210\u3055\u308c\u305f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4e0a\u3067\u306e\u307f\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u304a\u308a\u3001\u3069\u306e\u5b50\u9054\u306b\u3082\u53d7\u3051\u7d99\u304c\u308c\u307e\u305b\u3093\u3002 `freddie`\u306f\u5b50\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u306e\u95a2\u6570\u306f\u53d7\u3051\u7d99\u304c\u308c\u305a\u3001`freddie`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u305d\u306e\u7d50\u679c\u3001`TypeError`\u304c\u6295\u3052\u3089\u308c\u307e\u3059\u3002","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3001\u7a7a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3070\u304b\u308a\u306a\u306e\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002`greeting`\u3092`greetign`\u3068\u8aa4\u3063\u3066\u5165\u529b\u3057\u305f\u5834\u5408\u3001JS\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306f\u5b9f\u969b\u306b\u3053\u308c\u3092 `global.greetign = {}`\uff08\u307e\u305f\u306f\u30d6\u30e9\u30a6\u30b6\u306e `window.greetign = {}`\uff09\u3068\u898b\u306a\u3057\u307e\u3059\u3002\\n\\n\u3053\u308c\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\\"use strict\\"\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u5909\u6570\u3092\u4f55\u304b\u306b\u8a2d\u5b9a\u3059\u308b\u524d\u306b\u3001\u5909\u6570\u5ba3\u8a00\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"\u95a2\u6570\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306a\u308b\u306e\u3067\u3001\u3053\u308c\u306fJavaScript\u3067\u53ef\u80fd\u3067\u3059\u3002\uff08\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u4ee5\u5916\u306f\u3059\u3079\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\uff09\\n\\n\u95a2\u6570\u306f\u7279\u5225\u306a\u7a2e\u985e\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u81ea\u5206\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306f\u5b9f\u969b\u306e\u6a5f\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u95a2\u6570\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u547c\u3073\u51fa\u3057\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002","id":9,"options":["\u4f55\u3082\u8d77\u3053\u3089\u306a\u3044\u3001\u3053\u308c\u306f\u5168\u304f\u554f\u984c\u306a\u3044\uff01","`SyntaxError`. \u3053\u306e\u65b9\u6cd5\u3067\u95a2\u6570\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002","`undefined`","`ReferenceError`"],"question":"\u3053\u308c\u3092\u884c\u3046\u3068\u3001\u3069\u3046\u306a\u308a\u307e\u3059\u304b\uff1f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"\u901a\u5e38\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u3088\u3046\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4e00\u5ea6\u306b\u3059\u3079\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4ee3\u308f\u308a\u306b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3060\u304b\u3089\u3053\u306e\u5834\u5408\u306f\u3001\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\n\u3067\u3001`member.getFullName()`\u304c\u3001\u6a5f\u80fd\u3059\u308b\u306f\u305a\u3067\u3059\u3002\u3053\u308c\u306f\u306a\u305c\u6709\u76ca\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u4f8b\u3048\u3070\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u81ea\u4f53\u306b\u8ffd\u52a0\u3057\u305f\u3068\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e`Person`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5fc5\u8981\u3068\u3057\u306a\u304b\u3063\u305f\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\\n\\n\u305d\u306e\u5834\u5408\u3001\u591a\u304f\u306e\u30e1\u30e2\u30ea\u30b9\u30da\u30fc\u30b9\u3092\u6d6a\u8cbb\u3059\u308b\u4e8b\u3067\u3057\u3087\u3046\u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306f\u307e\u3060\u305d\u306e\u7279\u6027\u3092\u6301\u3061\u3001\u305d\u308c\u306f\u5404\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u305f\u3081\u306b\u30e1\u30e2\u30ea\u30b9\u30da\u30fc\u30b9\u3092\u6d88\u8cbb\u3059\u308b\u304b\u3089\u3067\u3059\u3002\\n\\n\u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u3001\u30e1\u30e2\u30ea\u5185\u306e1\u7b87\u6240\u306b\u914d\u7f6e\u3059\u308b\u3060\u3051\u3067\u3001\u3059\u3079\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"`sarah`\u3067\u306f\u3001`new`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002`new`\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u3001\u4f5c\u6210\u3057\u305f\u65b0\u3057\u3044\u7a7a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001`new`\u3092\u8ffd\u52a0\u3057\u306a\u3051\u308c\u3070\u3001\u305d\u308c\u306f**\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8**\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n`this.firstName`\u306b`\\"Sarah\\"`\u3092\u4ee3\u5165\u3001`this.lastName`\u306b`\\"Smith\\"`\u3092\u4ee3\u5165\u3057\u305f\u3064\u3082\u308a\u3067\u3057\u305f\u304c\u3001\u5b9f\u969b\u306b\u884c\u3063\u305f\u4e8b\u306f\u3001`global.firstName = \'Sarah\'` \u3068\u3001`global.lastName = \'Smith\'`\u3092\u5b9a\u7fa9\u3057\u305f\u306e\u3067\u3059\u3002\\n\\n`sarah`\u81ea\u4f53\u306f` undefined`\u306e\u307e\u307e\u3067\u3059\u3002","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u3068 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u3068 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u3068 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u3068 `ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"explanation":"**capture**\u30d5\u30a7\u30fc\u30ba\u306e\u9593\u3001\u30a4\u30d9\u30f3\u30c8\u306f\u5148\u7956\u306e\u8981\u7d20\u3092\u901a\u904e\u3057\u3066\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u8981\u7d20\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u304b\u3089**target**\u8981\u7d20\u306b\u9054\u3057\u305f\u5f8c\u3001**\u30d0\u30d6\u30ea\u30f3\u30b0**\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\u30a4\u30d9\u30f3\u30c8\u4f1d\u64ad\u306e3\u3064\u306e\u6bb5\u968e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f"},{"answer":1,"explanation":"**\u57fa\u672c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8**\u3092\u9664\u304d\u3001\u3059\u3079\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304c\u3042\u308a\u307e\u3059\u3002\u30d9\u30fc\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f`.toString`\u306e\u3088\u3046\u306a\u3044\u304f\u3064\u304b\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\\n\\n\u3053\u308c\u304c\u3001\u7d44\u307f\u8fbc\u307f\u306eJavaScript\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3067\u304d\u308b\u7406\u7531\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u65b9\u6cd5\u306f\u3059\u3079\u3066\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \\n\\nJavaScript\u306f\u305d\u308c\u3092\u3042\u306a\u305f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4e0a\u3067\u76f4\u63a5\u898b\u3064\u3051\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u30c1\u30a7\u30fc\u30f3\u3092\u305f\u3069\u308a\u3001\u898b\u3064\u3051\u307e\u3059\u3002","id":13,"options":["true","false"],"question":"\u3059\u3079\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002"},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript\u306f\u3001**\u52d5\u7684\u306b\u578b\u4ed8\u3051\u3055\u308c\u305f\u8a00\u8a9e**\u3067\u3059\u3002: \u7279\u5b9a\u306e\u5909\u6570\u304c\u3069\u3093\u306a\u578b\u3067\u3042\u308b\u304b\u306f\u6307\u5b9a\u3057\u307e\u305b\u3093\u3002\u77e5\u3089\u306a\u3044\u3046\u3061\u306b\u3001\u5024\u304c\u81ea\u52d5\u7684\u306b\u5225\u306e\u578b\u306b\u5909\u63db\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u4e8b\u3092`implicit type coercion`\u3068\u547c\u3070\u308c\u3066\u307e\u3059\u3002 **Coercion**\u306f\u3001\u3042\u308b\u578b\u304b\u3089\u5225\u306e\u578b\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u3053\u306e\u4f8b\u3067\u306f\u3001\u95a2\u6570\u304c\u610f\u5473\u3092\u6210\u3057\u3066\u5024\u3092\u8fd4\u3059\u305f\u3081\u306b\u3001JavaScript\u306f\u6570\u5b57\u306e`1`\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u6570\u5024\u578b\uff08`1`\uff09\u3068 \u6587\u5b57\u5217\u578b\uff08`\'2\'`\uff09\u306e\u8ffd\u52a0\u4e2d\u306f\u3001\u6570\u5b57\u306f\u6587\u5b57\u5217\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002 \\n\\n`\\"Hello\\"+\\"World\\"`\u306e\u3088\u3046\u306b\u6587\u5b57\u5217\u3092\u9023\u7d50\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u306f`\\"1\\"+\\"2\\"`\u3067\u3001\u3053\u308c\u306f `\\"12\\"`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"**\u63a5\u5c3e\u8f9e** \u5358\u9805\u6f14\u7b97\u5b50 `++`\uff1a\\n\\n1.\u5024\u3092\u8fd4\u3059\uff08\u3053\u308c\u306f`0`\u3092\u8fd4\u3059\uff09\\n2.\u5024\u3092\u5897\u3084\u3059\uff08number\u306f\u73fe\u5728`1`\u3067\u3059\uff09\\n\\n**\u63a5\u982d\u8f9e** \u5358\u9805\u6f14\u7b97\u5b50 `++`\uff1a\\n\\n1.\u5024\u3092\u5897\u3084\u3059\uff08\u6570\u5024\u306f2\u306b\u306a\u308a\u307e\u3059\uff09\\n2.\u5024\u3092\u8fd4\u3059\uff08\u3053\u308c\u306f`2`\u3092\u8fd4\u3057\u307e\u3059\uff09\\n\\n\u3053\u308c\u306f`0 2 2`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u6700\u521d\u306e\u5f15\u6570\u306e\u5024\u306f\u5e38\u306b\u6587\u5b57\u5217\u5024\u306e\u914d\u5217\u3067\u3059\u3002\u6b8b\u308a\u306e\u5f15\u6570\u306f\u6e21\u3055\u308c\u305f\u5f0f\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"\u7b49\u4fa1\u6027\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3068\u304d\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306f\u305d\u308c\u3089\u306e\u5024\u306b\u3088\u3063\u3066\u6bd4\u8f03\u3055\u308c\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u305d\u308c\u3089\u306e\u53c2\u7167\u306b\u3088\u3063\u3066\u6bd4\u8f03\u3055\u308c\u307e\u3059\u3002 JavaScript\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30e1\u30e2\u30ea\u5185\u306e\u540c\u3058\u5834\u6240\u3078\u306e\u53c2\u7167\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\\n\\n\u6bd4\u8f03\u3057\u3066\u3044\u308b2\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u305d\u308c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3001\u7b49\u4fa1\u6027\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306f\u7570\u306a\u308b\u30e1\u30e2\u30ea\u5185\u306e\u5834\u6240\u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u3053\u308c\u304c `{ age: 18 } === { age: 18 }`\u3068\u3001`{ age: 18 } == { age: 18 }`\u306e\u4e21\u65b9\u304c\u3001`false`\u3092\u8fd4\u3059\u7406\u7531\u3067\u3059\u3002","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"\u30b9\u30d7\u30ec\u30c3\u30c9\u6f14\u7b97\u5b50(`... args`.)\u306f\u3001\u5f15\u6570\u4ed8\u304d\u306e\u914d\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u914d\u5217\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u3001`typeof args`\u306f\u3001`\\"object\\"`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"`\\"use strict\\"`\u3092\u4f7f\u3046\u3068\u3001\u8aa4\u3063\u3066\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u5ba3\u8a00\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5909\u6570`age`\u3092\u5ba3\u8a00\u3057\u305f\u3053\u3068\u306f\u4e00\u5ea6\u3082\u3042\u308a\u307e\u305b\u3093\u3057\u3001`\\"use strict\\"`\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u53c2\u7167\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 \\n\\n`\\"use strict\\"`\u3092\u4f7f\u7528\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3`age`\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u306f\u6a5f\u80fd\u3057\u307e\u3059\u3002","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval`\u306f\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306e\u3088\u3046\u306b\u5f0f\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u5f0f\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u8868\u73fe\u306f`10 * 10 + 5`\u3067\u3059\u3002\u3053\u308c\u306f`105`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"sum\u306e\u5024\u306f\u4f55\uff1f"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"`sessionStorage`\u306b\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3001\u30bf\u30d6\u3092\u9589\u3058\u305f\u5f8c\u306b\u524a\u9664\u3055\u308c\u307e\u3059\u3002\\n\\n`localStorage`\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u306f\u3001`localStorage.clear()`\u306a\u3069\u304c\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u9650\u308a\u3001\u30c7\u30fc\u30bf\u306f\u6c38\u4e45\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002","id":21,"options":["\u6c38\u9060\u306b\u3001\u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002","\u30e6\u30fc\u30b6\u30fc\u304c\u30bf\u30d6\u3092\u9589\u3058\u308b\u6642","\u30e6\u30fc\u30b6\u30fc\u304c\u30bf\u30d6\u3060\u3051\u3067\u306a\u304f\u30d6\u30e9\u30a6\u30b6\u5168\u4f53\u3092\u9589\u3058\u308b\u6642\u3002","\u30e6\u30fc\u30b6\u30fc\u304c\u81ea\u5206\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u305f\u6642\u3002"],"question":"cool_secret\u306f\u3001\u3069\u306e\u304f\u3089\u3044\u306e\u671f\u9593\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u304b\uff1f"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"`var`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u3001\u540c\u3058\u540d\u524d\u3067\u8907\u6570\u306e\u5909\u6570\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002\u5909\u6570\u306f\u6700\u65b0\u306e\u5024\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\\n\\n\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u306e`let`\u3084`const`\u3067\u306f\u3001\u3067\u304d\u307e\u305b\u3093\u3002","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"\u3059\u3079\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\uff08Symbols\u3092\u9664\u304f\uff09\u306f\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u81ea\u5206\u3067\u5165\u529b\u3057\u306a\u304f\u3066\u3082\u3001\u5185\u90e8\u3067\u306f\u6587\u5b57\u5217\u3067\u3059\u3002\u3053\u308c\u304c\u3001`obj.hasOwnProperty(\'1\')`\u3082\u200b\u200btrue\u3092\u8fd4\u3059\u7406\u7531\u3067\u3059\u3002\\n\\nset\u3067\u306f\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3002\u4e0a\u8a18\u306eset\u306b\u306f`\'1\'` \u306f\u3042\u308a\u307e\u305b\u3093: `set.has(\'1\')`\u306f\u3001`false`\u3092\u8fd4\u3057\u307e\u3059\u3002\u6570\u5024\u578b`1`\u306e`set.has(1)`\u306f\u3001`true`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"\u540c\u3058\u540d\u524d\u306e\u30ad\u30fc\u304c2\u3064\u3042\u308b\u5834\u5408\u3001\u6700\u521d\u306e\u4f4d\u7f6e\u306b\u3042\u308b\u30ad\u30fc\u306f\u7f6e\u304d\u63db\u3048\u3089\u308c\u3001\u6700\u5f8c\u306b\u6307\u5b9a\u3055\u308c\u305f\u5024\u306b\u306a\u308a\u307e\u3059\u3002","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"explanation":"\u57fa\u672c\u7684\u306aexecution context\u306f\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u5b9f\u884c\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3059\u3002\u305d\u308c\u306f\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u306e\u81f3\u308b\u6240\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u3082\u306e\u3067\u3059\u3002","id":25,"options":["true","false","\u5834\u5408\u306b\u3088\u308a\u3051\u308a"],"question":"JavaScript\u306eglobal execution context\u306f\u30012\u3064\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002: \u305d\u308c\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068 \\"this\\"\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u3059\u3002"},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"`continue`\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306f\u3001\u3042\u308b\u6761\u4ef6\u304c`true`\u3092\u8fd4\u3059\u3068\u3001\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String`\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u7d44\u307f\u8fbc\u307f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3059\u3002\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\\n\\n\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u6587\u5b57\u5217\u306f\u3001\u6587\u5b57\u5217\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u6570\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u81ea\u52d5\u7684\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\\n\\n\u3064\u307e\u308a\u3001\u3059\u3079\u3066\u306e\u6587\u5b57\u5217\uff08\u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u306f\u81ea\u52d5\u7684\u306b\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8a\u306e\u30ad\u30fc\u3068\u3057\u3066\u3001\u5024123\u3067\u8a2d\u5b9a\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u3057\u304b\u3057\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6587\u5b57\u5217\u5316\u3059\u308b\u3068\u3001\u305d\u308c\u306f`\\"[object Object]\\"`\u200b\u200b\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u884c\u3063\u3066\u3044\u308b\u306e\u306f\u3001 `a[\\"object Object\\"] = 123`\u3067\u3059\u3002\\n\\n\u305d\u306e\u5f8c\u3001\u540c\u3058\u3053\u3068\u3092\u3082\u3046\u4e00\u5ea6\u8a66\u307f\u3066\u3044\u307e\u3059\u3002`c`\u306f\u6697\u9ed9\u306e\u3046\u3061\u306b\u6587\u5b57\u5217\u5316\u3057\u3066\u3044\u308b\u5225\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001`a[\\"object Object\\"] = 456`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n\u305d\u306e\u5f8c\u3001`a[b]`\u3067\u30ed\u30b0\u51fa\u529b\u3002\u5b9f\u969b\u306b\u306f`a[\\"object Object\\"]`\u3067\u3059\u3002\u3053\u308c\u3092 `456`\u306b\u8a2d\u5b9a\u3057\u305f\u3060\u3051\u306a\u306e\u3067\u3001`456`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"`setTimeout`\u95a2\u6570\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u6700\u521d\u306b\u547c\u3073\u51fa\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u6700\u5f8c\u306b\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\\n\\n\u3053\u308c\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u306f\u30e9\u30f3\u30bf\u30a4\u30e0\u30a8\u30f3\u30b8\u30f3\u304c\u3042\u308b\u3060\u3051\u3067\u306a\u304f\u3001`WebAPI`\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3082\u3042\u308b\u304b\u3089\u3067\u3059\u3002`WebAPI`\u306f\u6700\u521d\u306b`setTimeout`\u95a2\u6570\u3092\u4e0e\u3048\u3066\u304f\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070DOM\u3067\u3059\u3002\\n\\ncallback\u304cWebAPI\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u305f\u5f8c\u3001`setTimeout`\u95a2\u6570\u81ea\u4f53\uff08\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u306f\u3042\u308a\u307e\u305b\u3093!\uff09\u304c\u30b9\u30bf\u30c3\u30af\u304b\u3089\u30dd\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\u4eca\u3001`foo`\u304c\u547c\u3073\u51fa\u3055\u308c\u3001`\\"First\\"`\u304c\u3001\u30ed\u30b0\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo`\u304c\u30b9\u30bf\u30c3\u30af\u304b\u3089\u30dd\u30c3\u30d7\u3055\u308c\u3001`baz`\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002`\\"Third\\"`\u304c\u3001\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI\u306f\u3001\u6e96\u5099\u304c\u6574\u3063\u305f\u3068\u304d\u306b\u30b9\u30bf\u30c3\u30af\u306b\u3001\u306a\u306b\u304b\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092`queue`\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nevent loop\u304c\u6a5f\u80fd\u3057\u59cb\u3081\u308b\u3068\u3053\u308d\u3067\u3059\u3002 **event loop**\u306f\u30b9\u30bf\u30c3\u30af\u3068\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u3092\u8abf\u3079\u307e\u3059\u3002\u30b9\u30bf\u30c3\u30af\u304c\u7a7a\u306e\u5834\u5408\u306f\u3001\u30ad\u30e5\u30fc\u306e\u6700\u521d\u306e\u3082\u306e\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u308c\u3092\u30b9\u30bf\u30c3\u30af\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar`\u304c\u547c\u3073\u51fa\u3055\u308c\u3001`\\"Second\\"`\u304c\u30ed\u30b0\u51fa\u529b\u3055\u308c\u3001\u30b9\u30bf\u30c3\u30af\u304b\u3089\u30dd\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\u30a4\u30d9\u30f3\u30c8\u3092\u5f15\u304d\u8d77\u3053\u3057\u305f\u6700\u3082\u6df1\u304f\u30cd\u30b9\u30c8\u3057\u305f\u8981\u7d20\u304c\u30a4\u30d9\u30f3\u30c8\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308a\u307e\u3059\u3002`event.stopPropagation`\u3067\u30d0\u30d6\u30ea\u30f3\u30b0\u3092\u6b62\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059","id":30,"options":["\u5916\u5074 `div`","\u5185\u5074 `div`","`button`","\u30cd\u30b9\u30c8\u3057\u305f\u3059\u3079\u3066\u306e\u8981\u7d20\u306e\u914d\u5217"],"question":""},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"`p`\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001`p`\u3068`div`\u306e2\u3064\u306e\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30a4\u30d9\u30f3\u30c8\u4f1d\u64ad\u4e2d\u306f\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3001\u30d0\u30d6\u30ea\u30f3\u30b0\u306e3\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306f\u30d0\u30d6\u30ea\u30f3\u30b0\u6bb5\u968e\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\uff08`useCapture`\u3092`true`\u306b\u8a2d\u5b9a\u3057\u306a\u3044\u9650\u308a\uff09\u3002\u6700\u3082\u6df1\u304f\u30cd\u30b9\u30c8\u3057\u305f\u8981\u7d20\u304b\u3089\u5916\u5074\u306b\u5411\u304b\u3063\u3066\u9032\u307f\u307e\u3059\u3002","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"p\u8981\u7d20\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30ed\u30b0\u51fa\u529b\u306f\u3069\u3046\u306a\u308a\u307e\u3059\u304b\u3002"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"\u4e21\u65b9\u3068\u3082\u3001`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u53c2\u7167\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001`.call`\u3082\u3059\u3050\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\\n\\n`.bind.`\u306f\u95a2\u6570\u306e\u30b3\u30d4\u30fc\u3092\u8fd4\u3057\u307e\u3059\u304c\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306f\u675f\u7e1b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3059\u3050\u306b\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"`sayHi`\u95a2\u6570\u306f\u3001\u5373\u6642\u547c\u3073\u51fa\u3057\u95a2\u6570\u5f0f\uff08IIFE\uff09\u306e\u623b\u308a\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f`0`\u3092\u8fd4\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u306f`\\"number\\"`\u578b\u3067\u3059\u3002\\n\\n\u53c2\u8003\uff1a7\u3064\u306e\u7d44\u307f\u8fbc\u307f\u578b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\uff1a `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, \u305d\u3057\u3066 `bigint`\u3002\u95a2\u6570\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u3001`\\"function\\"`\u578b\u3067\u306f\u306a\u304f`\\"object\\"`\u578b\u3067\u3059\u3002","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"falsy\u306e\u5024\u306f6\u3064\u3060\u3051\u3067\u3059\u3002\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (empty string)\\n- `false`\\n\\n`new Number`\u3084\u3001`new Boolean`\u306e\u3088\u3046\u306a\u95a2\u6570\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306ftruthy\u3067\u3059\u3002","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","\u3053\u308c\u3089\u3059\u3079\u3066falsy"],"question":"\u3053\u308c\u3089\u306e\u5024\u306e\u3069\u308c\u304cfalsy\u3067\u3059\u304b\uff1f"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1`\u306f\u3001`\\"number\\"`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n`typeof \\"number\\"`\u306f\u3001`\\"string\\"`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"\u914d\u5217\u306e\u9577\u3055\u3092\u8d85\u3048\u308b\u5024\u3092\u914d\u5217\u5185\u306e\u8981\u7d20\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001JavaScript\u3067\u306f\u3001\\"empty slots\\"\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u5b9f\u969b\u306b\u306f\u3001`undefined`\u306e\u5024\u3092\u6301\u3061\u307e\u3059\u304c\u3001\u3042\u306a\u305f\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u898b\u308b\u3067\u3057\u3087\u3046\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\n\u5b9f\u884c\u5834\u6240\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\uff08browser\u3001node\u306a\u3069\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\uff09\u3002","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"`catch`\u30d6\u30ed\u30c3\u30af\u306f\u5f15\u6570`x`\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u5f15\u6570\u3092\u6e21\u3059\u3068\u304d\u306e\u5909\u6570\u3068\u540c\u3058`x`\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u5909\u6570`x`\u306f\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u3067\u3059\u3002\\n\\n\u5f8c\u306b\u3001\u3053\u306e\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u5909\u6570\u3092`1`\u306b\u8a2d\u5b9a\u3057\u3001\u5909\u6570`y`\u306e\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3001\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u5909\u6570`x`\u3092\u30ed\u30b0\u51fa\u529b\u3057\u307e\u3059\u3002\u3053\u308c\u306f`1`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n`catch`\u30d6\u30ed\u30c3\u30af\u4ee5\u5916\u3067\u306f\u3001`x`\u306f\u672a\u5b9a\u7fa9\u3001`y`\u306f2\u3067\u3059\u3002 `catch`\u30d6\u30ed\u30c3\u30af\u306e\u5916\u5074\u3067`console.log(x)`\u3057\u305f\u5834\u5408\u306f\u3001`undefined`\u3092\u8fd4\u3057\u3001`y`\u306f`2`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"explanation":"JavaScript\u306b\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\\n\\n\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306f\u3001`boolean`, `null`, `undefined`, `bigint`, `number`, `string`, \u305d\u3057\u3066`symbol`\u3067\u3059\u3002\\n\\n\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u533a\u5225\u3059\u308b\u306e\u306f\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306b\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3082\u30e1\u30bd\u30c3\u30c9\u3082\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\\n\\n\u305f\u3060\u3057\u3001`\'foo\'.toUpperCase()`\u306f`\'FOO\'`\u3068\u8a55\u4fa1\u3055\u308c\u3001`TypeError`\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u6587\u5b57\u5217\u306e\u3088\u3046\u306a\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001JavaScript\u304c\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u306e1\u3064\u3001\u3059\u306a\u308f\u3061`String`\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6697\u9ed9\u7684\u306b\u30e9\u30c3\u30d7\u3057\u3001\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u305f\u5f8c\u30e9\u30c3\u30d1\u30fc\u3092\u76f4\u3061\u306b\u7834\u68c4\u3059\u308b\u305f\u3081\u3067\u3059\u3002 \\n\\n`null`\u3068`undefined`\u3092\u9664\u304f\u3059\u3079\u3066\u306e\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306f\u3053\u306e\u632f\u308b\u821e\u3044\u3092\u3057\u307e\u3059\u3002","id":38,"options":["primitive \u304b object","function \u304b object","\u3072\u3063\u304b\u3051\u554f\u984c! objects\u306e\u307f","number \u304b object"],"question":"JavaScript\u306e\u3059\u3079\u3066\u306f\u3069\u3061\u3089\u304b\u3067\u3059..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1,2]`\u306f\u521d\u671f\u5024\u3067\u3059\u3002\u3053\u308c\u304c\u6700\u521d\u306e\u5024\u3067\u3001\u4e00\u756a\u6700\u521d\u306e`acc`\u306e\u5024\u3067\u3059\u3002\u6700\u521d\u306e\u5468\u56de\u306e\u9593\u3001`acc`\u306f`[1,2]`\u3067\u3001`cur`\u306f`[0,1]`\u3067\u3059\u3002\u305d\u308c\u3089\u3092\u9023\u7d50\u3059\u308b\u3068\u3001\u7d50\u679c\u3068\u3057\u3066`[1\u30012\u30010\u30011]`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n\u305d\u3057\u3066\u3001`[1, 2, 0, 1]`\u306e`acc`\u3068`[2, 3]`\u306e`cur`\u3092\u9023\u7d50\u3057\u3066`[1, 2, 0, 1, 2, 3]`\u3092\u5f97\u307e\u3059","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null`\u306ffalsy\u3067\u3059\u3002`!null`\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002`!true`\u306f`false`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n`\\"\\"`\u306ffalsy\u3067\u3059\u3002`!\\"\\"`\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002`!true`\u306f`false`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n`1`\u306ftruthy\u3067\u3059\u3002`!1`\u306f`false`\u3092\u8fd4\u3057\u307e\u3059\u3002`!false`\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"\u4e00\u610f\u306eID\u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u306eID\u306f `clearInterval()`\u95a2\u6570\u3067\u3001\u305d\u306e\u9593\u9694\u3092\u30af\u30ea\u30a2\u3059\u308b\u305f\u3081\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","id":41,"options":["\u30e6\u30cb\u30fc\u30afid","\u6307\u5b9a\u3055\u308c\u305f\u30df\u30ea\u79d2\u6570","\u6e21\u3055\u308c\u305f\u95a2\u6570","`undefined`"],"question":"`setInterval`\u30e1\u30bd\u30c3\u30c9\u306f\u30d6\u30e9\u30a6\u30b6\u306b\u4f55\u3092\u8fd4\u3057\u307e\u3059\u304b\uff1f"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"\u6587\u5b57\u5217\u306f\u30a4\u30c6\u30e9\u30d6\u30eb\u3067\u3059\u3002\u30b9\u30d7\u30ec\u30c3\u30c9\u6f14\u7b97\u5b50\u306f\u3001\u30a4\u30c6\u30e9\u30d6\u30eb\u306e\u3059\u3079\u3066\u306e\u6587\u5b57\u30921\u3064\u306e\u8981\u7d20\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\u3053\u308c\u306f\u4f55\u3092\u8fd4\u3057\u307e\u3059\u304b\uff1f"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"\u901a\u5e38\u306e\u95a2\u6570\u306f\u3001\u547c\u3073\u51fa\u3057\u5f8c\u306b\u9014\u4e2d\u3067\u505c\u6b62\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u306f\u9014\u4e2d\u3067\\"\u505c\u6b62\\"\u3057\u3001\u5f8c\u3067\u505c\u6b62\u3057\u305f\u5834\u6240\u304b\u3089\u7d9a\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u304c`yield`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u898b\u3064\u3051\u308b\u305f\u3073\u306b\u3001\u305d\u306e\u95a2\u6570\u306f\u305d\u306e\u5f8c\u306b\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u306f\u3001\u5024\u3092\\"\u8fd4\u3059\\"\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5024\u3092\u751f\u307f\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u307e\u305a\u3001`i`\u306b`10`\u3092\u6307\u5b9a\u3057\u3066\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\u6b21\u306b`next()`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\\n\\n\u6700\u521d\u306b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u3001`i`\u306f`10`\u306b\u306a\u308a\u3001\u6700\u521d\u306e`yield`\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u906d\u9047\u3057\u307e\u3059\u3002\u305d\u3053\u304b\u3089`i`\u306e\u5024\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306f\\"\u4e00\u6642\u505c\u6b62\\"\u3055\u308c\u3001`10`\u304c\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\n\u305d\u308c\u304b\u3089\u3001`next()`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u95a2\u6570\u3092\u518d\u5ea6\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u4f9d\u7136\u3068\u3057\u3066`i`\u306f`10`\u306e\u307e\u307e\u3001\u4ee5\u524d\u306b\u505c\u6b62\u3057\u305f\u3068\u3053\u308d\u304b\u3089\u7d99\u7d9a\u3057\u59cb\u3081\u307e\u3059\u3002\\n\\n\u305d\u308c\u304b\u3089\u6b21\u306e`yield`\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u906d\u9047\u3057\u3001\u305d\u3053\u304b\u3089`i * 2`\u306e\u5024\u304c\u5f97\u3089\u308c\u307e\u3059\u3002`i`\u306f`10`\u306e\u307e\u307e\u306a\u306e\u3067\u3001`10 * 2`\u3001\u3064\u307e\u308a`20`\u3092\u8fd4\u3057\u307e\u3059\u3002\u306a\u306e\u3067\u3001`10\u300120`\u304c\u8fd4\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"\u8907\u6570\u306e\u30d7\u30ed\u30df\u30b9\u3092`Promise.race`\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u305f\u6642\u3001\\"resolves/rejects\\"\u306f\u3001\\"\u6700\u521d\\"\u306e\u30d7\u30ed\u30df\u30b9\u306e\\"resolves/rejects\\"\u3092\u884c\u3044\u307e\u3059\u3002\\n\\n`setTimeout`\u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u30bf\u30a4\u30de\u30fc\u3092\u6e21\u3057\u307e\u3059: \u6700\u521d\u306e\u30d7\u30ed\u30df\u30b9\u306b\u306f500ms(`firstPromise`)\u30012\u756a\u76ee\u306e\u30d7\u30ed\u30df\u30b9\u306b\u306f100ms(`secondPromise`)\u3002\\n\\n\u3053\u308c\u306f\u3001`secondPromise`\u304c\u6700\u521d\u306b`\'two\'`\u306e\u5024\u3067\u89e3\u6c7a\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002`res`\u306f`\'two\'`\u306e\u5024\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"\u3053\u308c\u306f\u4f55\u3092\u8fd4\u3057\u307e\u3059\u304b\uff1f"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\u307e\u305a\u3001`name`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5024\u3092\u4f7f\u3063\u3066\u3001\u5909\u6570`person`\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\n\u305d\u308c\u304b\u3089\u3001`members`\u3068\u3044\u3046\u5909\u6570\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\u305d\u306e\u914d\u5217\u306e\u6700\u521d\u306e\u8981\u7d20\u306b\u3001\u5909\u6570`person`\u306e\u5024\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u4e92\u3044\u3092\u30a4\u30b3\u30fc\u30eb\u3067\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u300c\u53c2\u7167\u300d\u306b\u3088\u3063\u3066\u76f8\u4e92\u4f5c\u7528\u3057\u307e\u3059\u3002\\n\\n\u3042\u308b\u5909\u6570\u304b\u3089\u5225\u306e\u5909\u6570\u3078\u306e\\"\u53c2\u7167\\"\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u305d\u306e\u53c2\u7167\u306e\\"\u30b3\u30d4\u30fc\\"\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 (\u305d\u308c\u3089\u306f\u3001\\"\u540c\u3058\u53c2\u7167\\"\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff01)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\n\u305d\u3057\u3066\u3001\u5909\u6570`person`\u3092`null`\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\n\u305d\u306e\u8981\u7d20\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u7570\u306a\u308b\uff08\u30b3\u30d4\u30fc\u3055\u308c\u305f\uff09\u53c2\u7167\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001`person`\u5909\u6570\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u3060\u3051\u3067\u914d\u5217\u306e\u6700\u521d\u306e\u8981\u7d20\u306f\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3002 `members`\u306e\u6700\u521d\u306e\u8981\u7d20\u306f\u307e\u3060\u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\\n \\n`members`\u914d\u5217\u3092\u30ed\u30b0\u51fa\u529b\u3057\u305f\u3068\u304d\u3001\u6700\u521d\u306e\u8981\u7d20\u306f\u307e\u3060\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"\u3053\u306e\u5834\u5408\u3001`for-in`\u30eb\u30fc\u30d7\u3092\u4f7f\u3046\u3068\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u3067\u3042\u308b`name`\u3068`age`\u306e\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3067\u304d\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u306f\u6587\u5b57\u5217\u3067\u3059\uff08\u30b7\u30f3\u30dc\u30eb\u3067\u306f\u306a\u3044\u5834\u5408\uff09\u3002\\n\\n\u3059\u3079\u3066\u306e\u30eb\u30fc\u30d7\u3067\u3001`item`\u306e\u5024\u306f\u53cd\u5fa9\u3057\u3066\u3044\u308b\u73fe\u5728\u306e\u30ad\u30fc\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u307e\u305a\u3001`item`\u306f`name`\u304c\u4ee3\u5165\u3055\u308c\u3001\u30ed\u30b0\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001`item`\u306f`age`\u304c\u4ee3\u5165\u3055\u308c\u3001\u30ed\u30b0\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"\u6f14\u7b97\u5b50\u7d50\u5408\u6027\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u5f0f\u3092\u8a55\u4fa1\u3059\u308b\u9806\u5e8f\uff08\u5de6\u304b\u3089\u53f3\u307e\u305f\u306f\u53f3\u304b\u3089\u5de6\uff09\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u3059\u3079\u3066\u306e\u6f14\u7b97\u5b50\u304c\u540c\u3058\u512a\u5148\u9806\u4f4d\u3092\u6301\u3064\u5834\u5408\u306b\u306e\u307f\u767a\u751f\u3057\u307e\u3059\u3002\u6f14\u7b97\u5b50\u306e\u7a2e\u985e\u306f1\u3064\u3060\u3051\u3067\u3059: `+`\u3002\u3055\u3089\u306b\u3001\u7d50\u5408\u6027\u306f\u5de6\u304b\u3089\u53f3\u3067\u3059\u3002\\n\\n`3 + 4`\u304c\u6700\u521d\u306b\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u6570\u5b57\u306e`7`\u306b\u306a\u308a\u307e\u3059\u3002\\n\\n`7 + \'5\'`\u306f\u3001\u5f37\u5236\u7684\u306b`\\"75\\"`\u306b\u306a\u308a\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6570\u5b57\u306e`7`\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u8cea\u554f15\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u3064\u306e\u6587\u5b57\u5217\u3092\u6f14\u7b97\u5b50\u306e`+`\u3092\u4f7f\u3063\u3066\u9023\u7d50\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3088\u3063\u3066\u3001`\\"7\\" + \\"5\\"`\u306f\u3001`\\"75\\"`\u306b\u306a\u308a\u307e\u3059\u3002","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"\u6587\u5b57\u5217\u306e\u6700\u521d\u306e\u6570\u5b57\u3060\u3051\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\\"\u57fa\u6570\\"\uff08\u89e3\u6790\u3059\u308b\u6570\u5024\u306e\u7a2e\u985e\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e2\u756a\u76ee\u306e\u5f15\u6570: \u57fa\u657010, 16\u9032\u6570, 8\u9032\u6570, 2\u9032\u6570\u306a\u3069\uff09\u306b\u57fa\u3065\u3044\u3066\u3001`parseInt`\u306f\u6587\u5b57\u5217\u5185\u306e\u6587\u5b57\u304c\u6709\u52b9\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\u57fa\u6570\u306e\u4e2d\u3067\u6709\u52b9\u306a\u6570\u5b57\u3067\u306f\u306a\u3044\u6587\u5b57\u306b\u51fa\u4f1a\u3046\u3068\u3001\u69cb\u6587\u89e3\u6790\u3092\u505c\u6b62\u3057\u3066\u6b21\u306e\u6587\u5b57\u3092\u7121\u8996\u3057\u307e\u3059\u3002\\n\\n`*`\u306f\u3001\u6709\u52b9\u306a\u6570\u5b57\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002`\\"7\\"`\u3092\u300110\u9032\u6570\u306e`7`\u306b\u89e3\u6790\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u305d\u306e\u307e\u307enum\u306f`7`\u306e\u5024\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"num\u306e\u5024\u306f\u4f55\u3067\u3059\u304b\uff1f"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"\u914d\u5217\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3068\u304d\u3001`num`\u306e\u5024\u306b\u4ee3\u5165\u3055\u308c\u308b\u306e\u306f\u3001\u30eb\u30fc\u30d7\u3067\u6e21\u3063\u3066\u304f\u308b\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u8981\u7d20\u306f\u6570\u5024\u306a\u306e\u3067\u3001if\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8 `typeof num === \\"number\\"`\u306e\u6761\u4ef6\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002 map\u95a2\u6570\u306f\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u6210\u3057\u3066\u95a2\u6570\u304b\u3089\u8fd4\u3055\u308c\u305f\u5024\u3092\u633f\u5165\u3057\u307e\u3059\u3002\\n\\n\u305f\u3060\u3057\u3001\u5024\u306f\u8fd4\u3055\u308c\u307e\u305b\u3093\u3002\u95a2\u6570\u304b\u3089\u5024\u3092\u8fd4\u3055\u306a\u3044\u3068\u3001\u95a2\u6570\u306f`undefined`\u3092\u8fd4\u3057\u307e\u3059\u3002\u914d\u5217\u5185\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u95a2\u6570\u30d6\u30ed\u30c3\u30af\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u306e\u3067\u3001\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066`undefined`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = 1998;\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"\u5024\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306a\u3044\u9650\u308a\u3001\u5f15\u6570\u306f\\"\u5024\\"\u306b\u3088\u3063\u3066\u6e21\u3055\u308c\u3001\u305d\u306e\u5f8c\u3001\\"\u53c2\u7167\\"\u306b\u3088\u3063\u3066\u6e21\u3055\u308c\u307e\u3059\u3002 `birthYear`\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u304f\u6587\u5b57\u5217\u306a\u306e\u3067\u3001\u5024\u3067\u6e21\u3055\u308c\u307e\u3059\u3002\u5f15\u6570\u3092\u5024\u3067\u6e21\u3059\u3068\u3001\u305d\u306e\u5024\u306e\\"\u30b3\u30d4\u30fc\\"\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\uff08\u8cea\u554f46\u3092\u53c2\u7167\uff09\u3002\\n\\n\u5909\u6570`birthYear`\u306f\u3001\u5024`\\"1997\\"`\u3078\u306e\u53c2\u7167\u3092\u6301\u3061\u307e\u3059\u3002\u5f15\u6570`year`\u306f\u3001\u5024`\\"1997\\"`\u3082\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u306f`birthYear`\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u3068\u540c\u3058\u5024\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002`year`\u306b`\\"1998\\"`\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066`year`\u306e\u5024\u3092\u66f4\u65b0\u3057\u305f\u3068\u3057\u3066\u3082\u3001`year`\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u3060\u3051\u3067\u3059\u3002`birthYear`\u306f\u307e\u3060`\\"1997\\"`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n`person`\u306e\u5024\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u5f15\u6570`member`\u306f\\"\u540c\u3058\\"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\uff08\u30b3\u30d4\u30fc\u3055\u308c\u305f\uff09\u53c2\u7167\u3092\u6301\u3061\u307e\u3059\u3002\\n\\n`member`\u304c\u53c2\u7167\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3059\u308b\u3068\u3001`person`\u306e\u5024\u3082\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u4e21\u65b9\u3068\u3082\u540c\u3058\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u3092\u6301\u3064\u304b\u3089\u3067\u3059\u3002`person`\u306e`name`\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u5024\u306e`\\"Lydia\\"`\u3068\u306a\u308a\u307e\u3057\u305f\u3002","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"`throw`\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u3001\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3067\u3001\u3042\u306a\u305f\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u5916\u306f\u3001<b>string</b>, <b>number</b>, <b>boolean</b>, <b>object</b>\u306e\u3044\u305a\u308c\u304b\u3068\u306a\u308a\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3060\u3068\u3001\u4f8b\u5916\u306f\u6587\u5b57\u5217`\'Hello world\'`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n`catch`\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u3001`try`\u30d6\u30ed\u30c3\u30af\u3067\u4f8b\u5916\u304c\u6295\u3052\u3089\u308c\u305f\u5834\u5408\u306b\u3069\u3046\u3059\u308b\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059: \u6587\u5b57\u5217`\'Hello world\'`\u306f\u3001`e`\u306b\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u7d50\u679c`\'Oh an error: Hello world\'`\u3068\u306a\u308a\u307e\u3059\u3002","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error: Hello world!`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8fd4\u3059\u3068\u3001\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u95a2\u6570\u3067\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3067\u306f\u306a\u304f\u3001\\"\u623b\u308a\u5024\\"\u3068\u306a\u308a\u307e\u3059\u3002 `\\"Maserati\\"`\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u306e\u3067\u3001`myCar.make`\u306f `\\"Maserati\\"`\u3068\u306a\u308a\u307e\u3059\u3002","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` is actually shorthand for:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\n`y`\u306b`10`\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u5b9f\u969b\u306b\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d7\u30ed\u30d1\u30c6\u30a3`y`\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\uff08\u30d6\u30e9\u30a6\u30b6\u3067\u306f`window`\u3001node\u3067\u306f`global`\uff09\u3002\u30d6\u30e9\u30a6\u30b6\u3067\u306f\u3001`window.y`\u306f`10`\u3068\u306a\u308a\u307e\u3057\u305f\u3002\\n\\n\u305d\u308c\u304b\u3089\u3001\u5909\u6570`x`\u3092`10`\u3067\u3042\u308b\u5024`y`\u3067\u5ba3\u8a00\u3057\u307e\u3059\u3002`let`\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306f\\"\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\\"\u3068\u306a\u308a\u3001\u5ba3\u8a00\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u5185\u3067\u306e\u307f\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f\u5373\u6642\u95a2\u6570\uff08IIFE\uff09\u3068\u306a\u308a\u307e\u3059\u3002 \\n\\n`typeof`\u6f14\u7b97\u5b50\u4f7f\u7528\u6642\u3001\u30aa\u30da\u30e9\u30f3\u30c9`x`\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u305b\u3093: \u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u30d6\u30ed\u30c3\u30af\u306e\u5916\u5074\u3067`x`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f`x`\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\\n\\n\u5024\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u3001\u307e\u305f\u306f\u5ba3\u8a00\u3055\u308c\u3066\u3044\u306a\u3044\u5024\u306f`\\"undefined\\"`\u578b\u3068\u306a\u308a\u307e\u3059\u3002\u306a\u306e\u3067`console.log(typeof x)`\u306f`\\"undefined\\"`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\ny\u306b\u95a2\u3057\u3066\u306f\u3001`y`\u306b`10`\u3092\u4ee3\u5165\u3059\u308b\u3068\u304d\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570`y`\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u5024\u306f\u3001\u30b3\u30fc\u30c9\u5185\u306e\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002`y`\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001`\\"number\\"`\u578b\u306e\u5024\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\u3088\u3063\u3066`console.log(typeof y)`\u306f`\\"number\\"`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"`Set`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f _unique_ \u306e\u5024\u306e\u96c6\u5408\u3067\u3059: \u5024\u306f\u96c6\u5408\u306e\u4e2d\u3067\u4e00\u5ea6\u3060\u3051\u73fe\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\\n\\n\u5024`1`\u304c\u91cd\u8907\u3057\u305f\u30a4\u30c6\u30e9\u30d6\u30eb`[1\u30011\u30012\u30013\u30014]`\u3092\u6e21\u3057\u307e\u3057\u305f\u3002\u30bb\u30c3\u30c8\u5185\u306b\u540c\u3058\u5024\u30922\u3064\u6301\u3064\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u305d\u306e\u3046\u3061\u306e1\u3064\u304c\u524a\u9664\u3055\u308c`{1\u30012\u30013\u30014}`\u3068\u306a\u308a\u307e\u3059\u3002","id":54,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u3059\u3002: \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3051\u304c\u305d\u306e\u5024\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\\n\\n`myCounter`\u306e\u5024\u3092\u5897\u3084\u305d\u3046\u3068\u3059\u308b\u3068\u3001error: `myCounter` is read-only and cannot be modified. \u3068\u3001\u30a8\u30e9\u30fc\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059\u3002","id":55,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"`delete`\u6f14\u7b97\u5b50\u306f\u3001\u30d6\u30fc\u30eb\u5024\u3092\u8fd4\u3057\u307e\u3059: \u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u306ftrue\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306ffalse\u3092\u8fd4\u3057\u307e\u3059\u3002`var`, `const`\u307e\u305f\u306f`let`\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306f`delete`\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u524a\u9664\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n`name`\u5909\u6570\u306f`const`\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u524a\u9664\u306f\u6210\u529f\u3057\u307e\u305b\u3093: `false`\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002 \\n\\n`age`\u3092`21`\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u5b9f\u969b\u306b\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b`age`\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u3082\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u3001`delete age`\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":56,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"\u914d\u5217\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u308a\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5206\u89e3\u3057\u3066\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 example:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\n`a`\u306e\u5024\u306f`1`\u3068\u306a\u308a\u3001`b`\u306e\u5024\u306f`2`\u3068\u306a\u308b\u3002\u5b9f\u969b\u306b\u554f\u984c\u3067\u884c\u3063\u305f\u4e8b\u306f\u3001\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\n`y`\u306e\u5024\u304c\u914d\u5217\u306e\u6700\u521d\u306e\u5024\u3001\u3064\u307e\u308a`1`\u306b\u7b49\u3057\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002`y`\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u3068\u3001`1`\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002","id":57,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"\u30b9\u30d7\u30ec\u30c3\u30c9\u6f14\u7b97\u5b50`...`\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7d50\u5408\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3089\u3092\u5225\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\u4e0a\u8a18\u306e\u5834\u5408\u3060\u3068\u3001`user`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3089\u3092`admin`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002`admin`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30b3\u30d4\u30fc\u3055\u308c\u305f\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u3092\u542b\u307f\u3001\u305d\u306e\u7d50\u679c`{admin\uff1atrue\u3001name\uff1a \\"Lydia\\"\u3001age\uff1a21}`\u3068\u306a\u308a\u307e\u3059\u3002","id":58,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"`defineProperty`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u65b0\u3057\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u65e2\u5b58\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 `defineProperty`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u305d\u308c\u3089\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f _\u5217\u6319\u3067\u304d\u307e\u305b\u3093_\u3002 \\n\\n`Object.keys`\u30e1\u30bd\u30c3\u30c9\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u5168\u3066\u306e _enumerable_ \uff08\u5217\u6319\u53ef\u80fd\uff09\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3092\u8fd4\u3057\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u306f`\\"name\\"`\u3060\u3051\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n`defineProperty`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u8ffd\u52a0\u3055\u308c\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0d\u5909\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u52d5\u4f5c\u306f`writable`, `configurable`, `enumerable`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3063\u3066\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3001`defineProperty`\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u3082\u3063\u3068\u7d30\u304b\u304f\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002","id":59,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"`JSON.stringify`\u306e2\u756a\u76ee\u306e\u5f15\u6570\u306f _replacer_ \u3067\u3059\u3002replacer\u306f\u3001\u95a2\u6570\u307e\u305f\u306f\u914d\u5217\u306e\u3044\u305a\u308c\u304b\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u5024\u3092\u6587\u5b57\u5217\u5316\u3059\u308b\u5bfe\u8c61\u3068\u305d\u306e\u65b9\u6cd5\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\\n\\nreplacer\u304c _array_ \u306e\u5834\u5408\u3001\u540d\u524d\u304c\u914d\u5217\u306b\u542b\u307e\u308c\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u307f\u304cJSON\u6587\u5b57\u5217\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001`\\"level\\"`\u3068`\\"health\\"`\u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3060\u3051\u304c\u542b\u307e\u308c\u3001`\\"username\\"`\u306f\u9664\u5916\u3055\u308c\u307e\u3059\u3002`data`\u306f`\\"{\\" level \\"\uff1a19\u3001\\" health \\"\uff1a90}\\"`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\nreplacer\u304c _function_ \u306e\u5834\u5408\u3001\u3053\u306e\u95a2\u6570\u306f\u6587\u5b57\u5217\u5316\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5185\u306e\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u304b\u3089\u8fd4\u3055\u308c\u308b\u5024\u306f\u3001JSON\u6587\u5b57\u5217\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u306b\u306a\u308a\u3001\u5024\u304c`undefined`\u306e\u5834\u5408\u3001\u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306fJSON\u6587\u5b57\u5217\u304b\u3089\u9664\u5916\u3055\u308c\u307e\u3059\u3002","id":60,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"\u5358\u9805\u6f14\u7b97\u5b50`++`\u306f\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u3092 _\u6700\u521d\u306b\u8fd4\u3057_ \u3001_\u305d\u306e\u5f8c\u306b \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8_ \u3057\u307e\u3059\u3002`num1`\u306e\u5024\u306f`10`\u3068\u306a\u308a\u307e\u3059\u3002 \u306a\u305c\u306a\u3089`incrementNumber`\u95a2\u6570\u306f\u3001\u6700\u521d\u306b`num`\u306e\u5024`10`\u3092\u8fd4\u3057\u3001\u305d\u306e\u5f8c\u306b`num`\u306e\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3060\u3051\u3067\u3059\u3002\\n\\n`num1`\u3092`increPassedNumber`\u306b\u6e21\u3057\u305f\u306e\u3067\u3001`num2`\u306f`10`\u3067\u3059\u3002`number`\u306f`10`\uff08`num1`\u306e\u5024\u3067\u3059\u3002\u7e70\u308a\u8fd4\u3057\u307e\u3059\u304c\u3001\u5358\u9805\u6f14\u7b97\u5b50`++`\u306f\u3001\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u3092 _\u6700\u521d\u306b\u8fd4\u3057_\u3001_\u305d\u306e\u5f8c\u306b \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8_ \u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001`num2`\u306f`10`\u3068\u306a\u308a\u307e\u3059\u3002","id":61,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"ES6\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002\u5024\u304c\u95a2\u6570\u306b\u6e21\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3084\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c `\\"undefined\\"`\u306e\u5834\u5408\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001`value`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5206\u5272\u4ee3\u5165\u3055\u308c\u308b\u306e\u3067\u3001`x`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f`{number\uff1a10}`\u306b\u306a\u308a\u307e\u3059\u3002\\n\\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5f15\u6570\u306f\u3001_\u547c\u3073\u51fa\u3057\u6642_ \u306b\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u305f\u3073\u306b\u3001_\u65b0\u3057\u3044_ \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\\n\\n\u6700\u521d\u306b\u5024\u3092\u6e21\u3055\u305a\u306b2\u56de\u3001`multiply`\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059: `x`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f `{number\uff1a10}`\u3068\u306a\u308a\u3001\u305d\u306e\u6570\u306e\u4e57\u7b97\u3055\u308c\u305f\u5024\u3001\u3064\u307e\u308a `20`\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\\n\\n3\u56de\u76ee\u306emultiply\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u3001\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059: `value`\u3068\u3044\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\\n\\n`*=`\u6f14\u7b97\u5b50\u306f`x.number = x.number * 2`\u306e\u7701\u7565\u5f62\u3068\u306a\u308a\u307e\u3059: `x.number`\u306e\u5024\u306f\u4e57\u7b97\u3057\u305f\u5024\u306b\u4fee\u6b63\u3055\u308c\u3001`20`\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\\n\\n4\u56de\u76ee\u306f\u3001`value`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3082\u3046\u4e00\u5ea6\u6e21\u3057\u307e\u3059\u3002`x.number`\u306f\u4ee5\u524d\u306f`20`\u306b\u4fee\u6b63\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001`x.number *= 2`\u306f`40`\u3092\u51fa\u529b\u3057\u307e\u3059\u3002","id":62,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"`reduce`\u30e1\u30bd\u30c3\u30c9\u304c\u53d7\u3051\u53d6\u308b\u6700\u521d\u306e\u5f15\u6570\u306f _\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf_ \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f`x`\u3067\u3059\u3002 2\u756a\u76ee\u306e\u5f15\u6570\u306f\u3001_\u73fe\u5728\u306e\u5024_ `y`\u3067\u3059\u3002 reduce\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u914d\u5217\u5185\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u6700\u7d42\u7684\u306b1\u3064\u306e\u5024\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\\n\\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u5024\u3092\u8fd4\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u5358\u306b\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\u306e\u5024\u3068\u73fe\u5728\u306e\u5024\u3092\u8a18\u9332\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\u306e\u5024\u306f\u3001\u4ee5\u524d\u306b\u8fd4\u3055\u308c\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u5024\u3068\u540c\u3058\u3067\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u306e`initialValue`\u5f15\u6570\u3092`reduce`\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u306a\u3044\u3068\u3001\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\u306f\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u306e\u6700\u521d\u306e\u8981\u7d20\u306b\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002\\n\\n\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3067\u306f\u3001\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf(`x`)\u306f`1`\u3067\u3042\u308a\u3001\u73fe\u5728\u5024(`y`)\u306f`2`\u3068\u306a\u308a\u307e\u3059\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304b\u3089\u306f\u623b\u3089\u306a\u3044\u306e\u3067\u3001\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\u3068\u73fe\u5728\u306e\u5024\u3092\u51fa\u529b\u3057\u307e\u3059: `1`\u3068`2`\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\n\u95a2\u6570\u304b\u3089\u5024\u3092\u8fd4\u3055\u306a\u3051\u308c\u3070\u3001`undefined`\u3092\u8fd4\u3057\u307e\u3059\u3002\u6b21\u306e\u547c\u3073\u51fa\u3057\u3067\u306f\u3001\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\u306f`undefined`\u3067\u3001\u73fe\u5728\u306e\u5024\u306f`3`\u3067\u3059\u3002`undefined`\u3068`3`\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\n4\u56de\u76ee\u306e\u547c\u3073\u51fa\u3057\u3067\u3082\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304b\u3089\u306f\u623b\u308a\u307e\u305b\u3093\u3002\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\u3082\u307e\u305f`undefined`\u3067\u3042\u308a\u3001\u73fe\u5728\u306e\u5024\u306f`4`\u3068\u306a\u308a\u3001`undefined`\u3068`4`\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":63,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u3001`super`\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u3001`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u3046\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001ReferenceError\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059: 1\u30684\u306f\u53c2\u7167\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u3002\\n\\n`super`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u3001\u4e0e\u3048\u3089\u308c\u305f\u5f15\u6570\u3067\u3001\u305d\u306e\u89aa\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u89aa\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f`name`\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u306e\u3067\u3001`name`\u3092`super`\u306b\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n`Labrador`\u30af\u30e9\u30b9\u306f2\u3064\u306e\u5f15\u6570\u3001`Dog`\u3092\u62e1\u5f35\u3059\u308b\u305f\u3081\u306e`name`\u3068\u3001`Labrador`\u30af\u30e9\u30b9\u306e\u8ffd\u52a0\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u306e`size`\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\\n\\n\u4e21\u65b9\u3068\u3082`Labrador`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u95a2\u6570\u306b\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf2\u3092\u4f7f\u3063\u3066\u6b63\u3057\u304f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002","id":64,"options":["1","2","3","4"],"question":"\u3069\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3048\u3070 `Dog` class\u3092\u7d99\u627f\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"`import`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u3001\u5168\u3066\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306f _\u4e8b\u524d\u89e3\u6790_ \u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c _\u6700\u521d_ \u306b\u5b9f\u884c\u3055\u308c\u3001_\u305d\u306e\u5f8c_ \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u5185\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\\n\\n\u3053\u308c\u306fCommonJS\u306e`require()`\u3068`import`\u306e\u9055\u3044\u3067\u3059\u3002`require()`\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u9593\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u3067\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \\n\\n`import`\u306e\u4ee3\u308f\u308a\u306b`require`\u3092\u4f7f\u7528\u3057\u305f\u3068\u3057\u305f\u3089\u3001`running index.js`, `running sum.js`, `3`\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002","id":65,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"\u3059\u3079\u3066\u306e\u30b7\u30f3\u30dc\u30eb\u306f\u5b8c\u5168\u306b\u30e6\u30cb\u30fc\u30af\u3067\u3059\u3002\u30b7\u30f3\u30dc\u30eb\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u306e\u76ee\u7684\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306b\u8aac\u660e\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3059\u3002Symbol\u306e\u5024\u306f\u6e21\u3055\u308c\u305f\u5f15\u6570\u306b\u4f9d\u5b58\u3057\u307e\u305b\u3093\u3002\\n\\n\u7b49\u4fa1\u6027\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u30012\u3064\u306e\u307e\u3063\u305f\u304f\u65b0\u3057\u3044\u30b7\u30f3\u30dc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059: \u6700\u521d\u306e`Symbol(\'foo\')`\u3068\u30012\u756a\u76ee\u306e`Symbol(\'foo\')`\u3067\u3059\u3002\u3053\u308c\u30892\u3064\u306e\u5024\u306f\u4e00\u610f\u3067\u3042\u308a\u3001\u4e92\u3044\u306b\u7b49\u3057\u304f\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u306a\u306e\u3067`Symbol(\'foo\') === Symbol(\'foo\')`\u306f`false`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":66,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"`padStart`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u306e\u5148\u982d\u306b\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b\u5024\u306f\u3001\u30d1\u30c7\u30a3\u30f3\u30b0\u3068\u3068\u3082\u306b\u6587\u5b57\u5217\u306e\u9577\u3055\u306e _\u5408\u8a08_ \u3067\u3059\u3002\u6587\u5b57\u5217`\\"Lydia Hallie\\"`\u306e\u9577\u3055\u306f`12`\u3067\u3059\u3002 `name.padStart(13)`\u306f\u300112 + 1\u304c13\u3067\u3042\u308b\u305f\u3081\u3001\u6587\u5b57\u5217\u306e\u5148\u982d\u306b1\u30b9\u30da\u30fc\u30b9\u3092\u633f\u5165\u3055\u308c\u307e\u3059\u3002\\n\\n`padStart`\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u304c\u3001\u914d\u5217\u306e\u9577\u3055\u3088\u308a\u3082\u5c0f\u3055\u3044\u5834\u5408\u3001\u30d1\u30c7\u30a3\u30f3\u30b0\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3002","id":67,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u306f\u3001`yield`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u898b\u308b\u3068\u305d\u306e\u5b9f\u884c\u3092\u300c\u4e00\u6642\u505c\u6b62\u300d\u3057\u307e\u3059\u3002\u307e\u305a\u3001\u95a2\u6570\u306b\u6587\u5b57\u5217 \\"Do you love JavaScript?\\" \u3092\u8fd4\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f `game.next().value`\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\u6700\u521d\u306e`yield`\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u898b\u3064\u304b\u308b\u307e\u3067\u3001\u3059\u3079\u3066\u306e\u884c\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u95a2\u6570\u5185\u306e\u6700\u521d\u306e\u884c\u306b`yield`\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059: \u5b9f\u884c\u306f\u6700\u521d\u306eyield\u3067\u505c\u6b62\u3057\u307e\u3059\uff01 _\u3053\u308c\u306f\u5909\u6570 `answer`\u304c\u307e\u3060\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\uff01_\\n\\n`game.next(\\"Yes\\").value`\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u524d\u306e`yield`\u306f`next()`\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u3001\u3053\u306e\u5834\u5408\u306f`\\"Yes\\"`\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\u5909\u6570`answer`\u306e\u5024\u306f\u73fe\u5728`\\"Yes\\"`\u3068\u306a\u308a\u307e\u3059\u3002 \\n\\nif-statemnet\u306e\u6761\u4ef6\u306f`false`\u3092\u8fd4\u3057\u3001`JavaScript loves you back \u2764\ufe0f`\u304c\u3001\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":68,"options":["`game.next(\\"Yes\\").value` and `game.next().value`","`game.next.value(\\"Yes\\")` and `game.next.value()`","`game.next().value` and `game.next(\\"Yes\\").value`","`game.next.value()` and `game.next.value(\\"Yes\\")`"],"question":"console.log\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u5f8c\u306b\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u3001\u30ed\u30b0\u51fa\u529b\u3059\u308b\u65b9\u6cd5\u3092\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw`\u306f\u30a8\u30b9\u30b1\u30fc\u30d7(`\\n`, `\\u000b`, `\\t` \u306a\u3069)\u3092\u7121\u8996\u3057\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306f\u554f\u984c\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\n\u3053\u308c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\n`String.raw`\u306f\u3001\u5358\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u7121\u8996\u3057\u3066\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059:\\n\\n`C:DocumentsProjects\\table.html`\\n\\n\u4e0a\u8a18\u306e\u5834\u5408\u3001\u6587\u5b57\u5217\u306f`Hello\\nworld`\u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":69,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"\u975e\u540c\u671f\u95a2\u6570\u306f\u5e38\u306b\u3001promise\u3092\u8fd4\u3057\u307e\u3059\u3002`await`\u306fpromise\u304c\u89e3\u6c7a\u3055\u308c\u308b\u306e\u3092\u5f85\u305f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: `getData()`\u3092\u547c\u3073\u51fa\u3059\u3068\u3001`data`\u306f\u4fdd\u7559\u4e2d\u306epromise\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\\n\\n\u89e3\u6c7a\u3057\u305f\u5024`\\"I made it\\"`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5834\u5408\u306f\u3001`data`\u306b\u5bfe\u3057\u3066`.then()`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\\n\\n`data.then(res => console.log(res))`\\n\\n\u3053\u308c\u306f`\\"I made it!\\"`\u3068\u51fa\u529b\u3059\u308b\u3067\u3057\u3087\u3046\u3002","id":70,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"`.push\uff08\uff09`\u30e1\u30bd\u30c3\u30c9\u306f\u65b0\u3057\u3044\u914d\u5217\u306e\u9577\u3055\u3092\u8fd4\u3057\u307e\u3059\u3002\u4ee5\u524d\u306f\u3001\u914d\u5217\u306f1\u3064\u306e\u8981\u7d20\uff08\u6587\u5b57\u5217 `\\" banana \\"`\uff09\u3092\u542b\u307f\u3001\u9577\u3055\u306f `1`\u3067\u3057\u305f\u3002\u6587\u5b57\u5217 `\\" apple \\"`\u3092\u914d\u5217\u306b\u8ffd\u52a0\u3057\u305f\u5f8c\u3001\u914d\u5217\u306f2\u3064\u306e\u8981\u7d20\u3092\u542b\u307f\u3001\u9577\u3055\u306f `2`\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f `addToList`\u95a2\u6570\u304b\u3089\u8fd4\u3055\u308c\u307e\u3059\u3002\\nThe `.push()` method returns the _length_ of the new array! Previously, the array contained one element (the string `\\"banana\\"`) and had a length of `1`. After adding the string `\\"apple\\"` to the array, the array contains two elements, and has a length of `2`. This gets returned from the `addToList` function.\\n\\n`push`\u30e1\u30bd\u30c3\u30c9\u306f\u5143\u306e\u914d\u5217\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\u914d\u5217\u306e\u9577\u3055\u3067\u306f\u306a\u304f\u95a2\u6570\u304b\u3089\u914d\u5217\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u3001item\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u5f8c\u306blist\u3092\u8fd4\u3059\u3079\u304d\u3067\u3059\u3002\\nThe `push` method modifies the original array. If you wanted to return the _array_ from the function rather than the _length of the array_, you should have returned `list` after pushing `item` to it.","id":71,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze`\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3001\u524a\u9664\u3001\u5909\u66f4\u3059\u308b\u3053\u3068\u3092\u4e0d\u53ef\u80fd\u306b\u3057\u307e\u3059\uff08\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u304c\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u3082\u306e\u3067\u306a\u3044\u9650\u308a\uff09\u3002\\n\\n\u5909\u6570`shape`\u3092\u4f5c\u6210\u3057\u3001\u30d5\u30ea\u30fc\u30ba\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8`box`\u306b\u4ee3\u5165\u3059\u308b\u3068\u3001`shape`\u306f\u30d5\u30ea\u30fc\u30ba\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30d5\u30ea\u30fc\u30ba\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f `Object.isFrozen`\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\\n\\n\u3053\u306e\u5834\u5408\u3001\u5909\u6570`shape`\u306f\u30d5\u30ea\u30fc\u30ba\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001`Object.isFrozen(shape)`\u306ftrue\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n`shape`\u306f\u30d5\u30ea\u30fc\u30ba\u3055\u308c\u3066\u304a\u308a\u3001`x`\u306e\u5024\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30d1\u30c6\u30a3`x`\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n`x`\u306f`10`\u306e\u307e\u307e\u3068\u306a\u308a\u3001`{ x: 10, y: 20 }`\u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":72,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"\u53f3\u5074\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30d7\u30ed\u30d1\u30c6\u30a3`name`\u3092\u30a2\u30f3\u30d1\u30c3\u30af\u3059\u308b\u3068\u304d\u3001\u305d\u306e\u5024`\\"Lydia\\"`\u3092`myName`\u3068\u3044\u3046\u540d\u524d\u306e\u5909\u6570\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\\n\\n`{name\uff1amyName}`\u3092\u4f7f\u3063\u3066\u3001\u53f3\u5074\u306e `name`\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3067`myName`\u3068\u3044\u3046\u65b0\u3057\u3044\u5909\u6570\u3092\u4f5c\u308a\u305f\u3044\u3053\u3068\u3092JavaScript\u306b\u4f1d\u3048\u307e\u3059\u3002\\n\\n\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5909\u6570`name`\u3092\u51fa\u529b\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001ReferenceError\u304c\u6295\u3052\u3089\u308c\u307e\u3059\u3002","id":73,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"\u7d14\u7c8b\u306a\u95a2\u6570\u306f\u3001\u540c\u3058\u5f15\u6570\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u3001_\u5e38\u306b_ \u540c\u3058\u7d50\u679c\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\\n\\n`sum`\u95a2\u6570\u306f\u5e38\u306b\u540c\u3058\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002`1`\u3068`2`\u3092\u6e21\u3059\u3068\u3001\u526f\u4f5c\u7528\u306a\u3057\u306b _\u5e38\u306b_ `3` \u3092\u8fd4\u3057\u307e\u3059\u3002`5`\u3068`10`\u3092\u6e21\u3059\u3068\u3001_\u5e38\u306b_ `15`\u304c\u8fd4\u3055\u308c\u3001\u4ee5\u4e0b\u540c\u69d8\u306b\u7d9a\u304d\u307e\u3059\u3002\u3053\u308c\u304c\u7d14\u7c8b\u95a2\u6570\u306e\u5b9a\u7fa9\u3067\u3059\u3002","id":74,"options":["Yes","No"],"question":"\u3053\u308c\u306f\u7d14\u7c8b\u95a2\u6570\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"`add`\u95a2\u6570\u306f _memoized_ \u95a2\u6570\u3067\u3059\u3002\u30e1\u30e2\u5316\u306b\u3088\u308a\u3001\u5b9f\u884c\u901f\u5ea6\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u95a2\u6570\u306e\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001\u4ee5\u524d\u306b\u8fd4\u3055\u308c\u305f\u5024\u3092\u683c\u7d0d\u3059\u308b`cache`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\\n\\n\u540c\u3058\u5f15\u6570\u3092\u6307\u5b9a\u3057\u3066\u3082\u3046\u4e00\u5ea6`addFunction`\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6700\u521d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u3067\u305d\u306e\u5024\u304c\u3059\u3067\u306b\u53d6\u5f97\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u307e\u3059\u3002\\n\\n\u3053\u306e\u5834\u5408\u3001caches\u306e\u5024\u304c\u8fd4\u3055\u308c\u3001\u5b9f\u884c\u6642\u9593\u304c\u77ed\u7e2e\u3055\u308c\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u304f\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u5024\u3092\u8a08\u7b97\u3057\u305f\u5f8c\u306b\u305d\u308c\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\\n\\n\u540c\u3058\u5024\u30673\u56de`addFunction`\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059: \u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3067\u306f\u3001`num`\u306b`10`\u3092\u4ee3\u5165\u3057\u305f\u6642\u3001\u95a2\u6570\u306e\u5024\u306f\u307e\u3060\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 \\n\\nif\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e`num in cache`\u306e\u6761\u4ef6\u306f`false`\u3092\u8fd4\u3057\u3001else\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059: `Calculated! 20`\u304c\u51fa\u529b\u3055\u308c\u3001\u7d50\u679c\u306e\u5024\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 `cache`\u306f\u73fe\u5728 `{ 10: 20 }`\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n2\u56de\u76ee\u306f\u3001`cache`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f`10`\u306b\u5bfe\u3057\u3066\u8fd4\u3055\u308c\u308b\u5024\u3092\u542b\u307f\u307e\u3059\u3002 if\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e`num in cache`\u306e\u6761\u4ef6\u306f`true`\u3068\u306a\u308a\u3001`\'From cache! 20\'`\u3092\u8fd4\u3057\u307e\u3059\u3002 \u3088\u3063\u3066`\'From cache! 20\'`\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\n3\u56de\u76ee\u306f\u3001`10`\u306b\u8a55\u4fa1\u3055\u308c\u308b\u95a2\u6570\u306b`5 * 2`\u3092\u6e21\u3057\u307e\u3059\u3002`cache`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f`10`\u306b\u5bfe\u3057\u3066\u8fd4\u3055\u308c\u308b\u5024\u3092\u542b\u307f\u307e\u3059\u3002if\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e`num in cache`\u306e\u6761\u4ef6\u306f`true`\u3068\u306a\u308a\u3001`\'From cache! 20\'`\u3092\u8fd4\u3057\u307e\u3059\u3002 \u3088\u3063\u3066`\'From cache! 20\'`\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":75,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"\u914d\u5217\u8981\u7d20\u306f\u4efb\u610f\u306e\u5024\u3092\u4fdd\u6301\u3067\u304d\u307e\u3059\u3002\u6570\u5024\u3001\u6587\u5b57\u5217\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u305d\u306e\u4ed6\u306e\u914d\u5217\u3001null\u3001\u30d6\u30fc\u30eb\u5024\u3001undefined\u3001\u304a\u3088\u3073\u65e5\u4ed8\u3001\u95a2\u6570\u3001\u8a08\u7b97\u306a\u3069\u306e\u305d\u306e\u4ed6\u306e\u5f0f\u3002\\n\\n\u8981\u7d20\u306f\u623b\u308a\u5024\u3068\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002`1 + 2`\u306f`3`\u3092\u8fd4\u3057\u3001`1 * 2`\u306f`2`\u3092\u8fd4\u3057\u3001`1 / 2`\u306f`0.5`\u3092\u8fd4\u3057\u307e\u3059\u3002","id":76,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"\u95a2\u6570\u306b\u5024\u304c\u6e21\u3055\u308c\u3066\u3044\u306a\u3044\u9650\u308a\u3001\u5f15\u6570\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`undefined`\u306e\u5024\u3092\u6301\u3061\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001`name`\u5f15\u6570\u306b\u5024\u3092\u6e21\u3055\u306a\u304b\u3063\u305f\u306e\u3067\u3001`name`\u306f`undefined`\u3068\u306a\u308a\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\nES6\u3067\u306f\u3001\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e`undefined`\u5024\u3092\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\n\u4e0a\u8a18\u306e\u5834\u5408\u3001\u5024\u3092\u6e21\u3055\u306a\u304b\u3063\u305f\u5834\u5408\u3084\u3001`undefined`\u3092\u6e21\u3057\u305f\u5834\u5408\u306f\u3001`name`\u306f\u5e38\u306b\u6587\u5b57\u5217`Lydia`\u3068\u306a\u308a\u307e\u3059\u3002","id":77,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u5024\u306f\u4f7f\u3046\u5834\u6240\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002 **\u30e1\u30bd\u30c3\u30c9**\u306e\u4e2d\u3067\u306f\u3001`getStatus`\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306b\u3001`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u306f _\u30e1\u30bd\u30c3\u30c9\u304c\u5c5e\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059_ \u3002\\n\\n\u30e1\u30bd\u30c3\u30c9\u306f`data`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3057\u3066\u3044\u308b\u306e\u3067\u3001`this`\u306f `data`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 `this.status`\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u3068\u3001`data`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`status`\u30d7\u30ed\u30d1\u30c6\u30a3\u306e`\\"\ud83e\udd51\\"`\u304c\u30ed\u30b0\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\\n\\n`call`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u53c2\u7167\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 **\u95a2\u6570**\u3067\u306f\u3001`this`\u30ad\u30fc\u30ef\u30fc\u30c9\u306f _\u305d\u306e\u95a2\u6570\u304c\u5c5e\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059_ \u3002 \\n\\n_\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067_ `setTimeout`\u95a2\u6570\u3092\u5ba3\u8a00\u3057\u305f\u306e\u3067\u3001`setTimeout`\u95a2\u6570\u5185\u3067\u306f\u3001 `this`\u30ad\u30fc\u30ef\u30fc\u30c9\u306f _\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8_ \u3092\u53c2\u7167\u3057\u307e\u3059\u3002\\n\\n\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4e0a\u306b\u306f\u3001\u5024`\\"\ud83d\ude0e\\"`\u3092\u6301\u3064 _status_ \u3068\u3044\u3046\u5909\u6570\u304c\u3042\u308a\u307e\u3059\u3002`this.status`\u3092\u51fa\u529b\u3059\u308b\u3068\u3001`\\"\ud83d\ude0e\\"`\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","id":78,"options":["`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` and `\\"\ud83d\ude0e\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"\u5909\u6570`city`\u306b\u3001`person`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`city`\u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f`city`\u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u306a\u3044\u306e\u3067\u3001\u5909\u6570`city`\u306f`undefined`\u306e\u5024\u3092\u6301\u3061\u307e\u3059\u3002\\n\\n\u6211\u3005\u306f`person`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u8eab\u3092\u53c2\u7167\u3057\u3066 _\u3044\u306a\u3044_ \u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002`person`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`city`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u3001\u5909\u6570`city`\u306b\u4ee3\u5165\u3059\u308b\u3060\u3051\u3067\u3059\u3002\\n\\n\u305d\u308c\u304b\u3089\u3001`city`\u306b\u3001\u6587\u5b57\u5217`\\"Amsterdam\\"`\u3092\u4ee3\u5165\u3057\u307e\u3059\u3053\u308c\u306f person\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5909\u66f4\u3057\u307e\u305b\u3093: \u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u306f\u3042\u308a\u307e\u305b\u3093\u3002\\n\\n`person`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u3068\u304d\u3001\u672a\u4fee\u6b63\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002","id":79,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"`const`\u3068`let`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6301\u3064\u5909\u6570\u306f _\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7_ \u3067\u3059\u3002\u30d6\u30ed\u30c3\u30af\u306f\u4e2d\u62ec\u5f27(`{ }`)\u3067\u56f2\u307e\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001if/else\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u304c\u4e2d\u62ec\u5f27\u3068\u306a\u308a\u307e\u3059\u3002\u5ba3\u8a00\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u5916\u5074\u3067\u5909\u6570\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002ReferenceError \u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059\u3002","id":80,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\u4f55\u304c\u51fa\u529b\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u304b\uff1f"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"2\u756a\u76ee\u306e`.then`\u306e`res`\u306e\u5024\u306f\u3001\u524d\u306e`.then`\u306e\u623b\u308a\u5024\u3068\u540c\u3058\u3068\u306a\u308a\u307e\u3059\u3002\u5024\u304c\u6b21\u306e\u30cf\u30f3\u30c9\u30e9\u306b\u6e21\u3055\u308c\u308b\u3088\u3046\u306b\u3001`.then`\u3092\u9023\u9396\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","id":81,"options":["`fetch`\u30e1\u30bd\u30c3\u30c9\u306e\u7d50\u679c","2\u56de\u76ee\u306e `fetch`\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c","\u524d\u306e`.then()`\u3067\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u7d50\u679c","\u5e38\u306b undefined."],"question":"\u3069\u306e\u3088\u3046\u306a\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u304b\uff1f"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"`!!name`\u3092\u4f7f\u3063\u3066\u3001`name`\u306e\u5024\u304c\u3001truthy\u304b falsey\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u3002name\u304ctruthy\u3067\u3042\u308a\u3001\u3053\u308c\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u3001`!name`\u306f`false`\u3092\u8fd4\u3057\u307e\u3059\u3002`!false`\uff08\u3053\u308c\u306f\u5b9f\u969b\u306b\u306f`!!name`\u3067\u3059\uff09\u306f`true`\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n`hasName`\u306b`name`\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u3001`getName`\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u3069\u3093\u306a\u5024\u3082`hasName`\u306b\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\u30d6\u30fc\u30eb\u5024`true`\u306f\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n`new Boolean(true)`\u306f\u3001\u30d6\u30fc\u30eb\u5024\u305d\u306e\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30e9\u30c3\u30d1\u30fc\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n`name.length`\u306f\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\u9577\u3055\u3092\u8fd4\u3057\u307e\u3059\u3002\u305d\u308c\u304c`true`\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002","id":82,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"\u5f15\u6570\u3068\u3057\u3066true\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u3069\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c`hasName`\u3092`true`\u306b\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3059\u304b\uff1f"}],"locale":"ja-JA"},{"isRTL":false,"language":"\ud83c\uddf7\ud83c\uddfa \u0420\u0443\u0441\u0441\u043a\u0438\u0439","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u0412\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u044b \u0441\u043f\u0435\u0440\u0432\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `name` \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `var`. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u043d\u044f\u0442\u0430 (\u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u043e\u0434 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0430 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0444\u0430\u0437\u044b \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f) \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `undefined` \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440\u0430 \u043f\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u043d\u0435 \u0434\u043e\u0439\u0434\u0435\u0442 \u0434\u043e \u0441\u0442\u0440\u043e\u0447\u043a\u0438, \u0433\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f. \u041c\u044b \u0435\u0449\u0435 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `name` \u043a\u043e\u0433\u0434\u0430 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0435\u0451 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0431\u0443\u0434\u0435\u0442 `undefined`.\\n\\n\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `let` (\u0438 `const`), \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u044e\u0442\u0441\u044f, \u043d\u043e \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 `var`, \u043d\u0435 <i>\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u044e\u0442\u0441\u044f</i>. \u0414\u043e\u0441\u0442\u0443\u043f \u043a \u043d\u0438\u043c \u043d\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438\u0445 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f (\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438). \u042d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \\"\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0435\u0440\u0442\u0432\u0430\u044f \u0437\u043e\u043d\u0430\\". \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u0434\u043e \u0442\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u043a\u0430\u043a \u043e\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b, JavaScript \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 `ReferenceError`.","id":0,"options":["`Lydia` \u0438 `undefined`","`Lydia` \u0438 `ReferenceError`","`ReferenceError` \u0438 `21`","`undefined` \u0438 `ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"\u0418\u0437-\u0437\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0432 JavaScript, \u0444\u0443\u043d\u043a\u0446\u0438\u044f `setTimeout` \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f _\u043f\u043e\u0441\u043b\u0435_ \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0446\u0438\u043a\u043b \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d. \u0422\u0430\u043a \u043a\u0430\u043a \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `i` \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u0431\u044b\u043b\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `var`, \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0439. \u0412 \u0446\u0438\u043a\u043b\u0435 \u043c\u044b \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `i` \u043d\u0430 `1`, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0443\u043d\u0430\u0440\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++`. \u041a \u043c\u043e\u043c\u0435\u043d\u0442\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `setTimeout` \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `i` \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u043e `3` \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435.\\n\\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `i` \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `let`. \u0422\u0430\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 (\u0430 \u0442\u0430\u043a\u0436\u0435 `const`) \u0438\u043c\u0435\u044e\u0442 \u0431\u043b\u043e\u0447\u043d\u0443\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 (\u0431\u043b\u043e\u043a \u044d\u0442\u043e \u0447\u0442\u043e \u0443\u0433\u043e\u0434\u043d\u043e \u043c\u0435\u0436\u0434\u0443 `{ }`). \u0421 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0435\u0439 `i` \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0438 \u043a\u0430\u0436\u0434\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043c\u043a\u043d\u0443\u0442\u043e \u0432 \u0441\u0432\u043e\u0435\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0446\u0438\u043a\u043b\u0430.","id":1,"options":["`0 1 2` \u0438 `0 1 2`","`0 1 2` \u0438 `3 3 3`","`3 3 3` \u0438 `0 1 2`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"\u0417\u0430\u043c\u0435\u0442\u044c, \u0447\u0442\u043e `diameter` \u044d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a `perimeter` \u044d\u0442\u043e \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f.\\n\\n\u0423 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `this` \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043e\u043a\u0440\u0443\u0436\u0430\u044e\u0449\u0443\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439! \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 `perimeter` \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `this` \u0443 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0435 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442 `shape`, \u0430 \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u044e\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, window).\\n\\n\u0423 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043d\u0435\u0442 \u043a\u043b\u044e\u0447\u0430 `radius`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `undefined`.","id":2,"options":["`20` \u0438 `62.83185307179586`","`20` \u0438 `NaN`","`20` \u0438 `63`","`NaN` \u0438 `63`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\u0423\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043b\u044e\u0441 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043e\u043f\u0435\u0440\u0430\u043d\u0434 \u043a \u0447\u0438\u0441\u043b\u0443. `true` \u044d\u0442\u043e `1`, \u0430 `false` \u044d\u0442\u043e `0`.\\n\\n\u0421\u0442\u0440\u043e\u043a\u0430 `\'Lydia\'` \u044d\u0442\u043e \\"\u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0435\\" \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043c\u044b \u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c \\"\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u044d\u0442\u043e \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043b\u043e\u0436\u043d\u044b\u043c\\"? \u041e\u0442\u0432\u0435\u0442: `false`.","id":3,"options":["`1` \u0438 `false`","`false` \u0438 `NaN`","`false` \u0438 `false`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438 (\u043a\u0440\u043e\u043c\u0435 Symbol). \u0418 \u0445\u043e\u0442\u044f \u043c\u044b \u043d\u0435 _\u043d\u0430\u0431\u0438\u0440\u0430\u0435\u043c_ \u0438\u0445 \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u043a\u0438, \u043e\u043d\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u043a\u0430\u043c \u043f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c.\\n\\nJavaScript \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u0442 (\u0438\u043b\u0438 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442) \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b. \u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043e\u043a JS \u0437\u0430\u043c\u0435\u0447\u0430\u0435\u0442 `[` \u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442 `]`. \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043e\u043d \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442 \u0442\u043e, \u0447\u0442\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u043a\u043e\u0431\u043e\u043a.\\n\\n`mouse[bird.size]`: \u0421\u043f\u0435\u0440\u0432\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f `bird.size`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `\\"small\\"`. `mouse[\\"small\\"]` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`.\\n\\n\u041d\u043e \u0441 \u0437\u0430\u043f\u0438\u0441\u044c\u044e \u0447\u0435\u0440\u0435\u0437 \u0442\u043e\u0447\u043a\u0443 \u0442\u0430\u043a \u043d\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442. \u0423 `mouse` \u043d\u0435\u0442 \u043a\u043b\u044e\u0447\u0430 `bird`. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, `mouse.bird` \u0440\u0430\u0432\u043d\u043e `undefined`. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c \u043a\u043b\u044e\u0447 `size`, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0442\u043e\u0447\u0435\u0447\u043d\u0443\u044e \u043d\u043e\u0442\u0430\u0446\u0438\u044e: `mouse.bird.size`. \u0422\u0430\u043a \u043a\u0430\u043a `mouse.bird` \u044d\u0442\u043e `undefined`, \u043c\u044b \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c `undefined.size`. \u042d\u0442\u043e \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c, \u0438 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0443 \u0442\u0438\u043f\u0430 `Cannot read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size`","`mouse[bird.size]`","`mouse[bird[\\"size\\"]]`","\u0412\u0441\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0432\u0430\u043b\u0438\u0434\u043d\u044b"],"question":"\u0427\u0442\u043e \u041d\u0415 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u0432\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f _\u0441\u0441\u044b\u043b\u043e\u0447\u043d\u044b\u043c\u0438_ \u0442\u0438\u043f\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\\n\\n\u0421\u043f\u0435\u0440\u0432\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `c` \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `d` \u0441\u0441\u044b\u043b\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0442\u043e\u0442 \u0436\u0435 \u043e\u0431\u044a\u0435\u043a\u0442, \u0447\u0442\u043e \u0438 `c`.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n\u041a\u043e\u0433\u0434\u0430 \u0442\u044b \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0448\u044c \u043e\u0434\u0438\u043d \u043e\u0431\u044a\u0435\u043a\u0442, \u0442\u043e \u0438\u0437\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0441\u0441\u044b\u043b\u043e\u043a, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0445 \u043d\u0430 \u044d\u0442\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442.","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` \u044d\u0442\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0444\u0443\u043d\u043a\u0446\u0438\u0438. \u0418 \u0445\u043e\u0442\u044f \u043e\u043d \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043a\u0430\u043a \u0447\u0438\u0441\u043b\u043e, \u044d\u0442\u043e \u043d\u0435 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0447\u0438\u0441\u043b\u043e: \u0443 \u043d\u0435\u0433\u043e \u0435\u0441\u0442\u044c \u0440\u044f\u0434 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0438\u0447 \u0438 \u044d\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442.\\n\\n\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `==` \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432, \u043e\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0440\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u043e _\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439_. \u041e\u0431\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0430\u0432\u043d\u044b `3`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `true`.\\n\\n\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `===` \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 _\u0438_ \u0442\u0438\u043f \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c\u0438. \u041d\u043e \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u043d\u0435 \u0442\u0430\u043a: `new Number()` \u044d\u0442\u043e \u043d\u0435 \u0447\u0438\u0441\u043b\u043e, \u044d\u0442\u043e **\u043e\u0431\u044a\u0435\u043a\u0442**. \u041e\u0431\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 `false`.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f `colorChange` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u043e\u0439. \u0421\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\u043c \u043a\u043b\u0430\u0441\u0441\u0430. \u0422\u0430\u043a \u043a\u0430\u043a `freddie` \u044d\u0442\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440, \u0442\u043e \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0442\u0430\u043c \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430 `TypeError`.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // \u041e\u043f\u0435\u0447\u0430\u0442\u043a\u0430!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"\u0412 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043c\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435! \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u043c\u0435\u0441\u0442\u043e `greeting` \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 `greetign`, \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 JS \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b `global.greetign = {}` (\u0438\u043b\u0438 `window.greetign = {}` \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435).\\n\\n\u041d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c `\\"use strict\\"`, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0442\u0430\u043a\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f. \u042d\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u044b\u043b\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430 \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0435\u0439 \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442.\u043a. \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b! (\u0412\u0441\u0451 \u0435\u0441\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u0440\u043e\u043c\u0435 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043e\u0432).\\n\\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u2014 \u044d\u0442\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0438\u043f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u2014 \u044d\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0442\u0430\u043a\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043d\u0435\u043b\u044c\u0437\u044f \u0432\u044b\u0437\u0432\u0430\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u043e \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439.","id":9,"options":["\u041d\u0438\u0447\u0435\u0433\u043e, \u0432\u0441\u0451 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435!","`SyntaxError`. \u041d\u0435\u043b\u044c\u0437\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c \u0442\u0430\u043a\u0438\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c.","`undefined`","`ReferenceError`"],"question":"\u0427\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function () {\\n  return `${this.firstName} ${this.lastName}`;\\n}\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"\u041d\u0435\u043b\u044c\u0437\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0443, \u043a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443. \u0415\u0441\u043b\u0438 \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0438\u0447\u0443 \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c, \u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u044b. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435\\n\\n```js\\nPerson.prototype.getFullName = function () {\\n  return `${this.firstName} ${this.lastName}`;\\n}\\n```\\n\\n\u0441\u0434\u0435\u043b\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 `member.getFullName()` \u0440\u0430\u0431\u043e\u0447\u0438\u043c. \u0412 \u0447\u0435\u043c \u0442\u0443\u0442 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e? \u041f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c, \u0447\u0442\u043e \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043a \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0443. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043d\u0435 \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0443 `Person` \u043d\u0443\u0436\u0435\u043d \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043f\u043e\u0442\u0435\u0440\u044f\u043c \u043f\u0430\u043c\u044f\u0442\u0438, \u0442.\u043a. \u0432\u0441\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u044d\u0442\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e. \u041d\u0430\u043f\u0440\u043e\u0442\u0438\u0432, \u0435\u0441\u043b\u0438 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0442\u043e\u043b\u044c\u043a\u043e \u043a \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0443, \u0443 \u043d\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u043c\u0435\u0441\u0442\u043e \u0432 \u043f\u0430\u043c\u044f\u0442\u0438, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0441\u043c\u043e\u0433\u0443\u0442 \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"\u0414\u043b\u044f `sarah` \u043c\u044b \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `new`. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 `new` \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041d\u043e \u0431\u0435\u0437 `new` \u043e\u043d \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 **\u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442**!\\n\\n\u041c\u044b \u0443\u043a\u0430\u0437\u0430\u043b\u0438, \u0447\u0442\u043e `this.firstName` \u0440\u0430\u0432\u043d\u043e `\\"Sarah\\"` \u0438 `this.lastName` \u0440\u0430\u0432\u043d\u043e `\\"Smith\\"`. \u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 `global.firstName = \'Sarah\'` \u0438 `global.lastName = \'Smith\'`. `sarah` \u043e\u0441\u0442\u0430\u043b\u0430\u0441\u044c `undefined`, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `Person`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0438 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0438 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0438 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0438 `ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":3,"explanation":"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0444\u0430\u0437\u044b **\u0437\u0430\u0445\u0432\u0430\u0442\u0430** \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0434\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0446\u0435\u043b\u0438. \u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u044f **\u0446\u0435\u043b\u0438** \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u0437\u0430 **\u0432\u0441\u043f\u043b\u044b\u0442\u0438\u044f**.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["\u0426\u0435\u043b\u044c > \u0417\u0430\u0445\u0432\u0430\u0442 > \u0412\u0441\u043f\u043b\u044b\u0442\u0438\u0435","\u0412\u0441\u043f\u043b\u044b\u0442\u0438\u0435 > \u0426\u0435\u043b\u044c > \u0417\u0430\u0445\u0432\u0430\u0442","\u0426\u0435\u043b\u044c > \u0412\u0441\u043f\u043b\u044b\u0442\u0438\u0435 > \u0417\u0430\u0445\u0432\u0430\u0442","\u0417\u0430\u0445\u0432\u0430\u0442 > \u0426\u0435\u043b\u044c > \u0412\u0441\u043f\u043b\u044b\u0442\u0438\u0435"],"question":"\u041d\u0430\u0437\u043e\u0432\u0438\u0442\u0435 \u0442\u0440\u0438 \u0444\u0430\u0437\u044b \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u0439"},{"answer":1,"explanation":"\u0412\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u044b, \u043a\u0440\u043e\u043c\u0435 **\u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430**. \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u043c\u0435\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u0434\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a `.toString`. \u0418\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b JavaScript! \u0412\u0441\u0435 \u044d\u0442\u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0435. \u0415\u0441\u043b\u0438 JavaScript \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0439\u0442\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043e\u043d \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u043e\u0432 \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442.","id":13,"options":["\u0414\u0430","\u041d\u0435\u0442"],"question":"\u0412\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u044b"},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript \u044d\u0442\u043e **\u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0442\u0438\u043f\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u044f\u0437\u044b\u043a**: \u043c\u044b \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0438\u043f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0431\u0435\u0437 \u043d\u0430\u0448\u0435\u0433\u043e \u0443\u0447\u0430\u0441\u0442\u0438\u044f, \u0447\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f _\u043d\u0435\u044f\u0432\u043d\u044b\u043c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043c \u0442\u0438\u043f\u043e\u0432_. **\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435** \u044d\u0442\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439.\\n\\n\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 JavaScript \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b \u0447\u0438\u0441\u043b\u043e `1` \u0432 \u0441\u0442\u0440\u043e\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438\u043c\u0435\u043b\u0430 \u0441\u043c\u044b\u0441\u043b \u0438 \u0432\u0435\u0440\u043d\u0443\u043b\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u0430 (`1`) \u0438 \u0441\u0442\u0440\u043e\u043a\u0438 (`\'2\'`) \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u043a\u0435. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u043e\u0442 \u0442\u0430\u043a: `\\"Hello\\" + \\"World\\"`. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, `\\"1\\" + \\"2\\"` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"**\u041f\u043e\u0441\u0442\u0444\u0438\u043a\u0441\u043d\u044b\u0439** \u0443\u043d\u0430\u0440\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++`:\\n\\n1. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (`0`)\\n2. \u0418\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (\u0442\u0435\u043f\u0435\u0440\u044c \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0432\u043d\u043e `1`)\\n\\n**\u041f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0439** \u0443\u043d\u0430\u0440\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++`:\\n\\n1. \u0418\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (\u0447\u0438\u0441\u043b\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u043d\u043e `2`)\\n2. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (`2`)\\n\\n\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043d\u044b\u0445 \u043b\u0438\u0442\u0435\u0440\u0430\u043b\u043e\u0432 \u043f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u041e\u0441\u0442\u0430\u0432\u0448\u0438\u043c\u0438\u0441\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0431\u0443\u0434\u0443\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"\u0422\u044b \u0432\u0437\u0440\u043e\u0441\u043b\u044b\u0439!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"\u0422\u044b \u0432\u0441\u0435 \u0435\u0449\u0435 \u0432\u0437\u0440\u043e\u0441\u043b\u044b\u0439.\\");\\n  } else {\\n    console.log(`\u0425\u043c\u043c.. \u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u0443 \u0442\u0435\u0431\u044f \u043d\u0435\u0442 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430.`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"\u0412 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u0445 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u044b \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043f\u043e \u0438\u0445 _\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c_, \u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043f\u043e _\u0441\u0441\u044b\u043b\u043a\u0430\u043c_. JavaScript \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 \u043d\u0430 \u043e\u0434\u043d\u0443 \u0438 \u0442\u0443 \u0436\u0435 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0430\u043c\u044f\u0442\u0438.\\n\\n\u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043d\u0435 \u0442\u0430\u043a\u0438\u0435: \u043e\u0431\u044a\u0435\u043a\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0430\u043c\u044f\u0442\u0438, \u0447\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f\u0445.\\n\\n\u041f\u043e\u044d\u0442\u043e\u043c\u0443 `{ age: 18 } === { age: 18 }` \u0438 `{ age: 18 } == { age: 18 }` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 `false`.","id":17,"options":["`\u0422\u044b \u0432\u0437\u0440\u043e\u0441\u043b\u044b\u0439!`","`\u0422\u044b \u0432\u0441\u0435 \u0435\u0449\u0435 \u0432\u0437\u0440\u043e\u0441\u043b\u044b\u0439.`","`\u0425\u043c\u043c.. \u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u0443 \u0442\u0435\u0431\u044f \u043d\u0435\u0442 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430.`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f (`...args`) \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438. \u041c\u0430\u0441\u0441\u0438\u0432 \u044d\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `typeof args` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"object\\"`.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `\\"use strict\\"`, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c, \u0447\u0442\u043e \u043c\u044b \u043f\u043e \u043e\u0448\u0438\u0431\u043a\u0435 \u043d\u0435 \u043f\u043e\u0431\u044a\u044f\u0432\u0438\u043c \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435. \u041c\u044b \u0440\u0430\u043d\u0435\u0435 \u043d\u0438\u0433\u0434\u0435 \u043d\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `age`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c `\\"use strict\\"` \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0435\u0442 `ReferenceError`. \u0411\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f `\\"use strict\\"` \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0435\u0442, \u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `age` \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u0441\u044f \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u0434, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 (\u043a\u0430\u043a \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435), \u0442\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435. \u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 `10 * 10 + 5` \u0432\u0435\u0440\u043d\u0435\u0442 \u0447\u0438\u0441\u043b\u043e `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"\u0427\u0435\u043c\u0443 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u043e `sum`?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"\u0414\u0430\u043d\u043d\u044b\u0435, \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u0432 `sessionStorage` \u043e\u0447\u0438\u0449\u0430\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f _\u0432\u043a\u043b\u0430\u0434\u043a\u0438_.\\n\\n\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 `localStorage` \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0432\u0441\u0435\u0433\u0434\u0430. \u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0438\u0445 \u043c\u043e\u0436\u043d\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `localStorage.clear()`.","id":21,"options":["\u0412\u0441\u0435\u0433\u0434\u0430, \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u043f\u043e\u0442\u0435\u0440\u044f\u044e\u0442\u0441\u044f.","\u041f\u043e\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u0432\u043a\u043b\u0430\u0434\u043a\u0443.","\u041f\u043e\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u0431\u0440\u0430\u0443\u0437\u0435\u0440, \u0430 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043a\u043b\u0430\u0434\u043a\u0443.","\u041f\u043e\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440."],"question":"\u041a\u0430\u043a \u0434\u043e\u043b\u0433\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d cool_secret?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `var` \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443\u0433\u043e\u0434\u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441 \u043e\u0434\u043d\u0438\u043c \u0438 \u0442\u0435\u043c \u0436\u0435 \u0438\u043c\u0435\u043d\u0435\u043c. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\\n\\n\u041d\u043e \u0442\u0430\u043a\u043e\u0439 \u0442\u0440\u044e\u043a \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u0442\u044c \u0441 `let` \u0438 `const`, \u0442.\u043a. \u0443 \u043d\u0438\u0445 \u0431\u043b\u043e\u0447\u043d\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"\u0412\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (\u043a\u0440\u043e\u043c\u0435 Symbols) \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0437\u0430\u0434\u0430\u043d\u044b \u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 `obj.hasOwnProperty(\'1\')` \u0442\u0430\u043a \u0436\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true.\\n\\n\u041d\u043e \u044d\u0442\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0434\u043b\u044f `set`. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f `\'1\'` \u043d\u0435\u0442 \u0432 `set`: `set.has(\'1\')` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`. \u041d\u043e `set.has(1)` \u0432\u0435\u0440\u043d\u0435\u0442 `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"\u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u043a\u043b\u044e\u0447\u0430 \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c, \u0442\u043e \u043a\u043b\u044e\u0447 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u043d. \u0415\u0433\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f, \u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"explanation":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f: \u044d\u0442\u043e \u0442\u043e, \u0447\u0442\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0433\u0434\u0435 \u0443\u0433\u043e\u0434\u043d\u043e \u0432 \u0442\u0432\u043e\u0435\u043c \u043a\u043e\u0434\u0435.","id":25,"options":["\u0414\u0430","\u041d\u0435\u0442","\u042d\u0442\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u0442"],"question":"\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0432\u0435 \u0432\u0435\u0449\u0438: \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438 `this`"},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `continue` \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044e, \u0435\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` \u044d\u0442\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430. \u042f \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0430 \u043c\u0435\u0442\u043e\u0434 \u043a \u0435\u0433\u043e \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0443. \u0421\u0442\u0440\u043e\u043a\u0438-\u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u044b \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u043a\u0430\u043c-\u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 (\u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b) \u0438\u043c\u0435\u044e\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u044d\u0442\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0443!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"\u041a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0438. \u041c\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0430 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 `a` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `123`.\\n\\n\u0422\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a \u0441\u0442\u0440\u043e\u043a\u0435, \u043e\u043d \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f `\\"[object Object]\\"`. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043c, \u0447\u0442\u043e `a[\\"object Object\\"] = 123`. \u041f\u043e\u0442\u043e\u043c \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435. `c` \u044d\u0442\u043e \u0434\u0440\u0443\u0433\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043d\u0435\u044f\u0432\u043d\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043a \u0441\u0442\u0440\u043e\u043a\u0435. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 `a[\\"object Object\\"] = 456`.\\n\\n\u0417\u0430\u0442\u0435\u043c, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0432\u043e\u0434\u0438\u043c `a[b]`, \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u0432 \u0432\u0438\u0434\u0443 `a[\\"object Object\\"]`. \u041c\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \u0442\u0443\u0434\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `456`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"\u041c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `setTimeout` \u043f\u0435\u0440\u0432\u043e\u0439. \u0422\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435, \u043e\u043d\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439\\n\\n\u042d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430\u0445 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u043d\u0442\u0430\u0439\u043c \u0434\u0432\u0438\u0436\u043e\u043a, \u043d\u043e \u0438 `WebAPI`. `WebAPI` \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `setTimeout` \u0438 \u043c\u043d\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, DOM.\\n\\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a _\u043a\u043e\u043b\u043b\u0431\u0435\u043a_ \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u0432 `WebAPI`, \u0444\u0443\u043d\u043a\u0446\u0438\u044f `setTimeout` (\u043d\u043e \u043d\u0435 \u043a\u043e\u043b\u043b\u0431\u0435\u043a!) \u0432\u044b\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u0442\u0435\u043a\u0430.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f `foo`, \u0438 `\\"First\\"` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` \u0434\u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u0442\u0435\u043a\u0430, \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f `baz`. `\\"Third\\"` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432 \u0441\u0442\u0435\u043a \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u0445\u043e\u0447\u0435\u0442. \u0412\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u043e\u043d \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043b\u043b\u0431\u0435\u043a-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432 \u0442\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u0443\u044e _\u043e\u0447\u0435\u0440\u0435\u0434\u044c_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\u0417\u0434\u0435\u0441\u044c \u043d\u0430 \u0441\u0446\u0435\u043d\u0443 \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0446\u0438\u043a\u043b \u0441\u043e\u0431\u044b\u0442\u0438\u0439 (event loop). **Event loop** \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0442\u0435\u043a \u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0437\u0430\u0434\u0430\u0447. \u0415\u0441\u043b\u0438 \u0441\u0442\u0435\u043a \u043f\u0443\u0441\u0442\u043e\u0439, \u0442\u043e \u043e\u043d \u0431\u0435\u0440\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u0441\u0442\u0435\u043a.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f `bar`, \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f `\\"Second\\"` \u0438 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u0442\u0435\u043a\u0430.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      \u041a\u043b\u0438\u043a\u043d\u0438!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\u0426\u0435\u043b\u044c\u044e \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0430\u043c\u044b\u0439 \u0433\u043b\u0443\u0431\u043e\u043a\u0438\u0439 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442. \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u043c\u043e\u0436\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `event.stopPropagation`","id":30,"options":["\u0412\u043d\u0435\u0448\u043d\u0438\u0439 `div`","\u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 `div`","`button`","\u041c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 event.target \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u0438\u043a\u0430 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    \u041a\u043b\u0438\u043a\u043d\u0438 \u043c\u0435\u043d\u044f!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"\u041f\u043e\u0441\u043b\u0435 \u043a\u043b\u0438\u043a\u0430 \u043f\u043e `p` \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u043e `p` \u0438 `div`. \u0412 \u0446\u0438\u043a\u043b\u0435 \u0436\u0438\u0437\u043d\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0435\u0441\u0442\u044c \u0442\u0440\u0438 \u0444\u0430\u0437\u044b: \u0437\u0430\u0445\u0432\u0430\u0442, \u0446\u0435\u043b\u044c \u0438 \u0432\u0441\u043f\u043b\u044b\u0442\u0438\u0435. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0430 \u0444\u0430\u0437\u0435 \u0432\u0441\u043f\u043b\u044b\u0442\u0438\u044f (\u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `useCapture` \u0432 `true`). \u0412\u0441\u043f\u043b\u044b\u0442\u0438\u0435 \u0438\u0434\u0435\u0442 \u0441 \u0441\u0430\u043c\u043e\u0433\u043e \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432\u0432\u0435\u0440\u0445.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u0438\u043a\u0430 \u043f\u043e \u043f\u0430\u0440\u0430\u0433\u0440\u0430\u0444\u0443?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"\u0412 \u043e\u0431\u043e\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c `this`. \u041d\u043e `.call` _\u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u0440\u0430\u0437\u0443 \u0436\u0435_!\\n\\n`.bind` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 _\u043a\u043e\u043f\u0438\u044e_ \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043d\u043e \u0441 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043e\u043c. \u041e\u043d\u0430 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0437\u0430\u043c\u0435\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f `sayHi` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0438\u0437 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f (IIFE). \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `0` \u0442\u0438\u043f\u0430 `\\"number\\"`.\\n\\n\u0414\u043b\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438: \u0432 JS 8 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol` \u0438 `bigint`. `\\"function\\"` \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0438\u043f\u043e\u043c, \u0442.\u043a. \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438 \u0442\u0438\u043f\u0430 `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"\u0415\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0448\u0435\u0441\u0442\u044c \\"\u043b\u043e\u0436\u043d\u044b\u0445\\" \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (\u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430)\\n- `false`\\n\\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a `new Number` \u0438 `new Boolean` \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \\"\u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c\u0438\\".","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","\u0412\u0441\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \\"\u043b\u043e\u0436\u043d\u044b\u043c\u0438\\""],"question":"\u041a\u0430\u043a\u0438\u0435 \u0438\u0437 \u044d\u0442\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \\"\u043b\u043e\u0436\u043d\u044b\u043c\u0438\\"?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"number\\"`.\\n`typeof \\"number\\"` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"\u041a\u043e\u0433\u0434\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u0434\u043b\u0438\u043d\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430, JavaScript \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u044b\u0435 \\"\u043f\u0443\u0441\u0442\u044b\u0435 \u044f\u0447\u0435\u0439\u043a\u0438\\". \u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043e\u043d\u0438 \u0438\u043c\u0435\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f `undefined`, \u043d\u043e \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0432\u044b\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0442\u0430\u043a:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\n\u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f (\u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u0432, Node, \u0438 \u0442.\u0434.).","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"\u0411\u043b\u043e\u043a `catch` \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `x`. \u042d\u0442\u043e \u043d\u0435 \u0442\u043e\u0442 \u0436\u0435 `x`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0434 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 `try {`\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u044d\u0442\u043e\u043c\u0443 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `1` \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `y`. \u041f\u043e\u0442\u043e\u043c \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 `x`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `1`.\\n\\n\u0417\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0431\u043b\u043e\u043a\u0430 `catch` \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `x` \u0432\u0441\u0435 \u0435\u0449\u0435 `undefined`, \u0430 `y` \u0440\u0430\u0432\u043d\u043e `2`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c `console.log(x)` \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0431\u043b\u043e\u043a\u0430 `catch`, \u044d\u0442\u043e\u0442 \u0432\u044b\u0437\u043e\u0432 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `undefined`, \u0430 `y` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?"},{"answer":0,"explanation":"\u0412 JavaScript \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u044b \u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b.\\n\\n\u0422\u0438\u043f\u044b \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043e\u0432: `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, \u0438 `symbol`.\\n\\n\u041e\u0442\u043b\u0438\u0447\u0438\u0435\u043c \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u0430 \u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e, \u0447\u0442\u043e \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u044b \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u0438\u043b\u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432. \u0422\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435, `\'foo\'.toUpperCase()` \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0432 `\'FOO\'` \u0438 \u043d\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 `TypeError`. \u042d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u0443 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u0442\u0440\u043e\u043a\u0438), JavaScript \u043d\u0435\u044f\u0432\u043d\u043e \u043e\u0431\u0435\u0440\u043d\u0435\u0442 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u0434\u0438\u043d \u0438\u0437 \u043a\u043b\u0430\u0441\u0441\u043e\u0432-\u043e\u0431\u0435\u0440\u0442\u043e\u043a (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, `String`), \u0430 \u0437\u0430\u0442\u0435\u043c \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0438\u0442 \u043e\u0431\u0435\u0440\u0442\u043a\u0443 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f. \u0412\u0441\u0435 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u044b \u043a\u0440\u043e\u043c\u0435 `null` \u0438 `undefined` \u0432\u0435\u0434\u0443\u0442 \u0441\u0435\u0431\u044f \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.","id":38,"options":["\u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442","\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442","\u0432\u043e\u043f\u0440\u043e\u0441 \u0441 \u043f\u043e\u0434\u0432\u043e\u0445\u043e\u043c! \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b","\u0447\u0438\u0441\u043b\u043e \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442"],"question":"\u0412\u0441\u0451 \u0432 JavaScript \u044d\u0442\u043e"},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` - \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `acc`. \u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0445\u043e\u0434\u0430 `acc` \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u043e `[1,2]`, \u0430 `cur` \u0431\u0443\u0434\u0435\u0442 `[0,1]`. \u041f\u043e\u0441\u043b\u0435 \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 `[1, 2, 0, 1]`.\\n\\n\u0417\u0430\u0442\u0435\u043c `acc` \u0440\u0430\u0432\u043d\u043e `[1, 2, 0, 1]`, \u0430 `cur` \u0440\u0430\u0432\u043d\u043e `[2, 3]`. \u041f\u043e\u0441\u043b\u0435 \u0441\u043b\u0438\u044f\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043c `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` - \\"\u043b\u043e\u0436\u043d\u044b\u0439\\". `!null` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`. `!true` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`.\\n\\n`\\"\\"` - \\"\u043b\u043e\u0436\u043d\u044b\u0439\\". `!\\"\\"` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`. `!true` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`.\\n\\n`1` - \\"\u0438\u0441\u0442\u0438\u043d\u043d\u044b\u0439\\". `!1` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`. `!false` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"\u042d\u0442\u043e \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 id. \u042d\u0442\u043e\u0442 id \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u0434\u043b\u044f \u043e\u0447\u0438\u0449\u0435\u043d\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `clearInterval()`.","id":41,"options":["\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 id","\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434","\u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e","`undefined`"],"question":"\u0427\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 `setInterval`?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"\u0421\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c\u044e. \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"\u041e\u0431\u044b\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u043d\u0430 \u043f\u043e\u043b\u043f\u0443\u0442\u0438 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0437\u043e\u0432\u0430. \u041e\u0434\u043d\u0430\u043a\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043c\u043e\u0436\u043d\u043e \\"\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\\" \u043d\u0430 \u043f\u043e\u043b\u043f\u0443\u0442\u0438, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0441 \u0442\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430, \u0433\u0434\u0435 \u043e\u043d\u0430 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0430\u0441\u044c. \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield`, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0433\u043e. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435 _return_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u043d\u043e _yields_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\\n\\n\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0441 `i`, \u0440\u0430\u0432\u043d\u044b\u043c `10`. \u041c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 `next ()`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432 \u043f\u0435\u0440\u0432\u044b\u0439 \u0440\u0430\u0437 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430, `i` \u0440\u0430\u0432\u043d\u043e `10`. \u041e\u043d \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield`, \u043f\u043e\u043b\u0443\u0447\u0430\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `i`. \u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0442\u0435\u043f\u0435\u0440\u044c \\"\u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\\", \u0438 `10` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0441\u043d\u043e\u0432\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `next ()`. \u041e\u043d\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441 \u0442\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430, \u0433\u0434\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0430\u0441\u044c \u0440\u0430\u043d\u0435\u0435, \u0432\u0441\u0435 \u0435\u0449\u0435 \u0441 `i`, \u0440\u0430\u0432\u043d\u044b\u043c `10`. \u0422\u0435\u043f\u0435\u0440\u044c \u043e\u043d \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield` \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `i * 2`. `i` \u0440\u0430\u0432\u043d\u043e `10`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `10 * 2`, \u0442\u043e \u0435\u0441\u0442\u044c `20`. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a 10, 20.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"\u043e\u0434\u0438\u043d\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"\u0434\u0432\u0430\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432 \u043c\u0435\u0442\u043e\u0434\u0443 `Promise.race`, \u043e\u043d \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442/\u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0435\u0442 _\u043f\u0435\u0440\u0432\u044b\u0439_ \u043f\u0440\u043e\u043c\u0438\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f/\u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0435\u0442\u0441\u044f. \u0412 \u043c\u0435\u0442\u043e\u0434 `setTimeout` \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0442\u0430\u0439\u043c\u0435\u0440: 500 \u043c\u0441 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u043c\u0438\u0441\u0430 (`firstPromise`) \u0438 100 \u043c\u0441 \u0434\u043b\u044f \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0440\u043e\u043c\u0438\u0441\u0430 (`secondPromise`). \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e `secondPromise` \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u043c \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `\'\u0434\u0432\u0430\'`. `res` \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `\'\u0434\u0432\u0430\'`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.","id":44,"options":["`\\"\u043e\u0434\u0438\u043d\\"`","`\\"\u0434\u0432\u0430\\"`","`\\"\u0434\u0432\u0430\\" \\"\u043e\u0434\u0438\u043d\\"`","`\\"\u043e\u0434\u0438\u043d\\" \\"\u0434\u0432\u0430\\"`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `person` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e` name`.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `members`. \u041c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044d\u0442\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0440\u0430\u0432\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `person`. \u041e\u0431\u044a\u0435\u043a\u0442\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c _\u0441\u0441\u044b\u043b\u043e\u043a_ \u043f\u0440\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u0438\u0445 \u0440\u0430\u0432\u043d\u044b\u043c\u0438 \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443. \u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u043d\u0430\u0437\u043d\u0430\u0447\u0430\u0435\u0442\u0435 \u0441\u0441\u044b\u043b\u043a\u0443 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e, \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0435 _\u043a\u043e\u043f\u0438\u044e_ \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0438. (\u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0443 \u043d\u0438\u0445 _\u043d\u0435 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435_ \u0441\u0441\u044b\u043b\u043a\u0438!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `person` \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\n\u041c\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `person`, \u0430 \u043d\u0435 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043c\u0435\u0435\u0442 \u0434\u0440\u0443\u0433\u0443\u044e (\u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e) \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442. \u041f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 `members` \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043c\u0430\u0441\u0441\u0438\u0432 `members`, \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0446\u0438\u043a\u043b\u0430 `for-in` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c \u043a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 `name` \u0438 `age`. \u041f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c \u043a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f Symbol). \u0412 \u043a\u0430\u0436\u0434\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `item` \u0440\u0430\u0432\u043d\u044b\u043c \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u043a\u043b\u044e\u0447\u0443, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u043d \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f. \u0421\u043d\u0430\u0447\u0430\u043b\u0430, `item` \u0440\u0430\u0432\u0435\u043d `name`, \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u0417\u0430\u0442\u0435\u043c `item` \u0440\u0430\u0432\u0435\u043d `age`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"\u0410\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 - \u044d\u0442\u043e \u043f\u043e\u0440\u044f\u0434\u043e\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0441\u043b\u0435\u0432\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043e \u0438\u043b\u0438 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0430\u043b\u0435\u0432\u043e. \u042d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0432\u0441\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u0438\u043c\u0435\u044e\u0442 _\u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439_ \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442. \u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0442\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430: `+`. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441\u043b\u0435\u0432\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043e.\\n\\n`3 + 4` \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u043c. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u0447\u0438\u0441\u043b\u0443 `7`.\\n\\n`7 + \'5\'` \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `\\"75\\"` \u0438\u0437-\u0437\u0430 \u043f\u0440\u0438\u043d\u0443\u0436\u0434\u0435\u043d\u0438\u044f. JavaScript \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e `7` \u0432 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043c. \u0432\u043e\u043f\u0440\u043e\u0441 15. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `+`. `\\"7\\" + \\"5\\"` \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"\u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0432\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f. \u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 _\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f_ (\u0432\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442, \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c, \u043a \u043a\u0430\u043a\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0447\u0438\u0441\u0435\u043b \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0435\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c: \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 10, \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0435, \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u0435, \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u0435 \u0438 \u0442.\u0434.), `ParseInt` \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c\u0438. \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u043d \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u0432 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438, \u043e\u043d \u043f\u0440\u0435\u043a\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0438 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b.\\n\\n`*` \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c. \u041e\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 `\\"7\\"` \u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0443\u044e `7`. `num` \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435` 7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 map, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num` \u0440\u0430\u0432\u043d\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443, \u043d\u0430\u0434 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043e\u043d \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0437\u0430\u0446\u0438\u043a\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u0430\u043c\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 if `typeof num === \\"number\\"` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`. \u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439.\\n\\n\u041e\u0434\u043d\u0430\u043a\u043e \u043c\u044b \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `undefined`. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0431\u043b\u043e\u043a, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = 1998;\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f _\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c_, \u0435\u0441\u043b\u0438 \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c, \u0442\u043e \u043e\u043d\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f _\u0441\u0441\u044b\u043b\u043a\u043e\u0439_. `birthYear` \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430, \u0430 \u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f _\u043a\u043e\u043f\u0438\u044f_ \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (\u0441\u043c. \u0432\u043e\u043f\u0440\u043e\u0441 46).\\n\\n\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `birthYear` \u0438\u043c\u0435\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `\\"1997\\"`. \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `year` \u0442\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435` \\"1997\\" `, \u043d\u043e \u044d\u0442\u043e \u043d\u0435 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0441\u0441\u044b\u043b\u043a\u0430 \u0434\u043b\u044f `birthYear`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `year`, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044f `year` \u0440\u0430\u0432\u043d\u044b\u043c `\\"1998\\"`, \u043c\u044b \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `year`. `birthYear` \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e `\\"1997\\"`.\\n\\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `person` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c. \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `member` \u0438\u043c\u0435\u0435\u0442 (\u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e) \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 _\u0442\u043e\u0442 \u0436\u0435_ \u043e\u0431\u044a\u0435\u043a\u0442. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 `member` \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `person` \u0442\u0430\u043a\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043e, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u043d\u0438 \u043e\u0431\u0430 \u0438\u043c\u0435\u044e\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u043e\u0431\u044a\u0435\u043a\u0442. \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e `name` \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `person` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error:\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `throw` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438. \u0421 \u044d\u0442\u0438\u043c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c <b>\u0441\u0442\u0440\u043e\u043a\u0430</b>, <b>\u0447\u0438\u0441\u043b\u043e</b>, <b>\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435</b> \u0438\u043b\u0438 <b>\u043e\u0431\u044a\u0435\u043a\u0442</b>. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u0448\u0438\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 `\'Hello world\'`.\\n\\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `catch` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c, \u0435\u0441\u043b\u0438 \u0432 \u0431\u043b\u043e\u043a\u0435` try` \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435. \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435: \u0441\u0442\u0440\u043e\u043a\u0430 `\'Hello world\'`. `e` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u043d\u043e \u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `\'Oh no an error: Hello world\'`.","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"\u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0440\u0430\u0432\u043d\u043e _\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u043c\u0443_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0430 \u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430. \u041c\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 `\\"Maserati\\"`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `myCar.make` \u0440\u0430\u0432\u043d\u043e `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c \u0434\u043b\u044f:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c `y` \u0440\u0430\u0432\u043d\u044b\u043c` 10`, \u043c\u044b \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `y` \u043a \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443 (`window` \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435, `global` \u0432 Node). \u0412 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 `window.y` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u0435\u043d` 10`.\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `x` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `y`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `10`. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `let`, \u0438\u043c\u0435\u044e\u0442 _\u0431\u043b\u043e\u0447\u043d\u0443\u044e \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c_, \u043e\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0431\u043b\u043e\u043a\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u044b; \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f (IIFE) \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `typeof`, \u043e\u043f\u0435\u0440\u0430\u043d\u0434 `x` \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d: \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a `x` \u0432\u043d\u0435 \u0431\u043b\u043e\u043a\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e `x` \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u043e \u0438\u043b\u0438 \u043d\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0438\u043c\u0435\u044e\u0442 \u0442\u0438\u043f `\\"undefined\\"`. `console.log(typeof x)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"undefined\\"`.\\n\\n\u041e\u0434\u043d\u0430\u043a\u043e \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `y`, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0432 `y` \u0440\u0430\u0432\u043d\u044b\u043c `10`. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432 \u043b\u044e\u0431\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043d\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0434\u0430. `y` \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 `\\"number\\"`. `console.log(typeof y)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\u041a\u0430\u043a\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u0437 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `delete`, \u0442\u0430\u043a\u0436\u0435 \u0432 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0435. \u0423\u0434\u0430\u043b\u044f\u044f \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0432 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0435, \u043e\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u043e\u0432. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f `bark` \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0432 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0435 \u043f\u043e\u0441\u043b\u0435`delete Dog.prototype.bark`, \u043d\u043e \u043c\u044b \u0432\u0441\u0435 \u0435\u0449\u0435 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a \u043d\u0435\u0439 \u0434\u043e\u0441\u0442\u0443\u043f.\\n\\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0447\u0442\u043e-\u0442\u043e, \u0447\u0442\u043e \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f `TypeError`. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 `TypeError: pet.bark \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439`, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443` pet.bark` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"\u041e\u0431\u044a\u0435\u043a\u0442 `Set` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0435\u0439 _unique_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439: \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0432 \u043d\u0430\u0431\u043e\u0440\u0435.\\n\\n\u041c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c `[1, 1, 2, 3, 4]` \u0441 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u043c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `1`. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u0432\u0443\u0445 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043e\u0434\u043d\u043e \u0438\u0437 \u043d\u0438\u0445 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f _read-only_: \u0432\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c. \u0422\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0443\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0445 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442, \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\\n\\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `myCounter`, \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430: `myCounter` \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `delete` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: `true` \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438, \u0438\u043d\u0430\u0447\u0435 \u043e\u043d \u0432\u0435\u0440\u043d\u0435\u0442 `false`. \u041e\u0434\u043d\u0430\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `var`,` const` \u0438\u043b\u0438 `let`, \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430` delete`.\\n\\n\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `name` \u0431\u044b\u043b\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0430 \u200b\u200b\u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `const`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0435\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u044b\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u043c: \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `false`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c `age` \u0440\u0430\u0432\u043d\u044b\u043c `21`, \u043c\u044b \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `age` \u043a \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u0437 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0438\u0437 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `delete age` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0438\u043b\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u0438\u0437 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043f\u0443\u0442\u0435\u043c \u0434\u0435\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `a` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u043d\u043e `1`, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `b` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u043d\u043e `2`. \u0427\u0442\u043e \u043c\u044b \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u0432 \u044d\u0442\u043e\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u0435, \u0442\u0430\u043a \u044d\u0442\u043e:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\n\u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `y` \u0440\u0430\u0432\u043d\u043e \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c` 1`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c `y`, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `1`.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"\u041c\u043e\u0436\u043d\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f `...`. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u043e\u043f\u0438\u0438 \u043f\u0430\u0440 \u043a\u043b\u044e\u0447/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u0445 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043e\u043f\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `user` \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0438\u0445 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442 `admin`. \u041e\u0431\u044a\u0435\u043a\u0442 `admin` \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u043a\u043b\u044e\u0447/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0447\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `{admin: true, name: \\"Lydia\\", age: 21}`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `defineProperty` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `defineProperty`, \u043e\u043d\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e _\u043d\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435_. \u041c\u0435\u0442\u043e\u0434 `Object.keys` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0438\u043c\u0435\u043d\u0430 _enumerable_ \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0442\u043e\u043b\u044c\u043a\u043e `\\"name\\"`.\\n\\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `defineProperty`, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u043d\u044b. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u044d\u0442\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `writable`, `configurable` \u0438 `enumerable`. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u0435\u0442\u043e\u0434 `defineProperty` \u0434\u0430\u0435\u0442 \u0432\u0430\u043c \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u043d\u0430\u0434 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"\u0412\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `JSON.stringify` - \u044d\u0442\u043e _replacer_. \u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u043b\u0438\u0431\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c, \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0447\u0442\u043e \u0438 \u043a\u0430\u043a \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\\n\\n\u0415\u0441\u043b\u0438 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0435\u043b\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f _\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c_, \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430, \u0438\u043c\u0435\u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432, \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 JSON. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 `\\"level\\"` \u0438 `\\"health\\"`, `\\"username\\"` \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f. `data` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u0435\u043d `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\n\u0415\u0441\u043b\u0438 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0435\u043b\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f _function_, \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0435. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0438\u0437 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0431\u0443\u0434\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 JSON. \u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0432\u043d\u043e undefined, \u044d\u0442\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 JSON.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"\u0423\u043d\u0430\u0440\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++` _first \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430, _then \u043f\u0440\u0438\u0440\u0430\u0449\u0438\u0432\u0430\u0435\u0442_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num1` \u0440\u0430\u0432\u043d\u043e `10`, \u0442\u0430\u043a \u043a\u0430\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0439 \u0432\u043d\u0430\u0447\u0430\u043b\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `10`, \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u0442\u0435\u043c \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num`.\\n\\n`num2` - \u044d\u0442\u043e `10`, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 `num1` \u0432 `incpasePassedNumber`. `number` \u0440\u0430\u0432\u043d\u043e `10` (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num1`. \u041e\u043f\u044f\u0442\u044c \u0436\u0435, \u0443\u043d\u0430\u0440\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++` _first \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430, _then \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `number` \u0440\u0430\u0432\u043d\u043e `10`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `num2` \u0440\u0430\u0432\u043d\u043e `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"\u0412 ES6 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0431\u0443\u0434\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0435\u0441\u043b\u0438 \u043d\u0438\u043a\u0430\u043a\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0438\u043b\u0438 \u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0440\u0430\u0432\u043d\u043e `\\"undefined\\"`. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `value` \u043d\u0430 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `x` \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0430\u0432\u043d\u043e `{number: 10}`.\\n\\n\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 _call time_! \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f _new_ \u043e\u0431\u044a\u0435\u043a\u0442. \u041c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `multiply` \u043f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0430 \u0440\u0430\u0437\u0430, \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: `x` \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `{number: 10}`. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0443\u043c\u043d\u043e\u0436\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `20`.\\n\\n\u0412 \u0442\u0440\u0435\u0442\u0438\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c multiply, \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442: \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `value`. \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `*=` \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c \u0434\u043b\u044f `x.number = x.number * 2`: \u043c\u044b \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `x.number` \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0443\u043c\u043d\u043e\u0436\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `20`.\\n\\n\u0412 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439 \u0440\u0430\u0437 \u043c\u044b \u0441\u043d\u043e\u0432\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 `value`. `x.number` \u0440\u0430\u043d\u0435\u0435 \u0431\u044b\u043b \u0438\u0437\u043c\u0435\u043d\u0435\u043d \u043d\u0430 `20`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `x.number * = 2` \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"\u041f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 `reduce`, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f _\u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u043c_, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 `x`. \u0412\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 - \u044d\u0442\u043e _\u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435_, `y`. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `reduce` \u043c\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0447\u0442\u043e \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0438\u0442\u043e\u0433\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e.\\n\\n\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\\n\\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0440\u0430\u0432\u043d\u043e \u0440\u0430\u043d\u0435\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u0442\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `initialValue` \u043c\u0435\u0442\u043e\u0434\u0443 `reduce`, \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u0435\u043d \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435.\\n\\n\u041f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440 (`x`) \u0440\u0430\u0432\u0435\u043d `1`, \u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (`y`) \u0440\u0430\u0432\u043d\u043e `2`. \u041c\u044b \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u0441\u044f \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430, \u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: `1` \u0438 `2` \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f.\\n\\n\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `undefined`. \u041f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0440\u0430\u0432\u0435\u043d `undefined`, \u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0432\u043d\u043e 3. `undefined` \u0438 `3` \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b.\\n\\n\u041f\u0440\u0438 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u043c\u044b \u0441\u043d\u043e\u0432\u0430 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u0441\u044f \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430. \u0410\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0441\u043d\u043e\u0432\u0430 \u0440\u0430\u0432\u0435\u043d `undefined`, \u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0432\u043d\u043e `4`. `undefined` \u0438` 4` \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b.","id":64,"options":["`1` `2`, `3` `3` \u0438 `6` `4`","`1` `2`, `2` `3` \u0438 `3` `4`","`1` `undefined`, `2` `undefined`, `3` `undefined` \u0438 `4` `undefined`","`1` `2`, `undefined` `3` \u0438 `undefined` `4`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1\\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4\\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"\u0412 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 \u0432\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u043c\u0443 \u0441\u043b\u043e\u0432\u0443 `this` \u0434\u043e \u0432\u044b\u0437\u043e\u0432\u0430 `super`. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043e\u043d \u0432\u044b\u0434\u0430\u0441\u0442 ReferenceError: 1 \u0438 4 \u043f\u0440\u0438\u0432\u0435\u0434\u0443\u0442 \u043a \u043e\u0448\u0438\u0431\u043a\u0435 \u0441\u0441\u044b\u043b\u043a\u0438.\\n\\n\u0421 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `super` \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438. \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `name`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c `name` \u0432 `super`.\\n\\n\u041a\u043b\u0430\u0441\u0441 `Labrador` \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0432\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430: `name`, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u043d \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 `Dog`, \u0438 `size` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 `Labrador`. \u041e\u043d\u0438 \u043e\u0431\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 \u0432 `Labrador`, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 2.","id":65,"options":["1","2","3","4"],"question":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0430\u043a\u043e\u0433\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441 `Dog`?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"\u0421 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `import` \u0432\u0441\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f _pre-parsed_. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f _\u043f\u0435\u0440\u0432\u044b\u043c\u0438_, \u043a\u043e\u0434 \u0432 \u0444\u0430\u0439\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u043e\u0434\u0443\u043b\u044c, \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f _\u043f\u043e\u0441\u043b\u0435_.\\n\\n\u0412 \u044d\u0442\u043e\u043c \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 `require()` \u0432 CommonJS \u0438 `import`! \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `require()` \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044e \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0430. \u0415\u0441\u043b\u0438 \u0431\u044b \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 `require` \u0432\u043c\u0435\u0441\u0442\u043e `import`, \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0431\u044b\u043b\u0438 \u0431\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b `running index.js`, `running sum.js`, `3`.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"\u041a\u0430\u0436\u0434\u044b\u0439 `Symbol` \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u0435\u043d. \u0426\u0435\u043b\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e `Symbol`, \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0434\u0430\u0442\u044c `Symbol` \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `Symbol` \u043d\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u043e, \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0434\u0432\u0430 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u043d\u043e\u0432\u044b\u0445 `Symbol`: \u043f\u0435\u0440\u0432\u044b\u0439 `Symbol(\'foo\')` \u0438 \u0432\u0442\u043e\u0440\u043e\u0439 `Symbol(\'foo\')`. \u042d\u0442\u0438 \u0434\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b \u0438 \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443, `Symbol(\'foo\') === Symbol(\'foo\')` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `padStart` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0441\u0442\u0443\u043f \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0442\u0440\u043e\u043a\u0438. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0435 \u044d\u0442\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0443, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 _\u043e\u0431\u0449\u0443\u044e_ \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043e\u0442\u0441\u0442\u0443\u043f\u043e\u043c. \u0421\u0442\u0440\u043e\u043a\u0430 `\\"Lydia Hallie\\"` \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 `12`. `name.padStart(13)` \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 1 \u043f\u0440\u043e\u0431\u0435\u043b \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e 12 + 1 \u0440\u0430\u0432\u043d\u043e 13.\\n\\n\u0415\u0441\u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434\u0443 `padStart`, \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0438, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `+` \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 `\\"\ud83e\udd51\\"` \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439 `\\"\ud83d\udcbb\\"`, \u0447\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","\u0421\u0442\u0440\u043e\u043a\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0430\u044f \u043a\u043e\u0434\u043e\u0432\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","Error"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \\"\u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\\" \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u0432\u0438\u0434\u0438\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e yield. \u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u044b\u0434\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \\"Do you love JavaScript?\\", \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u0432\u044b\u0437\u0432\u0430\u0432 `game.next().value`.\\n\\n\u041a\u0430\u0436\u0434\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield`. \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0435\u0441\u0442\u044c \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield` \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u043c\u0435\u0441\u0442\u0435: \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u043f\u0435\u0440\u0432\u044b\u043c \u0432\u044b\u0445\u043e\u0434\u043e\u043c! _\u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `answer` \u0435\u0449\u0435 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430!_\\n\\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c `game.next(\\"Yes\\").value`, \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439 `yield` \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `next()`, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 `\\"Yes\\"`. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `answer` \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0432\u043d\u043e `\\"Yes\\"`. \u0423\u0441\u043b\u043e\u0432\u0438\u0435 if \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`, \u0430 `JavaScript loves you back \u2764\ufe0f`, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f.","id":70,"options":["`game.next(\\"Yes\\").value` \u0438 `game.next().value`","`game.next.value(\\"Yes\\")` \u0438 `game.next.value()`","`game.next().value` \u0438 `game.next(\\"Yes\\").value`","`game.next.value()` \u0438 `game.next.value(\\"Yes\\")`"],"question":"\u041a\u0430\u043a \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0432 \u043b\u043e\u0433 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 console.log?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b (`\\n`, `\\u000b`, `\\t` \u0438 \u0442.\u0434.) \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f! \u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u043a\u043e\u0441\u0430\u044f \u0447\u0435\u0440\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u0432\u0440\u043e\u0434\u0435:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\n\u0427\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\n\u0421 `String.raw` \u043e\u043d \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0437\u043d\u0430\u043a \u0438 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442:\\n\\n`C:DocumentsProjects\\table.html`\\n\\n\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0442\u0440\u043e\u043a\u0430 `Hello\\nworld`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435. `await` \u0432\u0441\u0435 \u0435\u0449\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0436\u0434\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u044f: \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c `getData()`, \u0447\u0442\u043e\u0431\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c `data` \u0440\u0430\u0432\u043d\u044b\u043c \u0435\u043c\u0443.\\n\\n\u0415\u0441\u043b\u0438 \u0431\u044b \u043c\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e `\\"I made it\\"`, \u043c\u044b \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `.then()` \u0434\u043b\u044f `data`:\\n\\n`data.then(res => console.log(res))`\\n\\n\u0422\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u0431\u044b \u0432\u044b\u0432\u0435\u043b\u043e `\\"I made it!\\"`","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"\u041c\u0435\u0442\u043e\u0434 `.push()` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 _\u0434\u043b\u0438\u043d\u0443_ \u043d\u043e\u0432\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430! \u0420\u0430\u043d\u0435\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043b \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442 (\u0441\u0442\u0440\u043e\u043a\u0430 `\\"banana\\"`) \u0438 \u0438\u043c\u0435\u043b \u0434\u043b\u0438\u043d\u0443 `1`. \u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a\u0438 `\\"apple\\"`, \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0432\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 `2`. \u042d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `addToList`.\\n\\n\u041c\u0435\u0442\u043e\u0434 `push` \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u0435\u0440\u043d\u0443\u0442\u044c _\u043c\u0430\u0441\u0441\u0438\u0432_ \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0430 \u043d\u0435 _\u0434\u043b\u0438\u043d\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0430_, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u043b\u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c `list` \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u043d\u0435\u0435 `item`.","id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` \u0434\u0435\u043b\u0430\u0435\u0442 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 (\u0435\u0441\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u0440\u0443\u0433\u0438\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c).\\n\\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `shape` \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0435\u0435 \u0440\u0430\u0432\u043d\u043e\u0439 \u0437\u0430\u043c\u043e\u0440\u043e\u0436\u0435\u043d\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443 `box`, `shape` \u0442\u0430\u043a\u0436\u0435 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0437\u0430\u043c\u043e\u0440\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0437\u0430\u043c\u043e\u0440\u043e\u0436\u0435\u043d \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `Object.isFrozen`. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 `Object.isFrozen(shape)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `shape` \u0438\u043c\u0435\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0437\u0430\u043c\u043e\u0440\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442.\\n\\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 `shape` \u0437\u0430\u043c\u043e\u0440\u043e\u0436\u0435\u043d, \u0438 \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `x` \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c, \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `x`. `x` \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e `10`, \u0438 `{x: 10, y: 20}` \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `name` \u0438\u0437 \u043f\u0440\u0430\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043c\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `\\"Lydia\\"` \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `myName`.\\n\\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `{name: myName}` \u043c\u044b \u0441\u043e\u043e\u0431\u0449\u0430\u0435\u043c JavaScript, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `myName` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `name` \u0432 \u043f\u0440\u0430\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u0438.\\n\\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c `name`, \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430, \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f ReferenceError.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"\u0427\u0438\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f - \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u0442 \u0436\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b.\\n\\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f `sum` \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u0415\u0441\u043b\u0438 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c `1` \u0438 `2`, \u043e\u043d \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u0435\u0440\u043d\u0435\u0442 `3` \u0431\u0435\u0437 \u043f\u043e\u0431\u043e\u0447\u043d\u044b\u0445 \u044d\u0444\u0444\u0435\u043a\u0442\u043e\u0432. \u0415\u0441\u043b\u0438 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c `5` \u0438 `10`, \u043e\u043d \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u0435\u0440\u043d\u0435\u0442 `15` \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435. \u042d\u0442\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.","id":76,"options":["\u0414\u0430","\u041d\u0435\u0442"],"question":"\u042d\u0442\u043e \u0447\u0438\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f `add` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 _\u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0442\u0435\u043b\u0435\u043c_. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0447\u0442\u043e\u0431\u044b \u0443\u0441\u043a\u043e\u0440\u0438\u0442\u044c \u0435\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 `cache`, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0440\u0430\u043d\u0435\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\\n\\n\u0415\u0441\u043b\u0438 \u043c\u044b \u0441\u043d\u043e\u0432\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `addFunction` \u0441 \u0442\u0435\u043c \u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c, \u043e\u043d\u0430 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e \u043b\u0438 \u043e\u043d\u043e \u0443\u0436\u0435 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0441\u0432\u043e\u0435\u043c \u043a\u0435\u0448\u0435. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u044d\u0448\u0430, \u0447\u0442\u043e \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0418\u043d\u0430\u0447\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d \u043d\u0435 \u043a\u044d\u0448\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u043e\u043d \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442 \u0435\u0433\u043e \u043f\u043e\u0441\u043b\u0435.\\n\\n\u041c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `addFunction` \u0442\u0440\u0438 \u0440\u0430\u0437\u0430 \u0441 \u043e\u0434\u043d\u0438\u043c \u0438 \u0442\u0435\u043c \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c: \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043a\u043e\u0433\u0434\u0430 `num` \u0440\u0430\u0432\u043d\u043e `10`, \u0435\u0449\u0435 \u043d\u0435 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043e. \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 if `num in cache` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`, \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0431\u043b\u043e\u043a else: `Calculated! 20` \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u0435\u0448\u0430. `cache` \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043a\u0430\u043a `{10: 20}`.\\n\\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0440\u0430\u0437 \u043e\u0431\u044a\u0435\u043a\u0442 `cache` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0434\u043b\u044f `10`. \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 if `num in cache` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`, \u0430 `\'From cache! 20\'` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043b\u043e\u0433.\\n\\n\u0412 \u0442\u0440\u0435\u0442\u0438\u0439 \u0440\u0430\u0437 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c `5 * 2` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a `10`. \u041e\u0431\u044a\u0435\u043a\u0442 `cache` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0434\u043b\u044f `10`. \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 if `num in cache` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`, \u0430 `\'From cache! 20\'` \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item)\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item)\\n}","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0446\u0438\u043a\u043b\u0430 _for-in_ \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c **\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435** \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430. \u0412 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \\"\u043a\u043b\u044e\u0447\u0430\u043c\u0438\\" \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0445 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432 \u043a\u0430\u043a:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\n\u0413\u0434\u0435 \u043a\u043b\u044e\u0447\u0438 - \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430. `0` `1` `2` `3` \u0432\u043e\u0439\u0442\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443.\\n\\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0446\u0438\u043a\u043b\u0430 _for-of_ \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044e **\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439**. \u041c\u0430\u0441\u0441\u0438\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0442\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u043c. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443, \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \\"item\\" \u0440\u0430\u0432\u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u043d\u0430 \u0438\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442, `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043b\u043e\u0433.","id":78,"options":["`0` `1` `2` `3` \u0438 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \u0438 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \u0438 `0` `1` `2` `3`","`0` `1` `2` `3` \u0438 `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043c\u043e\u0433\u0443\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0427\u0438\u0441\u043b\u0430, \u0441\u0442\u0440\u043e\u043a\u0438, \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b, \u043d\u043e\u043b\u044c, \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0434\u0430\u0442\u044b, \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.\\n\\n\u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u0435\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e. `1 + 2` \u0432\u0435\u0440\u043d\u0435\u0442 `3`, `1 * 2` \u0432\u0435\u0440\u043d\u0435\u0442 `2`, \u0430 `1 / 2` \u0432\u0435\u0440\u043d\u0435\u0442 `0.5`.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u043c\u0435\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `undefined`, \u0435\u0441\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 `name`. `name` \u0440\u0430\u0432\u043d\u043e \u043b\u043e\u0433\u0433\u0438\u0440\u0443\u0435\u043c\u043e\u043c\u0443 `undefined`.\\n\\n\u0412 ES6 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `undefined` \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\n\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043c\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u0435\u0441\u043b\u0438 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 `undefined`, `name` \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u043e \u0441\u0442\u0440\u043e\u043a\u0435 `Lydia`","id":80,"options":["`Hello there, `","`Hello there, undefined`","`Hello there, null`","`ReferenceError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `this` \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0442\u043e\u0433\u043e, \u0433\u0434\u0435 \u0432\u044b \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435. \u0412 **\u043c\u0435\u0442\u043e\u0434\u0435**, \u043a\u0430\u043a \u0438 \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 `getStatus`, \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `this` \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442, \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043c\u0435\u0442\u043e\u0434. \u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u0443 `data`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `this` \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 `data`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c `this.status`, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `status` \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `data`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `\\"\ud83e\udd51\\"`.\\n\\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `call` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `this`. \u0412 **\u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445** \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `this` \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a _\u043e\u0431\u044a\u0435\u043a\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f_. \u041c\u044b \u043e\u0431\u044a\u044f\u0432\u0438\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044e `setTimeout` \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 _global_, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `setTimeout` \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `this` \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442 _global_. \u0412 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u0435\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c _status_ \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `\\"\ud83d\ude0e\\"`. \u041f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 `this.status` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f `\\"\ud83d\ude0e\\"`.","id":81,"options":["`\\"\ud83e\udd51\\"` \u0438 `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` \u0438 `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` \u0438 `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` \u0438 `\\"\ud83d\ude0e\\"`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"\u041c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `city` \u0440\u0430\u0432\u043d\u043e\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `city` \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `person`. \u0423 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043d\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `city`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `city` \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `undefined`.\\n\\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043c\u044b _\u043d\u0435_ \u0441\u0441\u044b\u043b\u0430\u0435\u043c\u0441\u044f \u043d\u0430 \u0441\u0430\u043c \u043e\u0431\u044a\u0435\u043a\u0442 person! \u041c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `city` \u0440\u0430\u0432\u043d\u043e\u0439 \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `city` \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `person`.\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c `city` \u0440\u0430\u0432\u043d\u044b\u043c \u0441\u0442\u0440\u043e\u043a\u0435 `\\"Amsterdam\\"`. \u042d\u0442\u043e \u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 person - \u043d\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u044d\u0442\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442.\\n\\n\u041f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `person` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438 `const` \u0438 `let` \u0438\u043c\u0435\u044e\u0442 _\u0431\u043b\u043e\u0447\u043d\u0443\u044e \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c_. \u0411\u043b\u043e\u043a - \u044d\u0442\u043e \u0447\u0442\u043e-\u0442\u043e \u043c\u0435\u0436\u0434\u0443 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u043c\u0438 \u0441\u043a\u043e\u0431\u043a\u0430\u043c\u0438 (`{}`). \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 if/else. \u0412\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0441\u044b\u043b\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0431\u043b\u043e\u043a\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0430, \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f ReferenceError.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `res` \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c `.then` \u0440\u0430\u0432\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e `.then`. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c \u0446\u0435\u043f\u043e\u0447\u043a\u0443 `.then` \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c; \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443.","id":84,"options":["\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043c\u0435\u0442\u043e\u0434\u0430 `fetch`.","\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 `fetch`.","\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043e\u043b\u043b\u0431\u044d\u043a\u0430 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c `.then()`.","\u0412\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 `undefined`."],"question":"\u041a\u0430\u043a\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442\u0432\u044b\u0432\u0435\u0434\u0435\u043d\u0430 \u0432 \u043b\u043e\u0433?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `!!name` \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `name` \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c \u0438\u043b\u0438 \u043b\u043e\u0436\u043d\u044b\u043c. \u0415\u0441\u043b\u0438 \u0438\u043c\u044f \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0442\u043e `!name` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`. \u0410 `!false` (\u044d\u0442\u043e \u0442\u043e, \u0447\u0435\u043c \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `!! name`) \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`.\\n\\n\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044f `hasName` \u0440\u0430\u0432\u043d\u044b\u043c `name`, \u0432\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0435 `hasName` \u0440\u0430\u0432\u043d\u044b\u043c \u043b\u044e\u0431\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `getName`, \u0430 \u043d\u0435 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e `true`.\\n\\n`new Boolean (true)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u043d\u0443\u044e \u043e\u0431\u043e\u043b\u043e\u0447\u043a\u0443, \u0430 \u043d\u0435 \u0441\u0430\u043c\u043e \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\\n\\n`name.length` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u043d `true`.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"\u041a\u0430\u043a\u0430\u044f \u043e\u043f\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c hasName \u0440\u0430\u0432\u043d\u044b\u043c `true`, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c`true` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430?"},{"answer":1,"code":"console.log(\\"I want pizza\\"[0])","codeLanguage":"javascript","explanation":"\u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u0443 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0443\u044e \u043d\u043e\u0442\u0430\u0446\u0438\u044e. \u041f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u043c\u0435\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 0 \u0438 \u0442.\u0434. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c 0, \u0441\u0438\u043c\u0432\u043e\u043b `\'I\'`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043b\u043e\u0433.\\n\\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 IE7 \u0438 \u043d\u0438\u0436\u0435. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 `.charAt()`","id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0430\u0432\u043d\u044b\u043c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b _\u0434\u043e_ \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `10` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e `sum`. \u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f `sum` \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442, \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f `num2` \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e, \u0438 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num1` \u0440\u0430\u0432\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e `10`. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `num2` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num1`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `10`. `num1 + num2` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `20`.\\n\\n\u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0430\u0432\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d _\u043f\u043e\u0441\u043b\u0435_ (\u0441\u043f\u0440\u0430\u0432\u0430), \u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0435\u0449\u0435 \u043d\u0435 \u0431\u044b\u043b\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043e; \u044d\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u043e\u0448\u0438\u0431\u043a\u0435.","id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"// module.js\\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js\\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"\u0421 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u043e\u043c `import * as name` \u043c\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c _\u0432\u0441\u0435 exports_ \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 `module.js` \u0432 \u0444\u0430\u0439\u043b `index.js`, \u0442\u043e\u0433\u0434\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `data`. \u0412 \u0444\u0430\u0439\u043b\u0435 `module.js` \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430: \u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u044d\u043a\u0441\u043f\u043e\u0440\u0442. \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 `\\"Hello World\\"`, \u0430 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u044d\u043a\u0441\u043f\u043e\u0440\u0442 - \u044d\u0442\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `name`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 `\\"Lydia\\"`.\\n\\n\u041e\u0431\u044a\u0435\u043a\u0442 `data` \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `default` \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u044e\u0442 \u0438\u043c\u0435\u043d\u0430 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043e\u0432 \u0438 \u0438\u0445 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.","id":88,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"\u041a\u043b\u0430\u0441\u0441\u044b \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0441\u0430\u0445\u0430\u0440\u043e\u043c \u0434\u043b\u044f \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0430 `Person` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0443\u0434\u0435\u0442:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\n\u0412\u044b\u0437\u043e\u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441 `new` \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 `Person`, \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `typeof` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"object\\"` \u0434\u043b\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430. `typeof member` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"object\\"`.","id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"\u041c\u0435\u0442\u043e\u0434 `.push` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 _\u043d\u043e\u0432\u0443\u044e \u0434\u043b\u0438\u043d\u0443_ \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0430 \u043d\u0435 \u0441\u0430\u043c \u043c\u0430\u0441\u0441\u0438\u0432! \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044f `newList` \u0440\u0430\u0432\u043d\u044b\u043c `[1, 2, 3].push(4)`, \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c `newList` \u0440\u0430\u0432\u043d\u044b\u043c \u043d\u043e\u0432\u043e\u0439 \u0434\u043b\u0438\u043d\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430: `4`.\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `.push` \u0434\u043b\u044f `newList`. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 `newList` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `4`, \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `.push`: \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430 TypeError.","id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"\u041e\u0431\u044b\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u044f `giveLydiaPizza`, \u0438\u043c\u0435\u044e\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `prototype`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c (\u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430) \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e\u043c `constructor`. \u041e\u0434\u043d\u0430\u043a\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u043e \u0441\u0442\u0440\u0435\u043b\u043a\u0430\u043c\u0438, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u044f `giveLydiaChocolate`, \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u044d\u0442\u043e\u0433\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `prototype`. `undefined` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0443 `prototype` \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c `giveLydiaChocolate.prototype`.","id":91,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries (person)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]`\\n\\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0446\u0438\u043a\u043b `for-of`, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043c\u0433\u043d\u043e\u0432\u0435\u043d\u043d\u043e \u0434\u0435\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0432 \u0446\u0438\u043a\u043b\u0435 for, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `const [x, y]`. `x` \u0440\u0430\u0432\u0435\u043d \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0432 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0435, `y` \u0440\u0430\u0432\u0435\u043d \u0432\u0442\u043e\u0440\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0432 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0435.\\n\\n\u041f\u0435\u0440\u0432\u044b\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `[ \\"name\\", \\"Lydia\\" ]`, \u0433\u0434\u0435 `x` \u0440\u0430\u0432\u043d\u043e `\\"name\\"`, \u0438 `y` \u0440\u0430\u0432\u043d\u043e `\\"Lydia\\"`, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043b\u043e\u0433.\\n\u0412\u0442\u043e\u0440\u044b\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `[ \\"age\\", 21 ]`, \u0433\u0434\u0435 `x` \u0440\u0430\u0432\u043d\u043e `\\"age\\"`, \u0438 `y` \u0440\u0430\u0432\u043d\u043e `21`, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043b\u043e\u0433.","id":92,"options":["`name` `Lydia` and `age` `21`","`[\\"name\\", \\"Lydia\\"]` and `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` and `undefined`","`Error`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`... args` - \u043f\u0440\u043e\u0447\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0447\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 - \u044d\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b **\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c**! \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043f\u0440\u043e\u0447\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0431\u044b\u043b\u0438 \u0432\u0442\u043e\u0440\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c. \u042d\u0442\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0438 \u044d\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0435.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\n\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0432\u044b\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442. \u042d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"function nums(a, b) {\\n  if\\n  (a > b)\\n  console.log(\'a is bigger\')\\n  else\\n  console.log(\'b is bigger\')\\n  return\\n  a + b\\n}\\n\\nconsole.log(nums(4, 2))\\nconsole.log(nums(1, 2))","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u043c\u044b _\u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b_ \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 (`;`), \u043e\u0434\u043d\u0430\u043a\u043e \u0434\u0432\u0438\u0436\u043e\u043a JavaScript \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u043f\u043e\u0441\u043b\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432. \u042d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f **\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u0441\u0442\u0430\u0432\u043a\u043e\u0439 \u0442\u043e\u0447\u0435\u043a \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439**. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a `throw`, `return`, `break` \u0438 \u0442.\u0434.\\n\\n\u0417\u0434\u0435\u0441\u044c \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e `return` \u0438 \u0434\u0440\u0443\u0433\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `a + b` \u0432 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u041e\u0434\u043d\u0430\u043a\u043e, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e \u043d\u043e\u0432\u0430\u044f \u043b\u0438\u043d\u0438\u044f, \u0434\u0432\u0438\u0436\u043e\u043a \u043d\u0435 \u0437\u043d\u0430\u0435\u0442, \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u0431\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c. \u0412\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u043e\u043d \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u043e\u0447\u043a\u0443 \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 \u043f\u043e\u0441\u043b\u0435 `return`. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u044d\u0442\u043e \u043a\u0430\u043a:\\n\\n```javascript\\n  return;\\n  a + b\\n```\\n\\n\u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e `a + b` \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u0435\u0442\u0441\u044f, \u0442\u0430\u043a \u043a\u0430\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `return`. \u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f, \u043a\u0430\u043a \u0437\u0434\u0435\u0441\u044c, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `undefined`. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 `if / else` \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u043d\u0435\u0442!","id":94,"options":["`a is bigger`, `6` and `b is bigger`, `3`","`a is bigger`, `undefined` and `b is bigger`, `undefined`","`undefined` and `undefined`","`SyntaxError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u044b \u0440\u0430\u0432\u043d\u044b\u043c\u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u043a\u043b\u0430\u0441\u0441\u0430\u043c/\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c `Person` \u0440\u0430\u0432\u043d\u044b\u043c `AnotherPerson`. \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e `name` \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 - `Sarah`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `name` \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 `Person` `member` - \u044d\u0442\u043e `Sarah`.","id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"`Symbol` \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f _\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0439_. \u041c\u0435\u0442\u043e\u0434 `Object.keys` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 _\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435_ \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u043b\u044e\u0447\u0430 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430. `Symbol` \u043d\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u041f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0432\u0441\u0435\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0431\u0443\u0434\u0443\u0442 \u0432\u0438\u0434\u043d\u044b \u0432\u0441\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430, \u0434\u0430\u0436\u0435 \u043d\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435.\\n\\n\u042d\u0442\u043e \u043e\u0434\u043d\u043e \u0438\u0437 \u043c\u043d\u043e\u0433\u0438\u0445 \u043a\u0430\u0447\u0435\u0441\u0442\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u0430: \u043f\u043e\u043c\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0441\u0442\u043e\u043b\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0445, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 2 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u043e\u0442\u044f\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u0438 \u0442\u043e\u043c\u0443 \u0436\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0443), \u0432\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \\"\u0441\u043a\u0440\u044b\u0442\u044c\\" \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c (\u0445\u043e\u0442\u044f \u0438 \u043d\u0435 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 `Object.getOwnPropertySymbols()`).","id":96,"options":["`{Symbol(\'a\'): \'b\'}` and `[\\"{Symbol(\'a\')\\"]`","`{}` and `[]`","`{ a: \\"b\\" }` and `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` and `[]`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f `getList` \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430. \u041c\u0435\u0436\u0434\u0443 \u0441\u043a\u043e\u0431\u043a\u0430\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `getList` \u043c\u044b \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0434\u0435\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u043c\u0430\u0441\u0441\u0438\u0432. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u044d\u0442\u043e \u043a\u0430\u043a:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 `... y` \u043c\u044b \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u043c \u0432\u0441\u0435 \\"\u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f\\" \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b - \u044d\u0442\u043e `2`, `3` \u0438 `4` \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `y` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u043c \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `x` \u0440\u0430\u0432\u043d\u043e `1`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443, \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u0432 \u043b\u043e\u0433\u0435 `[x, y]`, `[1, [2, 3, 4]]`.\\n\\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f `getUser` \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0441\u043e \u0441\u0442\u0440\u0435\u043b\u043a\u0430\u043c\u0438 \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438, \u0435\u0441\u043b\u0438 \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u041e\u0434\u043d\u0430\u043a\u043e, \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u0435\u0440\u043d\u0443\u0442\u044c _\u043e\u0431\u044a\u0435\u043a\u0442_ \u0438\u0437 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0435\u0433\u043e \u0432 \u0441\u043a\u043e\u0431\u043a\u0430\u0445, \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0438\u043a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f! \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0443\u043b\u0430 \u0431\u044b \u043e\u0431\u044a\u0435\u043a\u0442:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `undefined`.","id":97,"options":["`[1, [2, 3, 4]]` and `undefined`","`[1, [2, 3, 4]]` and `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` and `{ name: \\"Lydia\\", age: 21 }`","`Error` and `{ name: \\"Lydia\\", age: 21 }`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `name` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f.\\n\\n\u041e\u0448\u0438\u0431\u043a\u0438 \u0442\u0438\u043f\u0430 \u0432\u044b\u0434\u0430\u044e\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u043c\u0443 \u0442\u0438\u043f\u0443. JavaScript \u043e\u0436\u0438\u0434\u0430\u043b, \u0447\u0442\u043e `name` \u0431\u0443\u0434\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0435\u0435. \u041e\u0434\u043d\u0430\u043a\u043e \u044d\u0442\u043e \u0431\u044b\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430 TypeError: name \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439!\\n\\n\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e, \u0447\u0442\u043e \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c JavaScript, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0441\u043b\u043e\u0432\u043e `return` \u043a\u0430\u043a `retrun`.\\nReferenceErrors \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 JavaScript \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0439\u0442\u0438 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0432\u044b \u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f.","id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` - \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0421 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c `&&` \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u043f\u0440\u0430\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `[]` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `\'Im\'`.\\n\\n`\\"\\"` - \u043b\u043e\u0436\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043b\u043e\u0436\u043d\u043e, \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f. `n\'t` \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f.","id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `||` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u043d\u0434. \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043b\u043e\u0436\u043d\u044b, \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043e\u043f\u0435\u0440\u0430\u043d\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f.\\n\\n`(false || {} || null)`: \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 `{}` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. \u042d\u0442\u043e \u043f\u0435\u0440\u0432\u043e\u0435 (\u0438 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435) \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f. `one` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 `{}`.\\n\\n`(null || false || \\"\\")`: \u0432\u0441\u0435 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u044b \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043b\u043e\u0436\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439 \u043e\u043f\u0435\u0440\u0430\u043d\u0434 `\\"\\"` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f. `two` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 `[]` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. \u042d\u0442\u043e \u043f\u0435\u0440\u0432\u043e\u0435 \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f. `three` \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u043e `[]`.","id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"\u0421 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435\u043c \u043c\u044b \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0433\u043e\u0432\u043e\u0440\u0438\u043c: \\"\u042f \u0445\u043e\u0447\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438 \u043e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u044e \u0435\u0435, \u043f\u043e\u043a\u0430 \u043e\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f\\". \u0422\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u0433\u0434\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e (\u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u043e), \u0438 \u043a\u043e\u0433\u0434\u0430 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u043f\u0443\u0441\u0442, \u044f \u0445\u043e\u0447\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\\n\\n\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `.then` \u0438 `await` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `async`. \u0425\u043e\u0442\u044f \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `.then` \u0438 `await`, \u043e\u043d\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e-\u0440\u0430\u0437\u043d\u043e\u043c\u0443.\\n\\n\u0412 `firstFunction` \u043c\u044b (\u0432\u0440\u043e\u0434\u0435) \u043e\u0442\u043b\u043e\u0436\u0438\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044e `myPromise` \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0435\u0435 \u0440\u0430\u0431\u043e\u0442\u044b, \u043d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043a\u043e\u0434\u0430, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 `console.log (\'second\')`. \u0417\u0430\u0442\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0439 `I have resolved`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u0442\u0435\u043c \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043e\u043d\u0430 \u0443\u0432\u0438\u0434\u0435\u043b\u0430, \u0447\u0442\u043e \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u043f\u0443\u0441\u0442.\\n\\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `await` \u0432 `secondFunction`, \u043c\u044b \u0431\u0443\u043a\u0432\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u0434\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\\n\\n\u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043c\u044b \u043e\u0436\u0438\u0434\u0430\u043b\u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f `myPromise` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `I have resolved`, \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u043c\u044b \u043f\u0435\u0440\u0435\u0448\u043b\u0438 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435: `second` \u0431\u044b\u043b\u0430 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u0430 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439.","id":101,"options":["`I have resolved!`, `second` and `I have resolved!`, `second`","`second`, `I have resolved!` and `second`, `I have resolved!`","`I have resolved!`, `second` and `second`, `I have resolved!`","`second`, `I have resolved!` and `I have resolved!`, `second`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `+` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043d\u043e \u043c\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a. \u0412\u0441\u044f\u043a\u0438\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u0434\u0432\u0438\u0436\u043e\u043a JavaScript \u0432\u0438\u0434\u0438\u0442, \u0447\u0442\u043e \u043e\u0434\u043d\u043e \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c, \u043e\u043d \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u043a \u0441\u0442\u0440\u043e\u043a\u0435.\\n\\n\u041f\u0435\u0440\u0432\u044b\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `1`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. `1 + 2` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e `3`.\\n\\n\u0422\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435, \u0432\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 `\\"Lydia\\"`. `\\"Lydia\\"` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u0430 `2` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c: `2` \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u043a\u0435. `\\"Lydia\\"` \u0438 `\\"2\\"` \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f, \u0447\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 `\\"Lydia2\\"`.\\n\\n`{name: \\"Lydia\\"}` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c. \u041d\u0438 \u0447\u0438\u0441\u043b\u043e, \u043d\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u0438 \u043f\u0440\u0438\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u043a\u0435. \u0412\u0441\u044f\u043a\u0438\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442, \u043e\u043d \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f `\\"[object Object]\\"`. `\\"[object Object]\\"`, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u0441 `\\"2\\"`, \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f `\\"[object Object]2\\"`.","id":102,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0442\u0438\u043f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c, \u0432 `Promise.resolve`, \u043b\u0438\u0431\u043e \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435, \u043b\u0438\u0431\u043e \u043d\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435. \u0421\u0430\u043c \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435 \u0441 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c (`<fulfilled>`). \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u0442\u0435 \u043e\u0431\u044b\u0447\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u043e\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435 \u0441 \u043e\u0431\u044b\u0447\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u0442\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435, \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u043e\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435 \u0441 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u044f.\\n\\n\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `5`. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u043e\u0435 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `5`.","id":103,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"\u0427\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"\u041e\u0431\u044a\u0435\u043a\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043d\u0430 \u0441\u0442\u0440\u043e\u0433\u043e\u0435 \u0440\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u043e (`===`), \u043c\u044b \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0438\u0445 \u0441\u0441\u044b\u043b\u043a\u0438.\\n\\n\u041c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f `person2`, \u0440\u0430\u0432\u043d\u043e\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0443 `person`, \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 `person` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f `person1`.\\n\\n\u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043e\u0431\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u043c\u0435\u044e\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435 \u043c\u0435\u0441\u0442\u043e \u0432 \u043f\u0430\u043c\u044f\u0442\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u0438 \u0440\u0430\u0432\u043d\u044b.\\n\\n\u0411\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0432 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0435 `else` \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f, \u0438 \u0432 \u043b\u043e\u0433 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f `They are the same!`.","id":104,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"\u0427\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430: \u043d\u043e\u0442\u0430\u0446\u0438\u044f \u0432 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u0438\u043b\u0438 \u043d\u043e\u0442\u0430\u0446\u0438\u044f \u0432 \u0442\u043e\u0447\u043a\u0430\u0445. \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0442\u043e\u0447\u0435\u0447\u043d\u0443\u044e \u043d\u043e\u0442\u0430\u0446\u0438\u044e (`colorConfig.colors`) \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u043e\u0439 \u043d\u043e\u0442\u0430\u0446\u0438\u0438 (`colorConfig[\\"colors\\"]`).\\n\\n\u0412 \u0442\u043e\u0447\u0435\u0447\u043d\u043e\u0439 \u043d\u043e\u0442\u0430\u0446\u0438\u0438 JavaScript \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0441 \u0442\u0430\u043a\u0438\u043c \u0442\u043e\u0447\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c. \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 JavaScript \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `colors` \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 `colorConfig`. \u041d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `colors`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `undefined`. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `[1]`. \u041c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 `undefined`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u043e \u0432\u044b\u0434\u0430\u0435\u0442 `TypeError`: `Cannot read \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \'1\' of undefined`.\\n\\nJavaScript \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u0442 (\u0438\u043b\u0438 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442) \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043e\u043d \u0432\u0438\u0434\u0438\u0442 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0441\u043a\u043e\u0431\u043a\u0443 `[` \u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0441\u043a\u043e\u0431\u043a\u0443 `]`. \u0422\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430 \u043e\u043d \u043e\u0446\u0435\u043d\u0438\u0442 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0431\u044b \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 `colorConfig[colors [1]]`, \u043e\u043d \u0431\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u043b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `red` \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `colorConfig`.","id":105,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"\u0427\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"\u041f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c \u0441\u043c\u0430\u0439\u043b\u0438\u043a\u0438 - \u044d\u0442\u043e \u044e\u043d\u0438\u043a\u043e\u0434\u044b. \u042e\u043d\u0438\u043a\u043e\u0434 \u0434\u043b\u044f \u0441\u0435\u0440\u0434\u0446\u0430 \u0441\u043c\u0430\u0439\u043b\u0438\u043a\u043e\u0432 `\\"U+2764 U+FE0F\\"`. \u041e\u043d\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u0438 \u0442\u043e\u0433\u043e \u0436\u0435 \u0441\u043c\u0430\u0439\u043b\u0438\u043a\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0434\u0432\u0435 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u0440\u0443\u0433 \u0441 \u0434\u0440\u0443\u0433\u043e\u043c, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true`.","id":106,"options":["`true`","`false`"],"question":"\u0427\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 `splice`, \u043c\u044b \u043c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0443\u0434\u0430\u043b\u044f\u044f, \u0437\u0430\u043c\u0435\u043d\u044f\u044f \u0438\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0443\u0434\u0430\u043b\u0438\u043b\u0438 2 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438\u0437 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 1 (\u043c\u044b \u0443\u0434\u0430\u043b\u0438\u043b\u0438 `\'\ud83e\udd51\'` \u0438 `\'\ud83d\ude0d\'`) \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 `\u2728` emoji.\\n\\n`map`, `filter` \u0438 `slice` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, `find` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0430 `reduce` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.","id":107,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"\u041a\u0430\u043a\u043e\u0439 \u0438\u0437 \u044d\u0442\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `JSON.parse ()` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 JSON \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JavaScript.\\n\\n```javascript\\n// \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 JSON, \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 JSON \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JavaScript:\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 JSON, \u0437\u0430\u0442\u0435\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u0441\u0442\u0440\u043e\u043a\u0438 JSON \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JavaScript:\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 JSON, \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 JSON \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JavaScript:\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":108,"options":["\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 JSON \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JavaScript","\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 JavaScript \u0432 JSON","\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JavaScript \u0432 JSON","\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 JSON \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u043e\u0431\u044a\u0435\u043a\u0442 JavaScript"],"question":"\u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"\u041a\u0430\u0436\u0434\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 _\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f_ (\u0438\u043b\u0438 _\u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_). \u0424\u0443\u043d\u043a\u0446\u0438\u044f `getName` \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0449\u0435\u0442 \u0432 \u0441\u0432\u043e\u0435\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435 (\u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f), \u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `name`, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f `getName` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `name`: \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `name` \u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `let` \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `\'Sarah\'`.\\n\\n\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `let` (\u0438 `const`) \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u044e\u0442\u0441\u044f \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 `var`, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 <i>\u043d\u0435 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f</i>. \u041e\u043d\u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0434\u043e \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u0438\u043c (\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c) \u0438\u0445 \u0441\u0442\u0440\u043e\u043a\u0443. \u042d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \\"\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043c\u0435\u0440\u0442\u0432\u043e\u0439 \u0437\u043e\u043d\u043e\u0439\\". \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u0434\u043e \u0438\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f, JavaScript \u0432\u044b\u0434\u0430\u0435\u0442 `ReferenceError`.\\n\\n\u0415\u0441\u043b\u0438 \u0431\u044b \u043c\u044b \u043d\u0435 \u043e\u0431\u044a\u044f\u0432\u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `name` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `getName`, \u0434\u0432\u0438\u0436\u043e\u043a javascript \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043b \u0431\u044b \u0432\u043d\u0438\u0437 \u043f\u043e _\u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_. \u0412\u043d\u0435\u0448\u043d\u044f\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0438\u043c\u0435\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `name` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `Lydia`. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u043d \u0431\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u043b `Lydia`.\\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":109,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield`, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `yield*` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0438\u043b\u0438 \u0438\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u0430\u0441\u0441\u0438\u0432\u0430).\\n\\n\u0412 `generatorOne` \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0432\u0435\u0441\u044c \u043c\u0430\u0441\u0441\u0438\u0432 `[\'a\', \'b\', \'c\']`, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield`. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `value` \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u043e\u043c `next` \u0434\u043b\u044f `one` (`one.next().value`), \u0440\u0430\u0432\u043d\u043e \u0432\u0441\u0435\u043c\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0443 `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\n\u0412 \u0444\u0430\u0439\u043b\u0435 `generatorTwo` \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `yield*`. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `two` \u0440\u0430\u0432\u043d\u043e \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0435. \u0418\u0442\u0435\u0440\u0430\u0442\u043e\u0440 - \u044d\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 `[\'a\', \'b\', \'c\']`. \u041f\u0435\u0440\u0432\u044b\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `a`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043f\u0435\u0440\u0432\u044b\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c `two.next().value`, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `a`.\\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":110,"options":["`a` and `a`","`a` and `undefined`","`[\'a\', \'b\', \'c\']` and `a`","`a` and `[\'a\', \'b\', \'c\']`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"\u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u043b\u0438\u0442\u0435\u0440\u0430\u043b\u043e\u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0440\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u043c\u0438. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e `(x => x)(\'I love\')`. \u041c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `\'I love\'` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `x => x`. `x` \u0440\u0430\u0432\u043d\u043e `\'I love\'`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `I love to program`.","id":111,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\')\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"\u041e\u0431\u044b\u0447\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0440\u0430\u0432\u043d\u044b\u043c\u0438 `null`, \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u043c\u0435\u0442\u043a\u0443 _\u0441\u043e\u0431\u0440\u0430\u043d\u043e \u0432 \u043c\u0443\u0441\u043e\u0440_, \u0442\u0430\u043a \u043a\u0430\u043a \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u0442 \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430 \u044d\u0442\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442. \u041e\u0434\u043d\u0430\u043a\u043e, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0432 `setInterval` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 (\u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 `config`), \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0432\u0441\u0435 \u0435\u0449\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442 `config`. \u041f\u043e\u043a\u0430 \u0435\u0441\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0430, \u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0431\u0440\u0430\u043d \u0432 \u043c\u0443\u0441\u043e\u0440. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0441\u0431\u043e\u0440\u0449\u0438\u043a \u043c\u0443\u0441\u043e\u0440\u0430 \u043d\u0435 \u043e\u0442\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 `setInterval` \u0431\u0443\u0434\u0435\u0442 \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u0436\u0434\u044b\u0435 1000 \u043c\u0441 (1\u0441).","id":112,"options":["\u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 `setInterval` \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d","\u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 `setInterval` \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043e\u0434\u0438\u043d \u0440\u0430\u0437","\u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 `setInterval` \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u0436\u0434\u0443\u044e \u0441\u0435\u043a\u0443\u043d\u0434\u0443","\u043c\u044b \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u044b\u0437\u043e\u0432\u0435\u043c `config.alert()`, \u0442.\u043a. `config` \u0440\u0430\u0432\u043d\u043e `null`"],"question":"\u0427\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\')","codeLanguage":"javascript","explanation":"\u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043f\u0430\u0440\u044b \u043a\u043b\u044e\u0447/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430 `set` \u0438\u043c\u044f \u043a\u043b\u044e\u0447\u0430 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e `set`, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e `set`. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043b\u044e\u0447\u043e\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f _\u0444\u0443\u043d\u043a\u0446\u0438\u044f_ `() => \'greeting\'` \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `\'Hello world\'`. `myMap` \u0442\u0435\u043f\u0435\u0440\u044c \u044d\u0442\u043e `{ () => \'greeting\' => \'Hello world!\' }`.\\n\\n1 \u043d\u0435\u0432\u0435\u0440\u043d\u043e, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043a\u043b\u044e\u0447 \u043d\u0435 `\'greeting\'`, \u0430 `() => \'greeting\'`.\\n3 \u043d\u0435\u0432\u0435\u0440\u043d\u043e, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u0435\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043c\u0435\u0442\u043e\u0434\u0443 `get`. \u041e\u0431\u044a\u0435\u043a\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u043e _\u0441\u0441\u044b\u043b\u043a\u043e\u0439_. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 - \u044d\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0431\u044b\u0432\u0430\u044e\u0442 \u0441\u0442\u0440\u043e\u0433\u043e \u0440\u0430\u0432\u043d\u044b\u043c\u0438, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b: \u043e\u043d\u0438 \u0438\u043c\u0435\u044e\u0442 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u0435\u0441\u0442\u0430 \u0432 \u043f\u0430\u043c\u044f\u0442\u0438.","id":113,"options":["1","2","2 \u0438 3","\u041a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043d\u0438\u0445"],"question":"\u041a\u0430\u043a\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0432\u0435\u0440\u043d\u0443\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `\'Hello world!\'`?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 `changeAge` \u0438 `changeAgeAndName` \u0438\u043c\u0435\u044e\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e _\u0432\u043d\u043e\u0432\u044c_ \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 `{ ...person }`. \u042d\u0442\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u043c\u0435\u0435\u0442 \u043a\u043e\u043f\u0438\u0438 \u0432\u0441\u0435\u0445 \u043a\u043b\u044e\u0447\u0435\u0439/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `person`.\\n\\n\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `changeAge` \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 `person` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 `age` \u043d\u0430 1. `person` \u0442\u0435\u043f\u0435\u0440\u044c `{name: \\"Lydia\\", age: 22}`.\\n\\n\u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `changeAgeAndName`, \u043e\u0434\u043d\u0430\u043a\u043e \u043c\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u0412\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `x` \u0440\u0430\u0432\u043d\u043e \u043d\u043e\u0432\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443: `{ ... person }`. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442, \u043e\u043d \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `person`. `person` \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0440\u0430\u0432\u0435\u043d `{name: \\"Lydia\\", age: 22}`.","id":114,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"\u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":1,"code":"let num = 1;\\nconst list = [\\"\ud83e\udd73\\", \\"\ud83e\udd20\\", \\"\ud83e\udd70\\", \\"\ud83e\udd2a\\"];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"\u0421 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u043e\u043c `+=` \u043c\u044b \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `num` \u043d\u0430 `1`. `num` \u0438\u043c\u0435\u0435\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `1`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `1 + 1` \u0440\u0430\u0432\u043d\u043e `2`. \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 `list` \u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u043e\u0434 `console.log (list [2])`\ud83e\udd70.","id":115,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":1,"code":"const person = {\\n\\tfirstName: \\"Lydia\\",\\n\\tlastName: \\"Hallie\\",\\n\\tpet: {\\n\\t\\tname: \\"Mara\\",\\n\\t\\tbreed: \\"Dutch Tulip Hound\\"\\n\\t},\\n\\tgetFullName() {\\n\\t\\treturn `${this.firstName} ${this.lastName}`;\\n\\t}\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"\u0421 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f `?.` \u043d\u0430\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u044f\u0432\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c, \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b \u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0433\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u043d\u0435\u0442. \u0415\u0441\u043b\u0438 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0443 \u0441\u043e (_\u043d\u0443\u043b\u0435\u0432\u044b\u043c_) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `undefined` \u0438\u043b\u0438 `null`, \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0437\u0430\u043c\u044b\u043a\u0430\u0435\u0442\u0441\u044f \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `undefined`.\\n\\n`person.pet?.name`: `person` \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `pet`: `person.pet` \u043d\u0435 \u043d\u0443\u043b\u0435\u0432\u043e\u0435. \u041e\u043d\u043e \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `name`, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `Mara`.\\n`person.pet?.family?.name`: `person` \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `pet`: `person.pet` \u043d\u0435 \u043d\u0443\u043b\u0435\u0432\u043e\u0435. `pet` _\u043d\u0435_ \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `family`, `person.pet.family` \u043d\u0443\u043b\u0435\u0432\u043e\u0435. \u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `undefined`.\\n`person.getFullName?.()`: `person` \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `getFullName`: `person.getFullName()` \u043d\u0435 \u043d\u0443\u043b\u0435\u0432\u043e\u0435, \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d\u043e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `Lydia Hallie`.\\n`member.getLastName?.()`: `member` \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e: `member.getLastName()` \u043d\u0443\u043b\u0435\u0432\u043e\u0435. \u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `undefined`.","id":116,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `undefined`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":1,"code":"const groceries = [\\"banana\\", \\"apple\\", \\"peanuts\\"];\\n\\nif (groceries.indexOf(\\"banana\\")) {\\n\\tconsole.log(\\"We have to buy bananas!\\");\\n} else {\\n\\tconsole.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"\u041c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 `groceries.indexOf(\\"banana\\")` \u0432 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `if`. `groceries.indexOf(\\"banana\\")` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `0`, \u0447\u0442\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u043e\u0436\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0432 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0435 `if` \u043b\u043e\u0436\u043d\u043e, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u0434 \u0432 \u0431\u043b\u043e\u043a\u0435 `else`, \u0438 \u0432 \u043b\u043e\u0433 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f ``We don\'t have to buy bananas!``.","id":117,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":3,"code":"const config = {\\n\\tlanguages: [],\\n\\tset language(lang) {\\n\\t\\treturn this.languages.push(lang);\\n\\t}\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"\u041c\u0435\u0442\u043e\u0434 `language` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f `\u0441\u0435\u0442\u0442\u0435\u0440\u043e\u043c`. \u0421\u0435\u0442\u0442\u0435\u0440\u044b \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0438\u0445 \u0446\u0435\u043b\u044c\u044e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432. \u041f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 `setter` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f `undefined`.","id":118,"options":["`function language(lang) { this.languages.push(lang }`","`0`","`[]`","`undefined`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\n\\nconsole.log(!typeof name === \\"object\\");\\nconsole.log(!typeof name === \\"string\\");","codeLanguage":"javascript","explanation":"`typeof name` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `\\"\u0441\u0442\u0440\u043e\u043a\u0443\\"`. \u0421\u0442\u0440\u043e\u043a\u0430 `\\"string\\"` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `!typeof name` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `false`. `false === \\"object\\"` \u0438 `false === \\"string\\"` \u043e\u0431\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 `false`.\\n\\n(\u0415\u0441\u043b\u0438 \u0431\u044b \u043c\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0431\u044b\u043b \u043b\u0438 \u0442\u0438\u043f (\u043d\u0435)\u0440\u0430\u0432\u0435\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443, \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c `!==` \u0432\u043c\u0435\u0441\u0442\u043e `!typeof`)","id":119,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":0,"code":"const add = x => y => z => {\\n\\tconsole.log(x, y, z);\\n\\treturn x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f `add` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e (\u0432\u0441\u0435 \u0435\u0449\u0435 \u0442\u0443\u0442?). \u041f\u0435\u0440\u0432\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `x` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `4`. \u041c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0432\u0442\u043e\u0440\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `y` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `5`. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0442\u0440\u0435\u0442\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `z` \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `6`. \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c `x`, `y` \u0438 `z` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u0435\u043b\u043a\u0438, \u0434\u0432\u0438\u0436\u043e\u043a JS \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f \u0432\u0432\u0435\u0440\u0445 \u043f\u043e \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f `x` \u0438 `y` \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u042d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `4` `5` `6`.","id":120,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"async function* range(start, end) {\\n\\tfor (let i = start; i <= end; i++) {\\n\\t\\tyield Promise.resolve(i);\\n\\t}\\n}\\n\\n(async () => {\\n\\tconst gen = range(1, 3);\\n\\tfor await (const item of gen) {\\n\\t\\tconsole.log(item);\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `range` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c: `Promise {1}`, `Promise {2}`, `Promise {3}`. \u041c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `gen` \u0440\u0430\u0432\u043d\u043e\u0439 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0437\u0430\u0446\u0438\u043a\u043b\u0438\u0432\u0430\u0435\u043c \u0435\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0446\u0438\u043a\u043b `for await ... of`. \u041c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `item` \u0440\u0430\u0432\u043d\u043e\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c `Promise`: \u0441\u043d\u0430\u0447\u0430\u043b\u0430 `Promise {1}`, \u0437\u0430\u0442\u0435\u043c `Promise {2}`, \u0437\u0430\u0442\u0435\u043c `Promise {3}`. \u0422\u0430\u043a \u043a\u0430\u043a \u043c\u044b _\u043e\u0436\u0438\u0434\u0430\u0435\u043c_ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `item`, \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0435 _\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f_ \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u044f: `1`, `2`, \u0437\u0430\u0442\u0435\u043c `3`.","id":121,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n\\tconsole.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"`myFunc` \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438 `x`, `y` \u0438 `z` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0440\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (1, 2, 3) \u0432\u043c\u0435\u0441\u0442\u043e \u043e\u0434\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438 `x`, `y` \u0438 `z` ({x: 1, y: 2, z: 3}), \u0442\u043e `x`, `y` \u0438 `z` \u0438\u043c\u0435\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e` undefined`.","id":122,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'unit\', unit: \'mile-per-hour\' }\\n  }).format(speed)\\n\\n  const formattedAmount = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'currency\', currency: \'USD\' }\\n  }).format(amount)\\n\\n  return `The driver drove ${formattedSpeed} and has to pay ${formattedAmount}`\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `Intl.NumberFormat` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043b\u044e\u0431\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u0438. \u041c\u044b \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `130` \u0434\u043b\u044f \u043b\u043e\u043a\u0430\u043b\u0438 `en-US` \u043a\u0430\u043a `unit` \u0432 `mile-per-hour`, \u0447\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `130 mph`. \u0427\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `300` \u0434\u043b\u044f \u043b\u043e\u043a\u0430\u043b\u0438 `en-US` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 `currentcy` \u0432 `USD` \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `$300.00`.","id":123,"options":["The driver drove 130 and has to pay 300","The driver drove 130 mph and has to pay $300.00","The driver drove undefined and has to pay undefined","The driver drove 130.00 and has to pay 300.00"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":1,"code":"const spookyItems = [\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"];\\n({ item: spookyItems[3] } = { item: \\"\ud83d\udc80\\" });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"\u0414\u0435\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u0443\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u043f\u0440\u0430\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438 \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u0433\u043e \u0436\u0435 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0432 \u043b\u0435\u0432\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \\"\ud83d\udc80\\" `spookyItems[3]`. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043c\u044b \u043c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 `spookyItems`, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a \u043d\u0435\u043c\u0443 \xab\ud83d\udc80\xbb. \u041f\u0440\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 `spookyItems` \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f ` [\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`.","id":124,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `Number.isNaN` \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0435 \u0432\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 _\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c_ \u0438 \u0440\u0430\u0432\u043d\u043e \u043b\u0438 \u043e\u043d\u043e `NaN`. `name` \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `Number.isNaN(name)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`. `age` \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u043d\u043e \u043d\u0435 \u0440\u0430\u0432\u043d\u043e `NaN`, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `Number.isNaN(age)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`.\\n\\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `isNaN` \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0435 \u0432\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u043c. `name` \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `isNaN(name)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true. `age` - \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 `isNaN(age)` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`.","id":125,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n\\tconsole.log(typeof randomValue);\\n\\tconst randomValue = \\"Lydia Hallie\\";\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c `const`, \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u0441\u044b\u043b\u043a\u0438 \u0434\u043e \u0438\u0445 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: \u044d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f _\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0435\u0440\u0442\u0432\u0430\u044f \u0437\u043e\u043d\u0430_. \u0412 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `getInfo` \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `randomValue` \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 `getInfo`. \u0412 \u0441\u0442\u0440\u043e\u043a\u0435, \u0433\u0434\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `typeof randomValue`, \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `randomValue` \u0435\u0449\u0435 \u043d\u0435 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0430: \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f `ReferenceError`! \u0414\u0432\u0438\u0436\u043e\u043a \u043d\u0435 \u043f\u043e\u0448\u0435\u043b \u043f\u043e \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `randomValue` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `getInfo`.","id":126,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":2,"code":"const myPromise = Promise.resolve(\\"Woah some cool data\\");\\n\\n(async () => {\\n\\ttry {\\n\\t\\tconsole.log(await myPromise);\\n\\t} catch {\\n\\t\\tthrow new Error(`Oops didn\'t work`);\\n\\t} finally {\\n\\t\\tconsole.log(\\"Oh finally!\\");\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"\u0412 \u0431\u043b\u043e\u043a\u0435 `try` \u043c\u044b \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0432 \u043b\u043e\u0433 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `myPromise`: `\\"Woah some cool data\\"`. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432 \u0431\u043b\u043e\u043a\u0435 `try` \u043d\u0435 \u0431\u044b\u043b\u043e \u0432\u044b\u0434\u0430\u043d\u043e \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a, \u043a\u043e\u0434 \u0432 \u0431\u043b\u043e\u043a\u0435 `catch` \u043d\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f. \u041a\u043e\u0434 \u0432 \u0431\u043b\u043e\u043a\u0435 `finally` _\u0432\u0441\u0435\u0433\u0434\u0430_ \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, `\\"Oh finally!\\"` \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043b\u043e\u0433.","id":127,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":1,"code":"const emojis = [\\"\ud83e\udd51\\", [\\"\u2728\\", \\"\u2728\\", [\\"\ud83c\udf55\\", \\"\ud83c\udf55\\"]]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 `flat` \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u043b\u043e\u0441\u043a\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u0413\u043b\u0443\u0431\u0438\u043d\u0430 \u0443\u043f\u043b\u043e\u0449\u0435\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `1` (\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e, \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e), \u0447\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0433\u043b\u0443\u0431\u0438\u043d\u0435. `[\'\ud83e\udd51\']` \u0438 `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]` \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435. \u041a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f \u044d\u0442\u0438\u0445 \u0434\u0432\u0443\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":128,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"},{"answer":3,"code":"class Counter {\\n  constructor() {\\n    this.count = 0;\\n  }\\n\\n  increment() {\\n    this.count++;\\n  }\\n}\\n\\nconst counterOne = new Counter();\\ncounterOne.increment();\\ncounterOne.increment();\\n\\nconst counterTwo = counterOne;\\ncounterTwo.increment();\\n\\nconsole.log(counterOne.count);","codeLanguage":"javascript","explanation":"`counterOne` \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 `Counter`. Counter \u043a\u043b\u0430\u0441\u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043c\u0435\u0442\u043e\u0434 `increment` \u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `count` \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435. \u0421\u043f\u0435\u0440\u0432\u0430, \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 `counterOne.increment()`, \u043c\u044b \u0434\u0432\u0430\u0436\u0434\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 `increment`. `counterOne.count` \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f `2`.\\n\\n<img src=\\"https://i.imgur.com/KxLlTm9.png\\" width=\\"400\\">\\n\\n\u0417\u0430\u0442\u0435\u043c, \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `counterTwo`, \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0435\u0439 `counterOne`. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435, \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0442\u043e \u0436\u0435 \u043c\u0435\u0441\u0442\u043e \u0432 \u043f\u0430\u043c\u044f\u0442\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 `counterOne`. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0442\u043e \u0436\u0435 \u043c\u0435\u0441\u0442\u043e \u0432 \u043f\u0430\u043c\u044f\u0442\u0438, \u043b\u044e\u0431\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0432\u043d\u0435\u0441\u0435\u043d\u043d\u044b\u0435 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f `counterTwo`, \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u043a` counterOne`. \u0422\u0435\u043f\u0435\u0440\u044c `counterTwo.count` \u0440\u0430\u0432\u043d\u043e `2`.\\n\\n\u041c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c `counterTwo.increment()`, \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `count` \u0440\u0430\u0432\u043d\u043e\u0435 `3`. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `counterOne`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e `3`.\\n\\n<img src=\\"https://i.imgur.com/BNBHXmc.png\\" width=\\"400\\">","id":129,"options":["`0`","`1`","`2`","`3`"],"question":"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435?"}],"locale":"ru-RU"},{"isRTL":false,"language":"\ud83c\udde8\ud83c\uddf3 \u7b80\u4f53\u4e2d\u6587","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name)\\n  console.log(age)\\n  var name = \'Lydia\'\\n  let age = 21\\n}\\n\\nsayHi()","codeLanguage":"javascript","explanation":"\u5728\u51fd\u6570\u5185\u90e8\uff0c\u6211\u4eec\u9996\u5148\u901a\u8fc7 `var` \u5173\u952e\u5b57\u58f0\u660e\u4e86 `name` \u53d8\u91cf\u3002\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u88ab\u63d0\u5347\u4e86\uff08\u5185\u5b58\u7a7a\u95f4\u5728\u521b\u5efa\u9636\u6bb5\u5c31\u88ab\u8bbe\u7f6e\u597d\u4e86\uff09\uff0c\u76f4\u5230\u7a0b\u5e8f\u8fd0\u884c\u5230\u5b9a\u4e49\u53d8\u91cf\u4f4d\u7f6e\u4e4b\u524d\u9ed8\u8ba4\u503c\u90fd\u662f `undefined`\u3002\u56e0\u4e3a\u5f53\u6211\u4eec\u6253\u5370 `name` \u53d8\u91cf\u65f6\u8fd8\u6ca1\u6709\u6267\u884c\u5230\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u53d8\u91cf\u7684\u503c\u4fdd\u6301\u4e3a `undefined`\u3002\\n\\n\u901a\u8fc7 `let` \u548c `const` \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u4e5f\u4f1a\u63d0\u5347\uff0c\u4f46\u662f\u548c `var` \u4e0d\u540c\uff0c\u5b83\u4eec\u4e0d\u4f1a\u88ab<i>\u521d\u59cb\u5316</i>\u3002\u5728\u6211\u4eec\u58f0\u660e\uff08\u521d\u59cb\u5316\uff09\u4e4b\u524d\u662f\u4e0d\u80fd\u8bbf\u95ee\u5b83\u4eec\u7684\u3002\u8fd9\u4e2a\u884c\u4e3a\u88ab\u79f0\u4e4b\u4e3a\u6682\u65f6\u6027\u6b7b\u533a\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u5728\u58f0\u660e\u4e4b\u524d\u8bbf\u95ee\u5b83\u4eec\u65f6\uff0cJavaScript \u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a `ReferenceError` \u9519\u8bef\u3002","id":0,"options":["`Lydia` \u548c `undefined`","`Lydia` \u548c `ReferenceError`","`ReferenceError` \u548c `21`","`undefined` \u548c `ReferenceError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1)\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1)\\n}","codeLanguage":"javascript","explanation":"\u7531\u4e8e JavaScript \u7684\u4e8b\u4ef6\u5faa\u73af\uff0c`setTimeout` \u56de\u8c03\u4f1a\u5728*\u904d\u5386\u7ed3\u675f\u540e*\u624d\u6267\u884c\u3002\u56e0\u4e3a\u5728\u7b2c\u4e00\u4e2a\u904d\u5386\u4e2d\u904d\u5386 `i` \u662f\u901a\u8fc7 `var` \u5173\u952e\u5b57\u58f0\u660e\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u503c\u662f\u5168\u5c40\u4f5c\u7528\u57df\u4e0b\u7684\u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u5143\u64cd\u4f5c\u7b26 `++` \u6765\u6bcf\u6b21\u9012\u589e `i` \u7684\u503c\u3002\u5f53 `setTimeout` \u56de\u8c03\u6267\u884c\u7684\u65f6\u5019\uff0c`i` \u7684\u503c\u7b49\u4e8e 3\u3002\\n\\n\u5728\u7b2c\u4e8c\u4e2a\u904d\u5386\u4e2d\uff0c\u904d\u5386 `i` \u662f\u901a\u8fc7 `let` \u5173\u952e\u5b57\u58f0\u660e\u7684\uff1a\u901a\u8fc7 `let` \u548c `const` \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u662f\u62e5\u6709\u5757\u7ea7\u4f5c\u7528\u57df\uff08\u6307\u7684\u662f\u4efb\u4f55\u5728 {} \u4e2d\u7684\u5185\u5bb9\uff09\u3002\u5728\u6bcf\u6b21\u7684\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c`i` \u90fd\u6709\u4e00\u4e2a\u65b0\u503c\uff0c\u5e76\u4e14\u6bcf\u4e2a\u503c\u90fd\u5728\u5faa\u73af\u5185\u7684\u4f5c\u7528\u57df\u4e2d\u3002","id":1,"options":["`0 1 2` \u548c `0 1 2`","`0 1 2` \u548c `3 3 3`","`3 3 3` \u548c `0 1 2`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n}\\n\\nshape.diameter()\\nshape.perimeter()","codeLanguage":"javascript","explanation":"\u6ce8\u610f `diameter` \u7684\u503c\u662f\u4e00\u4e2a\u5e38\u89c4\u51fd\u6570\uff0c\u4f46\u662f `perimeter` \u7684\u503c\u662f\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\u3002\\n\\n\u5bf9\u4e8e\u7bad\u5934\u51fd\u6570\uff0c`this` \u5173\u952e\u5b57\u6307\u5411\u7684\u662f\u5b83\u5f53\u524d\u5468\u56f4\u4f5c\u7528\u57df\uff08\u7b80\u5355\u6765\u8bf4\u662f\u5305\u542b\u7bad\u5934\u51fd\u6570\u7684\u5e38\u89c4\u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u5e38\u89c4\u51fd\u6570\u7684\u8bdd\u5c31\u662f\u5168\u5c40\u5bf9\u8c61\uff09\uff0c\u8fd9\u4e2a\u884c\u4e3a\u548c\u5e38\u89c4\u51fd\u6570\u4e0d\u540c\u3002\u8fd9\u610f\u5473\u7740\u5f53\u6211\u4eec\u8c03\u7528 `perimeter` \u65f6\uff0c`this` \u4e0d\u662f\u6307\u5411 `shape` \u5bf9\u8c61\uff0c\u800c\u662f\u5b83\u7684\u5468\u56f4\u4f5c\u7528\u57df\uff08\u5728\u4f8b\u5b50\u4e2d\u662f `window`\uff09\u3002\\n\\n\u5728 `window` \u4e2d\u6ca1\u6709 `radius` \u8fd9\u4e2a\u5c5e\u6027\uff0c\u56e0\u6b64\u8fd4\u56de `undefined`\u3002","id":2,"options":["`20` and `62.83185307179586`","`20` and `NaN`","`20` and `63`","`NaN` and `63`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\u4e00\u5143\u64cd\u4f5c\u7b26\u52a0\u53f7\u5c1d\u8bd5\u5c06 bool \u8f6c\u4e3a number\u3002`true` \u8f6c\u6362\u4e3a number \u7684\u8bdd\u4e3a `1`\uff0c`false` \u4e3a `0`\u3002\\n\\n\u5b57\u7b26\u4e32 `\'Lydia\'` \u662f\u4e00\u4e2a\u771f\u503c\uff0c\u771f\u503c\u53d6\u53cd\u90a3\u4e48\u5c31\u8fd4\u56de `false`\u3002","id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"const bird = {\\n  size: \'small\'\\n}\\n\\nconst mouse = {\\n  name: \'Mickey\',\\n  small: true\\n}","codeLanguage":"javascript","explanation":"\u5728 JavaScript \u4e2d\uff0c\u6240\u6709\u5bf9\u8c61\u7684 keys \u90fd\u662f\u5b57\u7b26\u4e32\uff08\u9664\u975e\u5bf9\u8c61\u662f Symbol\uff09\u3002\u5c3d\u7ba1\u6211\u4eec\u53ef\u80fd\u4e0d\u4f1a\u5b9a\u4e49\u5b83\u4eec\u4e3a\u5b57\u7b26\u4e32\uff0c\u4f46\u5b83\u4eec\u5728\u5e95\u5c42\u603b\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\\n\\n\u5f53\u6211\u4eec\u4f7f\u7528\u62ec\u53f7\u8bed\u6cd5\u65f6\uff08[]\uff09\uff0cJavaScript \u4f1a\u89e3\u91ca\uff08\u6216\u8005 unboxes\uff09\u8bed\u53e5\u3002\u5b83\u9996\u5148\u770b\u5230\u7b2c\u4e00\u4e2a\u5f00\u59cb\u62ec\u53f7 `[` \u5e76\u7ee7\u7eed\u524d\u8fdb\u76f4\u5230\u627e\u5230\u7ed3\u675f\u62ec\u53f7 `]`\u3002\u53ea\u6709\u8fd9\u6837\uff0c\u5b83\u624d\u4f1a\u8ba1\u7b97\u8bed\u53e5\u7684\u503c\u3002\\n\\n`mouse[bird.size]`\uff1a\u9996\u5148\u8ba1\u7b97 `bird.size`\uff0c\u8fd9\u4f1a\u5f97\u5230 `small`\u3002`mouse[\\"small\\"]` \u8fd4\u56de `true`\u3002\\n\\n\u7136\u540e\u4f7f\u7528\u70b9\u8bed\u6cd5\u7684\u8bdd\uff0c\u4e0a\u9762\u8fd9\u4e00\u5207\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002`mouse` \u6ca1\u6709 `bird` \u8fd9\u4e2a key\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740 `mouse.bird` \u662f `undefined`\u3002\u7136\u540e\u5f53\u6211\u4eec\u4f7f\u7528\u70b9\u8bed\u6cd5 `mouse.bird.size` \u65f6\uff0c\u56e0\u4e3a `mouse.bird` \u662f `undefined`\uff0c\u8fd9\u4e5f\u5c31\u53d8\u6210\u4e86 `undefined.size`\u3002\u8fd9\u4e2a\u884c\u4e3a\u662f\u65e0\u6548\u7684\uff0c\u5e76\u4e14\u4f1a\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u7c7b\u4f3c `Cannot read property \\"size\\" of undefined`\u3002","id":4,"options":["`mouse.bird.size`\u662f\u65e0\u6548\u7684","`mouse[bird.size]`\u662f\u65e0\u6548\u7684","`mouse[bird[\\"size\\"]]`\u662f\u65e0\u6548\u7684","\u4ee5\u4e0a\u4e09\u4e2a\u9009\u9879\u90fd\u662f\u6709\u6548\u7684"],"question":"\u54ea\u4e00\u4e2a\u662f\u6b63\u786e\u7684\uff1f"},{"answer":0,"code":"let c = { greeting: \'Hey!\' }\\nlet d\\n\\nd = c\\nc.greeting = \'Hello\'\\nconsole.log(d.greeting)","codeLanguage":"javascript","explanation":"\u5728 JavaScript \u4e2d\uff0c\u5f53\u8bbe\u7f6e\u4e24\u4e2a\u5bf9\u8c61\u5f7c\u6b64\u76f8\u7b49\u65f6\uff0c\u5b83\u4eec\u4f1a\u901a\u8fc7*\u5f15\u7528*\u8fdb\u884c\u4ea4\u4e92\u3002\\n\\n\u9996\u5148\uff0c\u53d8\u91cf `c` \u7684\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ed9 `d` \u5206\u914d\u4e86\u4e00\u4e2a\u548c `c` \u5bf9\u8c61\u76f8\u540c\u7684\u5f15\u7528\u3002\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n\u56e0\u6b64\u5f53\u6211\u4eec\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5176\u5b9e\u662f\u6539\u53d8\u4e86\u6240\u6709\u7684\u5bf9\u8c61\u3002","id":5,"options":["`Hello`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"let a = 3\\nlet b = new Number(3)\\nlet c = 3\\n\\nconsole.log(a == b)\\nconsole.log(a === b)\\nconsole.log(b === c)","codeLanguage":"javascript","explanation":"`new Number()` \u662f\u4e00\u4e2a\u5185\u5efa\u7684\u51fd\u6570\u6784\u9020\u5668\u3002\u867d\u7136\u5b83\u770b\u7740\u50cf\u662f\u4e00\u4e2a number\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u5b9e\u7684 number\uff1a\u5b83\u6709\u4e00\u5806\u989d\u5916\u7684\u529f\u80fd\u5e76\u4e14\u5b83\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002\\n\\n\u5f53\u6211\u4eec\u4f7f\u7528 `==` \u64cd\u4f5c\u7b26\u65f6\uff0c\u5b83\u53ea\u4f1a\u68c0\u67e5\u4e24\u8005\u662f\u5426\u62e5\u6709\u76f8\u540c\u7684*\u503c*\u3002\u56e0\u4e3a\u5b83\u4eec\u7684\u503c\u90fd\u662f `3`\uff0c\u56e0\u6b64\u8fd4\u56de `true`\u3002\\n\\n\u7136\u540e\uff0c\u5f53\u6211\u4eec\u4f7f\u7528 `===` \u64cd\u4f5c\u7b26\u65f6\uff0c\u4e24\u8005\u7684\u503c\u4ee5\u53ca*\u7c7b\u578b*\u90fd\u5e94\u8be5\u662f\u76f8\u540c\u7684\u3002`new Number()` \u662f\u4e00\u4e2a\u5bf9\u8c61\u800c\u4e0d\u662f number\uff0c\u56e0\u6b64\u8fd4\u56de `false`\u3002","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor\\n    return this.newColor\\n  }\\n\\n  constructor({ newColor = \'green\' } = {}) {\\n    this.newColor = newColor\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \'purple\' })\\nfreddie.colorChange(\'orange\')","codeLanguage":"javascript","explanation":"`colorChange` \u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u3002\u9759\u6001\u65b9\u6cd5\u88ab\u8bbe\u8ba1\u4e3a\u53ea\u80fd\u88ab\u521b\u5efa\u5b83\u4eec\u7684\u6784\u9020\u5668\u4f7f\u7528\uff08\u4e5f\u5c31\u662f `Chameleon`\uff09\uff0c\u5e76\u4e14\u4e0d\u80fd\u4f20\u9012\u7ed9\u5b9e\u4f8b\u3002\u56e0\u4e3a `freddie` \u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u4f7f\u7528\uff0c\u56e0\u6b64\u629b\u51fa\u4e86 `TypeError` \u9519\u8bef\u3002","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"let greeting\\ngreetign = {} // Typo!\\nconsole.log(greetign)","codeLanguage":"javascript","explanation":"\u4ee3\u7801\u6253\u5370\u51fa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u5168\u5c40\u5bf9\u8c61\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff01\u5f53\u6211\u4eec\u5c06 `greeting` \u5199\u9519\u6210 `greetign` \u65f6\uff0cJS \u89e3\u91ca\u5668\u5b9e\u9645\u5728\u4e0a\u6d4f\u89c8\u5668\u4e2d\u5c06\u5b83\u89c6\u4e3a `global.greetign = {}` \uff08\u6216\u8005 `window.greetign = {}`\uff09\u3002\\n\\n\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u4e3a\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 `\\"use strict\\"\u3002\u8fd9\u80fd\u786e\u4fdd\u5f53\u4f60\u58f0\u660e\u53d8\u91cf\u65f6\u5fc5\u987b\u8d4b\u503c\u3002","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"function bark() {\\n  console.log(\'Woof!\')\\n}\\n\\nbark.animal = \'dog\'","codeLanguage":"javascript","explanation":"\u8fd9\u5728 JavaScript \u4e2d\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u51fd\u6570\u662f\u5bf9\u8c61\uff01\uff08\u9664\u4e86\u57fa\u672c\u7c7b\u578b\u4e4b\u5916\u5176\u4ed6\u90fd\u662f\u5bf9\u8c61\uff09\\n\\n\u51fd\u6570\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61\u3002\u4f60\u5199\u7684\u8fd9\u4e2a\u4ee3\u7801\u5176\u5b9e\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u51fd\u6570\u3002\u51fd\u6570\u662f\u4e00\u4e2a\u62e5\u6709\u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u5c5e\u6027\u4e5f\u53ef\u88ab\u8c03\u7528\u3002","id":9,"options":["\u6b63\u5e38\u8fd0\u884c!","`SyntaxError`. \u4f60\u4e0d\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7ed9\u51fd\u6570\u589e\u52a0\u5c5e\u6027\u3002","`undefined`","`ReferenceError`"],"question":"\u5f53\u6211\u4eec\u8fd9\u4e48\u505a\u65f6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function () {\\n  return `${this.firstName} ${this.lastName}`;\\n}\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"\u4f60\u4e0d\u80fd\u50cf\u5e38\u89c4\u5bf9\u8c61\u90a3\u6837\uff0c\u7ed9\u6784\u9020\u51fd\u6570\u6dfb\u52a0\u5c5e\u6027\u3002\u5982\u679c\u4f60\u60f3\u4e00\u6b21\u6027\u7ed9\u6240\u6709\u5b9e\u4f8b\u6dfb\u52a0\u7279\u6027\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u539f\u578b\u3002\u56e0\u6b64\u672c\u4f8b\u4e2d\uff0c\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff1a\\n\\n```js\\nPerson.prototype.getFullName = function () {\\n  return `${this.firstName} ${this.lastName}`;\\n}\\n```\\n\\n\u8fd9\u624d\u4f1a\u4f7f `member.getFullName()` \u8d77\u4f5c\u7528\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u6709\u76ca\u7684\uff1f\u5047\u8bbe\u6211\u4eec\u5c06\u8fd9\u4e2a\u65b9\u6cd5\u6dfb\u52a0\u5230\u6784\u9020\u51fd\u6570\u672c\u8eab\u91cc\u3002\u4e5f\u8bb8\u4e0d\u662f\u6bcf\u4e2a `Person` \u5b9e\u4f8b\u90fd\u9700\u8981\u8fd9\u4e2a\u65b9\u6cd5\u3002\u8fd9\u5c06\u6d6a\u8d39\u5927\u91cf\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5b83\u4eec\u4ecd\u7136\u5177\u6709\u8be5\u5c5e\u6027\uff0c\u8fd9\u5c06\u5360\u7528\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u53ea\u5c06\u5b83\u6dfb\u52a0\u5230\u539f\u578b\u4e2d\uff0c\u90a3\u4e48\u5b83\u53ea\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f46\u662f\u6240\u6709\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5b83\uff01","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName\\n  this.lastName = lastName\\n}\\n\\nconst lydia = new Person(\'Lydia\', \'Hallie\')\\nconst sarah = Person(\'Sarah\', \'Smith\')\\n\\nconsole.log(lydia)\\nconsole.log(sarah)","codeLanguage":"javascript","explanation":"\u5bf9\u4e8e `sarah`\uff0c\u6211\u4eec\u6ca1\u6709\u4f7f\u7528 `new` \u5173\u952e\u5b57\u3002\u5f53\u4f7f\u7528 `new` \u65f6\uff0c`this` \u5f15\u7528\u6211\u4eec\u521b\u5efa\u7684\u7a7a\u5bf9\u8c61\u3002\u5f53\u672a\u4f7f\u7528 `new` \u65f6\uff0c`this` \u5f15\u7528\u7684\u662f**\u5168\u5c40\u5bf9\u8c61**\uff08global object\uff09\u3002\\n\\n\u6211\u4eec\u8bf4 `this.firstName` \u7b49\u4e8e `\\"Sarah\\"`\uff0c\u5e76\u4e14 `this.lastName` \u7b49\u4e8e `\\"Smith\\"`\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u505a\u7684\u662f\uff0c\u5b9a\u4e49\u4e86 `global.firstName = \'Sarah\'` \u548c `global.lastName = \'Smith\'`\u3002\u800c `sarah` \u672c\u8eab\u662f `undefined`\u3002","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `ReferenceError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":3,"explanation":"\u5728**\u6355\u83b7**\uff08capturing\uff09\u9636\u6bb5\u4e2d\uff0c\u4e8b\u4ef6\u4ece\u7956\u5148\u5143\u7d20\u5411\u4e0b\u4f20\u64ad\u5230\u76ee\u6807\u5143\u7d20\u3002\u5f53\u4e8b\u4ef6\u8fbe\u5230**\u76ee\u6807**\uff08target\uff09\u5143\u7d20\u540e\uff0c**\u5192\u6ce1**\uff08bubbling\uff09\u624d\u5f00\u59cb\u3002\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\u4e8b\u4ef6\u4f20\u64ad\u7684\u4e09\u4e2a\u9636\u6bb5\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"explanation":"\u9664\u4e86**\u57fa\u672c\u5bf9\u8c61**\uff08base object\uff09\uff0c\u6240\u6709\u5bf9\u8c61\u90fd\u6709\u539f\u578b\u3002\u57fa\u672c\u5bf9\u8c61\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e9b\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u6bd4\u5982 `.toString`\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 JavaScript \u65b9\u6cd5\uff01\u6240\u6709\u8fd9\u4e9b\u65b9\u6cd5\u5728\u539f\u578b\u4e0a\u90fd\u662f\u53ef\u7528\u7684\u3002\u867d\u7136 JavaScript \u4e0d\u80fd\u76f4\u63a5\u5728\u5bf9\u8c61\u4e0a\u627e\u5230\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u4f46 JavaScript \u4f1a\u6cbf\u7740\u539f\u578b\u94fe\u627e\u5230\u5b83\u4eec\uff0c\u4ee5\u4fbf\u4e8e\u4f60\u4f7f\u7528\u3002","id":13,"options":["\u5bf9","\u9519"],"question":"\u6240\u6709\u5bf9\u8c61\u90fd\u6709\u539f\u578b\u3002"},{"answer":2,"code":"function sum(a, b) {\\n  return a + b\\n}\\n\\nsum(1, \'2\')","codeLanguage":"javascript","explanation":"JavaScript \u662f\u4e00\u79cd**\u52a8\u6001\u7c7b\u578b\u8bed\u8a00**\uff1a\u6211\u4eec\u4e0d\u6307\u5b9a\u67d0\u4e9b\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u503c\u53ef\u4ee5\u5728\u4f60\u4e0d\u77e5\u9053\u7684\u60c5\u51b5\u4e0b\u81ea\u52a8\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u7c7b\u578b\u79f0\u4e3a**\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362**\uff08implicit type coercion\uff09\u3002**Coercion** \u662f\u6307\u5c06\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b\u3002\\n\\n\u5728\u672c\u4f8b\u4e2d\uff0cJavaScript \u5c06\u6570\u5b57 `1` \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u4ee5\u4fbf\u51fd\u6570\u6709\u610f\u4e49\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5728\u6570\u5b57\u7c7b\u578b\uff08`1`\uff09\u548c\u5b57\u7b26\u4e32\u7c7b\u578b\uff08`\'2\'`\uff09\u76f8\u52a0\u65f6\uff0c\u8be5\u6570\u5b57\u88ab\u89c6\u4e3a\u5b57\u7b26\u4e32\u3002\u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 `\\"Hello\\" + \\"World\\"`\uff0c\u8fd9\u91cc\u53d1\u751f\u7684\u662f `\\"1\\" + \\"2\\"`\uff0c\u5b83\u8fd4\u56de `\\"12\\"`\u3002","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"let number = 0\\nconsole.log(number++)\\nconsole.log(++number)\\nconsole.log(number)","codeLanguage":"javascript","explanation":"\u4e00\u5143**\u540e\u81ea\u589e**\u8fd0\u7b97\u7b26 `++`\uff1a\\n\\n1. \u8fd4\u56de\u503c\uff08\u8fd4\u56de `0`\uff09\\n2. \u503c\u81ea\u589e\uff08number \u73b0\u5728\u662f `1`\uff09\\n\\n\u4e00\u5143**\u524d\u81ea\u589e**\u8fd0\u7b97\u7b26 `++`\uff1a\\n\\n1. \u503c\u81ea\u589e\uff08number \u73b0\u5728\u662f `2`\uff09\\n2. \u8fd4\u56de\u503c\uff08\u8fd4\u56de `2`\uff09\\n\\n\u7ed3\u679c\u662f `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one)\\n  console.log(two)\\n  console.log(three)\\n}\\n\\nconst person = \'Lydia\'\\nconst age = 21\\n\\ngetPersonInfo`${person} is ${age} years old`","codeLanguage":"javascript","explanation":"\u5982\u679c\u4f7f\u7528\u6807\u8bb0\u6a21\u677f\u5b57\u9762\u91cf\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\u603b\u662f\u5305\u542b\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\u3002\u5176\u4f59\u7684\u53c2\u6570\u83b7\u53d6\u7684\u662f\u4f20\u9012\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff01","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\'You are an adult!\')\\n  } else if (data == { age: 18 }) {\\n    console.log(\'You are still an adult.\')\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`)\\n  }\\n}\\n\\ncheckAge({ age: 18 })","codeLanguage":"javascript","explanation":"\u5728\u6d4b\u8bd5\u76f8\u7b49\u6027\u65f6\uff0c\u57fa\u672c\u7c7b\u578b\u901a\u8fc7\u5b83\u4eec\u7684\u503c\uff08value\uff09\u8fdb\u884c\u6bd4\u8f83\uff0c\u800c\u5bf9\u8c61\u901a\u8fc7\u5b83\u4eec\u7684\u5f15\u7528\uff08reference\uff09\u8fdb\u884c\u6bd4\u8f83\u3002JavaScript \u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u5177\u6709\u5bf9\u5185\u5b58\u4e2d\u76f8\u540c\u4f4d\u7f6e\u7684\u5f15\u7528\u3002\\n\\n\u9898\u76ee\u4e2d\u6211\u4eec\u6b63\u5728\u6bd4\u8f83\u7684\u4e24\u4e2a\u5bf9\u8c61\u4e0d\u662f\u540c\u4e00\u4e2a\u5f15\u7528\uff1a\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u5bf9\u8c61\u5f15\u7528\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u4e0e\u7528\u4e8e\u5224\u65ad\u76f8\u7b49\u7684\u5bf9\u8c61\u6240\u5f15\u7528\u7684\u5185\u5b58\u4f4d\u7f6e\u5e76\u4e0d\u540c\u3002\\n\\n\u8fd9\u4e5f\u662f `{ age: 18 } === { age: 18 }` \u548c `{ age: 18 } == { age: 18 }` \u90fd\u8fd4\u56de `false` \u7684\u539f\u56e0\u3002","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args)\\n}\\n\\ngetAge(21)","codeLanguage":"javascript","explanation":"\u6269\u5c55\u8fd0\u7b97\u7b26\uff08`...args`\uff09\u4f1a\u8fd4\u56de\u5b9e\u53c2\u7ec4\u6210\u7684\u6570\u7ec4\u3002\u800c\u6570\u7ec4\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64 `typeof args` \u8fd4\u56de `\\"object\\"`\u3002","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"function getAge() {\\n  \'use strict\'\\n  age = 21\\n  console.log(age)\\n}\\n\\ngetAge()","codeLanguage":"javascript","explanation":"\u4f7f\u7528 `\\"use strict\\"`\uff0c\u4f60\u53ef\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u610f\u5916\u5730\u58f0\u660e\u5168\u5c40\u53d8\u91cf\u3002\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u58f0\u660e\u53d8\u91cf `age`\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528 `\\"use strict\\"`\uff0c\u5b83\u5c06\u629b\u51fa\u4e00\u4e2a\u5f15\u7528\u9519\u8bef\u3002\u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528 `\\"use strict\\"`\uff0c\u5b83\u5c31\u4f1a\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5c5e\u6027 `age` \u4f1a\u88ab\u6dfb\u52a0\u5230\u5168\u5c40\u5bf9\u8c61\u4e2d\u4e86\u3002","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"const sum = eval(\'10*10+5\')","codeLanguage":"javascript","explanation":"\u4ee3\u7801\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4f20\u9012\u8fdb\u6765\uff0c`eval` \u5bf9\u5176\u6c42\u503c\u3002\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5c31\u50cf\u672c\u4f8b\u4e2d\u90a3\u6837\uff0c\u5b83\u5bf9\u8868\u8fbe\u5f0f\u6c42\u503c\u3002\u8868\u8fbe\u5f0f\u662f `10 * 10 + 5`\u3002\u8fd9\u5c06\u8fd4\u56de\u6570\u5b57 `105`\u3002","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"sessionStorage.setItem(\'cool_secret\', 123)","codeLanguage":"javascript","explanation":"\u5173\u95ed **tab \u6807\u7b7e\u9875** \u540e\uff0c`sessionStorage` \u5b58\u50a8\u7684\u6570\u636e\u624d\u4f1a\u5220\u9664\u3002\\n\\n\u5982\u679c\u4f7f\u7528 `localStorage`\uff0c\u90a3\u4e48\u6570\u636e\u5c06\u6c38\u8fdc\u5728\u90a3\u91cc\uff0c\u9664\u975e\u8c03\u7528\u4e86 `localStorage.clear()`\u3002","id":21,"options":["\u6c38\u8fdc\uff0c\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002","\u5f53\u7528\u6237\u5173\u6389\u6807\u7b7e\u9875\u65f6\u3002","\u5f53\u7528\u6237\u5173\u6389\u6574\u4e2a\u6d4f\u89c8\u5668\uff0c\u800c\u4e0d\u53ea\u662f\u5173\u6389\u6807\u7b7e\u9875\u3002","\u5f53\u7528\u6237\u5173\u95ed\u7535\u8111\u65f6\u3002"],"question":"cool_secret \u53ef\u8bbf\u95ee\u591a\u957f\u65f6\u95f4\uff1f"},{"answer":1,"code":"var num = 8\\nvar num = 10\\n\\nconsole.log(num)","codeLanguage":"javascript","explanation":"\u4f7f\u7528 `var` \u5173\u952e\u5b57\uff0c\u4f60\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u540d\u79f0\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\u3002\u7136\u540e\u53d8\u91cf\u5c06\u4fdd\u5b58\u6700\u65b0\u7684\u503c\u3002\\n\\n\u4f60\u4e0d\u80fd\u4f7f\u7528 `let` \u6216 `const` \u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5757\u4f5c\u7528\u57df\u7684\u3002","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"const obj = { 1: \'a\', 2: \'b\', 3: \'c\' }\\nconst set = new Set([1, 2, 3, 4, 5])\\n\\nobj.hasOwnProperty(\'1\')\\nobj.hasOwnProperty(1)\\nset.has(\'1\')\\nset.has(1)","codeLanguage":"javascript","explanation":"\u6240\u6709\u5bf9\u8c61\u7684\u952e\uff08\u4e0d\u5305\u62ec Symbol\uff09\u5728\u5e95\u5c42\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u5373\u4f7f\u4f60\u81ea\u5df1\u6ca1\u6709\u5c06\u5176\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8f93\u5165\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 `obj.hasOwnProperty(\'1\')` \u4e5f\u8fd4\u56de `true`\u3002\\n\\n\u5bf9\u4e8e\u96c6\u5408\uff0c\u5b83\u4e0d\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\u3002\u5728\u6211\u4eec\u7684\u96c6\u5408\u4e2d\u6ca1\u6709 `\'1\'`\uff1a`set.has(\'1\')` \u8fd4\u56de `false`\u3002\u5b83\u6709\u6570\u5b57\u7c7b\u578b\u4e3a `1`\uff0c`set.has(1)` \u8fd4\u56de `true`\u3002","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"const obj = { a: \'one\', b: \'two\', a: \'three\' }\\nconsole.log(obj)","codeLanguage":"javascript","explanation":"\u5982\u679c\u4f60\u6709\u4e24\u4e2a\u540d\u79f0\u76f8\u540c\u7684\u952e\uff0c\u5219\u952e\u4f1a\u88ab\u66ff\u6362\u6389\u3002\u5b83\u4ecd\u7136\u4f4d\u4e8e\u7b2c\u4e00\u4e2a\u952e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u503c\u662f\u6700\u540e\u51fa\u73b0\u90a3\u4e2a\u952e\u7684\u503c\u3002","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"explanation":"\u57fa\u672c\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\uff1a\u5b83\u662f\u4ee3\u7801\u4e2d\u968f\u5904\u53ef\u8bbf\u95ee\u7684\u5185\u5bb9\u3002","id":25,"options":["\u5bf9","\u9519","\u770b\u60c5\u51b5"],"question":"JavaScript \u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u4e3a\u4f60\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\u5168\u5c40\u5bf9\u8c61\u548c this \u5173\u952e\u5b57\u3002"},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue\\n  console.log(i)\\n}","codeLanguage":"javascript","explanation":"\u5982\u679c\u67d0\u4e2a\u6761\u4ef6\u8fd4\u56de `true`\uff0c\u5219 `continue` \u8bed\u53e5\u8df3\u8fc7\u672c\u6b21\u8fed\u4ee3\u3002","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \'Just give Lydia pizza already!\'\\n}\\n\\nconst name = \'Lydia\'\\n\\nname.giveLydiaPizza()","codeLanguage":"javascript","explanation":"`String` \u662f\u5185\u7f6e\u7684\u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u5b83\u6dfb\u52a0\u5c5e\u6027\u3002\u6211\u53ea\u662f\u5728\u5b83\u7684\u539f\u578b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u6cd5\u3002\u57fa\u672c\u7c7b\u578b\u5b57\u7b26\u4e32\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u7531\u5b57\u7b26\u4e32\u539f\u578b\u51fd\u6570\u751f\u6210\u3002\u56e0\u6b64\uff0c\u6240\u6709 string(string \u5bf9\u8c61)\u90fd\u53ef\u4ee5\u8bbf\u95ee\u8be5\u65b9\u6cd5\uff01","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const a = {}\\nconst b = { key: \'b\' }\\nconst c = { key: \'c\' }\\n\\na[b] = 123\\na[c] = 456\\n\\nconsole.log(a[b])","codeLanguage":"javascript","explanation":"\u5bf9\u8c61\u7684\u952e\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\u6211\u4eec\u8bd5\u56fe\u5c06\u4e00\u4e2a\u5bf9\u8c61 `b` \u8bbe\u7f6e\u4e3a\u5bf9\u8c61 `a` \u7684\u952e\uff0c\u4e14\u76f8\u5e94\u7684\u503c\u4e3a `123`\u3002\\n\\n\u7136\u800c\uff0c\u5f53\u5b57\u7b26\u4e32\u5316\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5b83\u4f1a\u53d8\u6210 `\\"[object Object]\\"`\u3002\u56e0\u6b64\u8fd9\u91cc\u8bf4\u7684\u662f\uff0c`a[\\"[object Object]\\"] = 123`\u3002\u7136\u540e\uff0c\u6211\u4eec\u518d\u4e00\u6b21\u505a\u4e86\u540c\u6837\u7684\u4e8b\u60c5\uff0c`c` \u662f\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4e5f\u6709\u9690\u5f0f\u5b57\u7b26\u4e32\u5316\uff0c\u4e8e\u662f\uff0c`a[\\"[object Object]\\"] = 456`\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u6253\u5370 `a[b]`\uff0c\u4e5f\u5c31\u662f `a[\\"[object Object]\\"]`\u3002\u4e4b\u524d\u521a\u8bbe\u7f6e\u4e3a `456`\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u662f `456`\u3002","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const foo = () => console.log(\'First\')\\nconst bar = () => setTimeout(() => console.log(\'Second\'))\\nconst baz = () => console.log(\'Third\')\\n\\nbar()\\nfoo()\\nbaz()","codeLanguage":"javascript","explanation":"\u6211\u4eec\u6709\u4e00\u4e2a `setTimeout` \u51fd\u6570\uff0c\u5e76\u9996\u5148\u8c03\u7528\u5b83\u3002\u7136\u800c\uff0c\u5b83\u662f\u6700\u540e\u6253\u5370\u65e5\u5fd7\u7684\u3002\\n\\n\u8fd9\u662f\u56e0\u4e3a\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u6211\u4eec\u4e0d\u4ec5\u6709\u8fd0\u884c\u65f6\u5f15\u64ce\uff0c\u8fd8\u6709\u4e00\u4e2a\u53eb\u505a `WebAPI` \u7684\u4e1c\u897f\u3002`WebAPI` \u63d0\u4f9b\u4e86 `setTimeout` \u51fd\u6570\uff0c\u4e5f\u5305\u542b\u5176\u4ed6\u7684\uff0c\u4f8b\u5982 DOM\u3002\\n\\n\u5c06 _callback_ \u63a8\u9001\u5230 WebAPI \u540e\uff0c`setTimeout` \u51fd\u6570\u672c\u8eab(\u4f46\u4e0d\u662f\u56de\u8c03\uff01)\u5c06\u4ece\u6808\u4e2d\u5f39\u51fa\u3002\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\u73b0\u5728\uff0c`foo` \u88ab\u8c03\u7528\uff0c\u6253\u5370 `\\"First\\"`\u3002\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` \u4ece\u6808\u4e2d\u5f39\u51fa\uff0c`baz` \u88ab\u8c03\u7528. \u6253\u5370 `\\"Third\\"`\u3002\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI \u4e0d\u80fd\u968f\u65f6\u5411\u6808\u5185\u6dfb\u52a0\u5185\u5bb9\u3002\u76f8\u53cd\uff0c\u5b83\u5c06\u56de\u8c03\u51fd\u6570\u63a8\u5230\u540d\u4e3a _queue_ \u7684\u5730\u65b9\u3002\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\u8fd9\u5c31\u662f\u4e8b\u4ef6\u5faa\u73af\u5f00\u59cb\u5de5\u4f5c\u7684\u5730\u65b9\u3002\u4e00\u4e2a**\u4e8b\u4ef6\u5faa\u73af**\u67e5\u770b\u6808\u548c\u4efb\u52a1\u961f\u5217\u3002\u5982\u679c\u6808\u662f\u7a7a\u7684\uff0c\u5b83\u63a5\u53d7\u961f\u5217\u4e0a\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5e76\u5c06\u5176\u63a8\u5165\u6808\u3002\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` \u88ab\u8c03\u7528\uff0c\u6253\u5370 `\\"Second\\"`\uff0c\u7136\u540e\u5b83\u88ab\u6808\u5f39\u51fa\u3002","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\u5bfc\u81f4\u4e8b\u4ef6\u7684\u6700\u6df1\u5d4c\u5957\u7684\u5143\u7d20\u662f\u4e8b\u4ef6\u7684 target\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 `event.stopPropagation` \u6765\u505c\u6b62\u5192\u6ce1\u3002","id":30,"options":["Outer `div`","Inner `div`","`button`","\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5d4c\u5957\u5143\u7d20\u7684\u6570\u7ec4\u3002"],"question":"\u5f53\u70b9\u51fb\u6309\u94ae\u65f6\uff0cevent.target\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"\u5982\u679c\u6211\u4eec\u70b9\u51fb `p`\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u4e24\u4e2a\u65e5\u5fd7\uff1a`p` \u548c `div`\u3002\u5728\u4e8b\u4ef6\u4f20\u64ad\u671f\u95f4\uff0c\u6709\u4e09\u4e2a\u9636\u6bb5\uff1a\u6355\u83b7\u3001\u76ee\u6807\u548c\u5192\u6ce1\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u5728\u5192\u6ce1\u9636\u6bb5\u6267\u884c\uff08\u9664\u975e\u5c06 `useCapture` \u8bbe\u7f6e\u4e3a `true`\uff09\u3002\u5b83\u4ece\u5d4c\u5957\u6700\u6df1\u7684\u5143\u7d20\u5411\u5916\u4f20\u64ad\u3002","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"\u5f53\u60a8\u5355\u51fb\u8be5\u6bb5\u843d\u65f6\uff0c\u65e5\u5fd7\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":3,"code":"const person = { name: \'Lydia\' }\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`)\\n}\\n\\nsayHi.call(person, 21)\\nsayHi.bind(person, 21)","codeLanguage":"javascript","explanation":"\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u4f20\u9012\u6211\u4eec\u5e0c\u671b `this` \u5173\u952e\u5b57\u5f15\u7528\u7684\u5bf9\u8c61\u3002\u4f46\u662f\uff0c`.call` \u662f**\u7acb\u5373\u6267\u884c**\u7684\u3002\\n\\n`.bind` \u8fd4\u56de\u51fd\u6570\u7684**\u526f\u672c**\uff0c\u4f46\u5e26\u6709\u7ed1\u5b9a\u4e0a\u4e0b\u6587\uff01\u5b83\u4e0d\u662f\u7acb\u5373\u6267\u884c\u7684\u3002","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)()\\n}\\n\\ntypeof sayHi()","codeLanguage":"javascript","explanation":"`sayHi` \u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u7acb\u5373\u6267\u884c\u51fd\u6570(IIFE)\u7684\u8fd4\u56de\u503c.\u6b64\u7acb\u5373\u6267\u884c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f `0`\uff0c \u7c7b\u578b\u662f `number`\\n\\n\u53c2\u8003\uff1a\u53ea\u67097\u79cd\u5185\u7f6e\u7c7b\u578b\uff1a`null`\uff0c`undefined`\uff0c`boolean`\uff0c`number`\uff0c`string`\uff0c`object`, `symbol` \u548c `bigint`\u3002 ``function`` \u4e0d\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u51fd\u6570\u662f\u5bf9\u8c61\uff0c\u5b83\u7684\u7c7b\u578b\u662f``object``\u3002","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":3,"code":"0\\nnew Number(0)\\n(\'\')\\n(\' \')\\nnew Boolean(false)\\nundefined","codeLanguage":"javascript","explanation":"\u53ea\u6709 6 \u79cd [falsy](https://developer.mozilla.org/zh-CN/docs/Glossary/Falsy) \u503c:\\n\\n\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (empty string)\\n- `false`\\n\\n`Function` \u6784\u9020\u51fd\u6570, \u6bd4\u5982 `new Number` \u548c `new Boolean`\uff0c\u662f [truthy](https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy)\u3002","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy","//developer.mozilla.org/zh-CN/docs/Glossary/Truthy)\u3002"],"question":"\u4e0b\u9762\u54ea\u4e9b\u503c\u662f falsy?"},{"answer":1,"code":"console.log(typeof typeof 1)","codeLanguage":"javascript","explanation":"`typeof 1` \u8fd4\u56de `\\"number\\"`\u3002\\n`typeof \\"number\\"` \u8fd4\u56de `\\"string\\"`\u3002","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"const numbers = [1, 2, 3]\\nnumbers[10] = 11\\nconsole.log(numbers)","codeLanguage":"javascript","explanation":"\u5f53\u4f60\u4e3a\u6570\u7ec4\u8bbe\u7f6e\u8d85\u8fc7\u6570\u7ec4\u957f\u5ea6\u7684\u503c\u7684\u65f6\u5019\uff0c JavaScript \u4f1a\u521b\u5efa\u540d\u4e3a \\"empty slots\\" \u7684\u4e1c\u897f\u3002\u5b83\u4eec\u7684\u503c\u5b9e\u9645\u4e0a\u662f `undefined`\u3002\u4f60\u4f1a\u770b\u5230\u4ee5\u4e0b\u573a\u666f\uff1a\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\n\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u8fd0\u884c\u73af\u5883\uff08\u6bcf\u4e2a\u6d4f\u89c8\u5668\uff0c\u4ee5\u53ca node \u73af\u5883\uff0c\u90fd\u6709\u53ef\u80fd\u4e0d\u540c\uff09","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"(() => {\\n  let x, y\\n  try {\\n    throw new Error()\\n  } catch (x) {\\n    (x = 1), (y = 2)\\n    console.log(x)\\n  }\\n  console.log(x)\\n  console.log(y)\\n})()","codeLanguage":"javascript","explanation":"`catch` \u4ee3\u7801\u5757\u63a5\u6536\u53c2\u6570 `x`\u3002\u5f53\u6211\u4eec\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u8fd9\u4e0e\u4e4b\u524d\u5b9a\u4e49\u7684\u53d8\u91cf `x` \u4e0d\u540c \u3002\u8fd9\u4e2a `x` \u662f\u5c5e\u4e8e `catch` \u5757\u7ea7\u4f5c\u7528\u57df\u7684\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5757\u7ea7\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u8d4b\u503c\u4e3a `1`\uff0c\u540c\u65f6\u4e5f\u8bbe\u7f6e\u4e86\u53d8\u91cf `y` \u7684\u503c\u3002\u73b0\u5728\uff0c\u6211\u4eec\u6253\u5370\u5757\u7ea7\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf `x`\uff0c\u503c\u4e3a `1`\u3002\\n\\n`catch` \u5757\u4e4b\u5916\u7684\u53d8\u91cf `x` \u7684\u503c\u4ecd\u4e3a `undefined`\uff0c `y` \u7684\u503c\u4e3a `2`\u3002\u5f53\u6211\u4eec\u5728 `catch` \u5757\u4e4b\u5916\u6267\u884c `console.log(x)` \u65f6\uff0c\u8fd4\u56de `undefined`\uff0c`y` \u8fd4\u56de `2`\u3002","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":4,"explanation":"JavaScript \u53ea\u6709\u57fa\u672c\u7c7b\u578b\u548c\u5bf9\u8c61\u3002\\n\\n\u57fa\u672c\u7c7b\u578b\u5305\u62ec `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, `symbol`\u3002","id":38,"options":["\u57fa\u672c\u7c7b\u578b\u4e0e\u5bf9\u8c61","\u51fd\u6570\u4e0e\u5bf9\u8c61","\u53ea\u6709\u5bf9\u8c61","\u6570\u5b57\u4e0e\u5bf9\u8c61","A"],"question":"JavaScript \u4e2d\u7684\u4e00\u5207\u90fd\u662f\uff1f"},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur)\\n  },\\n  [1, 2]\\n)","codeLanguage":"javascript","explanation":"`[1, 2]`\u662f\u521d\u59cb\u503c\u3002\u521d\u59cb\u503c\u5c06\u4f1a\u4f5c\u4e3a\u9996\u6b21\u8c03\u7528\u65f6\u7b2c\u4e00\u4e2a\u53c2\u6570 `acc` \u7684\u503c\u3002\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\uff0c `acc` \u7684\u503c\u662f `[1, 2]`\uff0c `cur` \u7684\u503c\u662f `[0, 1]`\u3002\u5408\u5e76\u5b83\u4eec\uff0c\u7ed3\u679c\u4e3a `[1, 2, 0, 1]`\u3002\\n\u7b2c\u4e8c\u6b21\u6267\u884c\uff0c `acc` \u7684\u503c\u662f `[1, 2, 0, 1]`\uff0c `cur` \u7684\u503c\u662f `[2, 3]`\u3002\u5408\u5e76\u5b83\u4eec\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a `[1, 2, 0, 1, 2, 3]`","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":1,"code":"!!null\\n!!\'\'\\n!!1","codeLanguage":"javascript","explanation":"`null` \u662f [falsy](https://developer.mozilla.org/zh-CN/docs/Glossary/Falsy)\u3002 `!null` \u7684\u503c\u662f `true`\u3002 `!true` \u7684\u503c\u662f `false`\u3002\\n\\n`\\"\\"` \u662f [falsy](https://developer.mozilla.org/zh-CN/docs/Glossary/Falsy)\u3002 `!\\"\\"` \u7684\u503c\u662f `true`\u3002  `!true` \u7684\u503c\u662f `false`\u3002\\n\\n`1` \u662f [truthy](https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy)\u3002 `!1` \u7684\u503c\u662f `false`\u3002 `!false` \u7684\u503c\u662f `true`\u3002","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"setInterval(() => console.log(\'Hi\'), 1000)","codeLanguage":"javascript","explanation":"`setInterval` \u8fd4\u56de\u4e00\u4e2a\u552f\u4e00\u7684 id\u3002\u6b64 id \u53ef\u88ab\u7528\u4e8e `clearInterval` \u51fd\u6570\u6765\u53d6\u6d88\u5b9a\u65f6\u3002","id":41,"options":["\u4e00\u4e2a\u552f\u4e00\u7684id","\u8be5\u65b9\u6cd5\u6307\u5b9a\u7684\u6beb\u79d2\u6570","\u4f20\u9012\u7684\u51fd\u6570","`undefined`"],"question":"`setInterval` \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"[...\'Lydia\']","codeLanguage":"javascript","explanation":"string \u7c7b\u578b\u662f\u53ef\u8fed\u4ee3\u7684\u3002\u6269\u5c55\u8fd0\u7b97\u7b26\u5c06\u8fed\u4ee3\u7684\u6bcf\u4e2a\u5b57\u7b26\u6620\u5c04\u6210\u4e00\u4e2a\u5143\u7d20\u3002","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"\u4e00\u822c\u7684\u51fd\u6570\u5728\u6267\u884c\u4e4b\u540e\u662f\u4e0d\u80fd\u4e2d\u9014\u505c\u4e0b\u7684\u3002\u4f46\u662f\uff0c\u751f\u6210\u5668\u51fd\u6570\u5374\u53ef\u4ee5\u4e2d\u9014\u201c\u505c\u4e0b\u201d\uff0c\u4e4b\u540e\u53ef\u4ee5\u518d\u4ece\u505c\u4e0b\u7684\u5730\u65b9\u7ee7\u7eed\u3002\u5f53\u751f\u6210\u5668\u9047\u5230`yield`\u5173\u952e\u5b57\u7684\u65f6\u5019\uff0c\u4f1a\u751f\u6210`yield`\u540e\u9762\u7684\u503c\u3002\u6ce8\u610f\uff0c\u751f\u6210\u5668\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d _\u8fd4\u56de_ (_return_ )\u503c\uff0c\u800c\u662f _\u751f\u6210_ (_yield_)\u503c\u3002\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u7528`10`\u4f5c\u4e3a\u53c2\u6570`i`\u6765\u521d\u59cb\u5316\u751f\u6210\u5668\u51fd\u6570\u3002\u7136\u540e\u4f7f\u7528`next()`\u65b9\u6cd5\u4e00\u6b65\u6b65\u6267\u884c\u751f\u6210\u5668\u3002\u7b2c\u4e00\u6b21\u6267\u884c\u751f\u6210\u5668\u7684\u65f6\u5019\uff0c`i`\u7684\u503c\u4e3a`10`\uff0c\u9047\u5230\u7b2c\u4e00\u4e2a`yield`\u5173\u952e\u5b57\uff0c\u5b83\u8981\u751f\u6210`i`\u7684\u503c\u3002\u6b64\u65f6\uff0c\u751f\u6210\u5668\u201c\u6682\u505c\u201d\uff0c\u751f\u6210\u4e86`10`\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u518d\u6267\u884c`next()`\u65b9\u6cd5\u3002\u751f\u6210\u5668\u4f1a\u4ece\u521a\u624d\u6682\u505c\u7684\u5730\u65b9\u7ee7\u7eed\uff0c\u8fd9\u4e2a\u65f6\u5019`i`\u8fd8\u662f`10`\u3002\u4e8e\u662f\u6211\u4eec\u8d70\u5230\u4e86\u7b2c\u4e8c\u4e2a`yield`\u5173\u952e\u5b57\u5904\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u751f\u6210\u7684\u503c\u662f`i*2`\uff0c`i`\u4e3a`10`\uff0c\u90a3\u4e48\u6b64\u65f6\u751f\u6210\u7684\u503c\u4fbf\u662f`20`\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u7684\u6700\u7ec8\u7ed3\u679c\u662f`10,20`\u3002","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"\u5f53\u6211\u4eec\u5411`Promise.race`\u65b9\u6cd5\u4e2d\u4f20\u5165\u591a\u4e2a`Promise`\u65f6\uff0c\u4f1a\u8fdb\u884c _\u4f18\u5148_ \u89e3\u6790\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7528`setTimeout`\u7ed9`firstPromise`\u548c`secondPromise`\u5206\u522b\u8bbe\u5b9a\u4e86500ms\u548c100ms\u7684\u5b9a\u65f6\u5668\u3002\u8fd9\u610f\u5473\u7740`secondPromise`\u4f1a\u9996\u5148\u89e3\u6790\u51fa\u5b57\u7b26\u4e32`two`\u3002\u90a3\u4e48\u6b64\u65f6`res`\u53c2\u6570\u5373\u4e3a`two`\uff0c\u662f\u4e3a\u8f93\u51fa\u7ed3\u679c\u3002","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"\u8fd4\u56de\u503c\u662f\u4ec0\u4e48?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\u9996\u5148\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u62e5\u6709`name`\u5c5e\u6027\u7684\u5bf9\u8c61 `person`\u3002\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\n\u7136\u540e\u6211\u4eec\u53c8\u58f0\u660e\u4e86\u4e00\u4e2a\u53d8\u91cf`members`. \u5c06\u9996\u4e2a\u5143\u7d20\u8d4b\u503c\u4e3a\u53d8\u91cf`person`\u3002 \u5f53\u8bbe\u7f6e\u4e24\u4e2a\u5bf9\u8c61\u5f7c\u6b64\u76f8\u7b49\u65f6\uff0c\u5b83\u4eec\u4f1a\u901a\u8fc7 _\u5f15\u7528_ \u8fdb\u884c\u4ea4\u4e92\u3002\u4f46\u662f\u5f53\u4f60\u5c06\u5f15\u7528\u4ece\u4e00\u4e2a\u53d8\u91cf\u5206\u914d\u81f3\u53e6\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u5176\u5b9e\u53ea\u662f\u6267\u884c\u4e86\u4e00\u4e2a _\u590d\u5236_ \u64cd\u4f5c\u3002\uff08\u6ce8\u610f\u4e00\u70b9\uff0c\u4ed6\u4eec\u7684\u5f15\u7528 _\u5e76\u4e0d\u76f8\u540c_!\uff09\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\n\u63a5\u4e0b\u6765\u6211\u4eec\u8ba9`person`\u7b49\u4e8e`null`\u3002\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\n\u6211\u4eec\u6ca1\u6709\u4fee\u6539\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u800c\u53ea\u662f\u4fee\u6539\u4e86\u53d8\u91cf`person`\u7684\u503c,\u56e0\u4e3a\u5143\u7d20\uff08\u590d\u5236\u800c\u6765\uff09\u7684\u5f15\u7528\u4e0e`person`\u4e0d\u540c\u3002`members`\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ecd\u7136\u4fdd\u6301\u7740\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5f53\u6211\u4eec\u8f93\u51fa`members`\u6570\u7ec4\u65f6\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f1a\u5c06\u5f15\u7528\u7684\u5bf9\u8c61\u6253\u5370\u51fa\u6765\u3002","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"\u5728`for-in`\u5faa\u73af\u4e2d,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684key\u6765\u8fdb\u884c\u8fed\u4ee3,\u4e5f\u5c31\u662f\u8fd9\u91cc\u7684`name`\u548c`age`\u3002\u5728\u5e95\u5c42\uff0c\u5bf9\u8c61\u7684key\u90fd\u662f\u5b57\u7b26\u4e32\uff08\u5982\u679c\u4ed6\u4eec\u4e0d\u662fSymbol\u7684\u8bdd\uff09\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u5c06`item`\u8bbe\u5b9a\u4e3a\u5f53\u524d\u904d\u5386\u5230\u7684key.\u6240\u4ee5\u4e00\u5f00\u59cb\uff0c`item`\u662f`name`\uff0c\u4e4b\u540e `item`\u8f93\u51fa\u7684\u5219\u662f`age`\u3002","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"\u5f53\u6240\u6709\u8fd0\u7b97\u7b26\u7684 _\u4f18\u5148\u7ea7_ \u76f8\u540c\u65f6\uff0c\u8ba1\u7b97\u8868\u8fbe\u5f0f\u9700\u8981\u786e\u5b9a\u8fd0\u7b97\u7b26\u7684\u7ed3\u5408\u987a\u5e8f\uff0c\u5373\u4ece\u53f3\u5230\u5de6\u8fd8\u662f\u4ece\u5de6\u5f80\u53f3\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ea\u6709\u4e00\u7c7b\u8fd0\u7b97\u7b26`+`\uff0c\u5bf9\u4e8e\u52a0\u6cd5\u6765\u8bf4\uff0c\u7ed3\u5408\u987a\u5e8f\u5c31\u662f\u4ece\u5de6\u5230\u53f3\u3002\\n\\n`3 + 4`\u9996\u5148\u8ba1\u7b97\uff0c\u5f97\u5230\u6570\u5b57`7`.\\n\\n\u7531\u4e8e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\uff0c`7 + \'5\'`\u7684\u7ed3\u679c\u662f`\\"75\\"`. JavaScript\u5c06`7`\u8f6c\u6362\u6210\u4e86\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u53c2\u8003\u95ee\u989815.\u6211\u4eec\u53ef\u4ee5\u7528`+`\u53f7\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\u3002 `\\"7\\" + \\"5\\"` \u5c31\u5f97\u5230\u4e86`\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"\u53ea\u8fd4\u56de\u4e86\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u6bcd. \u8bbe\u5b9a\u4e86 _\u8fdb\u5236_ \u540e (\u4e5f\u5c31\u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u6307\u5b9a\u9700\u8981\u89e3\u6790\u7684\u6570\u5b57\u662f\u4ec0\u4e48\u8fdb\u5236: \u5341\u8fdb\u5236\u3001\u5341\u516d\u673a\u5236\u3001\u516b\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u7b49\u7b49\u2026\u2026),`parseInt` \u68c0\u67e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u5408\u6cd5. \u4e00\u65e6\u9047\u5230\u4e00\u4e2a\u5728\u6307\u5b9a\u8fdb\u5236\u4e2d\u4e0d\u5408\u6cd5\u7684\u5b57\u7b26\u540e\uff0c\u7acb\u5373\u505c\u6b62\u89e3\u6790\u5e76\u4e14\u5ffd\u7565\u540e\u9762\u6240\u6709\u7684\u5b57\u7b26\u3002\\n\\n`*`\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u6570\u5b57\u5b57\u7b26\u3002\u6240\u4ee5\u53ea\u89e3\u6790\u5230`\\"7\\"`\uff0c\u5e76\u5c06\u5176\u89e3\u6790\u4e3a\u5341\u8fdb\u5236\u7684`7`. `num`\u7684\u503c\u5373\u4e3a`7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"`num`\u7684\u503c\u662f\u4ec0\u4e48?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"\u5bf9\u6570\u7ec4\u8fdb\u884c\u6620\u5c04\u7684\u65f6\u5019,`num`\u5c31\u662f\u5f53\u524d\u5faa\u73af\u5230\u7684\u5143\u7d20. \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u7684\u6620\u5c04\u90fd\u662fnumber\u7c7b\u578b\uff0c\u6240\u4ee5if\u4e2d\u7684\u5224\u65ad`typeof num === \\"number\\"`\u7ed3\u679c\u90fd\u662f`true`.map\u51fd\u6570\u521b\u5efa\u4e86\u65b0\u6570\u7ec4\u5e76\u4e14\u5c06\u51fd\u6570\u7684\u8fd4\u56de\u503c\u63d2\u5165\u6570\u7ec4\u3002\\n\\n\u4f46\u662f\uff0c\u6ca1\u6709\u4efb\u4f55\u503c\u8fd4\u56de\u3002\u5f53\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u4efb\u4f55\u503c\u65f6\uff0c\u5373\u9ed8\u8ba4\u8fd4\u56de`undefined`.\u5bf9\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u6765\u8bf4\uff0c\u51fd\u6570\u5757\u90fd\u5f97\u5230\u4e86\u8fd9\u4e2a\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u7ed3\u679c\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f`undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"\u666e\u901a\u53c2\u6570\u90fd\u662f _\u503c_ \u4f20\u9012\u7684\uff0c\u800c\u5bf9\u8c61\u5219\u4e0d\u540c\uff0c\u662f _\u5f15\u7528_ \u4f20\u9012\u3002\u6240\u4ee5\u8bf4\uff0c`birthYear`\u662f\u503c\u4f20\u9012\uff0c\u56e0\u4e3a\u4ed6\u662f\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5bf9\u8c61\u3002\u5f53\u6211\u4eec\u5bf9\u53c2\u6570\u8fdb\u884c\u503c\u4f20\u9012\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4efd\u8be5\u503c\u7684 _\u590d\u5236_ \u3002\uff08\u53ef\u4ee5\u53c2\u8003\u95ee\u989846\uff09\\n\\n\u53d8\u91cf`birthYear`\u6709\u4e00\u4e2a\u5bf9`\\"1997\\"`\u7684\u5f15\u7528\uff0c\u800c\u4f20\u5165\u7684\u53c2\u6570\u4e5f\u6709\u4e00\u4e2a\u5bf9`\\"1997\\"`\u7684\u5f15\u7528\uff0c\u4f46\u4e8c\u8005\u7684\u5f15\u7528\u5e76\u4e0d\u76f8\u540c\u3002\u5f53\u6211\u4eec\u901a\u8fc7\u7ed9 `year`\u8d4b\u503c`\\"1998\\"`\u6765\u66f4\u65b0`year`\u7684\u503c\u7684\u65f6\u5019\u6211\u4eec\u53ea\u662f\u66f4\u65b0\u4e86`year`\uff08\u7684\u5f15\u7528\uff09\u3002\u6b64\u65f6`birthYear`\u4ecd\u7136\u662f`\\"1997\\"`.\\n\\n\u800c`person`\u662f\u4e2a\u5bf9\u8c61\u3002\u53c2\u6570`member`\u5f15\u7528\u4e0e\u4e4b _\u76f8\u540c\u7684_ \u5bf9\u8c61\u3002\u5f53\u6211\u4eec\u4fee\u6539`member`\u6240\u5f15\u7528\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6,`person`\u7684\u76f8\u5e94\u5c5e\u6027\u4e5f\u88ab\u4fee\u6539\u4e86,\u56e0\u4e3a\u4ed6\u4eec\u5f15\u7528\u4e86\u76f8\u540c\u7684\u5bf9\u8c61. `person`\u7684 `name`\u5c5e\u6027\u4e5f\u53d8\u6210\u4e86 `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\u8f93\u51fa\u7684\u662f\u4ec0\u4e48?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error:\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u901a\u8fc7`throw`\u8bed\u53e5\uff0c\u6211\u4e48\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u9519\u8bef\u3002 \u800c\u901a\u8fc7\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\u3002\u5f02\u5e38\u53ef\u4ee5\u662f\u4e00\u4e2a<b>\u5b57\u7b26\u4e32</b>, \u4e00\u4e2a <b>\u6570\u5b57</b>, \u4e00\u4e2a <b>\u5e03\u5c14\u7c7b\u578b</b> \u6216\u8005\u662f\u4e00\u4e2a <b>\u5bf9\u8c61</b>\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u7684\u5f02\u5e38\u662f\u5b57\u7b26\u4e32`\'Hello world\'`.\\n\\n\u901a\u8fc7 `catch`\u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u5f53`try`\u8bed\u53e5\u5757\u4e2d\u629b\u51fa\u5f02\u5e38\u540e\u5e94\u8be5\u505a\u4ec0\u4e48\u5904\u7406\u3002\u5728\u672c\u4f8b\u4e2d\u629b\u51fa\u7684\u5f02\u5e38\u662f\u5b57\u7b26\u4e32`\'Hello world\'`. `e`\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u88ab\u8f93\u51fa\u3002\u6700\u7ec8\u7ed3\u679c\u5c31\u662f`\'Oh an error: Hello world\'`.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error: Hello world!`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"\u8fd4\u56de\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u5c5e\u6027\u7684\u503c\u7b49\u4e8e _\u8fd4\u56de\u7684_ \u503c\uff0c\u800c\u4e0d\u662f\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u5b9a\u7684\u503c\u3002\u6211\u4eec\u8fd4\u56de\u4e86\u5b57\u7b26\u4e32 `\\"Maserati\\"`\uff0c\u6240\u4ee5 `myCar.make`\u7b49\u4e8e`\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` \u662f\u4e0b\u9762\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7f29\u5199:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\n\u6211\u4eec\u8bbe\u5b9a`y`\u7b49\u4e8e`10`\u65f6,\u6211\u4eec\u5b9e\u9645\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a\u5c5e\u6027`y`\u7ed9\u5168\u5c40\u5bf9\u8c61(\u6d4f\u89c8\u5668\u91cc\u7684`window`, Nodejs\u91cc\u7684`global`)\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c `window.y`\u7b49\u4e8e`10`.\\n\\n\u7136\u540e\u6211\u4eec\u58f0\u660e\u4e86\u53d8\u91cf`x`\u7b49\u4e8e`y`,\u4e5f\u662f`10`.\u4f46\u53d8\u91cf\u662f\u4f7f\u7528 `let`\u58f0\u660e\u7684\uff0c\u5b83\u53ea\u4f5c\u7528\u4e8e _\u5757\u7ea7\u4f5c\u7528\u57df_, \u4ec5\u5728\u58f0\u660e\u5b83\u7684\u5757\u4e2d\u6709\u6548\uff1b\u5c31\u662f\u6848\u4f8b\u4e2d\u7684\u7acb\u5373\u8c03\u7528\u8868\u8fbe\u5f0f(IIFE)\u3002\u4f7f\u7528`typeof`\u64cd\u4f5c\u7b26\u65f6, \u64cd\u4f5c\u503c `x`\u6ca1\u6709\u88ab\u5b9a\u4e49\uff1a\u56e0\u4e3a\u6211\u4eec\u5728`x`\u58f0\u660e\u5757\u7684\u5916\u90e8\uff0c\u65e0\u6cd5\u8c03\u7528\u5b83\u3002\u8fd9\u5c31\u610f\u5473\u7740`x`\u672a\u5b9a\u4e49\u3002\u672a\u5206\u914d\u6216\u662f\u672a\u58f0\u660e\u7684\u53d8\u91cf\u7c7b\u578b\u4e3a`\\"undefined\\"`. `console.log(typeof x)`\u8fd4\u56de`\\"undefined\\"`.\\n\\n\u800c\u6211\u4eec\u521b\u5efa\u4e86\u5168\u5c40\u53d8\u91cf`y`\uff0c\u5e76\u4e14\u8bbe\u5b9a`y`\u7b49\u4e8e`10`.\u8fd9\u4e2a\u503c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u5404\u5904\u90fd\u8bbf\u95ee\u7684\u5230\u3002 `y`\u5df2\u7ecf\u88ab\u5b9a\u4e49\u4e86\uff0c\u800c\u4e14\u6709\u4e00\u4e2a`\\"number\\"`\u7c7b\u578b\u7684\u503c\u3002 `console.log(typeof y)`\u8fd4\u56de`\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"`Set`\u5bf9\u8c61\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u503c\u7684\u96c6\u5408\uff1a\u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u4e2a\u503c\u5728\u5176\u4e2d\u4ec5\u51fa\u73b0\u4e00\u6b21\u3002\\n\\n\u6211\u4eec\u4f20\u5165\u4e86\u6570\u7ec4`[1, 1, 2, 3, 4]`\uff0c\u4ed6\u6709\u4e00\u4e2a\u91cd\u590d\u503c`1`.\u4ee5\u4e3a\u4e00\u4e2a\u96c6\u5408\u91cc\u4e0d\u80fd\u6709\u4e24\u4e2a\u91cd\u590d\u7684\u503c\uff0c\u5176\u4e2d\u4e00\u4e2a\u5c31\u88ab\u79fb\u9664\u4e86\u3002\u6240\u4ee5\u7ed3\u679c\u662f `{1, 2, 3, 4}`.","id":54,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"\u5f15\u5165\u7684\u6a21\u5757\u662f _\u53ea\u8bfb_ \u7684: \u4f60\u4e0d\u80fd\u4fee\u6539\u5f15\u5165\u7684\u6a21\u5757\u3002\u53ea\u6709\u5bfc\u51fa\u4ed6\u4eec\u7684\u6a21\u5757\u624d\u80fd\u4fee\u6539\u5176\u503c\u3002\\n\\n\u5f53\u6211\u4eec\u7ed9`myCounter`\u589e\u52a0\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff1a `myCounter`\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002","id":55,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"`delete`\u64cd\u4f5c\u7b26\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff1a `true`\u6307\u5220\u9664\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de`false`. \u4f46\u662f\u901a\u8fc7 `var`, `const` \u6216 `let` \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u65e0\u6cd5\u7528 `delete` \u64cd\u4f5c\u7b26\u6765\u5220\u9664\u3002\\n\\n`name`\u53d8\u91cf\u7531`const`\u5173\u952e\u5b57\u58f0\u660e\uff0c\u6240\u4ee5\u5220\u9664\u4e0d\u6210\u529f:\u8fd4\u56de `false`. \u800c\u6211\u4eec\u8bbe\u5b9a`age`\u7b49\u4e8e`21`\u65f6,\u6211\u4eec\u5b9e\u9645\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a`age`\u7684\u5c5e\u6027\u7ed9\u5168\u5c40\u5bf9\u8c61\u3002\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u662f\u53ef\u4ee5\u5220\u9664\u7684\uff0c\u5168\u5c40\u5bf9\u8c61\u4e5f\u662f\u5982\u6b64\uff0c\u6240\u4ee5`delete age`\u8fd4\u56de`true`.","id":56,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89e3\u6784\u8d4b\u503c\u6765\u89e3\u6790\u6765\u81ea\u5bf9\u8c61\u7684\u6570\u7ec4\u6216\u5c5e\u6027\u7684\u503c\uff0c\u6bd4\u5982\u8bf4\uff1a\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\n`a`\u7684\u503c\u73b0\u5728\u662f`1`\uff0c`b`\u7684\u503c\u73b0\u5728\u662f`2`.\u800c\u5728\u9898\u76ee\u4e2d\uff0c\u6211\u4eec\u662f\u8fd9\u4e48\u505a\u7684:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0c`y`\u7b49\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c\u5c31\u662f\u6570\u5b57`1`.\u6211\u4eec\u8f93\u51fa`y`\uff0c \u8fd4\u56de`1`.","id":57,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"\u6269\u5c55\u8fd0\u7b97\u7b26`...`\u4e3a\u5bf9\u8c61\u7684\u7ec4\u5408\u63d0\u4f9b\u4e86\u53ef\u80fd\u3002\u4f60\u53ef\u4ee5\u590d\u5236\u5bf9\u8c61\u4e2d\u7684\u952e\u503c\u5bf9\uff0c\u7136\u540e\u628a\u5b83\u4eec\u52a0\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u91cc\u53bb\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u590d\u5236\u4e86`user`\u5bf9\u8c61\u952e\u503c\u5bf9\uff0c\u7136\u540e\u628a\u5b83\u4eec\u52a0\u5165\u5230`admin`\u5bf9\u8c61\u4e2d\u3002`admin`\u5bf9\u8c61\u5c31\u62e5\u6709\u4e86\u8fd9\u4e9b\u952e\u503c\u5bf9\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3a`{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":58,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"\u901a\u8fc7`defineProperty`\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u5bf9\u8c61\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5c5e\u6027\uff0c\u6216\u8005\u4fee\u6539\u5df2\u7ecf\u5b58\u5728\u7684\u5c5e\u6027\u3002\u800c\u6211\u4eec\u4f7f\u7528`defineProperty`\u65b9\u6cd5\u7ed9\u5bf9\u8c61\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5c5e\u6027\u4e4b\u540e\uff0c\u5c5e\u6027\u9ed8\u8ba4\u4e3a _\u4e0d\u53ef\u679a\u4e3e(not enumerable)_. `Object.keys`\u65b9\u6cd5\u4ec5\u8fd4\u56de\u5bf9\u8c61\u4e2d _\u53ef\u679a\u4e3e(enumerable)_ \u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u53ea\u5269\u4e0b\u4e86`\\"name\\"`.\\n\\n\u7528`defineProperty`\u65b9\u6cd5\u6dfb\u52a0\u7684\u5c5e\u6027\u9ed8\u8ba4\u4e0d\u53ef\u53d8\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7`writable`, `configurable` \u548c `enumerable`\u5c5e\u6027\u6765\u6539\u53d8\u8fd9\u4e00\u884c\u4e3a\u3002\u8fd9\u6837\u7684\u8bdd\uff0c \u76f8\u6bd4\u4e8e\u81ea\u5df1\u6dfb\u52a0\u7684\u5c5e\u6027\uff0c`defineProperty`\u65b9\u6cd5\u6dfb\u52a0\u7684\u5c5e\u6027\u6709\u4e86\u66f4\u591a\u7684\u63a7\u5236\u6743\u3002","id":59,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"`JSON.stringify`\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f _\u66ff\u4ee3\u8005(replacer)_. \u66ff\u4ee3\u8005(replacer)\u53ef\u4ee5\u662f\u4e2a\u51fd\u6570\u6216\u6570\u7ec4\uff0c\u7528\u4ee5\u63a7\u5236\u54ea\u4e9b\u503c\u5982\u4f55\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\\n\\n\u5982\u679c\u66ff\u4ee3\u8005(replacer)\u662f\u4e2a _\u6570\u7ec4_ \uff0c\u90a3\u4e48\u5c31\u53ea\u6709\u5305\u542b\u5728\u6570\u7ec4\u4e2d\u7684\u5c5e\u6027\u5c06\u4f1a\u88ab\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ea\u6709\u540d\u4e3a`\\"level\\"` \u548c `\\"health\\"` \u7684\u5c5e\u6027\u88ab\u5305\u62ec\u8fdb\u6765\uff0c `\\"username\\"`\u5219\u88ab\u6392\u9664\u5728\u5916\u3002 `data` \u5c31\u7b49\u4e8e `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\n\u800c\u5982\u679c\u66ff\u4ee3\u8005(replacer)\u662f\u4e2a _\u51fd\u6570_\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u88ab\u5bf9\u8c61\u7684\u6bcf\u4e2a\u5c5e\u6027\u90fd\u8c03\u7528\u4e00\u904d\u3002\\n\u51fd\u6570\u8fd4\u56de\u7684\u503c\u4f1a\u6210\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u6700\u7ec8\u4f53\u73b0\u5728\u8f6c\u5316\u540e\u7684JSON\u5b57\u7b26\u4e32\u4e2d\uff08\u8bd1\u8005\u6ce8\uff1aChrome\u4e0b\uff0c\u7ecf\u8fc7\u5b9e\u9a8c\uff0c\u5982\u679c\u6240\u6709\u5c5e\u6027\u5747\u8fd4\u56de\u540c\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u6709\u5f02\u5e38\uff0c\u4f1a\u76f4\u63a5\u5c06\u8fd4\u56de\u503c\u4f5c\u4e3a\u7ed3\u679c\u8f93\u51fa\u800c\u4e0d\u4f1a\u8f93\u51faJSON\u5b57\u7b26\u4e32\uff09\uff0c\u800c\u5982\u679c\u8fd4\u56de\u503c\u4e3a`undefined`\uff0c\u5219\u8be5\u5c5e\u6027\u4f1a\u88ab\u6392\u9664\u5728\u5916\u3002","id":60,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"\u4e00\u5143\u64cd\u4f5c\u7b26 `++` _\u5148\u8fd4\u56de_ \u64cd\u4f5c\u503c, _\u518d\u7d2f\u52a0_ \u64cd\u4f5c\u503c\u3002`num1`\u7684\u503c\u662f`10`, \u56e0\u4e3a`increaseNumber`\u51fd\u6570\u9996\u5148\u8fd4\u56de`num`\u7684\u503c\uff0c\u4e5f\u5c31\u662f`10`\uff0c\u968f\u540e\u518d\u8fdb\u884c `num`\u7684\u7d2f\u52a0\u3002\\n\\n`num2`\u662f`10`\u56e0\u4e3a\u6211\u4eec\u5c06 `num1`\u4f20\u5165`increasePassedNumber`. `number`\u7b49\u4e8e`10`\uff08`num1`\u7684\u503c\u3002\u540c\u6837\u9053\u7406\uff0c`++` _\u5148\u8fd4\u56de_ \u64cd\u4f5c\u503c, _\u518d\u7d2f\u52a0_ \u64cd\u4f5c\u503c\u3002\uff09 `number`\u662f`10`\uff0c\u6240\u4ee5`num2`\u4e5f\u662f`10`.","id":61,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log(x.number *= 2);\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"\u5728ES6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u521d\u59cb\u5316\u53c2\u6570\u3002\u5982\u679c\u6ca1\u6709\u7ed9\u51fd\u6570\u4f20\u53c2\uff0c\u6216\u8005\u4f20\u7684\u53c2\u503c\u4e3a `\\"undefined\\"` \uff0c\u90a3\u4e48\u53c2\u6570\u7684\u503c\u5c06\u662f\u9ed8\u8ba4\u503c\u3002\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06 `value` \u5bf9\u8c61\u8fdb\u884c\u4e86\u89e3\u6784\u5e76\u4f20\u5230\u4e00\u4e2a\u65b0\u5bf9\u8c61\u4e2d\uff0c\u56e0\u6b64 `x` \u7684\u9ed8\u8ba4\u503c\u4e3a `{number\uff1a10}` \u3002\\n\\n\u9ed8\u8ba4\u53c2\u6570\u5728\u8c03\u7528\u65f6\u624d\u4f1a\u8fdb\u884c\u8ba1\u7b97\uff0c\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002\u6211\u4eec\u524d\u4e24\u6b21\u8c03\u7528 `multiply` \u51fd\u6570\u4e14\u4e0d\u4f20\u9012\u503c\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21 `x` \u7684\u9ed8\u8ba4\u503c\u90fd\u4e3a `{number\uff1a10}` \uff0c\u56e0\u6b64\u6253\u5370\u51fa\u8be5\u6570\u5b57\u7684\u4e58\u79ef\u503c\u4e3a`20`\u3002\\n\\n\u7b2c\u4e09\u6b21\u8c03\u7528 `multiply` \u65f6\uff0c\u6211\u4eec\u4f20\u9012\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u5bf9\u8c61`value`\u3002 `*=`\u8fd0\u7b97\u7b26\u5b9e\u9645\u4e0a\u662f`x.number = x.number * 2`\u7684\u7b80\u5199\uff0c\u6211\u4eec\u4fee\u6539\u4e86`x.number`\u7684\u503c\uff0c\u5e76\u6253\u5370\u51fa\u503c`20`\u3002\\n\\n\u7b2c\u56db\u6b21\uff0c\u6211\u4eec\u518d\u6b21\u4f20\u9012`value`\u5bf9\u8c61\u3002 `x.number`\u4e4b\u524d\u88ab\u4fee\u6539\u4e3a`20`\uff0c\u6240\u4ee5`x.number * = 2`\u6253\u5370\u4e3a`40`\u3002","id":62,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"`reducer` \u51fd\u6570\u63a5\u65364\u4e2a\u53c2\u6570:\\n\\n1. Accumulator (acc) (\u7d2f\u8ba1\u5668)\\n2. Current Value (cur) (\u5f53\u524d\u503c)\\n3. Current Index (idx) (\u5f53\u524d\u7d22\u5f15)\\n4. Source Array (src) (\u6e90\u6570\u7ec4)\\n\\n`reducer` \u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c06\u4f1a\u5206\u914d\u7ed9\u7d2f\u8ba1\u5668\uff0c\u8be5\u8fd4\u56de\u503c\u5728\u6570\u7ec4\u7684\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\u88ab\u8bb0\u4f4f\uff0c\u5e76\u6700\u540e\u6210\u4e3a\u6700\u7ec8\u7684\u5355\u4e2a\u7ed3\u679c\u503c\u3002\\n\\n`reducer` \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u53ef\u9009\u53c2\u6570`initialValue`, \u8be5\u53c2\u6570\u5c06\u4f5c\u4e3a\u7b2c\u4e00\u6b21\u8c03\u7528\u56de\u8c03\u51fd\u6570\u65f6\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b`initialValue`\uff0c\u5219\u5c06\u4f7f\u7528\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\\n\\n\u5728\u4e0a\u8ff0\u4f8b\u5b50\uff0c`reduce`\u65b9\u6cd5\u63a5\u6536\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570(Accumulator)\u662f`x`, \u7b2c\u4e8c\u4e2a\u53c2\u6570(Current Value)\u662f`y`\u3002\\n\\n\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\uff0c\u7d2f\u52a0\u5668`x`\u4e3a`1`\uff0c\u5f53\u524d\u503c`\u201cy\u201d`\u4e3a`2`\uff0c\u6253\u5370\u51fa\u7d2f\u52a0\u5668\u548c\u5f53\u524d\u503c\uff1a`1`\u548c`2`\u3002\\n\\n\u4f8b\u5b50\u4e2d\u6211\u4eec\u7684\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u53ea\u662f\u6253\u5370\u7d2f\u52a0\u5668\u7684\u503c\u548c\u5f53\u524d\u503c\u3002\u5982\u679c\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u5219\u9ed8\u8ba4\u8fd4\u56de`undefined`\u3002 \u5728\u4e0b\u4e00\u6b21\u8c03\u7528\u65f6\uff0c\u7d2f\u52a0\u5668\u4e3a`undefined`\uff0c\u5f53\u524d\u503c\u4e3a\u201c3\u201d, \u56e0\u6b64`undefined`\u548c`3`\u88ab\u6253\u5370\u51fa\u3002\\n\\n\u5728\u7b2c\u56db\u6b21\u8c03\u7528\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u4f9d\u7136\u6ca1\u6709\u8fd4\u56de\u503c\u3002 \u7d2f\u52a0\u5668\u518d\u6b21\u4e3a `undefined` \uff0c\u5f53\u524d\u503c\u4e3a\u201c4\u201d\u3002 `undefined`\u548c`4`\u88ab\u6253\u5370\u51fa\u3002","id":63,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"\u5728\u5b50\u7c7b\u4e2d\uff0c\u5728\u8c03\u7528`super`\u4e4b\u524d\u4e0d\u80fd\u8bbf\u95ee\u5230`this`\u5173\u952e\u5b57\u3002 \u5982\u679c\u8fd9\u6837\u505a\uff0c\u5b83\u5c06\u629b\u51fa\u4e00\u4e2a`ReferenceError`\uff1a1\u548c4\u5c06\u5f15\u53d1\u4e00\u4e2a\u5f15\u7528\u9519\u8bef\u3002\\n\\n\u4f7f\u7528`super`\u5173\u952e\u5b57\uff0c\u9700\u8981\u7528\u7ed9\u5b9a\u7684\u53c2\u6570\u6765\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u63a5\u6536`name`\u53c2\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06`name`\u4f20\u9012\u7ed9`super`\u3002\\n\\n`Labrador`\u7c7b\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c`name`\u53c2\u6570\u662f\u7531\u4e8e\u5b83\u7ee7\u627f\u4e86`Dog`\uff0c`size`\u4f5c\u4e3a`Labrador`\u7c7b\u7684\u989d\u5916\u5c5e\u6027\uff0c\u5b83\u4eec\u90fd\u9700\u8981\u4f20\u9012\u7ed9`Labrador`\u7684\u6784\u9020\u51fd\u6570\uff0c\u56e0\u6b64\u4f7f\u7528\u6784\u9020\u51fd\u65702\u6b63\u786e\u5b8c\u6210\u3002","id":64,"options":["1","2","3","4"],"question":"\u4f7f\u7528\u54ea\u4e2a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6210\u529f\u7ee7\u627f`Dog`\u7c7b?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"`import`\u547d\u4ee4\u662f\u7f16\u8bd1\u9636\u6bb5\u6267\u884c\u7684\uff0c\u5728\u4ee3\u7801\u8fd0\u884c\u4e4b\u524d\u3002\u56e0\u6b64\u8fd9\u610f\u5473\u7740\u88ab\u5bfc\u5165\u7684\u6a21\u5757\u4f1a\u5148\u8fd0\u884c\uff0c\u800c\u5bfc\u5165\u6a21\u5757\u7684\u6587\u4ef6\u4f1a\u540e\u6267\u884c\u3002\\n\\n\u8fd9\u662fCommonJS\u4e2d`require\uff08\uff09`\u548c`import`\u4e4b\u95f4\u7684\u533a\u522b\u3002\u4f7f\u7528`require()`\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd0\u884c\u4ee3\u7801\u65f6\u6839\u636e\u9700\u8981\u52a0\u8f7d\u4f9d\u8d56\u9879\u3002 \u5982\u679c\u6211\u4eec\u4f7f\u7528`require`\u800c\u4e0d\u662f`import`\uff0c`running index.js`\uff0c`running sum.js`\uff0c`3`\u4f1a\u88ab\u4f9d\u6b21\u6253\u5370\u3002","id":65,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"\u6bcf\u4e2a`Symbol`\u90fd\u662f\u5b8c\u5168\u552f\u4e00\u7684\u3002\u4f20\u9012\u7ed9`Symbol`\u7684\u53c2\u6570\u53ea\u662f\u7ed9`Symbol`\u7684\u4e00\u4e2a\u63cf\u8ff0\u3002 `Symbol`\u7684\u503c\u4e0d\u4f9d\u8d56\u4e8e\u4f20\u9012\u7684\u53c2\u6570\u3002 \u5f53\u6211\u4eec\u6d4b\u8bd5\u76f8\u7b49\u65f6\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u5168\u65b0\u7684\u7b26\u53f7\uff1a\u7b2c\u4e00\u4e2a`Symbol\uff08\'foo\'\uff09`\uff0c\u7b2c\u4e8c\u4e2a`Symbol\uff08\'foo\'\uff09`, \u8fd9\u4e24\u4e2a\u503c\u662f\u552f\u4e00\u7684\uff0c\u5f7c\u6b64\u4e0d\u76f8\u7b49\uff0c\u56e0\u6b64\u8fd4\u56de`false`\u3002","id":66,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"\u4f7f\u7528`padStart`\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u6dfb\u52a0\u586b\u5145\u3002\u4f20\u9012\u7ed9\u6b64\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u7684\u603b\u957f\u5ea6\uff08\u5305\u542b\u586b\u5145\uff09\u3002\u5b57\u7b26\u4e32`Lydia Hallie`\u7684\u957f\u5ea6\u4e3a`12`, \u56e0\u6b64`name.padStart\uff0813\uff09`\u5728\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u53ea\u4f1a\u63d2\u51651\uff08`13 - 12 = 1`\uff09\u4e2a\u7a7a\u683c\u3002\\n\\n\u5982\u679c\u4f20\u9012\u7ed9`padStart`\u65b9\u6cd5\u7684\u53c2\u6570\u5c0f\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5219\u4e0d\u4f1a\u6dfb\u52a0\u586b\u5145\u3002","id":67,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"\u4f7f\u7528`+`\u8fd0\u7b97\u7b26\uff0c\u60a8\u53ef\u4ee5\u8fde\u63a5\u5b57\u7b26\u4e32\u3002 \u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32`\u201c\ud83e\udd51\u201d`\u4e0e\u5b57\u7b26\u4e32`\u201d\ud83d\udcbb\u201c`\u8fde\u63a5\u8d77\u6765\uff0c\u4ea7\u751f`\u201d\ud83e\udd51\ud83d\udcbb\u201c`\u3002","id":68,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","A string containing their code points","Error"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"function* startGame() {\\n  const \u7b54\u6848 = yield \\"Do you love JavaScript?\\";\\n  if (\u7b54\u6848 !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"`generator`\u51fd\u6570\u5728\u9047\u5230`yield`\u5173\u952e\u5b57\u65f6\u4f1a\u201c\u6682\u505c\u201d\u5176\u6267\u884c\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u51fd\u6570\u4ea7\u751f\u5b57\u7b26\u4e32`Do you love JavaScript?`\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528`game.next().value`\u6765\u5b8c\u6210\u3002\u4e0a\u8ff0\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u5c31\u6709\u4e00\u4e2a`yield`\u5173\u952e\u5b57\uff0c\u90a3\u4e48\u8fd0\u884c\u7acb\u5373\u505c\u6b62\u4e86\uff0c`yield`\u8868\u8fbe\u5f0f\u672c\u8eab\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6216\u8005\u8bf4\u603b\u662f\u8fd4\u56de`undefined`, \u8fd9\u610f\u5473\u7740\u6b64\u65f6\u53d8\u91cf `\u7b54\u6848` \u4e3a`undefined`\\n\\n`next`\u65b9\u6cd5\u53ef\u4ee5\u5e26\u4e00\u4e2a\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4f1a\u88ab\u5f53\u4f5c\u4e0a\u4e00\u4e2a `yield` \u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u503c\u3002\u5f53\u6211\u4eec\u8c03\u7528`game.next(\\"Yes\\").value`\u65f6\uff0c\u5148\u524d\u7684 `yield` \u7684\u8fd4\u56de\u503c\u5c06\u88ab\u66ff\u6362\u4e3a\u4f20\u9012\u7ed9`next()`\u51fd\u6570\u7684\u53c2\u6570`\\"Yes\\"`\u3002\u6b64\u65f6\u53d8\u91cf `\u7b54\u6848` \u88ab\u8d4b\u503c\u4e3a `\\"Yes\\"`\uff0c`if`\u8bed\u53e5\u8fd4\u56de`false`\uff0c\u6240\u4ee5`JavaScript loves you back \u2764\ufe0f`\u88ab\u6253\u5370\u3002","id":69,"options":["`game.next(\\"Yes\\").value` and `game.next().value`","`game.next.value(\\"Yes\\")` and `game.next.value()`","`game.next().value` and `game.next(\\"Yes\\").value`","`game.next.value()` and `game.next.value(\\"Yes\\")`"],"question":"\u5982\u4f55\u80fd\u6253\u5370\u51fa`console.log`\u8bed\u53e5\u540e\u6ce8\u91ca\u6389\u7684\u503c\uff1f"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw`\u51fd\u6570\u662f\u7528\u6765\u83b7\u53d6\u4e00\u4e2a\u6a21\u677f\u5b57\u7b26\u4e32\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u7684\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5ffd\u7565\u4e86\u8f6c\u4e49\u7b26\uff08`\\n`\uff0c`\\u000b`\uff0c`\\t`\u7b49\uff09\u3002\u4f46\u53cd\u659c\u6760\u53ef\u80fd\u9020\u6210\u95ee\u9898\uff0c\u56e0\u4e3a\u4f60\u53ef\u80fd\u4f1a\u9047\u5230\u4e0b\u9762\u8fd9\u79cd\u7c7b\u4f3c\u60c5\u51b5\uff1a\\n\\n```javascript\\nconst path = `C:DocumentsProjects\\table.html`\\nString.raw`${path}`\\n```\\n\\n\u8fd9\u5c06\u5bfc\u81f4\uff1a\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\n\u76f4\u63a5\u4f7f\u7528`String.raw`\\n```javascript\\nString.raw`C:DocumentsProjects\\table.html`\\n```\\n\u5b83\u4f1a\u5ffd\u7565\u8f6c\u4e49\u5b57\u7b26\u5e76\u6253\u5370\uff1a`C:DocumentsProjects\\table.html`\\n\\n\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5b57\u7b26\u4e32\u662f`Hello\\nworld`\u88ab\u6253\u5370\u51fa\u3002","id":70,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"\u5f02\u6b65\u51fd\u6570\u59cb\u7ec8\u8fd4\u56de\u4e00\u4e2apromise\u3002`await`\u4ecd\u7136\u9700\u8981\u7b49\u5f85promise\u7684\u89e3\u51b3\uff1a\u5f53\u6211\u4eec\u8c03\u7528`getData()`\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9`data`\uff0c\u6b64\u65f6`data`\u4e3a`getData`\u65b9\u6cd5\u8fd4\u56de\u7684\u4e00\u4e2a\u6302\u8d77\u7684promise\uff0c\u8be5promise\u5e76\u6ca1\u6709\u89e3\u51b3\u3002\\n\\n\u5982\u679c\u6211\u4eec\u60f3\u8981\u8bbf\u95ee\u5df2\u89e3\u51b3\u7684\u503c`\\"I made it!\\"`\uff0c\u53ef\u4ee5\u5728`data`\u4e0a\u4f7f\u7528`.then()`\u65b9\u6cd5\uff1a\\n\\n`data.then(res => console.log(res))`\\n\\n\u8fd9\u6837\u5c06\u6253\u5370 `\\"I made it!\\"`","id":71,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"`push()`\u65b9\u6cd5\u8fd4\u56de\u65b0\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u4e00\u5f00\u59cb\uff0c\u6570\u7ec4\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff08\u5b57\u7b26\u4e32`\\"banana\\"`\uff09\uff0c\u957f\u5ea6\u4e3a1\u3002 \u5728\u6570\u7ec4\u4e2d\u6dfb\u52a0\u5b57\u7b26\u4e32`\\"apple\\"`\u540e\uff0c\u957f\u5ea6\u53d8\u4e3a2\uff0c\u5e76\u5c06\u4ece`addToList`\u51fd\u6570\u8fd4\u56de\u3002\\n\\n`push`\u65b9\u6cd5\u4fee\u6539\u539f\u59cb\u6570\u7ec4\uff0c\u5982\u679c\u4f60\u60f3\u4ece\u51fd\u6570\u8fd4\u56de\u6570\u7ec4\u800c\u4e0d\u662f\u6570\u7ec4\u957f\u5ea6\uff0c\u90a3\u4e48\u5e94\u8be5\u5728push `item`\u4e4b\u540e\u8fd4\u56de`list`\u3002","id":72,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\nconsole.log(shape)","codeLanguage":"javascript","explanation":"`Object.freeze`\u4f7f\u5f97\u65e0\u6cd5\u6dfb\u52a0\u3001\u5220\u9664\u6216\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u9664\u975e\u5c5e\u6027\u7684\u503c\u662f\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff09\u3002\\n\\n\u5f53\u6211\u4eec\u521b\u5efa\u53d8\u91cf`shape`\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u51bb\u7ed3\u5bf9\u8c61`box`\u65f6\uff0c`shape`\u6307\u5411\u7684\u4e5f\u662f\u51bb\u7ed3\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528`Object.isFrozen`\u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u88ab\u51bb\u7ed3\uff0c\u4e0a\u8ff0\u60c5\u51b5\uff0c`Object.isFrozen\uff08shape\uff09`\u5c06\u8fd4\u56de`true`\u3002\\n\\n\u7531\u4e8e`shape`\u88ab\u51bb\u7ed3\uff0c\u5e76\u4e14`x`\u7684\u503c\u4e0d\u662f\u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4fee\u6539\u5c5e\u6027`x`\u3002 `x`\u4ecd\u7136\u7b49\u4e8e`10`\uff0c`{x\uff1a10\uff0cy\uff1a20}`\u88ab\u6253\u5370\u3002\\n\\n\u6ce8\u610f\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u6211\u4eec\u5bf9\u5c5e\u6027`x`\u8fdb\u884c\u4fee\u6539\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u629b\u51faTypeError\u5f02\u5e38\uff08\u6700\u5e38\u89c1\u4f46\u4e0d\u4ec5\u9650\u4e8e\u4e25\u683c\u6a21\u5f0f\u4e0b\u65f6\uff09\u3002","id":73,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"\u5f53\u6211\u4eec\u4ece\u53f3\u4fa7\u7684\u5bf9\u8c61\u89e3\u6784\u5c5e\u6027`name`\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u503c`Lydia`\u5206\u914d\u7ed9\u540d\u4e3a`myName`\u7684\u53d8\u91cf\u3002\\n\\n\u4f7f\u7528`{name\uff1amyName}`\uff0c\u6211\u4eec\u662f\u5728\u544a\u8bc9JavaScript\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`myName`\u7684\u65b0\u53d8\u91cf\uff0c\u5e76\u4e14\u5176\u503c\u662f\u53f3\u4fa7\u5bf9\u8c61\u7684`name`\u5c5e\u6027\u7684\u503c\u3002\\n\\n\u5f53\u6211\u4eec\u5c1d\u8bd5\u6253\u5370`name`\uff0c\u4e00\u4e2a\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\u65f6\uff0c\u5c31\u4f1a\u5f15\u53d1`ReferenceError`\u3002","id":74,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"\u7eaf\u51fd\u6570\u4e00\u79cd\u82e5\u8f93\u5165\u53c2\u6570\u76f8\u540c\uff0c\u5219\u6c38\u8fdc\u4f1a\u5f97\u5230\u76f8\u540c\u8f93\u51fa\u7684\u51fd\u6570\u3002\\n\\n\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u8f93\u5165\u76f8\u540c\u53c2\u6570\uff0c\u4e5f\u4e0d\u80fd\u5f97\u5230\u76f8\u540c\u7684\u8fd4\u56de\u503c\uff1a\\n\\n<pre>\\nvar a = b = {}\\na[Symbol.toPrimitive] = b[Symbol.toPrimitive] = () => Math.random()\\nsum(a, b) // Uncertain\\n</pre>\\n\\n\u6240\u4ee5\u5b83\u4e0d\u662f\u4e00\u4e2a\u7eaf\u51fd\u6570\u3002","id":75,"options":["Yes","No"],"question":"\u4ee5\u4e0b\u662f\u4e2a\u7eaf\u51fd\u6570\u4e48?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"`add`\u51fd\u6570\u662f\u4e00\u4e2a\u8bb0\u5fc6\u51fd\u6570\u3002 \u901a\u8fc7\u8bb0\u5fc6\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u7f13\u5b58\u51fd\u6570\u7684\u7ed3\u679c\uff0c\u4ee5\u52a0\u5feb\u5176\u6267\u884c\u901f\u5ea6\u3002\u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a`cache`\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u50a8\u5148\u524d\u8fd4\u56de\u8fc7\u7684\u503c\u3002\\n\\n\u5982\u679c\u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\u591a\u6b21\u8c03\u7528`addFunction`\u51fd\u6570\uff0c\u5b83\u9996\u5148\u68c0\u67e5\u7f13\u5b58\u4e2d\u662f\u5426\u5df2\u6709\u8be5\u503c\uff0c\u5982\u679c\u6709\uff0c\u5219\u8fd4\u56de\u7f13\u5b58\u503c\uff0c\u8fd9\u5c06\u8282\u7701\u6267\u884c\u65f6\u95f4\u3002\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5b83\u5c06\u8ba1\u7b97\u8be5\u503c\uff0c\u5e76\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\u3002\\n\\n\u6211\u4eec\u7528\u76f8\u540c\u7684\u503c\u4e09\u6b21\u8c03\u7528\u4e86`addFunction`\u51fd\u6570\uff1a\\n\\n\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\uff0c`num`\u7b49\u4e8e`10`\u65f6\u51fd\u6570\u7684\u503c\u5c1a\u672a\u7f13\u5b58\uff0cif\u8bed\u53e5`num in cache`\u8fd4\u56de`false`\uff0celse\u5757\u7684\u4ee3\u7801\u88ab\u6267\u884c\uff1a`Calculated! 20`\uff0c\u5e76\u4e14\u5176\u7ed3\u679c\u88ab\u6dfb\u52a0\u5230\u7f13\u5b58\u5bf9\u8c61\uff0c`cache`\u73b0\u5728\u770b\u8d77\u6765\u50cf`{10\uff1a20}`\u3002\\n\\n\u7b2c\u4e8c\u6b21\uff0c`cache`\u5bf9\u8c61\u5305\u542b`10`\u7684\u8fd4\u56de\u503c\u3002 if\u8bed\u53e5 `num in cache` \u8fd4\u56de`true`\uff0c`From cache! 20`\u88ab\u6253\u5370\u3002\\n\\n\u7b2c\u4e09\u6b21\uff0c\u6211\u4eec\u5c06`5 * 2`(\u503c\u4e3a10)\u4f20\u9012\u7ed9\u51fd\u6570\u3002 `cache`\u5bf9\u8c61\u5305\u542b`10`\u7684\u8fd4\u56de\u503c\u3002 if\u8bed\u53e5 `num in cache` \u8fd4\u56de`true`\uff0c`From cache! 20`\u88ab\u6253\u5370\u3002","id":76,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"\u6570\u7ec4\u5143\u7d20\u53ef\u4ee5\u5305\u542b\u4efb\u4f55\u503c\u3002 \u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5e03\u5c14\u503c\uff0c\u5bf9\u8c61\uff0c\u6570\u7ec4\uff0c`null`\uff0c`undeifned`, \u4ee5\u53ca\u5176\u4ed6\u8868\u8fbe\u5f0f\uff0c\u5982\u65e5\u671f\uff0c\u51fd\u6570\u548c\u8ba1\u7b97\u3002\\n\\n\u5143\u7d20\u5c06\u7b49\u4e8e\u8fd4\u56de\u7684\u503c\u3002 `1 + 2`\u8fd4\u56de`3`\uff0c`1 * 2`\u8fd4\u56de\'2`\uff0c\'1 / 2`\u8fd4\u56de`0.5`\u3002","id":77,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u7ed9\u51fd\u6570\u4f20\u53c2\uff0c\u53c2\u6570\u7684\u503c\u5c06\u4e3a`undefined`\u3002 \u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u6ca1\u6709\u7ed9\u53c2\u6570`name`\u4f20\u503c\u3002 `name`\u7b49\u4e8e`undefined`\uff0c\u5e76\u88ab\u6253\u5370\u3002\\n\\n\u5728ES6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u8986\u76d6\u6b64\u9ed8\u8ba4\u7684`undefined`\u503c\u3002 \u4f8b\u5982\uff1a\\n\\n`function sayHi\uff08name =\u201cLydia\u201d\uff09{...}`\\n\\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u6ca1\u6709\u4f20\u9012\u503c\u6216\u8005\u5982\u679c\u6211\u4eec\u4f20\u9012`undefined`\uff0c`name`\u603b\u662f\u7b49\u4e8e\u5b57\u7b26\u4e32`Lydia`","id":78,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"`this`\u5173\u952e\u5b57\u7684\u6307\u5411\u53d6\u51b3\u4e8e\u4f7f\u7528\u5b83\u7684\u4f4d\u7f6e\u3002 \u5728**\u51fd\u6570**\u4e2d\uff0c\u6bd4\u5982`getStatus`\uff0c`this`\u6307\u5411\u7684\u662f\u8c03\u7528\u5b83\u7684\u5bf9\u8c61\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4e2d`data`\u5bf9\u8c61\u8c03\u7528\u4e86`getStatus`\uff0c\u56e0\u6b64`this`\u6307\u5411\u7684\u5c31\u662f`data`\u5bf9\u8c61\u3002 \u5f53\u6211\u4eec\u6253\u5370`this.status`\u65f6\uff0c`data`\u5bf9\u8c61\u7684`status`\u5c5e\u6027\u88ab\u6253\u5370\uff0c\u5373`\\"\ud83e\udd51\\"`\u3002\\n\\n\u4f7f\u7528`call`\u65b9\u6cd5\uff0c\u53ef\u4ee5\u66f4\u6539`this`\u6307\u5411\u7684\u5bf9\u8c61\u3002`data.getStatus.call(this)`\u662f\u5c06`this`\u7684\u6307\u5411\u7531`data`\u5bf9\u8c61\u66f4\u6539\u4e3a\u5168\u5c40\u5bf9\u8c61\u3002\u5728\u5168\u5c40\u5bf9\u8c61\u4e0a\uff0c\u6709\u4e00\u4e2a\u540d\u4e3a`status`\u7684\u53d8\u91cf\uff0c\u5176\u503c\u4e3a`\u201d\ud83d\ude0e\u201c`\u3002 \u56e0\u6b64\u6253\u5370`this.status`\u65f6\uff0c\u4f1a\u6253\u5370`\u201c\ud83d\ude0e\u201d`\u3002","id":79,"options":["`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` and `\\"\ud83d\ude0e\\"`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"\u6211\u4eec\u5c06\u53d8\u91cf`city`\u8bbe\u7f6e\u4e3a\u7b49\u4e8e`person`\u5bf9\u8c61\u4e0a\u540d\u4e3a`city`\u7684\u5c5e\u6027\u7684\u503c\u3002 \u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u6ca1\u6709\u540d\u4e3a`city`\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u53d8\u91cf`city`\u7684\u503c\u4e3a`undefined`\u3002\\n\\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u6ca1\u6709\u5f15\u7528`person`\u5bf9\u8c61\u672c\u8eab\uff0c\u53ea\u662f\u5c06\u53d8\u91cf`city`\u8bbe\u7f6e\u4e3a\u7b49\u4e8e`person`\u5bf9\u8c61\u4e0a`city`\u5c5e\u6027\u7684\u5f53\u524d\u503c\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u5c06`city`\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u5b57\u7b26\u4e32`\u201cAmsterdam\u201d`\u3002 \u8fd9\u4e0d\u4f1a\u66f4\u6539person\u5bf9\u8c61\uff1a\u6ca1\u6709\u5bf9\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\u3002\\n\\n\u56e0\u6b64\u6253\u5370`person`\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8fd4\u56de\u672a\u4fee\u6539\u7684\u5bf9\u8c61\u3002","id":80,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"`const`\u548c`let`\u58f0\u660e\u7684\u53d8\u91cf\u662f\u5177\u6709**\u5757\u7ea7\u4f5c\u7528\u57df**\u7684\uff0c\u5757\u662f\u5927\u62ec\u53f7\uff08`{}`\uff09\u4e4b\u95f4\u7684\u4efb\u4f55\u4e1c\u897f, \u5373\u4e0a\u8ff0\u60c5\u51b5`if / else`\u8bed\u53e5\u7684\u82b1\u62ec\u53f7\u3002 \u7531\u4e8e\u5757\u7ea7\u4f5c\u7528\u57df\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u58f0\u660e\u7684\u5757\u4e4b\u5916\u5f15\u7528\u53d8\u91cf\uff0c\u56e0\u6b64\u629b\u51fa`ReferenceError`\u3002","id":81,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"\u7b2c\u4e8c\u4e2a`.then`\u4e2d`res`\u7684\u503c\u7b49\u4e8e\u524d\u4e00\u4e2a`.then`\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u8fd4\u56de\u7684\u503c\u3002 \u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u7ee7\u7eed\u94fe\u63a5`.then`\uff0c\u5c06\u503c\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u5904\u7406\u7a0b\u5e8f\u3002","id":82,"options":["`fetch`\u65b9\u6cd5\u7684\u7ed3\u679c","\u7b2c\u4e8c\u6b21\u8c03\u7528`fetch`\u65b9\u6cd5\u7684\u7ed3\u679c","\u524d\u4e00\u4e2a`.then()`\u4e2d\u56de\u8c03\u65b9\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c","\u603b\u662f`undefined`"],"question":"\u4ec0\u4e48\u6837\u7684\u4fe1\u606f\u5c06\u88ab\u6253\u5370?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"\u4f7f\u7528\u903b\u8f91\u975e\u8fd0\u7b97\u7b26`!`\uff0c\u5c06\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u4f7f\u7528`!! name`\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a`name`\u7684\u503c\u662f\u771f\u7684\u8fd8\u662f\u5047\u7684\u3002 \u5982\u679c`name`\u662f\u771f\u5b9e\u7684\uff0c\u90a3\u4e48`!name`\u8fd4\u56de`false`\u3002 `!false`\u8fd4\u56de`true`\u3002\\n\\n\u901a\u8fc7\u5c06`hasName`\u8bbe\u7f6e\u4e3a`name`\uff0c\u53ef\u4ee5\u5c06`hasName`\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u4f20\u9012\u7ed9`getName`\u51fd\u6570\u7684\u503c\uff0c\u800c\u4e0d\u662f\u5e03\u5c14\u503c`true`\u3002\\n\\n`new Boolean\uff08true\uff09`\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u5305\u88c5\u5668\uff0c\u800c\u4e0d\u662f\u5e03\u5c14\u503c\u672c\u8eab\u3002\\n\\n`name.length`\u8fd4\u56de\u4f20\u9012\u7684\u53c2\u6570\u7684\u957f\u5ea6\uff0c\u800c\u4e0d\u662f\u5e03\u5c14\u503c`true`\u3002","id":83,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"\u54ea\u4e2a\u9009\u9879\u662f\u5c06`hasName`\u8bbe\u7f6e\u4e3a`true`\u7684\u65b9\u6cd5\uff0c\u524d\u63d0\u662f\u4e0d\u80fd\u5c06`true`\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012?"},{"answer":1,"code":"console.log(\\"I want pizza\\"[0])","codeLanguage":"javascript","explanation":"\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7\u8868\u793a\u6cd5\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u7279\u5b9a\u7d22\u5f15\u7684\u5b57\u7b26\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5177\u6709\u7d22\u5f150\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u60f3\u8981\u5f97\u5230\u7d22\u5f15\u4e3a0\u7684\u5143\u7d20\uff0c\u5b57\u7b26`\'I\'`\u88ab\u8bb0\u5f55\u3002\\n\\n\u8bf7\u6ce8\u610f\uff0cIE7\u53ca\u66f4\u4f4e\u7248\u672c\u4e0d\u652f\u6301\u6b64\u65b9\u6cd5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u4f7f\u7528`.charAt\uff08\uff09`","id":84,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"\u60a8\u53ef\u4ee5\u5c06\u9ed8\u8ba4\u53c2\u6570\u7684\u503c\u8bbe\u7f6e\u4e3a\u51fd\u6570\u7684\u53e6\u4e00\u4e2a\u53c2\u6570\uff0c\u53ea\u8981\u53e6\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\u5728\u5176\u4e4b\u524d\u5373\u53ef\u3002 \u6211\u4eec\u5c06\u503c`10`\u4f20\u9012\u7ed9`sum`\u51fd\u6570\u3002 \u5982\u679c`sum`\u51fd\u6570\u53ea\u63a5\u65361\u4e2a\u53c2\u6570\uff0c\u5219\u610f\u5473\u7740\u6ca1\u6709\u4f20\u9012`num2`\u7684\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c`num1`\u7684\u503c\u7b49\u4e8e\u4f20\u9012\u7684\u503c`10`\u3002 `num2`\u7684\u9ed8\u8ba4\u503c\u662f`num1`\u7684\u503c\uff0c\u5373`10`\u3002 ```num1 + num2```\u8fd4\u56de`20`\u3002\\n\\n\u5982\u679c\u60a8\u5c1d\u8bd5\u5c06\u9ed8\u8ba4\u53c2\u6570\u7684\u503c\u8bbe\u7f6e\u4e3a\u540e\u9762\u5b9a\u4e49\u7684\u53c2\u6570\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u53c2\u6570\u7684\u503c\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u4ece\u800c\u5f15\u53d1\u9519\u8bef\u3002\u6bd4\u5982\uff1a\\n```js\\nfunction test(m = n, n = 2) {\\n\\tconsole.log(m, n)\\n}\\ntest() // Uncaught ReferenceError: Cannot access \'n\' before initialization\\ntest(3) // 3 2\\ntest(3, 4) // 3 4\\n```","id":85,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"\u4f7f\u7528`import * as name`\u8bed\u6cd5\uff0c\u6211\u4eec\u5c06`module.js`\u6587\u4ef6\u4e2d\u6240\u6709`export`\u5bfc\u5165\u5230`index.js`\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a`data`\u7684\u65b0\u5bf9\u8c61\u3002 \u5728`module.js`\u6587\u4ef6\u4e2d\uff0c\u6709\u4e24\u4e2a\u5bfc\u51fa\uff1a\u9ed8\u8ba4\u5bfc\u51fa\u548c\u547d\u540d\u5bfc\u51fa\u3002 \u9ed8\u8ba4\u5bfc\u51fa\u662f\u4e00\u4e2a\u8fd4\u56de\u5b57\u7b26\u4e32\u201cHello World\u201d\u7684\u51fd\u6570\uff0c\u547d\u540d\u5bfc\u51fa\u662f\u4e00\u4e2a\u540d\u4e3a`name`\u7684\u53d8\u91cf\uff0c\u5176\u503c\u4e3a\u5b57\u7b26\u4e32`\u201cLydia\u201d`\u3002\\n\\n`data`\u5bf9\u8c61\u5177\u6709\u9ed8\u8ba4\u5bfc\u51fa\u7684`default`\u5c5e\u6027\uff0c\u5176\u4ed6\u5c5e\u6027\u5177\u6709\u6307\u5b9aexports\u7684\u540d\u79f0\u53ca\u5176\u5bf9\u5e94\u7684\u503c\u3002","id":86,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"\u7c7b\u662f\u6784\u9020\u51fd\u6570\u7684\u8bed\u6cd5\u7cd6\uff0c\u5982\u679c\u7528\u6784\u9020\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u91cd\u5199`Person`\u7c7b\u5219\u5c06\u662f\uff1a\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\n\u901a\u8fc7`new`\u6765\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u5c06\u4f1a\u751f\u6210\u6784\u9020\u51fd\u6570`Person`\u7684\u5b9e\u4f8b\uff0c\u5bf9\u5b9e\u4f8b\u6267\u884c`typeof`\u5173\u952e\u5b57\u5c06\u8fd4\u56de`\\"object\\"`\uff0c\u4e0a\u8ff0\u60c5\u51b5\u6253\u5370\u51fa`\\"object\\"`\u3002","id":87,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"`.push`\u65b9\u6cd5\u8fd4\u56de\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u672c\u8eab\uff01 \u901a\u8fc7\u5c06`newList`\u8bbe\u7f6e\u4e3a`[1,2,3].push(4)`\uff0c\u5b9e\u9645\u4e0a`newList`\u7b49\u4e8e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\uff1a`4`\u3002\\n\\n\u7136\u540e\uff0c\u5c1d\u8bd5\u5728`newList`\u4e0a\u4f7f\u7528`.push`\u65b9\u6cd5\u3002 \u7531\u4e8e`newList`\u662f\u6570\u503c`4`\uff0c\u629b\u51faTypeError\u3002","id":88,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"\u5e38\u89c4\u51fd\u6570\uff0c\u4f8b\u5982`giveLydiaPizza`\u51fd\u6570\uff0c\u6709\u4e00\u4e2a`prototype`\u5c5e\u6027\uff0c\u5b83\u662f\u4e00\u4e2a\u5e26\u6709`constructor`\u5c5e\u6027\u7684\u5bf9\u8c61\uff08\u539f\u578b\u5bf9\u8c61\uff09\u3002 \u7136\u800c\uff0c\u7bad\u5934\u51fd\u6570\uff0c\u4f8b\u5982`giveLydiaChocolate`\u51fd\u6570\uff0c\u6ca1\u6709\u8fd9\u4e2a`prototype`\u5c5e\u6027\u3002 \u5c1d\u8bd5\u4f7f\u7528`giveLydiaChocolate.prototype`\u8bbf\u95ee`prototype`\u5c5e\u6027\u65f6\u4f1a\u8fd4\u56de`undefined`\u3002","id":89,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries()`\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7ed9\u5b9a\u5bf9\u8c61\u81ea\u8eab\u53ef\u679a\u4e3e\u5c5e\u6027\u7684\u952e\u503c\u5bf9\u6570\u7ec4\uff0c\u4e0a\u8ff0\u60c5\u51b5\u8fd4\u56de\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u5305\u542b\u952e\u548c\u503c\u7684\u6570\u7ec4\uff1a\\n\\n`[[\'name\'\uff0c\'Lydia\']\uff0c[\'age\'\uff0c21]]`\\n\\n\u4f7f\u7528`for-of`\u5faa\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u8fed\u4ee3\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u4e0a\u8ff0\u60c5\u51b5\u662f\u5b50\u6570\u7ec4\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528`const [x\uff0cy]`\u5728`for-of`\u5faa\u73af\u4e2d\u89e3\u6784\u5b50\u6570\u7ec4\u3002 `x`\u7b49\u4e8e\u5b50\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c`y`\u7b49\u4e8e\u5b50\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u3002\\n\\n\u7b2c\u4e00\u4e2a\u5b50\u9635\u5217\u662f`[\u201cname\u201d\uff0c\u201cLydia\u201d]`\uff0c\u5176\u4e2d`x`\u7b49\u4e8e`name`\uff0c\u800c`y`\u7b49\u4e8e`Lydia`\u3002\\n\u7b2c\u4e8c\u4e2a\u5b50\u9635\u5217\u662f`[\u201cage\u201d\uff0c21]`\uff0c\u5176\u4e2d`x`\u7b49\u4e8e`age`\uff0c\u800c`y`\u7b49\u4e8e`21`\u3002","id":90,"options":["`name` `Lydia` and `age` `21`","`[\\"name\\", \\"Lydia\\"]` and `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` and `undefined`","`Error`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`... args`\u662f\u5269\u4f59\u53c2\u6570\uff0c\u5269\u4f59\u53c2\u6570\u7684\u503c\u662f\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5269\u4f59\u53c2\u6570\u7684\u6570\u7ec4\uff0c**\u5e76\u4e14\u53ea\u80fd\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570**\u3002\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u5269\u4f59\u53c2\u6570\u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5e76\u4f1a\u629b\u51fa\u8bed\u6cd5\u9519\u8bef\u3002\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\n\u4e0a\u8ff0\u4f8b\u5b50\u662f\u6709\u6548\u7684\uff0c\u5c06\u4f1a\u8fd4\u56de\u6570\u7ec4\uff1a`[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":91,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"\u6211\u4eec\u53ef\u4ee5\u5c06\u7c7b\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u5176\u4ed6\u7c7b/\u51fd\u6570\u6784\u9020\u51fd\u6570\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06`Person`\u8bbe\u7f6e\u4e3a`AnotherPerson`\u3002 \u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u7684\u540d\u5b57\u662f`Sarah`\uff0c\u6240\u4ee5\u65b0\u7684`Person`\u5b9e\u4f8b`member`\u4e0a\u7684name\u5c5e\u6027\u662f`Sarah`\u3002","id":92,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"`Symbol`\u7c7b\u578b\u662f\u4e0d\u53ef\u679a\u4e3e\u7684\u3002`Object.keys`\u65b9\u6cd5\u8fd4\u56de\u5bf9\u8c61\u4e0a\u7684\u6240\u6709\u53ef\u679a\u4e3e\u7684\u952e\u5c5e\u6027\u3002`Symbol`\u7c7b\u578b\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002 \u8bb0\u5f55\u6574\u4e2a\u5bf9\u8c61\u65f6\uff0c\u6240\u6709\u5c5e\u6027\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u751a\u81f3\u662f\u4e0d\u53ef\u679a\u4e3e\u7684\u5c5e\u6027\u3002\\n\\n\u8fd9\u662f`Symbol`\u7684\u4f17\u591a\u7279\u6027\u4e4b\u4e00\uff1a\u9664\u4e86\u8868\u793a\u5b8c\u5168\u552f\u4e00\u7684\u503c\uff08\u9632\u6b62\u5bf9\u8c61\u610f\u5916\u540d\u79f0\u51b2\u7a81\uff0c\u4f8b\u5982\u5f53\u4f7f\u75282\u4e2a\u60f3\u8981\u5411\u540c\u4e00\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\u7684\u5e93\u65f6\uff09\uff0c\u60a8\u8fd8\u53ef\u4ee5`\u9690\u85cf`\u8fd9\u79cd\u65b9\u5f0f\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u5c3d\u7ba1\u4e0d\u5b8c\u5168\u3002\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528`Object.getOwnPropertySymbols()`\u65b9\u6cd5\u8bbf\u95ee `Symbol`\u3002","id":93,"options":["`{Symbol(\'a\'): \'b\'}` and `[\\"{Symbol(\'a\')\\"]`","`{}` and `[]`","`{ a: \\"b\\" }` and `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` and `[]`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"`getList`\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6570\u7ec4\u4f5c\u4e3a\u5176\u53c2\u6570\u3002 \u5728`getList`\u51fd\u6570\u7684\u62ec\u53f7\u4e4b\u95f4\uff0c\u6211\u4eec\u7acb\u5373\u89e3\u6784\u8fd9\u4e2a\u6570\u7ec4\u3002 \u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\uff1a\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\n\\n\u4f7f\u7528\u5269\u4f59\u7684\u53c2\u6570`... y`\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5269\u4f59\u53c2\u6570\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5176\u4f59\u7684\u53c2\u6570\u662f`2`\uff0c`3`\u548c`4`\u3002 `y`\u7684\u503c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5305\u542b\u6240\u6709\u5176\u4f59\u53c2\u6570\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c`x`\u7684\u503c\u7b49\u4e8e`1`\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u6253\u5370`[x\uff0cy]`\u65f6\uff0c\u4f1a\u6253\u5370`[1\uff0c[2,3,4]]`\u3002\\n\\n `getUser`\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\u3002\u5bf9\u4e8e\u7bad\u5934\u51fd\u6570\uff0c\u5982\u679c\u53ea\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u4e0d\u5fc5\u7f16\u5199\u82b1\u62ec\u53f7\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u4ece\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u60a8\u5fc5\u987b\u5728\u5706\u62ec\u53f7\u4e4b\u95f4\u7f16\u5199\u5b83\uff0c\u5426\u5219\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u503c!\u4e0b\u9762\u7684\u51fd\u6570\u5c06\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\n\u7531\u4e8e\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u8fd4\u56de`undefined`\u3002","id":94,"options":["`[1, [2, 3, 4]]` and `undefined`","`[1, [2, 3, 4]]` and `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` and `{ name: \\"Lydia\\", age: 21 }`","`Error` and `{ name: \\"Lydia\\", age: 21 }`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"\u53d8\u91cf`name`\u4fdd\u5b58\u5b57\u7b26\u4e32\u7684\u503c\uff0c\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f\u51fd\u6570\uff0c\u56e0\u6b64\u65e0\u6cd5\u8c03\u7528\u3002\\n\\n\u5f53\u503c\u4e0d\u662f\u9884\u671f\u7c7b\u578b\u65f6\uff0c\u4f1a\u629b\u51fa`TypeErrors`\u3002 JavaScript\u671f\u671b`name`\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u8bd5\u56fe\u8c03\u7528\u5b83\u3002 \u4f46\u5b83\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u629b\u51fa`TypeError`\uff1a`name is not a function`\\n\\n\u5f53\u4f60\u7f16\u5199\u4e86\u4e00\u4e9b\u975e\u6709\u6548\u7684JavaScript\u65f6\uff0c\u4f1a\u629b\u51fa\u8bed\u6cd5\u9519\u8bef\uff0c\u4f8b\u5982\u5f53\u4f60\u628a`return`\u8fd9\u4e2a\u8bcd\u5199\u6210`retrun`\u65f6\u3002\\n\u5f53JavaScript\u65e0\u6cd5\u627e\u5230\u60a8\u5c1d\u8bd5\u8bbf\u95ee\u7684\u503c\u7684\u5f15\u7528\u65f6\uff0c\u629b\u51fa`ReferenceErrors`\u3002","id":95,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]`\u662f\u4e00\u4e2a\u771f\u503c\u3002 \u4f7f\u7528`&&`\u8fd0\u7b97\u7b26\uff0c\u5982\u679c\u5de6\u4fa7\u503c\u662f\u771f\u503c\uff0c\u5219\u8fd4\u56de\u53f3\u4fa7\u503c\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5de6\u4fa7\u503c`[]`\u662f\u4e00\u4e2a\u771f\u503c\uff0c\u6240\u4ee5\u8fd4\u56de`Im`\u3002\\n\\n`\\"\\"`\u662f\u4e00\u4e2a\u5047\u503c\u3002 \u5982\u679c\u5de6\u4fa7\u503c\u662f\u5047\u7684\uff0c\u5219\u4e0d\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u3002 `n\'t`\u4e0d\u4f1a\u88ab\u9000\u56de\u3002","id":96,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"\u4f7f\u7528`||`\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u771f\u503c\u3002 \u5982\u679c\u6240\u6709\u503c\u90fd\u662f\u5047\u503c\uff0c\u5219\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u503c\u3002\\n\\n`\uff08false || {} || null\uff09`\uff1a\u7a7a\u5bf9\u8c61`{}`\u662f\u4e00\u4e2a\u771f\u503c\u3002 \u8fd9\u662f\u7b2c\u4e00\u4e2a\uff08\u4e5f\u662f\u552f\u4e00\u7684\uff09\u771f\u503c\uff0c\u5b83\u5c06\u88ab\u8fd4\u56de\u3002`one`\u7b49\u4e8e`{}`\u3002\\n\\n`\uff08null || false ||\u201c\u201d\uff09`\uff1a\u6240\u6709\u503c\u90fd\u662f\u5047\u503c\u3002 \u8fd9\u610f\u5473\u7740\u8fd4\u56de\u4f20\u9012\u7684\u503c`\\"\\"`\u3002 `two`\u7b49\u4e8e`\\"\\"`\u3002\\n\\n`\uff08[] || 0 ||\u201c\u201d\uff09`\uff1a\u7a7a\u6570\u7ec4`[]`\u662f\u4e00\u4e2a\u771f\u503c\u3002 \u8fd9\u662f\u7b2c\u4e00\u4e2a\u8fd4\u56de\u7684\u771f\u503c\u3002 `three`\u7b49\u4e8e`[]`\u3002","id":97,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":""},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"\u6709\u4e86promise\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u8bf4\uff1a\u5f53\u6211\u60f3\u8981\u8c03\u7528\u67d0\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u6b64\u6682\u65f6\u5c06\u5b83\u653e\u5728\u4e00\u8fb9\u3002\u53ea\u6709\u5f53\u67d0\u4e2a\u503c\u88abresolved/rejected\uff0c\u5e76\u4e14\u6267\u884c\u6808\u4e3a\u7a7a\u65f6\u624d\u4f7f\u7528\u8fd9\u4e2a\u503c\u3002\\n\\n\u6211\u4eec\u53ef\u4ee5\u5728`async`\u51fd\u6570\u4e2d\u901a\u8fc7`.then`\u548c`await`\u5173\u952e\u5b57\u83b7\u5f97\u8be5\u503c\u3002 \u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`.then`\u548c`await`\u83b7\u5f97promise\u7684\u4ef7\u503c\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u6240\u4e0d\u540c\u3002\\n\\n\u5728 `firstFunction`\u4e2d\uff0c\u5f53\u8fd0\u884c\u5230`myPromise`\u65b9\u6cd5\u65f6\u6211\u4eec\u5c06\u5176\u653e\u5728\u4e00\u8fb9\uff0c\u5373promise\u8fdb\u5165\u5fae\u4efb\u52a1\u961f\u5217\uff0c\u5176\u4ed6\u540e\u9762\u7684\u4ee3\u7801\uff08`console.log(\'second\')`\uff09\u7167\u5e38\u8fd0\u884c\uff0c\u56e0\u6b64`second`\u88ab\u6253\u5370\u51fa\uff0c`firstFunction`\u65b9\u6cd5\u5230\u6b64\u6267\u884c\u5b8c\u6bd5\uff0c\u6267\u884c\u6808\u4e2d\u5b8f\u4efb\u52a1\u961f\u5217\u88ab\u6e05\u7a7a\uff0c\u6b64\u65f6\u5f00\u59cb\u6267\u884c\u5fae\u4efb\u52a1\u961f\u5217\u4e2d\u7684\u4efb\u52a1\uff0c`I have resolved`\u88ab\u6253\u5370\u51fa\u3002\\n\\n\u5728`secondFunction`\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7`await`\u5173\u952e\u5b57\uff0c\u6682\u505c\u4e86\u540e\u9762\u4ee3\u7801\u7684\u6267\u884c\uff0c\u76f4\u5230\u5f02\u6b65\u51fd\u6570\u7684\u503c\u88ab\u89e3\u6790\u624d\u5f00\u59cb\u540e\u9762\u4ee3\u7801\u7684\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5b83\u4f1a\u7b49\u7740\u76f4\u5230 `myPromise` \u4ee5\u503c`I have resolved`\u88ab\u89e3\u51b3\u4e4b\u540e\uff0c\u4e0b\u4e00\u884c`second`\u624d\u5f00\u59cb\u6267\u884c\u3002","id":98,"options":["`I have resolved!`, `second` and `I have resolved!`, `second`","`second`, `I have resolved!` and `second`, `I have resolved!`","`I have resolved!`, `second` and `second`, `I have resolved!`","`second`, `I have resolved!` and `I have resolved!`, `second`"],"question":"\u4f9d\u6b21\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"\u201c+\u201d\u8fd0\u7b97\u7b26\u4e0d\u4ec5\u7528\u4e8e\u6dfb\u52a0\u6570\u503c\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8fde\u63a5\u5b57\u7b26\u4e32\u3002 \u6bcf\u5f53JavaScript\u5f15\u64ce\u53d1\u73b0\u4e00\u4e2a\u6216\u591a\u4e2a\u503c\u4e0d\u662f\u6570\u5b57\u65f6\uff0c\u5c31\u4f1a\u5c06\u6570\u5b57\u5f3a\u5236\u4e3a\u5b57\u7b26\u4e32\u3002 \\n\\n\u7b2c\u4e00\u4e2a\u662f\u6570\u5b571\u3002 1 + 2\u8fd4\u56de\u6570\u5b573\u3002\\n\\n\u4f46\u662f\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5b57\u7b26\u4e32\u201cLydia\u201d\u3002 \u201cLydia\u201d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c2\u662f\u4e00\u4e2a\u6570\u5b57\uff1a2\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 \u201cLydia\u201d\u548c\u201c2\u201d\u88ab\u8fde\u63a5\u8d77\u6765\uff0c\u4ea7\u751f\u5b57\u7b26\u4e32\u201cLydia2\u201d\u3002\\n\\n`{name\uff1a\u201c Lydia\u201d}`\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 \u6570\u5b57\u548c\u5bf9\u8c61\u90fd\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5c06\u4e8c\u8005\u90fd\u5b57\u7b26\u4e32\u5316\u3002 \u6bcf\u5f53\u6211\u4eec\u5bf9\u5e38\u89c4\u5bf9\u8c61\u8fdb\u884c\u5b57\u7b26\u4e32\u5316\u65f6\uff0c\u5b83\u5c31\u4f1a\u53d8\u6210`[Object object]`\u3002 \u4e0e\u201c2\u201d\u4e32\u8054\u7684\u201c [Object object]\u201d\u6210\u4e3a\u201c[Object object]2\u201d\u3002","id":99,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[Object object]2`","`\\"12\\"`, `Lydia2`, `[Object object]2`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"\u6211\u4eec\u53ef\u4ee5\u5c06\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u503c\u4f20\u9012`Promise.resolve`\uff0c\u65e0\u8bba\u662f\u5426`promise`\u3002 \u8be5\u65b9\u6cd5\u672c\u8eab\u8fd4\u56de\u5e26\u6709\u5df2\u89e3\u6790\u503c\u7684`Promise` (`<fulfilled>`)\u3002 \u5982\u679c\u60a8\u4f20\u9012\u5e38\u89c4\u51fd\u6570\uff0c\u5b83\u5c06\u662f\u5177\u6709\u5e38\u89c4\u503c\u7684\u5df2\u89e3\u51b3`promise`\u3002 \u5982\u679c\u4f60\u901a\u8fc7\u4e86promise\uff0c\u5b83\u5c06\u662f\u4e00\u4e2a\u5df2\u7ecfresolved\u7684\u4e14\u5e26\u6709\u4f20\u7684\u503c\u7684promise\u3002\\n\\n\u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u4f20\u4e86\u6570\u5b575\uff0c\u56e0\u6b64\u8fd4\u56de\u4e00\u4e2aresolved\u72b6\u6001\u7684promise\uff0cresolve\u503c\u4e3a`5`","id":100,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"\u7ed3\u679c\u662f\u4ec0\u4e48?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"\u5bf9\u8c61\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u3002 \u5f53\u6211\u4eec\u68c0\u67e5\u5bf9\u8c61\u7684\u4e25\u683c\u76f8\u7b49\u6027\uff08===\uff09\u65f6\uff0c\u6211\u4eec\u6b63\u5728\u6bd4\u8f83\u5b83\u4eec\u7684\u5f15\u7528\u3002\\n\\n\u6211\u4eec\u5c06\u201cperson2\u201d\u7684\u9ed8\u8ba4\u503c\u8bbe\u7f6e\u4e3a\u201cperson\u201d\u5bf9\u8c61\uff0c\u5e76\u5c06\u201cperson\u201d\u5bf9\u8c61\u4f5c\u4e3a\u201cperson1\u201d\u7684\u503c\u4f20\u9012\u3002\\n\\n\u8fd9\u610f\u5473\u7740\u4e24\u4e2a\u503c\u90fd\u5f15\u7528\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u4f4d\u7f6e\uff0c\u56e0\u6b64\u5b83\u4eec\u662f\u76f8\u7b49\u7684\u3002\\n\\n\u8fd0\u884c\u201c else\u201d\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5e76\u8bb0\u5f55`They are the same!` \u3002","id":101,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"\u5728JavaScript\u4e2d\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027\u7684\u65b9\u6cd5\uff1a\u62ec\u53f7\u8868\u793a\u6cd5\u6216\u70b9\u8868\u793a\u6cd5\u3002 \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u70b9\u8868\u793a\u6cd5\uff08`colorConfig.colors`\uff09\u4ee3\u66ff\u62ec\u53f7\u8868\u793a\u6cd5\uff08`colorConfig [\u201c colors\u201d]`\uff09\u3002\\n\\n\u4f7f\u7528\u70b9\u8868\u793a\u6cd5\uff0cJavaScript\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u8be5\u786e\u5207\u540d\u79f0\u5728\u5bf9\u8c61\u4e0a\u67e5\u627e\u5c5e\u6027\u3002 \u5728\u6b64\u793a\u4f8b\u4e2d\uff0cJavaScript\u5c1d\u8bd5\u5728colorconfig\u5bf9\u8c61\u4e0a\u627e\u5230\u540d\u4e3acolors\u7684\u5c5e\u6027\u3002 \u6ca1\u6709\u540d\u4e3a\u201ccolors\u201d\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u8fd4\u56de\u201cundefined\u201d\u3002\\n\u7136\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528`[1]`\u8bbf\u95ee\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u3002 \u6211\u4eec\u65e0\u6cd5\u5bf9\u672a\u5b9a\u4e49\u7684\u503c\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u56e0\u6b64\u4f1a\u629b\u51fa`Cannot read property \'1\' of undefined`\u3002\\n\\nJavaScript\u89e3\u91ca\uff08\u6216\u53d6\u6d88\u88c5\u7bb1\uff09\u8bed\u53e5\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u65b9\u62ec\u53f7\u8868\u793a\u6cd5\u65f6\uff0c\u5b83\u4f1a\u770b\u5230\u7b2c\u4e00\u4e2a\u5de6\u65b9\u62ec\u53f7`[`\u5e76\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u627e\u5230\u53f3\u65b9\u62ec\u53f7`]`\u3002 \u53ea\u6709\u8fd9\u6837\uff0c\u5b83\u624d\u4f1a\u8bc4\u4f30\u8be5\u8bed\u53e5\u3002 \u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e86colorConfig [colors [1]]\uff0c\u5b83\u5c06\u8fd4\u56decolorConfig\u5bf9\u8c61\u4e0ared\u5c5e\u6027\u7684\u503c\u3002","id":102,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"\u5728\u5185\u90e8\uff0c\u8868\u60c5\u7b26\u53f7\u662funicode\u3002 heat\u8868\u60c5\u7b26\u53f7\u7684unicode\u662f`\u201c U + 2764 U + FE0F\u201d`\u3002 \u5bf9\u4e8e\u76f8\u540c\u7684\u8868\u60c5\u7b26\u53f7\uff0c\u5b83\u4eec\u603b\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4e24\u4e2a\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\u76f8\u4e92\u6bd4\u8f83\uff0c\u8fd9\u5c06\u8fd4\u56detrue\u3002","id":103,"options":["`true`","`false`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"\u4f7f\u7528`splice`\u65b9\u6cd5\uff0c\u6211\u4eec\u901a\u8fc7\u5220\u9664\uff0c\u66ff\u6362\u6216\u6dfb\u52a0\u5143\u7d20\u6765\u4fee\u6539\u539f\u59cb\u6570\u7ec4\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ece\u7d22\u5f151\u4e2d\u5220\u9664\u4e862\u4e2a\u5143\u7d20\uff08\u6211\u4eec\u5220\u9664\u4e86`\'\ud83e\udd51\'`\u548c`\'\ud83d\ude0d\'`\uff09\uff0c\u540c\u65f6\u6dfb\u52a0\u4e86\u2728emoji\u8868\u60c5\u3002\\n\\n`map`\uff0c`filter`\u548c`slice`\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4\uff0c`find`\u8fd4\u56de\u4e00\u4e2a\u5143\u7d20\uff0c\u800c`reduce`\u8fd4\u56de\u4e00\u4e2a\u51cf\u5c0f\u7684\u503c\u3002","id":104,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"\u54ea\u4e9b\u65b9\u6cd5\u4fee\u6539\u4e86\u539f\u6570\u7ec4?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"\u4f7f\u7528`JSON.parse()`\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06JSON\u5b57\u7b26\u4e32\u89e3\u6790\u4e3aJavaScript\u503c\u3002\\n\\n```javascript\\n// \u5c06\u6570\u5b57\u5b57\u7b26\u4e32\u5316\u4e3a\u6709\u6548\u7684JSON\uff0c\u7136\u540e\u5c06JSON\u5b57\u7b26\u4e32\u89e3\u6790\u4e3aJavaScript\u503c:\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// \u5c06\u6570\u7ec4\u503c\u5b57\u7b26\u4e32\u5316\u4e3a\u6709\u6548\u7684JSON\uff0c\u7136\u540e\u5c06JSON\u5b57\u7b26\u4e32\u89e3\u6790\u4e3aJavaScript\u503c:\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// \u5c06\u5bf9\u8c61\u5b57\u7b26\u4e32\u5316\u4e3a\u6709\u6548\u7684JSON\uff0c\u7136\u540e\u5c06JSON\u5b57\u7b26\u4e32\u89e3\u6790\u4e3aJavaScript\u503c:\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":105,"options":["Parses JSON to a JavaScript value","Parses a JavaScript object to JSON","Parses any JavaScript value to JSON","Parses JSON to a JavaScript object only"],"question":"\u8fd9\u4e2a\u51fd\u6570\u5e72\u4e86\u4ec0\u4e48?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"\u6bcf\u4e2a\u51fd\u6570\u90fd\u6709\u5176\u81ea\u5df1\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u3002 `getName`\u51fd\u6570\u9996\u5148\u5728\u5176\u81ea\u8eab\u7684\u4e0a\u4e0b\u6587\uff08\u8303\u56f4\uff09\u5185\u67e5\u627e\uff0c\u4ee5\u67e5\u770b\u5176\u662f\u5426\u5305\u542b\u6211\u4eec\u5c1d\u8bd5\u8bbf\u95ee\u7684\u53d8\u91cf`name`\u3002 \u4e0a\u8ff0\u60c5\u51b5\uff0c`getName`\u51fd\u6570\u5305\u542b\u5176\u81ea\u5df1\u7684`name`\u53d8\u91cf\uff1a\u6211\u4eec\u7528`let`\u5173\u952e\u5b57\u548c`Sarah`\u7684\u503c\u58f0\u660e\u53d8\u91cf`name`\u3002\\n\\n\u5e26\u6709`let`\u5173\u952e\u5b57\uff08\u548c`const`\uff09\u7684\u53d8\u91cf\u88ab\u63d0\u5347\uff0c\u4f46\u662f\u4e0e`var`\u4e0d\u540c\uff0c\u5b83\u4e0d\u4f1a\u88ab***\u521d\u59cb\u5316***\u3002 \u5728\u6211\u4eec\u58f0\u660e\uff08\u521d\u59cb\u5316\uff09\u5b83\u4eec\u4e4b\u524d\uff0c\u65e0\u6cd5\u8bbf\u95ee\u5b83\u4eec\u3002 \u8fd9\u79f0\u4e3a\u201c\u6682\u65f6\u6027\u6b7b\u533a\u201d\u3002 \u5f53\u6211\u4eec\u5c1d\u8bd5\u5728\u58f0\u660e\u53d8\u91cf\u4e4b\u524d\u8bbf\u95ee\u53d8\u91cf\u65f6\uff0cJavaScript\u4f1a\u629b\u51fa`ReferenceError: Cannot access \'name\' before initialization`\u3002\\n\\n\u5982\u679c\u6211\u4eec\u4e0d\u5728`getName`\u51fd\u6570\u4e2d\u58f0\u660e`name`\u53d8\u91cf\uff0c\u5219javascript\u5f15\u64ce\u4f1a\u67e5\u770b\u539f\u578b\u7ec3\u3002\u4f1a\u627e\u5230\u5176\u5916\u90e8\u4f5c\u7528\u57df\u6709\u4e00\u4e2a\u540d\u4e3a`name`\u7684\u53d8\u91cf\uff0c\u5176\u503c\u4e3a`Lydia`\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u6253\u5370`Lydia`\uff1a\\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":106,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"\u901a\u8fc7 `yield` \u5173\u952e\u5b57, \u6211\u4eec\u5728 `Generator` \u51fd\u6570\u91cc\u6267\u884c`yield`\u8868\u8fbe\u5f0f. \u901a\u8fc7 `yield*` \u5173\u952e\u5b57, \u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a`Generator` \u51fd\u6570\u91cc\u9762\u6267\u884c\uff08`yield`\u8868\u8fbe\u5f0f\uff09\u53e6\u4e00\u4e2a `Generator` \u51fd\u6570, \u6216\u53ef\u904d\u5386\u7684\u5bf9\u8c61 (\u5982\u6570\u7ec4).\\n\\n\u5728\u51fd\u6570 `generatorOne` \u4e2d, \u6211\u4eec\u901a\u8fc7 `yield` \u5173\u952e\u5b57 yield \u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u7ec4 `[\'a\', \'b\', \'c\']`\u3002\u51fd\u6570`one`\u901a\u8fc7`next`\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u7684`value` \u5c5e\u6027\u7684\u503c (`one.next().value`) \u7b49\u4ef7\u4e8e\u6570\u7ec4 `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\n\u5728\u51fd\u6570 `generatorTwo` \u4e2d, \u6211\u4eec\u4f7f\u7528 `yield*` \u5173\u952e\u5b57\u3002\u5c31\u76f8\u5f53\u4e8e\u51fd\u6570`two`\u7b2c\u4e00\u4e2a`yield`\u7684\u503c, \u7b49\u4ef7\u4e8e\u5728\u8fed\u4ee3\u5668\u4e2d\u7b2c\u4e00\u4e2a `yield` \u7684\u503c\u3002\u6570\u7ec4`[\'a\', \'b\', \'c\']`\u5c31\u662f\u8fd9\u4e2a\u8fed\u4ee3\u5668. \u7b2c\u4e00\u4e2a `yield` \u7684\u503c\u5c31\u662f `a`, \u6240\u4ee5\u6211\u4eec\u7b2c\u4e00\u6b21\u8c03\u7528 `two.next().value`\u65f6, \u5c31\u8fd4\u56de`a`\u3002\\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":107,"options":["`a` and `a`","`a` and `undefined`","`[\'a\', \'b\', \'c\']` and `a`","`a` and `[\'a\', \'b\', \'c\']`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"\u5e26\u6709\u6a21\u677f\u5b57\u9762\u91cf\u7684\u8868\u8fbe\u5f0f\u9996\u5148\u88ab\u6267\u884c\u3002\u76f8\u5f53\u4e8e\u5b57\u7b26\u4e32\u4f1a\u5305\u542b\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e2a\u7acb\u5373\u6267\u884c\u51fd\u6570 `(x => x)(\'I love\')` \u8fd4\u56de\u7684\u503c. \u6211\u4eec\u5411\u7bad\u5934\u51fd\u6570 `x => x` \u4f20\u9012 `\'I love\'` \u4f5c\u4e3a\u53c2\u6570\u3002`x` \u7b49\u4ef7\u4e8e\u8fd4\u56de\u7684 `\'I love\'`\u3002\u8fd9\u5c31\u662f\u7ed3\u679c `I love to program`\u3002","id":108,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\')\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"\u4e00\u822c\u60c5\u51b5\u4e0b\u5f53\u6211\u4eec\u5c06\u5bf9\u8c61\u8d4b\u503c\u4e3a `null`, \u90a3\u4e9b\u5bf9\u8c61\u4f1a\u88ab\u8fdb\u884c _\u5783\u573e\u56de\u6536\uff08garbage collected\uff09_ \u56e0\u4e3a\u5df2\u7ecf\u6ca1\u6709\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5f15\u7528\u4e86\u3002\u7136\u800c\uff0c`setInterval`\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\uff08\u6240\u4ee5\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u5230\u5bf9\u8c61 `config` \u4e86\uff09\uff0c\u56de\u8c03\u51fd\u6570\u4ecd\u7136\u4fdd\u7559\u7740\u5bf9 `config`\u7684\u5f15\u7528\u3002\u53ea\u8981\u5b58\u5728\u5f15\u7528\uff0c\u5bf9\u8c61\u5c31\u4e0d\u4f1a\u88ab\u5783\u573e\u56de\u6536\u3002\u56e0\u4e3a\u6ca1\u6709\u88ab\u5783\u573e\u56de\u6536\uff0c`setInterval` \u7684\u56de\u8c03\u6bcf1000ms (1s)\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21\u3002","id":109,"options":["`setInterval` \u7684\u56de\u8c03\u4e0d\u4f1a\u88ab\u8c03\u7528","`setInterval` \u7684\u56de\u8c03\u88ab\u8c03\u7528\u4e00\u6b21","`setInterval` \u7684\u56de\u8c03\u4ecd\u7136\u4f1a\u88ab\u6bcf\u79d2\u949f\u8c03\u7528","\u6211\u4eec\u4ece\u6ca1\u8c03\u7528\u8fc7 `config.alert()`, config \u4e3a `null`"],"question":"\u5c06\u4f1a\u53d1\u751f\u4ec0\u4e48?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\')","codeLanguage":"javascript","explanation":"\u5f53\u901a\u8fc7 `set` \u65b9\u6cd5\u6dfb\u52a0\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u4e00\u4e2a\u4f20\u9012\u7ed9 `set`\u65b9\u6cd5\u7684\u53c2\u6570\u5c06\u4f1a\u662f\u952e\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c06\u4f1a\u662f\u503c\u3002\u5728\u8fd9\u4e2acase\u91cc\uff0c\u952e\u540d\u4e3a _\u51fd\u6570_ `() => \'greeting\'`\uff0c\u503c\u4e3a`\'Hello world\'`\u3002 `myMap` \u73b0\u5728\u5c31\u662f `{ () => \'greeting\' => \'Hello world!\' }`\u3002\\n\\n1 \u662f\u9519\u7684\uff0c\u56e0\u4e3a\u952e\u540d\u4e0d\u662f `\'greeting\'` \u800c\u662f `() => \'greeting\'`\u3002\\n3 \u662f\u9519\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7ed9`get` \u65b9\u6cd5\u4f20\u9012\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002\u5bf9\u8c61\u53d7 _\u5f15\u7528_ \u5f71\u54cd\u3002\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u4e24\u4e2a\u51fd\u6570\u4e25\u683c\u4e0a\u5e76\u4e0d\u7b49\u4ef7\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u76f8\u540c\uff1a\u4ed6\u4eec\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u5185\u5b58\u5f15\u7528\u5730\u5740\u3002","id":110,"options":["1","2","2 and 3","All of them"],"question":"\u54ea\u4e00\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de `\'Hello world!\'` \uff1f"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"\u51fd\u6570 `changeAge` \u548c\u51fd\u6570 `changeAgeAndName` \u6709\u7740\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u5b9a\u4e49\u4e00\u4e2a _\u65b0_ \u751f\u6210\u7684\u5bf9\u8c61 `{ ...person }`\u3002\u8fd9\u4e2a\u5bf9\u8c61\u6709\u7740\u6240\u6709 `person` \u5bf9\u8c61 \u4e2d k/v \u503c\u7684\u526f\u672c\u3002\\n\\n\u9996\u9879, \u6211\u4eec\u8c03\u7528 `changeAge` \u51fd\u6570\u5e76\u4f20\u9012 `person` \u5bf9\u8c61\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u5bf9 `age` \u5c5e\u6027\u8fdb\u884c\u52a0\u4e00\u64cd\u4f5c\u3002`person` \u73b0\u5728\u662f `{ name: \\"Lydia\\", age: 22 }`\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u8c03\u7528\u51fd\u6570 `changeAgeAndName` \uff0c\u7136\u800c\u6211\u4eec\u6ca1\u6709\u4f20\u9012\u53c2\u6570\u3002\u53d6\u800c\u4ee3\u4e4b\uff0c`x` \u7684\u503c\u7b49\u4ef7 _new_ \u751f\u6210\u7684\u5bf9\u8c61: `{ ...person }`\u3002\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u65b0\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u5b83\u5e76\u4e0d\u4f1a\u5bf9\u5bf9\u8c61 `person` \u9020\u6210\u4efb\u4f55\u526f\u4f5c\u7528\u3002`person` \u4ecd\u7136\u7b49\u4ef7\u4e8e `{ name: \\"Lydia\\", age: 22 }`\u3002","id":111,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":2,"code":"function sumValues(x, y, z) {\\n\\treturn x + y + z;\\n}","codeLanguage":"javascript","explanation":"\u901a\u8fc7\u5c55\u5f00\u64cd\u4f5c\u7b26 `...`\uff0c\u6211\u4eec\u53ef\u4ee5 _\u6682\u5f00_ \u5355\u4e2a\u53ef\u8fed\u4ee3\u7684\u5143\u7d20\u3002\u51fd\u6570 `sumValues` function \u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff1a `x`, `y` \u548c `z`\u3002`...[1, 2, 3]` \u7684\u6267\u884c\u7ed3\u679c\u4e3a `1, 2, 3`\uff0c\u5c06\u4f1a\u4f20\u9012\u7ed9\u51fd\u6570 `sumValues`\u3002","id":112,"options":["`sumValues([...1, 2, 3])`","`sumValues([...[1, 2, 3]])`","`sumValues(...[1, 2, 3])`","`sumValues([1, 2, 3])`"],"question":"\u4e0b\u9762\u90a3\u4e2a\u9009\u9879\u5c06\u4f1a\u8fd4\u56de `6`?"},{"answer":1,"code":"let num = 1;\\nconst list = [\\"\ud83e\udd73\\", \\"\ud83e\udd20\\", \\"\ud83e\udd70\\", \\"\ud83e\udd2a\\"];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"\u901a\u8fc7 `+=` \u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u5bf9\u503c `num` \u8fdb\u884c\u52a0 `1` \u64cd\u4f5c\u3002 `num` \u6709\u521d\u59cb\u503c `1`\uff0c\u56e0\u6b64 `1 + 1` \u7684\u6267\u884c\u7ed3\u679c\u4e3a `2`\u3002\u6570\u7ec4 `list` \u7684\u7b2c\u4e8c\u9879\u4e3a \ud83e\udd70\uff0c`console.log(list[2])` \u8f93\u51fa \ud83e\udd70.","id":113,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const person = {\\n\\tfirstName: \\"Lydia\\",\\n\\tlastName: \\"Hallie\\",\\n\\tpet: {\\n\\t\\tname: \\"Mara\\",\\n\\t\\tbreed: \\"Dutch Tulip Hound\\"\\n\\t},\\n\\tgetFullName() {\\n\\t\\treturn `${this.firstName} ${this.lastName}`;\\n\\t}\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"\u901a\u8fc7 ES10 \u6216 TS3.7+[\u53ef\u9009\u94fe\u64cd\u4f5c\u7b26 `?.`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/%E5%8F%AF%E9%80%89%E9%93%BE)\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u663e\u5f0f\u68c0\u6d4b\u66f4\u6df1\u5c42\u7684\u5d4c\u5957\u503c\u662f\u5426\u6709\u6548\u3002\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u83b7\u53d6 `undefined` \u6216 `null` \u7684\u503c (_nullish_)\uff0c\u8868\u8fbe\u5c06\u4f1a\u77ed\u8def\u5e76\u8fd4\u56de `undefined`.\\n\\n`person.pet?.name`\uff1a `person` \u6709\u4e00\u4e2a\u540d\u4e3a `pet` \u7684\u5c5e\u6027\uff1a `person.pet` \u4e0d\u662f nullish\u3002\u5b83\u6709\u4e2a\u540d\u4e3a `name` \u7684\u5c5e\u6027\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32 `Mara`\u3002\\n`person.pet?.family?.name`\uff1a `person` \u6709\u4e00\u4e2a\u540d\u4e3a `pet` \u7684\u5c5e\u6027\uff1a `person.pet` \u4e0d\u662f nullish. `pet` _\u5e76\u6ca1\u6709_ \u4e00\u4e2a\u540d\u4e3a `family` \u7684\u5c5e\u6027, `person.pet.family` \u662f nullish\u3002\u8868\u8fbe\u5f0f\u8fd4\u56de `undefined`\u3002\\n`person.getFullName?.()`\uff1a `person` \u6709\u4e00\u4e2a\u540d\u4e3a `getFullName` \u7684\u5c5e\u6027\uff1a `person.getFullName()` \u4e0d\u662f nullish \u5e76\u53ef\u4ee5\u88ab\u8c03\u7528\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32 `Lydia Hallie`\u3002\\n`member.getLastName?.()`: `member` is not defined: `member.getLastName()` is nullish. The expression returns `undefined`.","id":114,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `undefined`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const groceries = [\\"banana\\", \\"apple\\", \\"peanuts\\"];\\n\\nif (groceries.indexOf(\\"banana\\")) {\\n\\tconsole.log(\\"We have to buy bananas!\\");\\n} else {\\n\\tconsole.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"\u6211\u4eec\u4f20\u9012\u4e86\u4e00\u4e2a\u72b6\u6001 `groceries.indexOf(\\"banana\\")` \u7ed9if\u6761\u4ef6\u8bed\u53e5\u3002`groceries.indexOf(\\"banana\\")` \u8fd4\u56de `0`\uff0c \u4e00\u4e2a falsy \u7684\u503c\u3002\u56e0\u4e3aif\u6761\u4ef6\u8bed\u53e5\u7684\u72b6\u6001\u4e3a falsy\uff0c`else` \u5757\u533a\u5185\u7684\u4ee3\u7801\u6267\u884c\uff0c\u5e76\u4e14 `We don\'t have to buy bananas!` \u88ab\u8f93\u51fa.","id":115,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":3,"code":"const config = {\\n\\tlanguages: [],\\n\\tset language(lang) {\\n\\t\\treturn this.languages.push(lang);\\n\\t}\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"\u65b9\u6cd5 `language` \u662f\u4e00\u4e2a `setter`\u3002Setters \u5e76\u4e0d\u4fdd\u5b58\u4e00\u4e2a\u5b9e\u9645\u503c\uff0c\u5b83\u4eec\u7684\u4f7f\u547d\u5728\u4e8e _\u4fee\u6539_ \u5c5e\u6027\u3002\u5f53\u8c03\u7528\u65b9\u6cd5 `setter`\uff0c \u8fd4\u56de `undefined`\u3002","id":116,"options":["`function language(lang) { this.languages.push(lang }`","`0`","`[]`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\n\\nconsole.log(!typeof name === \\"object\\");\\nconsole.log(!typeof name === \\"string\\");","codeLanguage":"javascript","explanation":"`typeof name` \u8fd4\u56de `\\"string\\"`\u3002\u5b57\u7b26\u4e32 `\\"string\\"` \u662f\u4e00\u4e2a truthy \u7684\u503c\uff0c\u56e0\u6b64 `!typeof name` \u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c `false`\u3002 `false === \\"object\\"` \u548c `false === \\"string\\"` \u90fd\u8fd4\u56de `false`\u3002\\n\\n\uff08\u5982\u679c\u6211\u4eec\u60f3\u68c0\u6d4b\u4e00\u4e2a\u503c\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u5e94\u8be5\u7528 `!==` \u800c\u4e0d\u662f `!typeof`\uff09","id":117,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":0,"code":"const add = x => y => z => {\\n\\tconsole.log(x, y, z);\\n\\treturn x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"\u51fd\u6570 `add` \u662f\u4e00\u4e2a\u8fd4\u56de \u8fd4\u56de\u7bad\u5934\u51fd\u6570\u7684\u7bad\u5934\u51fd\u6570 \u7684\u7bad\u5934\u51fd\u6570\uff08still with me?\uff09\u3002\u7b2c\u4e00\u4e2a\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u503c\u4e3a `4` \u7684\u53c2\u6570 `x`\u3002\u6211\u4eec\u8c03\u7528\u7b2c\u4e8c\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u503c\u4e3a `5` \u7684\u53c2\u6570 `y`\u3002\u7136\u540e\u6211\u4eec\u8c03\u7528\u7b2c\u4e09\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u503c\u4e3a `6` \u7684\u53c2\u6570 `z`\u3002\u5f53\u6211\u4eec\u5c1d\u8bd5\u5728\u6700\u540e\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\u4e2d\u83b7\u53d6 `x`, `y` \u548c `z` \u7684\u503c\uff0cJS \u5f15\u64ce\u6839\u636e\u4f5c\u7528\u57df\u94fe\u53bb\u627e `x` \u548c `y` \u7684\u503c\u3002\u5f97\u5230 `4` `5` `6`.","id":118,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"async function* range(start, end) {\\n\\tfor (let i = start; i <= end; i++) {\\n\\t\\tyield Promise.resolve(i);\\n\\t}\\n}\\n\\n(async () => {\\n\\tconst gen = range(1, 3);\\n\\tfor await (const item of gen) {\\n\\t\\tconsole.log(item);\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"\u6211\u4eec\u7ed9 \u51fd\u6570range \u4f20\u9012\uff1a `Promise{1}`, `Promise{2}`, `Promise{3}`\uff0cGenerator \u51fd\u6570 `range` \u8fd4\u56de\u4e00\u4e2a\u5168\u662f async object promise \u6570\u7ec4\u3002\u6211\u4eec\u5c06 async object \u8d4b\u503c\u7ed9\u53d8\u91cf `gen`\uff0c\u4e4b\u540e\u6211\u4eec\u4f7f\u7528`for await ... of` \u8fdb\u884c\u5faa\u73af\u904d\u5386\u3002\u6211\u4eec\u5c06\u8fd4\u56de\u7684 Promise \u5b9e\u4f8b\u8d4b\u503c\u7ed9 `item`\uff1a \u7b2c\u4e00\u4e2a\u8fd4\u56de `Promise{1}`\uff0c \u7b2c\u4e8c\u4e2a\u8fd4\u56de `Promise{2}`\uff0c\u4e4b\u540e\u662f `Promise{3}`\u3002\u56e0\u4e3a\u6211\u4eec\u6b63 _awaiting_ `item` \u7684\u503c\uff0cresolved \u72b6\u6001\u7684 promsie\uff0cpromise\u6570\u7ec4\u7684resolved _\u503c_ \u4ee5\u6b64\u4e3a\uff1a `1`\uff0c`2`\uff0c`3`.","id":119,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n\\tconsole.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"`myFunc` \u671f\u671b\u63a5\u6536\u4e00\u4e2a\u5305\u542b `x`, `y` \u548c `z` \u5c5e\u6027\u7684\u5bf9\u8c61\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\u3002\u56e0\u4e3a\u6211\u4eec\u4ec5\u4ec5\u4f20\u9012\u4e09\u4e2a\u5355\u72ec\u7684\u6570\u5b57\u503c (1, 2, 3) \u800c\u4e0d\u662f\u4e00\u4e2a\u542b\u6709 `x`, `y` \u548c `z` \u5c5e\u6027\u7684\u5bf9\u8c61 ({x: 1, y: 2, z: 3})\uff0c `x`, `y` \u548c `z` \u6709\u7740\u5404\u81ea\u7684\u9ed8\u8ba4\u503c `undefined`.","id":120,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'unit\', unit: \'mile-per-hour\' }\\n  }).format(speed)\\n\\n  const formattedAmount = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'currency\', currency: \'USD\' }\\n  }).format(amount)\\n\\n  return `The driver drove ${formattedSpeed} and has to pay ${formattedAmount}`\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"\u901a\u8fc7\u65b9\u6cd5 `Intl.NumberFormat`\uff0c\u6211\u4eec\u53ef\u4ee5\u683c\u5f0f\u5316\u4efb\u610f\u533a\u57df\u7684\u6570\u5b57\u503c\u3002\u6211\u4eec\u5bf9\u6570\u5b57\u503c `130` \u8fdb\u884c `mile-per-hour` \u4f5c\u4e3a `unit` \u7684 `en-US` \u533a\u57df \u683c\u5f0f\u5316\uff0c\u7ed3\u679c\u4e3a `130 mph`\u3002\u5bf9\u6570\u5b57\u503c `300` \u8fdb\u884c `USD` \u4f5c\u4e3a `currentcy` \u7684 `en-US` \u533a\u57df\u683c\u5f0f\u5316\uff0c\u7ed3\u679c\u4e3a `$300.00`.","id":121,"options":["The driver drove 130 and has to pay 300","The driver drove 130 mph and has to pay $300.00","The driver drove undefined and has to pay undefined","The driver drove 130.00 and has to pay 300.00"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const spookyItems = [\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"];\\n({ item: spookyItems[3] } = { item: \\"\ud83d\udc80\\" });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"\u901a\u8fc7\u89e3\u6784\u5bf9\u8c61\u4eec\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53f3\u624b\u8fb9\u7684\u5bf9\u8c61\u4e2d\u62c6\u51fa\u503c\uff0c\u5e76\u4e14\u5c06\u62c6\u51fa\u7684\u503c\u5206\u914d\u7ed9\u5de6\u624b\u8fb9\u5bf9\u8c61\u540c\u540d\u7684\u5c5e\u6027\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u503c \\"\ud83d\udc80\\" \u5206\u914d\u7ed9 `spookyItems[3]`\u3002\u76f8\u5f53\u4e8e\u6211\u4eec\u6b63\u5728\u7be1\u6539\u6570\u7ec4 `spookyItems`\uff0c\u6211\u4eec\u7ed9\u5b83\u6dfb\u52a0\u4e86\u503c \\"\ud83d\udc80\\"\u3002\u5f53\u8f93\u51fa `spookyItems` \u65f6\uff0c\u7ed3\u679c\u4e3a `[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`\u3002","id":122,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"\u901a\u8fc7\u65b9\u6cd5 `Number.isNaN`\uff0c\u4f60\u53ef\u4ee5\u68c0\u6d4b\u4f60\u4f20\u9012\u7684\u503c\u662f\u5426\u4e3a _\u6570\u5b57\u503c_ \u5e76\u4e14\u662f\u5426\u7b49\u4ef7\u4e8e `NaN`\u3002`name` \u4e0d\u662f\u4e00\u4e2a\u6570\u5b57\u503c\uff0c\u56e0\u6b64 `Number.isNaN(name)` \u8fd4\u56de `false`\u3002`age` \u662f\u4e00\u4e2a\u6570\u5b57\u503c\uff0c\u4f46\u5b83\u4e0d\u7b49\u4ef7\u4e8e `NaN`\uff0c\u56e0\u6b64 `Number.isNaN(age)` \u8fd4\u56de `false`.\\n\\n\u901a\u8fc7\u65b9\u6cd5 `isNaN`\uff0c \u4f60\u53ef\u4ee5\u68c0\u6d4b\u4f60\u4f20\u9012\u7684\u503c\u662f\u5426\u4e00\u4e2a number\u3002`name` \u4e0d\u662f\u4e00\u4e2a `number`\uff0c\u56e0\u6b64 `isNaN(name)` \u8fd4\u56de `true`. `age` \u662f\u4e00\u4e2a `number` \u56e0\u6b64 `isNaN(age)` \u8fd4\u56de `false`.","id":123,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n\\tconsole.log(typeof randomValue);\\n\\tconst randomValue = \\"Lydia Hallie\\";\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"\u901a\u8fc7 `const` \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u5728\u88ab\u521d\u59cb\u5316\u4e4b\u524d\u4e0d\u53ef\u88ab\u5f15\u7528\uff1a\u8fd9\u88ab\u79f0\u4e4b\u4e3a _\u6682\u65f6\u6027\u6b7b\u533a_\u3002\u5728\u51fd\u6570 `getInfo` \u4e2d, \u53d8\u91cf `randomValue` \u58f0\u660e\u5728`getInfo` \u7684\u4f5c\u7528\u57df\u7684\u6b64\u6cd5\u73af\u5883\u4e2d\u3002\u5728\u60f3\u8981\u5bf9 `typeof randomValue` \u8fdb\u884clog\u4e4b\u524d\uff0c\u53d8\u91cf `randomValue` \u4ecd\u672a\u88ab\u521d\u59cb\u5316\uff1a \u9519\u8bef`ReferenceError` \u88ab\u629b\u51fa! JS\u5f15\u64ce\u5e76\u4e0d\u4f1a\u6839\u636e\u4f5c\u7528\u57df\u94fe\u7f51\u4e0a\u5bfb\u627e\u8be5\u53d8\u91cf\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5728 `getInfo` \u51fd\u6570\u4e2d\u58f0\u660e\u4e86 `randomValue` \u53d8\u91cf\u3002","id":124,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":2,"code":"const myPromise = Promise.resolve(\\"Woah some cool data\\");\\n\\n(async () => {\\n\\ttry {\\n\\t\\tconsole.log(await myPromise);\\n\\t} catch {\\n\\t\\tthrow new Error(`Oops didn\'t work`);\\n\\t} finally {\\n\\t\\tconsole.log(\\"Oh finally!\\");\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"\u5728 `try` \u5757\u533a\uff0c\u6211\u4eec\u6253\u5370 `myPromise` \u53d8\u91cf\u7684 awaited \u503c\uff1a `\\"Woah some cool data\\"`\u3002\u56e0\u4e3a`try` \u5757\u533a\u6ca1\u6709\u9519\u8bef\u629b\u51fa\uff0c`catch` \u5757\u533a\u7684\u4ee3\u7801\u5e76\u4e0d\u6267\u884c\u3002`finally` \u5757\u533a\u7684\u4ee3\u7801 _\u603b\u662f_ \u6267\u884c\uff0c`\\"Oh finally!\\"` \u88ab\u8f93\u51fa\u3002","id":125,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const emojis = [\\"\ud83e\udd51\\", [\\"\u2728\\", \\"\u2728\\", [\\"\ud83c\udf55\\", \\"\ud83c\udf55\\"]]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"\u901a\u8fc7\u65b9\u6cd5 `flat`\uff0c \u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684, \u5df2\u88ab\u6241\u5e73\u5316\u7684\u6570\u7ec4\u3002\u88ab\u6241\u5e73\u5316\u7684\u6df1\u5ea6\u53d6\u51b3\u4e8e\u6211\u4eec\u4f20\u9012\u7684\u503c\u3002\u5728\u8fd9\u4e2acase\u91cc\uff0c\u6211\u4eec\u4f20\u9012\u4e86\u503c `1` (\u5e76\u4e0d\u5fc5\u8981\uff0c\u8fd9\u662f\u9ed8\u8ba4\u503c)\uff0c\u76f8\u5f53\u4e8e\u53ea\u6709\u7b2c\u4e00\u5c42\u7684\u6570\u7ec4\u624d\u4f1a\u88ab\u8fde\u63a5\u3002\u5373\u8fd9\u4e2a case \u91cc\u7684 `[\'\ud83e\udd51\']` and `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`\u3002\u8fde\u63a5\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5f97\u5230\u7ed3\u679c `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":126,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":3,"code":"const myPromise = Promise.resolve(Promise.resolve(\\"Promise!\\"));\\n\\nfunction funcOne() {\\n\\tmyPromise.then(res => res).then(res => console.log(res));\\n\\tsetTimeout(() => console.log(\\"Timeout!\\", 0));\\n\\tconsole.log(\\"Last line!\\");\\n}\\n\\nasync function funcTwo() {\\n\\tconst res = await myPromise;\\n\\tconsole.log(await res);\\n\\tsetTimeout(() => console.log(\\"Timeout!\\", 0));\\n\\tconsole.log(\\"Last line!\\");\\n}\\n\\nfuncOne();\\nfuncTwo();","codeLanguage":"javascript","explanation":"\u9996\u5148\uff0c\u6211\u4eec\u8c03\u7528 `funcOne`\u3002\u5728\u51fd\u6570 `funcOne` \u7684\u7b2c\u4e00\u884c\uff0c\u6211\u4eec\u8c03\u7528`myPromise` promise _\u5f02\u6b65\u64cd\u4f5c_\u3002\u5f53JS\u5f15\u64ce\u5728\u5fd9\u4e8e\u6267\u884c promise\uff0c\u5b83\u7ee7\u7eed\u6267\u884c\u51fd\u6570 `funcOne`\u3002\u4e0b\u4e00\u884c _\u5f02\u6b65\u64cd\u4f5c_ `setTimeout`\uff0c\u5176\u56de\u8c03\u51fd\u6570\u88ab Web API \u8c03\u7528\u3002 (\u8be6\u60c5\u8bf7\u53c2\u8003\u6211\u5173\u4e8eevent loop\u7684\u6587\u7ae0.)\\n\\npromise \u548c timeout \u90fd\u662f\u5f02\u6b65\u64cd\u4f5c\uff0c\u51fd\u6570\u7ee7\u7eed\u6267\u884c\u5f53JS\u5f15\u64ce\u5fd9\u4e8e\u6267\u884cpromise \u548c \u5904\u7406 `setTimeout` \u7684\u56de\u8c03\u3002\u76f8\u5f53\u4e8e `Last line!` \u9996\u5148\u88ab\u8f93\u51fa\uff0c \u56e0\u4e3a\u5b83\u4e0d\u662f\u5f02\u6b65\u64cd\u4f5c\u3002\u6267\u884c\u5b8c `funcOne` \u7684\u6700\u540e\u4e00\u884c\uff0cpromise \u72b6\u6001\u8f6c\u53d8\u4e3a resolved\uff0c`Promise!` \u88ab\u6253\u5370\u3002\u7136\u800c\uff0c\u56e0\u4e3a\u6211\u4eec\u8c03\u7528\u4e86 `funcTwo()`, \u8c03\u7528\u6808\u4e0d\u4e3a\u7a7a\uff0c`setTimeout` \u7684\u56de\u8c03\u4ecd\u4e0d\u80fd\u5165\u6808\u3002\\n\\n\u6211\u4eec\u73b0\u5728\u5904\u4e8e `funcTwo`\uff0c\u5148 _awaiting_ myPromise\u3002\u901a\u8fc7 `await` \u5173\u952e\u5b57\uff0c \u6211\u4eec\u6682\u505c\u4e86\u51fd\u6570\u7684\u6267\u884c\u76f4\u5230 promise \u72b6\u6001\u53d8\u4e3a resolved (\u6216 rejected)\u3002\u7136\u540e\uff0c\u6211\u4eec\u8f93\u51fa `res` \u7684 awaited \u503c\uff08\u56e0\u4e3a promise \u672c\u8eab\u8fd4\u56de\u4e00\u4e2a promise\uff09\u3002 \u63a5\u7740\u8f93\u51fa `Promise!`\u3002\\n\\n\u4e0b\u4e00\u884c\u5c31\u662f _\u5f02\u6b65\u64cd\u4f5c_ `setTimeout`\uff0c\u5176\u56de\u8c03\u51fd\u6570\u88ab Web API \u8c03\u7528\u3002\\n\\n\u6211\u4eec\u6267\u884c\u5230\u51fd\u6570 `funcTwo` \u7684\u6700\u540e\u4e00\u884c\uff0c\u8f93\u51fa `Last line!`\u3002\u73b0\u5728\uff0c\u56e0\u4e3a `funcTwo` \u51fa\u6808\uff0c\u8c03\u7528\u6808\u4e3a\u7a7a\u3002\u5728\u4e8b\u4ef6\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u56de\u8c03\u51fd\u6570\uff08`() => console.log(\\"Timeout!\\")` from `funcOne`, and `() => console.log(\\"Timeout!\\")` from `funcTwo`\uff09\u4ee5\u6b64\u5165\u6808\u3002\u7b2c\u4e00\u4e2a\u56de\u8c03\u8f93\u51fa `Timeout!`\uff0c\u5e76\u51fa\u6808\u3002\u7136\u540e\uff0c\u7b2c\u4e8c\u4e2a\u56de\u8c03\u8f93\u51fa `Timeout!`\uff0c\u5e76\u51fa\u6808\u3002\u5f97\u5230\u7ed3\u679c `Last line! Promise! Promise! Last line! Timeout! Timeout!`","id":127,"options":["`Promise! Last line! Promise! Last line! Last line! Promise!`","`Last line! Timeout! Promise! Last line! Timeout! Promise!`","`Promise! Last line! Last line! Promise! Timeout! Timeout!`","`Last line! Promise! Promise! Last line! Timeout! Timeout!`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":2,"code":"// sum.js\\nexport default function sum(x) {\\n\\treturn x + x;\\n}\\n\\n// index.js\\nimport * as sum from \\"./sum\\";","codeLanguage":"javascript","explanation":"\u4f7f\u7528\u7b26\u53f7 `*`\uff0c\u6211\u4eec\u5f15\u5165\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u503c\uff0c\u5305\u62ec\u9ed8\u8ba4\u548c\u5177\u540d\u3002\u5982\u679c\u6211\u4eec\u6709\u4ee5\u4e0b\u6587\u4ef6\uff1a\\n\\n```javascript\\n// info.js\\nexport const name = \\"Lydia\\";\\nexport const age = 21;\\nexport default \\"I love JavaScript\\";\\n\\n// index.js\\nimport * as info from \\"./info\\";\\nconsole.log(info);\\n```\\n\\n\u5c06\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a\\n\\n```javascript\\n{\\n  default: \\"I love JavaScript\\",\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n```\\n\\n\u4ee5 `sum` \u4e3a\u4f8b\uff0c\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u5f62\u5f0f\u5f15\u5165\u503c `sum`\uff1a\\n\\n```javascript\\n{ default: function sum(x) { return x + x } }\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 `sum.default` \u6765\u8c03\u7528\u8be5\u51fd\u6570","id":128,"options":["`sum(4)`","`sum.sum(4)`","`sum.default(4)`","\u9ed8\u8ba4\u5bfc\u51fa\u4e0d\u7528 `*` \u6765\u5bfc\u5165\uff0c\u53ea\u80fd\u5177\u540d\u5bfc\u51fa"],"question":"\u6211\u4eec\u600e\u6837\u624d\u80fd\u5728 `index.js` \u4e2d\u8c03\u7528 `sum.js?` \u4e2d\u7684 `sum`\uff1f"},{"answer":2,"code":"const handler = {\\n\\tset: () => console.log(\\"Added a new property!\\"),\\n\\tget: () => console.log(\\"Accessed a property!\\")\\n};\\n\\nconst person = new Proxy({}, handler);\\n\\nperson.name = \\"Lydia\\";\\nperson.name;","codeLanguage":"javascript","explanation":"\u4f7f\u7528 Proxy \u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u81ea\u5b9a\u4e49\u884c\u4e3a\u3002\u5728\u8fd9\u4e2a case\uff0c\u6211\u4eec\u4f20\u9012\u4e00\u4e2a\u5305\u542b\u4ee5\u4e0b\u5c5e\u6027\u7684\u5bf9\u8c61 `handler` : `set` and `get`\u3002\u6bcf\u5f53\u6211\u95e8 _\u8bbe\u7f6e_ \u5c5e\u6027\u503c\u65f6 `set` \u88ab\u8c03\u7528\uff0c\u6bcf\u5f53\u6211\u4eec _\u83b7\u53d6_ \u65f6 `get` \u88ab\u8c03\u7528\u3002\\n\\n\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7a7a\u5bf9\u8c61 `{}`\uff0c\u4f5c\u4e3a `person` \u7684\u503c\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u81ea\u5b9a\u4e49\u884c\u4e3a\u88ab\u5b9a\u4e49\u5728\u5bf9\u8c61 `handler`\u3002\u5982\u679c\u6211\u4eec\u5411\u5bf9\u8c61 `person` \u6dfb\u52a0\u5c5e\u6027\uff0c`set` \u5c06\u88ab\u8c03\u7528\u3002\u5982\u679c\u6211\u4eec\u83b7\u53d6 `person` \u7684\u5c5e\u6027, `get` \u5c06\u88ab\u8c03\u7528\u3002\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u5411 proxy \u5bf9\u8c61(`person.name = \\"Lydia\\"`)\u6dfb\u52a0\u4e00\u4e2a\u5c5e\u6027 `name`\u3002`set` \u88ab\u8c03\u7528\u5e76\u8f93\u51fa `\\"Added a new property!\\"`\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u83b7\u53d6 proxy \u5bf9\u8c61\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u5bf9\u8c61 handler \u7684\u5c5e\u6027 `get` \u88ab\u8c03\u7528\u3002\u8f93\u51fa `\\"Accessed a property!\\"`\u3002","id":129,"options":["`Added a new property!`","`Accessed a property!`","`Added a new property!` `Accessed a property!`","\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":0,"code":"const person = { name: \\"Lydia Hallie\\" };\\n\\nObject.seal(person);","codeLanguage":"javascript","explanation":"\u4f7f\u7528 `Object.seal` \u6211\u4eec\u53ef\u4ee5\u9632\u6b62\u65b0\u5c5e\u6027 _\u88ab\u6dfb\u52a0_\uff0c\u6216\u8005\u5b58\u5728\u5c5e\u6027 _\u88ab\u79fb\u9664_.\\n\\n\u7136\u800c\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u5bf9\u5b58\u5728\u5c5e\u6027\u8fdb\u884c\u66f4\u6539\u3002","id":130,"options":["`person.name = \\"Evan Bacon\\"`","`person.age = 21`","`delete person.name`","`Object.assign(person, { age: 21 })`"],"question":"\u4ee5\u4e0b\u54ea\u4e00\u9879\u4f1a\u5bf9\u5bf9\u8c61 `person` \u6709\u526f\u4f5c\u7528\uff1f"},{"answer":2,"code":"const person = {\\n\\tname: \\"Lydia Hallie\\",\\n\\taddress: {\\n\\t\\tstreet: \\"100 Main St\\"\\n\\t}\\n};\\n\\nObject.freeze(person);","codeLanguage":"javascript","explanation":"\u4f7f\u7528\u65b9\u6cd5 `Object.freeze` \u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c _\u51bb\u7ed3_\u3002\u4e0d\u80fd\u5bf9\u5c5e\u6027\u8fdb\u884c\u6dfb\u52a0\uff0c\u4fee\u6539\uff0c\u5220\u9664\u3002\\n\\n\u7136\u800c\uff0c\u5b83\u4ec5 \u5bf9\u5bf9\u8c61\u8fdb\u884c _\u6d45_ \u51bb\u7ed3\uff0c\u610f\u5473\u7740\u53ea\u6709 \u5bf9\u8c61\u4e2d\u7684 _\u76f4\u63a5_ \u5c5e\u6027\u88ab\u51bb\u7ed3\u3002\u5982\u679c\u5c5e\u6027\u662f\u53e6\u4e00\u4e2a object\uff0c\u50cf\u6848\u4f8b\u4e2d\u7684 `address`\uff0c`address` \u4e2d\u7684\u5c5e\u6027\u6ca1\u6709\u88ab\u51bb\u7ed3\uff0c\u4ecd\u7136\u53ef\u4ee5\u88ab\u4fee\u6539\u3002","id":131,"options":["`person.name = \\"Evan Bacon\\"`","`delete person.address`","`person.address.street = \\"101 Main St\\"`","`person.pet = { name: \\"Mara\\" }`"],"question":"\u4ee5\u4e0b\u54ea\u4e00\u9879\u4f1a\u5bf9\u5bf9\u8c61 `person` \u6709\u526f\u4f5c\u7528\uff1f"},{"answer":0,"code":"const add = x => x + x;\\n\\nfunction myFunc(num = 2, value = add(num)) {\\n\\tconsole.log(num, value);\\n}\\n\\nmyFunc();\\nmyFunc(3);","codeLanguage":"javascript","explanation":"\u9996\u5148\u6211\u4eec\u4e0d\u4f20\u9012\u4efb\u4f55\u53c2\u6570\u8c03\u7528 `myFunc()`\u3002\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4f20\u9012\u53c2\u6570\uff0c`num` \u548c `value` \u83b7\u53d6\u5b83\u4eec\u5404\u81ea\u7684\u9ed8\u8ba4\u503c\uff1anum \u4e3a `2`, \u800c `value` \u4e3a\u51fd\u6570 `add` \u7684\u8fd4\u56de\u503c\u3002\u5bf9\u4e8e\u51fd\u6570 `add`\uff0c\u6211\u4eec\u4f20\u9012\u503c\u4e3a2\u7684 `num` \u4f5c\u4e3a\u53c2\u6570\u3002\u51fd\u6570 `add` \u8fd4\u56de `4` \u4f5c\u4e3a `value` \u7684\u503c\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u8c03\u7528 `myFunc(3)` \u5e76\u4f20\u9012\u503c `3` \u53c2\u6570 `num` \u7684\u503c\u3002\u6211\u4eec\u6ca1\u6709\u7ed9 `value` \u4f20\u9012\u503c\u3002\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u7ed9\u53c2\u6570 `value` \u4f20\u9012\u503c\uff0c\u5b83\u83b7\u53d6\u9ed8\u8ba4\u503c\uff1a\u51fd\u6570 `add` \u7684\u8fd4\u56de\u503c\u3002\u5bf9\u4e8e\u51fd\u6570 `add`\uff0c\u6211\u4eec\u4f20\u9012\u503c\u4e3a3\u7684 `num`\u7ed9\u5b83\u3002\u51fd\u6570 `add` \u8fd4\u56de `6` \u4f5c\u4e3a `value` \u7684\u503c\u3002","id":132,"options":["`2` `4` and `3` `6`","`2` `NaN` and `3` `NaN`","`2` `Error` and `3` `6`","`2` `4` and `3` `Error`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const teams = [\\n\\t{ name: \\"Team 1\\", members: [\\"Paul\\", \\"Lisa\\"] },\\n\\t{ name: \\"Team 2\\", members: [\\"Laura\\", \\"Tim\\"] }\\n];\\n\\nfunction* getMembers(members) {\\n\\tfor (let i = 0; i < members.length; i++) {\\n\\t\\tyield members[i];\\n\\t}\\n}\\n\\nfunction* getTeams(teams) {\\n\\tfor (let i = 0; i < teams.length; i++) {\\n\\t\\t// \u2728 SOMETHING IS MISSING HERE \u2728\\n\\t}\\n}\\n\\nconst obj = getTeams(teams);\\nobj.next(); // { value: \\"Paul\\", done: false }\\nobj.next(); // { value: \\"Lisa\\", done: false }","codeLanguage":"javascript","explanation":"\u4e3a\u4e86\u904d\u5386 `teams` \u6570\u7ec4\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027 `members` \u4e2d\u7684\u6bcf\u4e00\u9879\uff0c\u6211\u4eec\u9700\u8981\u5c06 `teams[i].members` \u4f20\u9012\u7ed9 Generator \u51fd\u6570 `getMembers`\u3002Generator \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a generator \u5bf9\u8c61\u3002\u4e3a\u4e86\u904d\u5386\u8fd9\u4e2a generator \u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e00\u9879\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 `yield*`.\\n\\n\u5982\u679c\u6211\u4eec\u6ca1\u6709\u5199 `yield`\uff0c`return yield` \u6216\u8005 `return`\uff0c\u6574\u4e2a Generator \u51fd\u6570\u4e0d\u4f1a\u7b2c\u4e00\u65f6\u95f4 return \u5f53\u6211\u4eec\u8c03\u7528 `next` \u65b9\u6cd5.","id":133,"options":["`yield getMembers(teams[i].members)`","`yield* getMembers(teams[i].members)`","`return getMembers(teams[i].members)`","`return yield getMembers(teams[i].members)`"],"question":"\u9009\u62e9\u54ea\u4e00\u4e2a\uff1f"},{"answer":2,"code":"const person = {\\n\\tname: \\"Lydia Hallie\\",\\n\\thobbies: [\\"coding\\"]\\n};\\n\\nfunction addHobby(hobby, hobbies = person.hobbies) {\\n\\thobbies.push(hobby);\\n\\treturn hobbies;\\n}\\n\\naddHobby(\\"running\\", []);\\naddHobby(\\"dancing\\");\\naddHobby(\\"baking\\", person.hobbies);\\n\\nconsole.log(person.hobbies);","codeLanguage":"javascript","explanation":"\u51fd\u6570 `addHobby` \u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c`hobby` \u548c\u6709\u7740\u5bf9\u8c61 `person` \u4e2d\u6570\u7ec4 `hobbies` \u9ed8\u8ba4\u503c\u7684 `hobbies`\u3002\\n\\n\u9996\u76f8\uff0c\u6211\u4eec\u8c03\u7528\u51fd\u6570 `addHobby`\uff0c\u5e76\u7ed9 `hobby` \u4f20\u9012 `\\"running\\"` \u4ee5\u53ca\u7ed9 `hobbies` \u4f20\u9012\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002\u56e0\u4e3a\u6211\u4eec\u7ed9 `hobbies` \u4f20\u9012\u4e86\u7a7a\u6570\u7ec4\uff0c`\\"running\\"` \u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u7a7a\u6570\u7ec4\u3002\\n\\n\u7136\u540e\uff0c\u6211\u4eec\u8c03\u7528\u51fd\u6570 `addHobby`\uff0c\u5e76\u7ed9 `hobby` \u4f20\u9012 `\\"dancing\\"`\u3002\u6211\u4eec\u4e0d\u5411 `hobbies` \u4f20\u9012\u503c\uff0c\u56e0\u6b64\u5b83\u83b7\u53d6\u5176\u9ed8\u8ba4\u503c \u2014\u2014 \u5bf9\u8c61 `person` \u7684 \u5c5e\u6027 `hobbies`\u3002\u6211\u4eec\u5411\u6570\u7ec4 `person.hobbies` push `dancing`\u3002\\n\\n\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528\u51fd\u6570 `addHobby`\uff0c\u5e76\u5411 `hobby` \u4f20\u9012 \u503c `\\"bdaking\\"`\uff0c\u5e76\u4e14\u5411 `hobbies` \u4f20\u9012 `person.hobbies`\u3002\u6211\u4eec\u5411\u6570\u7ec4 `person.hobbies` push `dancing`\u3002\\n\\npushing `dancing` \u548c `baking` \u4e4b\u540e\uff0c`person.hobbies` \u7684\u503c\u4e3a `[\\"coding\\", \\"dancing\\", \\"baking\\"]`","id":134,"options":["`[\\"coding\\"]`","`[\\"coding\\", \\"dancing\\"]`","`[\\"coding\\", \\"dancing\\", \\"baking\\"]`","`[\\"coding\\", \\"running\\", \\"dancing\\", \\"baking\\"]`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"class Bird {\\n\\tconstructor() {\\n\\t\\tconsole.log(\\"I\'m a bird. \ud83e\udda2\\");\\n\\t}\\n}\\n\\nclass Flamingo extends Bird {\\n\\tconstructor() {\\n\\t\\tconsole.log(\\"I\'m pink. \ud83c\udf38\\");\\n\\t\\tsuper();\\n\\t}\\n}\\n\\nconst pet = new Flamingo();","codeLanguage":"javascript","explanation":"\u6211\u4eec\u521b\u5efa\u4e86\u7c7b `Flamingo` \u7684\u5b9e\u4f8b `pet`\u3002\u5f53\u6211\u4eec\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u5b9e\u4f8b\uff0c`Flamingo` \u4e2d\u7684 `constructor` \u88ab\u8c03\u7528\u3002\u9996\u76f8\uff0c\u8f93\u51fa `\\"I\'m pink. \ud83c\udf38\\"`, \u4e4b\u540e\u6211\u4eec\u8c03\u7528`super()`\u3002`super()` \u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c`Bird`\u3002`Bird` \u7684\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u5e76\u8f93\u51fa `\\"I\'m a bird. \ud83e\udda2\\"`\u3002","id":135,"options":["`I\'m pink. \ud83c\udf38`","`I\'m pink. \ud83c\udf38` `I\'m a bird. \ud83e\udda2`","`I\'m a bird. \ud83e\udda2` `I\'m pink. \ud83c\udf38`","Nothing, we didn\'t call any method"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":3,"code":"const emojis = [\\"\ud83c\udf84\\", \\"\ud83c\udf85\ud83c\udffc\\", \\"\ud83c\udf81\\", \\"\u2b50\\"];\\n\\n/* 1 */ emojis.push(\\"\ud83e\udd8c\\");\\n/* 2 */ emojis.splice(0, 2);\\n/* 3 */ emojis = [...emojis, \\"\ud83e\udd42\\"];\\n/* 4 */ emojis.length = 0;","codeLanguage":"javascript","explanation":"`const` \u5173\u952e\u5b57\u610f\u5473\u7740\u6211\u4eec\u4e0d\u80fd _\u91cd\u5b9a\u4e49_ \u53d8\u91cf\u4e2d\u7684\u503c\uff0c\u5b83 _\u4ec5\u53ef\u8bfb_\u3002\u800c\u7136\uff0c\u503c\u672c\u8eab\u4e0d\u53ef\u4fee\u6539\u3002\u6570\u7ec4 `emojis` \u4e2d\u7684\u503c\u53ef\u88ab\u4fee\u6539\uff0c\u5982 push \u65b0\u7684\u503c, \u62fc\u63a5\uff0c\u53c8\u6216\u8005\u5c06\u6570\u7ec4\u7684\u957f\u5ea6\u8bbe\u7f6e\u4e3a0\u3002","id":136,"options":["1","1 and 2","3 and 4","3"],"question":"\u54ea\u4e00\u4e2a\u9009\u9879\u4f1a\u5bfc\u81f4\u62a5\u9519\uff1f"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia Hallie\\",\\n  age: 21\\n}\\n\\n[...person] // [\\"Lydia Hallie\\", 21]","codeLanguage":"javascript","explanation":"\u5bf9\u8c61\u9ed8\u8ba4\u5e76\u4e0d\u662f\u53ef\u8fed\u4ee3\u7684\u3002\u5982\u679c\u8fed\u4ee3\u89c4\u5219\u88ab\u5b9a\u4e49\uff0c\u5219\u4e00\u4e2a\u5bf9\u8c61\u662f\u53ef\u8fed\u4ee3\u7684\uff08An iterable is an iterable if the iterator protocol is present\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u8fed\u4ee3\u5668symbol `[Symbol.iterator]` \u6765\u5b9a\u4e49\u8fed\u4ee3\u89c4\u5219\uff0c\u5176\u8fd4\u56de\u4e00\u4e2a generator \u5bf9\u8c61\uff0c\u6bd4\u5982\u8bf4\u6784\u5efa\u4e00\u4e2a generator \u51fd\u6570 `*[Symbol.iterator]() {}`\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u8fd4\u56de\u6570\u7ec4 `[\\"Lydia Hallie\\", 21]`: `yield* Object.values(this)`\uff0c\u8fd9\u4e2a generator \u51fd\u6570\u4e00\u5b9a\u8981 yield \u5bf9\u8c61 `person` \u7684`Object.values`\u3002","id":137,"options":["\u4e0d\u9700\u8981\uff0c\u5bf9\u8c61\u9ed8\u8ba4\u5c31\u662f\u53ef\u8fed\u4ee3\u7684","`*[Symbol.iterator]() { for (let x in this) yield* this[x] }`","`*[Symbol.iterator]() { for (let x in this) yield* Object.values(this) }`","`*[Symbol.iterator]() { for (let x in this) yield this }`"],"question":"\u6211\u4eec\u9700\u8981\u5411\u5bf9\u8c61 `person` \u6dfb\u52a0\u4ec0\u4e48\uff0c\u4ee5\u81f4\u6267\u884c `[...person]` \u65f6\u83b7\u5f97\u5f62\u5982 `[\\"Lydia Hallie\\", 21]` \u7684\u8f93\u51fa\uff1f"},{"answer":2,"code":"let count = 0;\\nconst nums = [0, 1, 2, 3];\\n\\nnums.forEach(num => {\\n\\tif (num) count += 1\\n})\\n\\nconsole.log(count)","codeLanguage":"javascript","explanation":"\u5728 `forEach` \u5faa\u73af\u5185\u90e8\u7684 `if` \u4f1a\u5224\u65ad `num` \u7684\u503c\u662ftruthy\u6216\u8005\u662ffalsy\u3002\u56e0\u4e3a `nums` \u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f `0`\uff0c\u4e00\u4e2afalsy\u503c\uff0c `if` \u8bed\u53e5\u4ee3\u7801\u5757\u4e0d\u4f1a\u88ab\u6267\u884c\u3002`count` \u4ec5\u4ec5\u5728 `nums` \u6570\u7ec4\u7684\u5176\u4ed63\u4e2a\u6570\u5b57 `1`\uff0c`2`\uff0c`3` \u65f6\u52a01\u3002\u56e0\u4e3a `count` \u6267\u884c\u4e863\u6b21\u52a0 `1` \u8fd0\u7b97\uff0c\u6240\u4ee5 `count` \u7684\u503c\u4e3a `3`\u3002","id":138,"options":["1","2","3","4"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":3,"code":"function getFruit(fruits) {\\n\\tconsole.log(fruits?.[1]?.[1])\\n}\\n\\ngetFruit([[\'\ud83c\udf4a\', \'\ud83c\udf4c\'], [\'\ud83c\udf4d\']])\\ngetFruit()\\ngetFruit([[\'\ud83c\udf4d\'], [\'\ud83c\udf4a\', \'\ud83c\udf4c\']])","codeLanguage":"javascript","explanation":"`?` \u5141\u8bb8\u6211\u4eec\u53bb\u9009\u62e9\u6027\u5730\u8bbf\u95ee\u5bf9\u8c61\u5185\u90e8\u66f4\u6df1\u5c42\u7684\u5d4c\u5957\u5c5e\u6027\u3002 \u6211\u4eec\u5c1d\u8bd5\u6253\u5370 `fruits` \u6570\u7ec4\u7d22\u5f15\u503c\u4e3a `1` \u7684\u5b50\u6570\u7ec4\u5185\u90e8\u7684\u7d22\u5f15\u503c\u4e3a `1` \u7684\u5143\u7d20\u3002 \u5982\u679c\u5728 `fruits` \u6570\u7ec4\u7d22\u5f15\u503c \u4e3a `1` \u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\u5143\u7d20\uff0c\u4f1a\u76f4\u63a5\u8fd4\u56de `undefined`\u3002 \u5982\u679c `fruits` \u6570\u7ec4\u5728\u7d22\u5f15\u503c\u4e3a `1` \u7684\u4f4d\u7f6e\u5b58\u5728\u5143\u7d20\uff0c\u4f46\u662f\u5b50\u6570\u7ec4\u5728\u7d22\u5f15\u503c\u4e3a `1` \u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\u5143\u7d20\uff0c\u4e5f\u4f1a\u8fd4\u56de `undefined`\u3002\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u5c1d\u8bd5\u6253\u5370 `[[\'\ud83c\udf4a\', \'\ud83c\udf4c\'], [\'\ud83c\udf4d\']]` \u7684\u5b50\u6570\u7ec4 `[\'\ud83c\udf4d\']` \u7684\u7b2c2\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u5b50\u6570\u7ec4\u53ea\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5728\u7d22\u5f15\u503c\u4e3a `1` \u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\u5143\u7d20\uff0c\u6240\u4ee5\u8fd4\u56de\u7684\u662f `undefined` \u3002\\n\\n\u5176\u6b21\uff0c\u6211\u4eec\u5728\u6ca1\u6709\u4f20\u5165\u4efb\u4f55\u53c2\u6570\u8c03\u7528\u4e86 `getFruits` \u51fd\u6570\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5f62\u53c2 `fruits` \u7684\u9ed8\u8ba4\u503c\u4e3a`undefined`\u3002\u56e0\u4e3a\u6211\u4eec\u9009\u62e9\u6027\u5730\u94fe\u63a5\u4e86 `fruits` \u5728\u7d22\u5f15\u503c\u4e3a `1` \u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u5728\u7d22\u5f15\u503c\u4e3a `1` \u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\u5143\u7d20\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u662f `undefined` \u3002\\n\\n\u6700\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u6253\u5370 `[\'\ud83c\udf4d\'], [\'\ud83c\udf4a\', \'\ud83c\udf4c\']` \u7684\u5b50\u6570\u7ec4 `[\'\ud83c\udf4a\', \'\ud83c\udf4c\']` \u7684\u7b2c2\u4e2a\u5143\u7d20\u3002\u5b50\u6570\u7ec4\u7d22\u5f15\u503c\u4e3a `1`\u7684\u4f4d\u7f6e\u4e3a `\ud83c\udf4c` \uff0c\u56e0\u6b64\u5b83\u88ab\u6253\u5370\u51fa\u4e86\u3002","id":139,"options":["`null`, `undefined`, \ud83c\udf4c","`[]`, `null`, \ud83c\udf4c","`[]`, `[]`, \ud83c\udf4c","`undefined`, `undefined`, \ud83c\udf4c"],"question":"\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},{"answer":0,"code":"class Calc {\\n\\tconstructor() {\\n\\t\\tthis.count = 0 \\n\\t}\\n\\n\\tincrease() {\\n\\t\\tthis.count ++\\n\\t}\\n}\\n\\nconst calc = new Calc()\\nnew Calc().increase()\\n\\nconsole.log(calc.count)","codeLanguage":"javascript","explanation":"\u6211\u4eec\u8bbe\u7f6e `calc` \u53d8\u91cf\u4e3a `Calc` \u7c7b\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521d\u59cb\u5316\u4e00\u4e2a `Calc` \u7684\u65b0\u5b9e\u4f8b\uff0c\u800c\u4e14\u8c03\u7528\u4e86\u8fd9\u4e2a\u5b9e\u4f8b\u7684 `increase` \u65b9\u6cd5\u3002\u56e0\u4e3acount\u5c5e\u6027\u662f\u5728 `Calc` class\u7684constructor\u5185\u90e8\u7684\uff0c\u6240\u4ee5count\u5c5e\u6027\u4e0d\u4f1a\u5728 `Calc` \u7684\u539f\u578b\u94fe\u4e0a\u5171\u4eab\u51fa\u53bb\u3002\u8fd9\u5c31\u610f\u5473\u7740calc\u5b9e\u4f8b\u7684count\u503c\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff0ccount\u4ecd\u7136\u662f `0`\u3002","id":140,"options":["`0`","`1`","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48\uff1f"},{"answer":1,"code":"const user = {\\n\\temail: \\"e@mail.com\\",\\n\\tpassword: \\"12345\\"\\n}\\n\\nconst updateUser = ({ email, password }) => {\\n\\tif (email) {\\n\\t\\tObject.assign(user, { email })\\n\\t}\\n\\n\\tif (password) {\\n\\t\\tuser.password = password\\n\\t}\\n\\n\\treturn user\\n}\\n\\nconst updatedUser = updateUser({ email: \\"new@email.com\\" })\\n\\nconsole.log(updatedUser === user)","codeLanguage":"javascript","explanation":"`updateUser` \u51fd\u6570\u66f4\u65b0user\u7684 `email` \u548c `password` \u5c5e\u6027\u7684\u503c\uff0c \u5982\u679c\u5b83\u4eec\u7684\u503c\u4f20\u5165\u51fd\u6570\uff0c \u51fd\u6570\u8fd4\u56de\u7684\u5c31\u662f `user` \u5bf9\u8c61\u3002 `updateUser` \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f `user` \u5bf9\u8c61\uff0c\u610f\u5473\u7740updatedUser\u7684\u503c\u4e0e `user` \u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a `user` \u5bf9\u8c61\u3002`updatedUser === user` \u4e3a `true`.","id":141,"options":["`false`","`true`","`TypeError`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const fruit = [\'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']\\n\\nfruit.slice(0, 1)\\nfruit.splice(0, 1)\\nfruit.unshift(\'\ud83c\udf47\')\\n\\nconsole.log(fruit)","codeLanguage":"javascript","explanation":"\u9996\u5148\uff0c\u6211\u4eec\u5728fruit\u6570\u7ec4\u4e0a\u8c03\u7528 `slice` \u65b9\u6cd5\u3002 slice\u65b9\u6cd5\u4e0d\u4f1a\u4fee\u6539\u539f\u59cb\u6570\u7ec4\uff0c\u4f46\u662f\u4f1a\u8fd4\u56de\u4ece\u6570\u7ec4\u5207\u7247\u4e0b\u6765\u7684\u503c\uff1a\u9999\u8549emoji\u3002\\n\u5176\u6b21\uff0c\u6211\u4eec\u5728fruit\u6570\u7ec4\u4e0a\u8c03\u7528 `splice` \u65b9\u6cd5\u3002 splice\u65b9\u6cd5\u4f1a\u4fee\u6539\u539f\u59cb\u6570\u7ec4\uff0c\u4e5f\u5c31\u610f\u5473\u7740fruit\u6570\u7ec4\u6b64\u65f6\u4e3a `[\'\ud83c\udf4a\', \'\ud83c\udf4e\']`\u3002\\n\u6700\u540e\uff0c\u6211\u4eec\u5728fruit\u6570\u7ec4\u4e0a\u8c03\u7528 `unshift` \u65b9\u6cd5\uff0c\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u503c\u7684\u65b9\u5f0f\u6539\u53d8\u4e86\u539f\u59cb\u6570\u7ec4\uff0c\u6dfb\u52a0\u7684\u662f\'\ud83c\udf47\'\uff0c\u5b83\u6210\u4e3a\u4e86\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u73b0\u5728fruit\u6570\u7ec4\u7684\u7ec4\u6210\u4e3a `[\'\ud83c\udf47\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`\u3002","id":142,"options":["`[\'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf47\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf47\', \'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"const animals = {};\\nlet dog = { emoji: \'\ud83d\udc36\' }\\nlet cat = { emoji: \'\ud83d\udc08\' }\\n\\nanimals[dog] = { ...dog, name: \\"Mara\\" }\\nanimals[cat] = { ...cat, name: \\"Sara\\" }\\n\\nconsole.log(animals[dog])","codeLanguage":"javascript","explanation":"\u5bf9\u8c61\u7684\u952e\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\\n\\n\u56e0\u4e3a  `dog` \u7684\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c   `animals[dog]` \u5b9e\u9645\u4e0a\u610f\u5473\u7740\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u53eb\u505a `\\"object Object\\"` \u7684\u5c5e\u6027\u6765\u4ee3\u8868\u65b0\u7684\u5bf9\u8c61\u3002  `animals[\\"object Object\\"]` \u73b0\u5728\u7b49\u4e8e `{ emoji: \\"\ud83d\udc36\\", name: \\"Mara\\"}`\u3002\\n\\n`cat` \u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c`animals[cat]` \u5b9e\u9645\u4e0a\u610f\u5473\u7740\u6211\u4eec\u5728\u7528\u65b0\u7684cat\u7684\u5c5e\u6027\u8986\u76d6  `animals[``\\"``object Object``\\"``]` \u7684\u503c\u3002\\n\\n\u6253\u5370  `animals[dog]`\uff0c\u5b9e\u9645\u4e0a\u662f`animals[\\"object Object\\"]`\uff0c\u8fd9\u662f\u56e0\u4e3a\u8f6c\u5316`dog`\u5bf9\u8c61\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u679c `\\"object Object\\"` \uff0c\u6240\u4ee5\u8fd4\u56de `{ emoji: \\"\ud83d\udc08\\", name: \\"Sara\\" }`\u3002","id":143,"options":["`{ emoji: \\"\ud83d\udc36\\", name: \\"Mara\\" }`","`{ emoji: \\"\ud83d\udc08\\", name: \\"Sara\\" }`","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":0,"code":"const user = {\\n\\temail: \\"my@email.com\\",\\n\\tupdateEmail: email => {\\n\\t\\tthis.email = email\\n\\t}\\n}\\n\\nuser.updateEmail(\\"new@email.com\\")\\nconsole.log(user.email)","codeLanguage":"javascript","explanation":"`updateEmail` \u51fd\u6570\u662f\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\uff0c\u5b83\u6ca1\u6709\u548c `user` \u5bf9\u8c61\u7ed1\u5b9a\u3002\u8fd9\u5c31\u610f\u5473\u7740 `this` \u5173\u952e\u5b57\u4e0d\u4f1a\u5f15\u7528\u5230 `user` \u5bf9\u8c61\uff0c\u4f46\u662f\u4f1a\u5f15\u7528\u5230\u5168\u5c40\u5bf9\u8c61\u3002 `user` \u5bf9\u8c61\u5185\u90e8\u7684 `email` \u7684\u503c\u4e0d\u4f1a\u66f4\u65b0\u3002\u5f53\u6253\u5370 `user.email` \u7684\u65f6\u5019\uff0c \u539f\u59cb\u503c `my@email.com` \u88ab\u8fd4\u56de\u3002","id":144,"options":["`my@email.com`","`new@email.com`","`undefined`","`ReferenceError`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":3,"code":"const promise1 = Promise.resolve(\'First\')\\nconst promise2 = Promise.resolve(\'Second\')\\nconst promise3 = Promise.reject(\'Third\')\\nconst promise4 = Promise.resolve(\'Fourth\')\\n\\nconst runPromises = async () => {\\n\\tconst res1 = await Promise.all([promise1, promise2])\\n\\tconst res2  = await Promise.all([promise3, promise4])\\n\\treturn [res1, res2]\\n}\\n\\nrunPromises()\\n\\t.then(res => console.log(res))\\n\\t.catch(err => console.log(err))","codeLanguage":"javascript","explanation":"`Promise.all` \u65b9\u6cd5\u53ef\u4ee5\u5e76\u884c\u5f0f\u8fd0\u884cpromise\u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2apromise\u5931\u8d25\u4e86\uff0c`Promise.all` \u65b9\u6cd5\u4f1a\u5e26\u4e0a\u88abreject\u7684promise\u7684\u503c_rejects_\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c `promise3` \u5e26\u7740 `\\"Third\\"` \u503creject\u3002\u6211\u4eec\u5728\u8c03\u7528 `runPromises` \u65f6\u5728 `runPromises` \u51fd\u6570\u5185\u90e8\u7684 `catch` \u65b9\u6cd5\u53bb\u6355\u83b7\u4efb\u610ferror\u4ece\u800c\u6355\u83b7\u5230\u88abreject\u7684\u503c\u3002\u56e0\u4e3a `promise3` \u5e26\u7740 `\\"Third\\"` \u88abreject\uff0c\u6240\u4ee5\u53ea\u6709 `\\"Third\\"` \u6253\u5370\u3002","id":145,"options":["`[[\'First\', \'Second\'], [\'Fourth\']]`","`[[\'First\', \'Second\'], [\'Third\', \'Fourth\']]`","`[[\'First\', \'Second\']]`","`\'Third\'`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":2,"code":"const keys = [\\"name\\", \\"age\\"]\\nconst values = [\\"Lydia\\", 22]\\n\\nconst method = /* ?? */\\nObject[method](keys.map((_, i) => {\\n\\treturn [keys[i], values[i]]\\n})) // { name: \\"Lydia\\", age: 22 }","codeLanguage":"javascript","explanation":"`fromEntries` \u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e8c\u7ef4\u6570\u7ec4\u8f6c\u6362\u4e3a\u5bf9\u8c61\u3002\u5728\u6bcf\u4e2a\u5b50\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662fkey\uff0c\u5728\u6bcf\u4e2a\u5b50\u6570\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662fvalue\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6620\u5c04\u4e86 `keys` \u6570\u7ec4\uff0c\u5b83\u8fd4\u56de\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3akeys\u6570\u7ec4\u5f53\u524d\u7d22\u5f15\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4e3avalues\u6570\u7ec4\u5f53\u524d\u7d22\u5f15\u7684\u503c\u3002\\n\\n\u8fd9\u6837\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b\u6b63\u786ekeys\u548cvalues\u7684\u5b50\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u7ed3\u679c\u4e3a`{ name: \\"Lydia\\", age: 22 }`\u3002","id":146,"options":["`entries`","`values`","`fromEntries`","`forEach`"],"question":"\u54ea\u4e2a\u4f5c\u4e3a`method`\u7684\u503c\u53ef\u4ee5\u6253\u5370`{ name: \\"Lydia\\", age: 22 }`?"},{"answer":2,"code":"const createMember = ({ email, address = {}}) => {\\n\\tconst validEmail = /.+@.+..+/.test(email)\\n\\tif (!validEmail) throw new Error(\\"Valid email pls\\")\\n\\n\\treturn {\\n\\t\\temail,\\n\\t\\taddress: address ? address : null\\n\\t}\\n}\\n\\nconst member = createMember({ email: \\"my@email.com\\" })\\nconsole.log(member)","codeLanguage":"javascript","explanation":"`address` \u7684\u9ed8\u8ba4\u503c\u662f\u4e00\u4e2a\u7a7a\u5bf9\u8c61 `{}`\u3002\u5f53\u6211\u4eec\u8bbe\u7f6e `member` \u53d8\u91cf\u4e3a `createMember` \u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u6ca1\u6709\u4e3aaddress\u53c2\u6570\u4f20\u503c\uff0c\u610f\u5473\u7740address\u7684\u503c\u4e3a\u9ed8\u8ba4\u7684\u7a7a\u5bf9\u8c61 `{}`\u3002\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u662f\u4e00\u4e2atruthy\u503c\uff0c\u610f\u5473\u7740 `address ? address : null` \u6761\u4ef6\u4f1a\u8fd4\u56de `true`\u3002address\u7684\u503c\u4e3a\u7a7a\u5bf9\u8c61 `{}`\u3002","id":147,"options":["`{ email: \\"my@email.com\\", address: null }`","`{ email: \\"my@email.com\\" }`","`{ email: \\"my@email.com\\", address: {} }`","`{ email: \\"my@email.com\\", address: undefined }`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"},{"answer":1,"code":"let randomValue = { name: \\"Lydia\\" }\\nrandomValue = 23\\n\\nif (!typeof randomValue === \\"string\\") {\\n\\tconsole.log(\\"It\'s not a string!\\")\\n} else {\\n\\tconsole.log(\\"Yay it\'s a string!\\")\\n}","codeLanguage":"javascript","explanation":"`if` \u8bed\u53e5\u7684\u6761\u4ef6\u5224\u65ad `!typeof randomValue` \u7684\u503c\u662f\u5426\u7b49\u4e8e `\\"string\\"`\u3002 `!` \u64cd\u4f5c\u7b26\u5c06\u8fd9\u4e2a\u503c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u5982\u679c\u503c\u662ftruthy\u7684\u8bdd\uff0c\u8fd4\u56de\u503c\u4f1a\u662f `false`\uff0c\u5982\u679c\u503c\u662ffalsy\uff0c\u8fd4\u56de\u503c\u4f1a\u662f `true`\u3002\u5728\u8fd9\u91cc\uff0c `typeof randomValue` \u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2atruthy\u503c `\\"number\\"`\uff0c\u610f\u5473\u7740 `!typeof randomValue` \u7684\u503c\u662f\u4e00\u4e2a\u5e03\u5c14\u503c `false`\u3002\\n\\n `!typeof randomValue === \\"string\\"` \u603b\u662f\u8fd4\u56defalse\uff0c\u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u6267\u884c `false === \\"string\\"`\u3002\u56e0\u4e3a\u6761\u4ef6\u8fd4\u56de\u7684\u662f `false`\uff0c\u6240\u4ee5 `else` \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u4f1a\u88ab\u8fd0\u884c\uff0c\u56e0\u6b64\u6253\u5370 `Yay it\'s a string!` \u3002","id":148,"options":["`It\'s not a string!`","`Yay it\'s a string!`","`TypeError`","`undefined`"],"question":"\u8f93\u51fa\u4ec0\u4e48?"}],"locale":"zh-CN"},{"isRTL":false,"language":"\ud83c\uddfa\ud83c\udde6 \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 \u043c\u043e\u0432\u0430","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u0412\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0456 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u043c\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454\u043c\u043e \u0437\u043c\u0456\u043d\u043d\u0443 `name` \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043a\u043b\u044e\u0447\u043e\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `var`. \u0426\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u0454, \u0449\u043e \u0437\u043c\u0456\u043d\u043d\u0430 \u0431\u0443\u0434\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u0430 (\u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0430\u043c\'\u044f\u0442\u0456 \u043f\u0456\u0434 \u0437\u043c\u0456\u043d\u043d\u0443 \u0431\u0443\u0434\u0435 \u0432\u0438\u0434\u0456\u043b\u0435\u043d\u0430 \u043f\u0456\u0434 \u0447\u0430\u0441 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f) \u0437\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c `undefined` \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c, \u0434\u043e \u0442\u0438\u0445 \u043f\u0456\u0440 \u043f\u043e\u043a\u0438 \u0432\u0438\u043a\u043e\u043d\u0430\u043d\u043d\u044f \u043a\u043e\u0434\u0443 \u043d\u0435 \u0434\u0456\u0439\u0434\u0435 \u0434\u043e \u0440\u044f\u0434\u043a\u0430, \u0434\u0435 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454\u0442\u044c\u0441\u044f \u0437\u043c\u0456\u043d\u043d\u0430. \u041c\u0438 \u0449\u0435 \u043d\u0435 \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `name`, \u043a\u043e\u043b\u0438 \u043d\u0430\u043c\u0430\u0433\u0430\u0454\u043c\u043e\u0441\u044f \u0432\u0438\u0432\u0435\u0441\u0442\u0438 \u0457\u0457 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0442\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456 \u0431\u0443\u0434\u0435 `undefined`.\\n\\n\u0417\u043c\u0456\u043d\u043d\u0456, \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0456 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e `let` (\u0456 `const`), \u0442\u0430\u043a\u043e\u0436 \u0437\u043d\u0430\u0445\u043e\u0434\u044f\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u043d\u0430 \u0432\u0456\u0434\u043c\u0456\u043d\u0443 \u0432\u0456\u0434 `var`, \u043d\u0435 <i>\u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c\u0441\u044f</i>. \u0414\u043e\u0441\u0442\u0443\u043f \u0434\u043e \u043d\u0438\u0445 \u043d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u0438\u0439 \u0434\u043e \u0442\u0438\u0445 \u043f\u0456\u0440, \u043f\u043e\u043a\u0438 \u043d\u0435 \u0432\u0438\u043a\u043e\u043d\u0430\u0454\u0442\u044c\u0441\u044f \u0440\u044f\u0434\u043e\u043a \u0457\u0445 \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u0456\u043d\u0456\u0446\u0456\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u0457). \u0426\u0435 \u043d\u0430\u0437\u0438\u0432\u0430\u0454\u0442\u044c\u0441\u044f \\"\u0442\u0438\u043c\u0447\u0430\u0441\u043e\u0432\u0430 \u043c\u0435\u0440\u0442\u0432\u0430 \u0437\u043e\u043d\u0430\\". \u041a\u043e\u043b\u0438 \u043c\u0438 \u043d\u0430\u043c\u0430\u0433\u0430\u0454\u043c\u043e\u0441\u044f \u0437\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0441\u044f \u0434\u043e \u0437\u043c\u0456\u043d\u043d\u0438\u0445 \u0434\u043e \u0442\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0443 \u044f\u043a \u0432\u043e\u043d\u0438 \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0456, JavaScript \u0432\u0438\u0434\u0430\u0454 `ReferenceError`.","id":0,"options":["`Lydia` \u0442\u0430 `undefined`","`Lydia` \u0442\u0430 `ReferenceError`","`ReferenceError` \u0442\u0430 `21`","`undefined` \u0442\u0430 `ReferenceError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"\u0427\u0435\u0440\u0435\u0437 \u0447\u0435\u0440\u0433\u0438 \u043f\u043e\u0434\u0456\u0439 \u0432 JavaScript, \u0444\u0443\u043d\u043a\u0446\u0456\u044f `setTimeout` \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f _\u043f\u0456\u0441\u043b\u044f \u0442\u043e\u0433\u043e_ \u044f\u043a \u0446\u0438\u043a\u043b \u0431\u0443\u0434\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043e. \u0422\u0430\u043a \u044f\u043a \u0437\u043c\u0456\u043d\u043d\u0430 `i` \u0432 \u043f\u0435\u0440\u0448\u043e\u043c\u0443 \u0446\u0438\u043a\u043b\u0456 \u0431\u0443\u043b\u0430 \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e `var`, \u0432\u043e\u043d\u0430 \u0431\u0443\u0434\u0435 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u044e. \u0423 \u0446\u0438\u043a\u043b\u0456 \u043c\u0438 \u043a\u043e\u0436\u0435\u043d \u0440\u0430\u0437 \u0437\u0431\u0456\u043b\u044c\u0448\u0443\u0454\u043c\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `i` \u043d\u0430 `1`, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 \u0443\u043d\u0430\u0440\u043d\u0438\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++.` \u0414\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0443 \u0432\u0438\u043a\u043e\u043d\u0430\u043d\u043d\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0457 `setTimeout` \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `i` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438\u043c\u0435 `3`, \u044f\u043a \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043f\u0435\u0440\u0448\u043e\u043c\u0443 \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456.\\n\\n\u0423 \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0446\u0438\u043a\u043b\u0456 \u0437\u043c\u0456\u043d\u043d\u0430 `i` \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e `let`. \u0422\u0430\u043a\u0456 \u0437\u043c\u0456\u043d\u043d\u0456 (\u0430 \u0442\u0430\u043a\u043e\u0436 `const`) \u043c\u0430\u044e\u0442\u044c \u0431\u043b\u043e\u0447\u043d\u0443 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0456 (\u0431\u043b\u043e\u043a \u0446\u0435 \u0449\u043e \u0437\u0430\u0432\u0433\u043e\u0434\u043d\u043e \u043c\u0456\u0436 `{}`). \u0417 \u043a\u043e\u0436\u043d\u043e\u044e \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0454\u044e `i` \u043c\u0430\u0442\u0438\u043c\u0435 \u043d\u043e\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u0456 \u043a\u043e\u0436\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0431\u0443\u0434\u0435 \u0437\u0430\u043c\u043a\u043d\u0443\u0442\u043e \u0432 \u0441\u0432\u043e\u0457\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0456 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0456 \u0432\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0456 \u0446\u0438\u043a\u043b\u0443.","id":1,"options":["`0 1 2` \u0442\u0430 `0 1 2`","`0 1 2` \u0442\u0430 `3 3 3`","`3 3 3` \u0442\u0430 `0 1 2`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"\u0417\u0430\u0443\u0432\u0430\u0436, \u0449\u043e `diameter` \u0446\u0435 \u0437\u0432\u0438\u0447\u0430\u0439\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0456\u044f, \u0432 \u0442\u043e\u0439 \u0447\u0430\u0441 \u044f\u043a `perimeter` \u0446\u0435 \u0441\u0442\u0440\u0456\u043b\u043a\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0456\u044f.\\n\\n\u0423 \u0441\u0442\u0440\u0456\u043b\u043a\u043e\u0432\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0456\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `this` \u0432\u043a\u0430\u0437\u0443\u0454 \u043d\u0430 \u043d\u0430\u0432\u043a\u043e\u043b\u0438\u0448\u043d\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0456, \u043d\u0430 \u0432\u0456\u0434\u043c\u0456\u043d\u0443 \u0432\u0456\u0434 \u0437\u0432\u0438\u0447\u0430\u0439\u043d\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0456\u0439! \u0426\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u0454, \u0449\u043e \u043f\u0440\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0443 `perimeter` \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `this` \u0443 \u0446\u0456\u0439 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0432\u043a\u0430\u0437\u0443\u0454 \u043d\u0435 \u043d\u0430 \u043e\u0431\'\u0454\u043a\u0442 `shape`, \u0430 \u043d\u0430 \u0437\u043e\u0432\u043d\u0456\u0448\u043d\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0456 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, window).\\n\\n\u0423 \u0446\u044c\u043e\u0433\u043e \u043e\u0431\'\u0454\u043a\u0442\u0430 \u043d\u0435\u043c\u0430\u0454 \u043a\u043b\u044e\u0447\u0430 `radius`, \u0442\u043e\u043c\u0443 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454\u0442\u044c\u0441\u044f `undefined`.","id":2,"options":["`20` \u0442\u0430 `62.83185307179586`","`20` \u0442\u0430 `NaN`","`20` \u0442\u0430 `63`","`NaN` \u0442\u0430 `63`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\u0423\u043d\u0430\u0440\u043d\u0438\u0439 \u043f\u043b\u044e\u0441 \u043f\u0440\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u043d\u0434 \u0434\u043e \u0447\u0438\u0441\u043b\u0430. `true` \u0446\u0435 `1`, \u0430 `false` \u0446\u0435 `0`.\\n\\n\u0421\u0442\u0440\u043e\u043a\u0430 `\'Lydia\'` \u0446\u0435 \\"\u0441\u043f\u0440\u0430\u0432\u0436\u043d\u0454\\" \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f. \u041c\u0438 \u0437\u0430\u043f\u0438\u0442\u0443\u0454\u043c\u043e \\"\u0441\u043f\u0440\u0430\u0432\u0436\u043d\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0454 \u043f\u043e\u043c\u0438\u043b\u043a\u043e\u0432\u0438\u043c\\"? \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u044c: `false`.","id":3,"options":["`1` \u0442\u0430 `false`","`false` \u0442\u0430 `NaN`","`false` \u0442\u0430 `false`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0430 \u0454 \u0440\u044f\u0434\u043a\u0430\u043c\u0438 (\u043a\u0440\u0456\u043c `Symbol`). \u0406 \u0445\u043e\u0447\u0430 \u043c\u0438 \u043d\u0435 _\u043d\u0430\u0431\u0438\u0440\u0430\u0454\u043c\u043e_ \u0457\u0445 \u044f\u043a \u0440\u044f\u0434\u043a\u0438, \u0432\u043e\u043d\u0438 \u0437\u0430\u0432\u0436\u0434\u0438 \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c\u0441\u044f \u0434\u043e \u0440\u044f\u0434\u043a\u0456\u0432 \u043f\u0456\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c.\\n\\nJavaScript \u0456\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0443\u0454 (\u0430\u0431\u043e \u0440\u043e\u0437\u043f\u0430\u043a\u043e\u0432\u0443\u0454) \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438. \u041f\u0440\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u0456 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0438\u0445 \u0434\u0443\u0436\u043e\u043a JS \u0437\u0430\u0443\u0432\u0430\u0436\u0443\u0454 `[` \u0456 \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0443\u0454 \u043f\u043e\u043a\u0438 \u043d\u0435 \u0437\u0443\u0441\u0442\u0440\u0456\u043d\u0435 `]`. \u0422\u0456\u043b\u044c\u043a\u0438 \u043f\u0456\u0441\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0432\u0456\u043d \u0432\u0438\u0440\u0430\u0445\u0443\u0454 \u0442\u043e, \u0449\u043e \u0437\u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0456 \u0434\u0443\u0436\u043e\u043a.\\n\\n`mouse[bird.size]`: \u0421\u043f\u0435\u0440\u0448\u0443 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454\u0442\u044c\u0441\u044f `bird.size`, \u0449\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `\\"small\\"`. `mouse[\\"small\\"]` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `true`.\\n\\n\u0410\u043b\u0435 \u0456\u0437 \u0437\u0430\u043f\u0438\u0441\u043e\u043c \u0447\u0435\u0440\u0435\u0437 \u043a\u0440\u0430\u043f\u043a\u0443 \u0442\u0430\u043a \u043d\u0435 \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f. \u0423 `mouse` \u043d\u0435\u043c\u0430\u0454 \u043a\u043b\u044e\u0447\u0430 `bird`. \u0422\u0430\u043a\u0438\u043c \u0447\u0438\u043d\u043e\u043c, `mouse.bird` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `undefined`. \u041f\u043e\u0442\u0456\u043c \u043c\u0438 \u0437\u0430\u043f\u0438\u0442\u0443\u0454\u043c\u043e \u043a\u043b\u044e\u0447 `size`, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 \u043a\u0440\u0430\u043f\u043a\u043e\u0432\u0443 \u043d\u043e\u0442\u0430\u0446\u0456\u044e: `mouse.bird.size`. \u0422\u0430\u043a \u044f\u043a `mouse.bird` \u0446\u0435 `undefined`, \u043c\u0438 \u0437\u0430\u043f\u0438\u0442\u0443\u0454\u043c\u043e `undefined.size`. \u0426\u0435 \u043d\u0435 \u0454 \u0434\u0456\u0439\u0441\u043d\u0438\u043c, \u0442\u043e\u043c\u0443 \u043c\u0438 \u043e\u0442\u0440\u0438\u043c\u0443\u0454\u043c\u043e \u043f\u043e\u043c\u0438\u043b\u043a\u0443 \u0442\u0438\u043f\u0443: `Can not read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size` \u043d\u0435 \u0454 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e","`mouse[bird.size]` \u043d\u0435 \u0454 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e","`mouse[bird[\\"size\\"]]` \u043d\u0435 \u0454 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e","\u0412\u0441\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0456"],"question":"\u0429\u043e \u0437 \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0454 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0438\u043c?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u0432\u0441\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0438 \u0454 _\u043f\u043e\u0441\u0438\u043b\u0430\u043b\u044c\u043d\u0438\u043c\u0438_ \u0442\u0438\u043f\u0430\u043c\u0438 \u0434\u0430\u043d\u0438\u0445.\\n\\n\u0421\u043f\u0435\u0440\u0448\u0443 \u0437\u043c\u0456\u043d\u043d\u0430 `c` \u0432\u043a\u0430\u0437\u0443\u0454 \u043d\u0430 \u043e\u0431\'\u0454\u043a\u0442. \u041f\u043e\u0442\u0456\u043c \u043c\u0438 \u0432\u043a\u0430\u0437\u0443\u0454\u043c\u043e \u0437\u043c\u0456\u043d\u043d\u043e\u0457 `d` \u043f\u043e\u0441\u0438\u043b\u0430\u0442\u0438\u0441\u044f \u043d\u0430 \u0442\u043e\u0439 \u0441\u0430\u043c\u0438\u0439 \u043e\u0431\'\u0454\u043a\u0442, \u0449\u043e \u0456 `c`.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n\u041a\u043e\u043b\u0438 \u0442\u0438 \u0437\u043c\u0456\u043d\u044e\u0454\u0448 \u043e\u0434\u0438\u043d \u043e\u0431\'\u0454\u043a\u0442, \u0442\u043e \u0437\u043c\u0456\u043d\u044e\u044e\u0442\u044c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0441\u0456\u0445 \u043f\u043e\u0441\u0438\u043b\u0430\u043d\u044c, \u0449\u043e \u0432\u043a\u0430\u0437\u0443\u044e\u0442\u044c \u043d\u0430 \u0446\u0435\u0439 \u043e\u0431\'\u0454\u043a\u0442.","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` \u0446\u0435 \u0432\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0444\u0443\u043d\u043a\u0446\u0456\u0457. \u0406 \u0445\u043e\u0447\u0430 \u0432\u0456\u043d \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u0454 \u044f\u043a \u0447\u0438\u0441\u043b\u043e, \u0446\u0435 \u043d\u0435 \u0441\u043f\u0440\u0430\u0432\u0436\u043d\u0454 \u0447\u0438\u0441\u043b\u043e: \u0443 \u043d\u044c\u043e\u0433\u043e \u0454 \u0440\u044f\u0434 \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u0438\u0445 \u0444\u0456\u0447 \u0456 \u0446\u0435 \u043e\u0431\'\u0454\u043a\u0442.\\n\\n\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `==` \u043f\u0440\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u0442\u0438\u043f\u0438 \u0434\u0430\u043d\u0438\u0445 \u0434\u043e \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u043e\u0434\u043d\u043e\u0433\u043e \u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454 \u0440\u0456\u0432\u043d\u0456\u0441\u0442\u044c _\u0437\u043d\u0430\u0447\u0435\u043d\u044c_. \u041e\u0431\u0438\u0434\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0440\u0456\u0432\u043d\u0456 `3`, \u0442\u043e\u043c\u0443 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454\u0442\u044c\u0441\u044f `true`.\\n\\n\u041f\u0440\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u0456 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 `===` \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0456 \u0442\u0438\u043f \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0431\u0443\u0442\u0438 \u043e\u0434\u043d\u0430\u043a\u043e\u0432\u0438\u043c\u0438. \u0410\u043b\u0435 \u0432 \u043d\u0430\u0448\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u0446\u0435 \u043d\u0435 \u0442\u0430\u043a: `new Number()` \u0446\u0435 \u043d\u0435 \u0447\u0438\u0441\u043b\u043e, \u0446\u0435 **\u043e\u0431\'\u0454\u043a\u0442**. \u0422\u043e\u043c\u0443 \u043e\u0431\u0438\u0434\u0432\u0430 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u044e\u0442\u044c `false`.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0456\u044f `colorChange` \u0454 \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u043e\u044e. \u0421\u0442\u0430\u0442\u0438\u0447\u043d\u0456 \u043c\u0435\u0442\u043e\u0434\u0438 \u043d\u0435 \u043c\u0430\u044e\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f\u0443 \u0434\u043e \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0456\u0432 \u043a\u043b\u0430\u0441\u0443. \u0422\u0430\u043a \u044f\u043a `freddie` \u0446\u0435 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440, \u0442\u043e \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 \u0442\u0430\u043c \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0438\u0439. \u0422\u043e\u043c\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0454 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 `TypeError`.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u042f\u043a\u0438\u043c \u0431\u0443\u0434\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"\u0412 \u043a\u043e\u043d\u0441\u043e\u043b\u0456 \u0432\u0438\u0432\u0435\u0434\u0435\u0442\u044c\u0441\u044f \u043e\u0431\'\u0454\u043a\u0442, \u0442\u043e\u043c\u0443 \u0449\u043e \u043c\u0438 \u0449\u043e\u0439\u043d\u043e \u0441\u0442\u0432\u043e\u0440\u0438\u043b\u0438 \u043f\u043e\u0440\u043e\u0436\u043d\u0456\u0439 \u043e\u0431\'\u0454\u043a\u0442 \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u043e\u0431\'\u0454\u043a\u0442\u0456! \u041a\u043e\u043b\u0438 \u043c\u0438 \u0437\u0430\u043c\u0456\u0441\u0442\u044c `greeting` \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 `greetign`, \u0456\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 JS \u043d\u0430\u0441\u043f\u0440\u0430\u0432\u0434\u0456 \u0432\u0438\u043a\u043e\u043d\u0430\u0432 `global.greetign = {}` (\u0430\u0431\u043e `window.greetign = {}` \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0456).\\n\\n\u041f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 `\\"use strict\\"`, \u0449\u043e\u0431 \u0443\u043d\u0438\u043a\u043d\u0443\u0442\u0438 \u0442\u0430\u043a\u043e\u0457 \u043f\u043e\u0432\u0435\u0434\u0456\u043d\u043a\u0438. \u0426\u0435\u0439 \u0437\u0430\u043f\u0438\u0441 \u0434\u043e\u043f\u043e\u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u0438\u043c \u0432 \u0442\u043e\u043c\u0443, \u0449\u043e \u0437\u043c\u0456\u043d\u043d\u0430 \u0431\u0443\u043b\u0430 \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u043f\u0435\u0440\u0435\u0434 \u0442\u0438\u043c \u044f\u043a \u0457\u0439 \u043f\u0440\u0438\u0441\u0432\u043e\u0457\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"\u0412 JavaScript \u0446\u0435 \u043c\u043e\u0436\u043b\u0438\u0432\u043e, \u0442\u043e\u043c\u0443 \u0449\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0446\u0435 \u043e\u0431\'\u0454\u043a\u0442\u0438! (\u0412\u0441\u0435 \u0454 \u043e\u0431\'\u0454\u043a\u0442\u0430\u043c\u0438 \u043a\u0440\u0456\u043c \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0456\u0432).\\n\\n\u0424\u0443\u043d\u043a\u0446\u0456\u044f - \u0446\u0435 \u0441\u043f\u0435\u0446\u0456\u0430\u043b\u044c\u043d\u0438\u0439 \u0442\u0438\u043f \u043e\u0431\'\u0454\u043a\u0442\u0430, \u044f\u043a\u0438\u0439 \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0442\u0438. \u041a\u0440\u0456\u043c \u0442\u043e\u0433\u043e, \u0444\u0443\u043d\u043a\u0446\u0456\u044f - \u0446\u0435 \u043e\u0431\'\u0454\u043a\u0442 \u0437 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u044f\u043c\u0438. \u0412\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c \u0442\u0430\u043a\u043e\u0433\u043e \u043e\u0431\'\u0454\u043a\u0442\u0430 \u043d\u0435 \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0442\u0438, \u0442\u0430\u043a \u044f\u043a \u0432\u043e\u043d\u043e \u043d\u0435 \u0454 \u0444\u0443\u043d\u043a\u0446\u0456\u0454\u044e.","id":9,"options":["\u041d\u0456\u0447\u043e\u0433\u043e, \u0432\u0441\u0435 \u043e\u043a.","`SyntaxError`. \u041d\u0435 \u043c\u043e\u0436\u043d\u0430 \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0456 \u0444\u0443\u043d\u043a\u0446\u0456\u0439 \u0442\u0430\u043a\u0438\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c.","`undefined`","`ReferenceError`"],"question":"\u0429\u043e \u0441\u0442\u0430\u043d\u0435\u0442\u044c\u0441\u044f?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"\u041d\u0435 \u043c\u043e\u0436\u043d\u0430 \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0456 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0443, \u044f\u043a \u0437\u0432\u0438\u0447\u0430\u0439\u043d\u043e\u043c\u0443 \u043e\u0431\'\u0454\u043a\u0442\u0443. \u042f\u043a\u0449\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0434\u043e\u0434\u0430\u0442\u0438 \u0444\u0456\u0447\u0443 \u0434\u043e \u0432\u0441\u0456\u0445 \u043e\u0431\'\u0454\u043a\u0442\u0456\u0432, \u0442\u043e \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0438. \u0412 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443,\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\n\u0437\u0440\u043e\u0431\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `member.getFullName()` \u0447\u0438\u043d\u043d\u0438\u043c. \u0423 \u0447\u043e\u043c\u0443 \u0442\u0443\u0442 \u043f\u0435\u0440\u0435\u0432\u0430\u0433\u0430? \u041f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u043e, \u0449\u043e \u043c\u0438 \u0434\u043e\u0434\u0430\u043b\u0438 \u0446\u0435\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430. \u041c\u043e\u0436\u043b\u0438\u0432\u043e, \u043d\u0435 \u043a\u043e\u0436\u043d\u043e\u043c\u0443 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0443 `Person` \u043f\u043e\u0442\u0440\u0456\u0431\u0435\u043d \u0446\u0435\u0439 \u043c\u0435\u0442\u043e\u0434. \u0426\u0435 \u043f\u0440\u0438\u0437\u0432\u0435\u0434\u0435 \u0434\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0432\u0442\u0440\u0430\u0442 \u043f\u0430\u043c\'\u044f\u0442\u0456, \u0442\u043e\u043c\u0443 \u0449\u043e \u0432\u0441\u0456 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u043c\u0430\u0442\u0438 \u0446\u044e \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c. \u041d\u0430\u0432\u043f\u0430\u043a\u0438, \u044f\u043a\u0449\u043e \u043c\u0438 \u0434\u043e\u0434\u0430\u043c\u043e \u0446\u0435\u0439 \u043c\u0435\u0442\u043e\u0434 \u0442\u0456\u043b\u044c\u043a\u0438 \u0434\u043e \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0443, \u0443 \u043d\u0430\u0441 \u0431\u0443\u0434\u0435 \u0442\u0456\u043b\u044c\u043a\u0438 \u043e\u0434\u043d\u0435 \u043c\u0456\u0441\u0446\u0435 \u0432 \u043f\u0430\u043c\'\u044f\u0442\u0456, \u0434\u043e \u044f\u043a\u043e\u0433\u043e \u0437\u043c\u043e\u0436\u0443\u0442\u044c \u0437\u0432\u0435\u0440\u0442\u0430\u0442\u0438\u0441\u044f \u0432\u0441\u0456 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0438!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"\u0414\u043b\u044f `sarah` \u043c\u0438 \u043d\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043b\u0438 \u043a\u043b\u044e\u0447\u043e\u0432\u0435 \u0441\u043b\u043e\u0432\u043e `new`. \u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f `new` \u043f\u0440\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u043e \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\'\u0454\u043a\u0442\u0430. \u0410\u043b\u0435 \u0431\u0435\u0437 `new` \u0432\u0456\u043d \u0432\u043a\u0430\u0437\u0443\u0454 \u043d\u0430 **\u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0438\u0439 \u043e\u0431\'\u0454\u043a\u0442**!\\n\\n\u041c\u0438 \u0432\u043a\u0430\u0437\u0430\u043b\u0438, \u0449\u043e `this.firstName` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `\\"Sarah\\"` \u0456 `this.lastName` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `\\"Smith\\"`. \u041d\u0430\u0441\u043f\u0440\u0430\u0432\u0434\u0456 \u043c\u0438 \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u043b\u0438 `global.firstName = \'Sarah\'` \u0456 `global.lastName = \'Smith\'`. `sarah` \u0437\u0430\u043b\u0438\u0448\u0438\u043b\u0430\u0441\u044f `undefined`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0442\u0430 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0442\u0430 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0442\u0430 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0442\u0430 `ReferenceError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":3,"explanation":"\u041f\u0456\u0434 \u0447\u0430\u0441 \u0444\u0430\u0437\u0438 **\u0437\u0430\u0445\u043e\u043f\u043b\u0435\u043d\u043d\u044f** \u043f\u043e\u0434\u0456\u044f \u043f\u043e\u0448\u0438\u0440\u044e\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u0431\u0430\u0442\u044c\u043a\u0456\u0432\u0441\u044c\u043a\u043e\u0433\u043e \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0434\u043e \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0435\u0442\u0438. \u041f\u0456\u0441\u043b\u044f \u0434\u043e\u0441\u044f\u0433\u043d\u0435\u043d\u043d\u044f **\u043c\u0435\u0442\u0438** \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f \u0444\u0430\u0437\u0430 **\u0441\u043f\u043b\u0438\u0432\u0430\u043d\u043d\u044f**.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["\u041c\u0435\u0442\u0430 (Target) > \u0417\u0430\u0445\u043e\u043f\u043b\u0435\u043d\u043d\u044f (Capturing) > \u0412\u0441\u043f\u043b\u0438\u0442\u0442\u044f (Bubbling)","\u0412\u0441\u043f\u043b\u0438\u0442\u0442\u044f (Bubbling) > \u041c\u0435\u0442\u0430 (Target) > \u0417\u0430\u0445\u043e\u043f\u043b\u0435\u043d\u043d\u044f (Capturing)","\u041c\u0435\u0442\u0430 (Target) > \u0412\u0441\u043f\u043b\u0438\u0442\u0442\u044f (Bubbling) > \u0417\u0430\u0445\u043e\u043f\u043b\u0435\u043d\u043d\u044f (Capturing)","\u0417\u0430\u0445\u043e\u043f\u043b\u0435\u043d\u043d\u044f (Capturing) > \u041c\u0435\u0442\u0430 (Target) > \u0412\u0441\u043f\u043b\u0438\u0442\u0442\u044f (Bubbling)"],"question":"\u041d\u0430\u0437\u0432\u0456\u0442\u044c \u0442\u0440\u0438 \u0444\u0430\u0437\u0438 \u043f\u043e\u0448\u0438\u0440\u0435\u043d\u043d\u044f \u043f\u043e\u0434\u0456\u0439"},{"answer":1,"explanation":"\u0412\u0441\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0438 \u043c\u0430\u044e\u0442\u044c \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0438, \u043a\u0440\u0456\u043c **\u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043e\u0431\'\u0454\u043a\u0442\u0430**. \u0411\u0430\u0437\u043e\u0432\u0438\u0439 \u043e\u0431\'\u0454\u043a\u0442 \u043c\u0430\u0454 \u0434\u043e\u0441\u0442\u0443\u043f \u0434\u043e \u0434\u0435\u044f\u043a\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u0456\u0432 \u0456 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0435\u0439, \u0442\u0430\u043a\u0438\u0445 \u044f\u043a `.toString`. \u0421\u0430\u043c\u0435 \u0442\u043e\u043c\u0443 \u043c\u0438 \u043c\u043e\u0436\u0435\u043c\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0432\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u0456 \u043c\u0435\u0442\u043e\u0434\u0438 JavaScript! \u0412\u0441\u0456 \u0446\u0456 \u043c\u0435\u0442\u043e\u0434\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0456 \u0432 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0456. \u042f\u043a\u0449\u043e JavaScript \u043d\u0435 \u043c\u043e\u0436\u0435 \u0437\u043d\u0430\u0439\u0442\u0438 \u043c\u0435\u0442\u043e\u0434 \u0431\u0435\u0437\u043f\u043e\u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e \u0443 \u043e\u0431\'\u0454\u043a\u0442\u0443, \u0432\u0456\u043d \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0443\u0454 \u043f\u043e\u0448\u0443\u043a \u043f\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0443 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0456\u0432 \u043f\u043e\u043a\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435.","id":13,"options":["\u0422\u0430\u043a","\u041d\u0456"],"question":"\u0412\u0441\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0438 \u043c\u0430\u044e\u0442\u044c \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0438?"},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript \u0446\u0435 **\u0434\u0438\u043d\u0430\u043c\u0456\u0447\u043d\u043e \u0442\u0456\u043f\u0456\u0437\u0456\u0440\u043e\u0432\u0430\u043d\u043d\u0430 \u043c\u043e\u0432\u0430**: \u043c\u0438 \u043d\u0435 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454\u043c\u043e \u0442\u0438\u043f \u0437\u043c\u0456\u043d\u043d\u0438\u0445. \u0417\u043c\u0456\u043d\u043d\u0456 \u043c\u043e\u0436\u0443\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0431\u0443\u0442\u0438 \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u0456 \u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0443 \u0432 \u0456\u043d\u0448\u0438\u0439 \u0431\u0435\u0437 \u043d\u0430\u0448\u043e\u0457 \u0443\u0447\u0430\u0441\u0442\u0456, \u0449\u043e \u043d\u0430\u0437\u0438\u0432\u0430\u0454\u0442\u044c\u0441\u044f _\u043d\u0435\u044f\u0432\u043d\u0438\u043c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044f\u043c \u0442\u0438\u043f\u0456\u0432_. **\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044f** \u0446\u0435 \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0443 \u0432 \u0456\u043d\u0448\u0438\u0439.\\n\\n\u0423 \u0446\u044c\u043e\u043c\u0443 \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456, JavaScript \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e `1` \u0432 \u0440\u044f\u0434\u043e\u043a, \u0449\u043e\u0431 \u043e\u043f\u0435\u0440\u0430\u0446\u0456\u044f \u0432\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0456 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u043c\u0430\u043b\u0430 \u0441\u0435\u043d\u0441 \u0456 \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u043b\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f. \u041f\u0456\u0434 \u0447\u0430\u0441 \u0441\u043a\u043b\u0430\u0434\u0430\u043d\u043d\u044f \u0447\u0438\u0441\u043b\u0430 (`1`) \u0456 \u0440\u044f\u0434\u043a\u0438 (`\'2\'`) \u0447\u0438\u0441\u043b\u043e \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u044e\u0454\u0442\u044c\u0441\u044f \u0434\u043e \u0440\u044f\u0434\u043a\u0430. \u041c\u0438 \u043c\u043e\u0436\u0435\u043c\u043e \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438 \u0440\u044f\u0434\u043a\u0438 \u043e\u0441\u044c \u0442\u0430\u043a: `\\"Hello\\" + \\"World\\"`. \u0422\u0430\u043a\u0438\u043c \u0447\u0438\u043d\u043e\u043c, \\"`1\\"` + `\\"2\\"` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \\"`12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043e\u0434\u0443?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"**\u041f\u043e\u0441\u0442\u0444\u0456\u043a\u0441\u043d\u0438\u0439** \u0443\u043d\u0430\u0440\u043d\u0438\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++`:\\n\\n1. \u041f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (`0`)\\n2. \u0406\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u0443\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u0442\u0435\u043f\u0435\u0440 \u0447\u0438\u0441\u043b\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `1`)\\n\\n**\u041f\u0440\u0435\u0444\u0456\u043a\u0441\u043d\u0438\u0439** \u0443\u043d\u0430\u0440\u043d\u0438\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `++`:\\n\\n1. \u0406\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u0443\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u0442\u0435\u043f\u0435\u0440 \u0447\u0438\u0441\u043b\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `2`)\\n2. \u041f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (`2`)\\n\\n\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"\u041f\u0440\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u0456 \u0442\u0435\u0433\u043e\u0432\u0430\u043d\u0438\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043d\u0438\u0445 \u043b\u0456\u0442\u0435\u0440\u0430\u043b\u0456\u0432 \u043f\u0435\u0440\u0448\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0435 \u043c\u0430\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u044c. \u0420\u0435\u0448\u0442\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0456\u0432 \u0431\u0443\u0434\u0443\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0442\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0438\u0445 \u0432\u0438\u0440\u0430\u0437\u0456\u0432!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"\u0412 \u043e\u043f\u0435\u0440\u0430\u0446\u0456\u044f\u0445 \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0438 \u043f\u043e\u0440\u0456\u0432\u043d\u044e\u044e\u0442\u044c\u0441\u044f \u0437\u0430 \u0457\u0445 _\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c_, \u0430 \u043e\u0431\'\u0454\u043a\u0442\u0438 \u0437\u0430 _\u043f\u043e\u0441\u0438\u043b\u0430\u043d\u043d\u044f\u043c\u0438_. JavaScript \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454, \u0449\u043e\u0431 \u043e\u0431\'\u0454\u043a\u0442\u0438 \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u043b\u0438 \u043d\u0430 \u043e\u0434\u043d\u0443 \u0456 \u0442\u0443 \u0436 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0430\u043c\'\u044f\u0442\u0456.\\n\\n\u041f\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u043d\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0438 \u0432 \u043d\u0430\u0448\u043e\u043c\u0443 \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456 \u043d\u0435 \u0442\u0430\u043a\u0456: \u043e\u0431\'\u0454\u043a\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0438\u0439 \u044f\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u0432\u043a\u0430\u0437\u0443\u0454 \u043d\u0430 \u0456\u043d\u0448\u0443 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0430\u043c\'\u044f\u0442\u0456, \u043d\u0456\u0436 \u043e\u0431\'\u0454\u043a\u0442\u0438, \u0449\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0442\u044c\u0441\u044f \u0432 \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u0456.\\n\\n\u0422\u043e\u043c\u0443 `{age: 18} === {age: 18}` \u0456 `{age: 18} == {age: 18}` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u044e\u0442\u044c `false`.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u0448\u0438\u0440\u0435\u043d\u043d\u044f (`... args`) \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u043c\u0430\u0441\u0438\u0432 \u0437 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438. \u041c\u0430\u0441\u0438\u0432 \u0446\u0435 \u043e\u0431\'\u0454\u043a\u0442, \u0442\u043e\u043c\u0443 `typeof args` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `\\"object\\"`.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 `\\"use strict\\"`, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u0442\u0438 \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u0438\u043c, \u0449\u043e \u043c\u0438 \u043f\u043e\u043c\u0438\u043b\u043a\u043e\u0432\u043e \u043d\u0435 \u043e\u0433\u043e\u043b\u043e\u0441\u0438\u043c\u043e \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0456 \u0437\u043c\u0456\u043d\u043d\u0456. \u041c\u0438 \u0440\u0430\u043d\u0456\u0448\u0435 \u043d\u0456\u0434\u0435 \u043d\u0435 \u043e\u0433\u043e\u043b\u043e\u0448\u0443\u0432\u0430\u043b\u0438 \u0437\u043c\u0456\u043d\u043d\u0443 `age`, \u0442\u043e\u043c\u0443 \u0437 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f\u043c `\\"use strict\\"` \u0432\u0438\u043d\u0438\u043a\u043d\u0435 ReferenceError. \u0411\u0435\u0437 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f `\\"use strict\\"` \u043f\u043e\u043c\u0438\u043b\u043a\u0438 \u043d\u0435 \u0432\u0438\u043d\u0438\u043a\u043d\u0435, \u0430 \u0437\u043c\u0456\u043d\u043d\u0430 `age` \u0434\u043e\u0434\u0430\u0441\u0442\u044c\u0441\u044f \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0438\u0439 \u043e\u0431\'\u0454\u043a\u0442.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` \u0432\u0438\u043a\u043e\u043d\u0443\u0454 \u043a\u043e\u0434, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0438\u0439 \u0443 \u0432\u0438\u0433\u043b\u044f\u0434\u0456 \u0440\u044f\u0434\u043a\u0430. \u042f\u043a\u0449\u043e \u0446\u0435 \u0440\u044f\u0434\u043e\u043a (\u044f\u043a \u0432 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443), \u0442\u043e \u043e\u0431\u0447\u0438\u0441\u043b\u044e\u0454\u0442\u044c\u0441\u044f \u0432\u0438\u0440\u0430\u0437. \u0412\u0438\u0440\u0430\u0437 `10 * 10 + 5` \u043f\u043e\u0432\u0435\u0440\u043d\u0435 \u0447\u0438\u0441\u043b\u043e `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"\u0427\u043e\u043c\u0443 \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438\u043c\u0435 sum?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"\u0414\u0430\u043d\u0456, \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043d\u0456 \u0432 `sessionStorage` \u043e\u0447\u0438\u0449\u0430\u044e\u0442\u044c\u0441\u044f \u043f\u0456\u0441\u043b\u044f \u0437\u0430\u043a\u0440\u0438\u0442\u0442\u044f _\u0432\u043a\u043b\u0430\u0434\u043a\u0438_.\\n\\n\u041f\u0440\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u0456 `localStorage` \u0434\u0430\u043d\u0456 \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u044e\u0442\u044c\u0441\u044f \u043d\u0430\u0437\u0430\u0432\u0436\u0434\u0438. \u041e\u0447\u0438\u0441\u0442\u0438\u0442\u0438 \u0457\u0445 \u043c\u043e\u0436\u043d\u0430, \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 `localStorage.clear()`.","id":21,"options":["\u0417\u0430\u0432\u0436\u0434\u0438, \u0434\u0430\u043d\u0456 \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u043b\u044f\u0442\u044c\u0441\u044f.","\u041f\u043e\u043a\u0438 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447 \u043d\u0435 \u0437\u0430\u043a\u0440\u0438\u0432\u0430\u0454 \u0432\u043a\u043b\u0430\u0434\u043a\u0443.","\u041f\u043e\u043a\u0438 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447 \u043d\u0435 \u0437\u0430\u043a\u0440\u0438\u0454 \u0431\u0440\u0430\u0443\u0437\u0435\u0440, \u0430 \u043d\u0435 \u0442\u0456\u043b\u044c\u043a\u0438 \u0432\u043a\u043b\u0430\u0434\u043a\u0443.","\u041f\u043e\u043a\u0438 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447 \u043d\u0435 \u0432\u0438\u043c\u0438\u043a\u0430\u0454 \u043a\u043e\u043c\u043f\'\u044e\u0442\u0435\u0440."],"question":"\u042f\u043a \u0434\u043e\u0432\u0433\u043e \u0431\u0443\u0434\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0438\u0439 cool_secret?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"\u0417\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043a\u043b\u044e\u0447\u043e\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `var`, \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0442\u0438 \u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0437\u0430\u0432\u0433\u043e\u0434\u043d\u043e \u0437\u043c\u0456\u043d\u043d\u0438\u0445 \u0437 \u043e\u0434\u043d\u0438\u043c \u0456 \u0442\u0438\u043c \u0436\u0435 \u0456\u043c\'\u044f\u043c. \u0417\u043c\u0456\u043d\u043d\u0430 \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438\u043c\u0435 \u043e\u0441\u0442\u0430\u043d\u043d\u0454 \u043f\u0440\u0438\u0441\u0432\u043e\u0454\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f.\\n\\n\u0412\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0435 \u0437 `let` \u0430\u0431\u043e` const`, \u043e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0432\u043e\u043d\u0438 \u0431\u043b\u043e\u0447\u043d\u0456.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"\u0412\u0441\u0456 \u043a\u043b\u044e\u0447\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0456\u0432 (\u043a\u0440\u0456\u043c `Symbols`) \u0454 \u0440\u044f\u0434\u043a\u0430\u043c\u0438, \u043d\u0430\u0432\u0456\u0442\u044c \u044f\u043a\u0449\u043e \u0437\u0430\u0434\u0430\u043d\u043e \u043d\u0435 \u0432 \u0432\u0438\u0433\u043b\u044f\u0434\u0456 \u0440\u044f\u0434\u043a\u0456\u0432. \u0422\u043e\u043c\u0443 `obj.hasOwnProperty(\'1\')` \u0442\u0430\u043a \u0441\u0430\u043c\u043e \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `true`.\\n\\n\u0410\u043b\u0435 \u0446\u0435 \u043d\u0435 \u043f\u0440\u0430\u0446\u044e\u0454 \u0434\u043b\u044f `set`. \u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f `\\"1\\"` \u043d\u0435\u043c\u0430\u0454 \u0432 `set`: `set.has (\'1\')`, \u0442\u043e\u043c\u0443 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454\u0442\u044c\u0441\u044f `false`. \u0410\u043b\u0435 `set.has(1)` \u043f\u043e\u0432\u0435\u0440\u043d\u0435 `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"\u042f\u043a\u0449\u043e \u0454 \u0434\u0432\u0430 \u043a\u043b\u044e\u0447\u0456 \u0437 \u043e\u0434\u043d\u0430\u043a\u043e\u0432\u0438\u043c \u0456\u043c\'\u044f\u043c, \u0442\u043e \u043a\u043b\u044e\u0447 \u0431\u0443\u0434\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0439. \u0419\u043e\u0433\u043e \u043f\u043e\u0437\u0438\u0446\u0456\u044f \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c \u0431\u0443\u0434\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043e\u0441\u0442\u0430\u043d\u043d\u0456\u043c.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"explanation":"\u0411\u0430\u0437\u043e\u0432\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u0438\u043a\u043e\u043d\u0430\u043d\u043d\u044f \u0446\u0435 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u0438\u043a\u043e\u043d\u0430\u043d\u043d\u044f: \u0446\u0435 \u0442\u0435, \u0449\u043e \u0454 \u0434\u0435 \u0437\u0430\u0432\u0433\u043e\u0434\u043d\u043e \u0432 \u0442\u0432\u043e\u0454\u043c\u0443 \u043a\u043e\u0434\u0456.","id":25,"options":["\u0422\u0430\u043a","\u041d\u0456","\u0412 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456 \u0432\u0456\u0434 \u0441\u0438\u0442\u0443\u0430\u0446\u0456\u0457"],"question":"\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u0438\u043a\u043e\u043d\u0430\u043d\u043d\u044f \u0441\u0442\u0432\u043e\u0440\u044e\u0454 \u0434\u0432\u0456 \u0440\u0435\u0447\u0456: \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0438\u0439 \u043e\u0431\'\u0454\u043a\u0442 \u0456 this"},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `continue` \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0454 \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u044e, \u044f\u043a\u0449\u043e \u0443\u043c\u043e\u0432\u0430 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` \u0446\u0435 \u0432\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440, \u0434\u043e \u044f\u043a\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u0430 \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0456. \u042f \u0434\u043e\u0434\u0430\u043b\u0430 \u043c\u0435\u0442\u043e\u0434 \u0434\u043e \u0439\u043e\u0433\u043e \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u0443. \u0420\u044f\u0434\u043a\u0438-\u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u044e\u0442\u044c\u0441\u044f \u0434\u043e \u0440\u044f\u0434\u043a\u0456\u0432-\u043e\u0431\'\u0454\u043a\u0442\u0456\u0432. \u0422\u043e\u043c\u0443 \u0432\u0441\u0456 \u0440\u044f\u0434\u043a\u0438 (\u0441\u0442\u0440\u043e\u043a\u043e\u0432\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0438) \u043c\u0430\u044e\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u0434\u043e \u0446\u044c\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0443!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u042f\u043a\u0438\u043c \u0431\u0443\u0434\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"\u041a\u043b\u044e\u0447\u0456 \u043e\u0431\'\u0454\u043a\u0442\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u044e\u0442\u044c\u0441\u044f \u0432 \u0440\u044f\u0434\u043a\u0438. \u041c\u0438 \u0437\u0431\u0438\u0440\u0430\u0454\u043c\u043e\u0441\u044f \u0434\u043e\u0434\u0430\u0442\u0438 \u043e\u0431\'\u0454\u043a\u0442 \u0432 \u044f\u043a\u043e\u0441\u0442\u0456 \u043a\u043b\u044e\u0447\u0430 \u0434\u043e \u043e\u0431\'\u0454\u043a\u0442\u0430 `a` \u0437\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c `123`.\\n\\n\u041f\u0440\u043e\u0442\u0435, \u043a\u043e\u043b\u0438 \u043c\u0438 \u043d\u0430\u0432\u043e\u0434\u0438\u043c\u043e \u043e\u0431\'\u0454\u043a\u0442 \u0434\u043e \u0440\u044f\u0434\u043a\u0430, \u0432\u0456\u043d \u0441\u0442\u0430\u0454 `\\"[object Object]\\"`. \u0422\u0430\u043a\u0438\u043c \u0447\u0438\u043d\u043e\u043c, \u043c\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u043c\u043e, \u0449\u043e `a[\\"object Object\\"] = 123`. \u041f\u043e\u0442\u0456\u043c \u043c\u0438 \u0440\u043e\u0431\u0438\u043c\u043e \u0442\u0435 \u0436 \u0441\u0430\u043c\u0435. `c` \u0446\u0435 \u0456\u043d\u0448\u0438\u0439 \u043e\u0431\'\u0454\u043a\u0442, \u044f\u043a\u0438\u0439 \u043c\u0438 \u043d\u0435\u044f\u0432\u043d\u043e \u043d\u0430\u0432\u043e\u0434\u0438\u043c\u043e \u0434\u043e \u0440\u044f\u0434\u043a\u0430. \u0422\u043e\u043c\u0443 `a[\\"object Object\\"] = 456`.\\n\\n\u041f\u043e\u0442\u0456\u043c, \u043a\u043e\u043b\u0438 \u043c\u0438 \u0432\u0438\u0432\u043e\u0434\u0438\u043c\u043e `a[b]`, \u043c\u0438 \u043c\u0430\u0454\u043c\u043e \u043d\u0430 \u0443\u0432\u0430\u0437\u0456 `a[\\"object Object\\"]`. \u041c\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u0449\u043e \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \u0442\u0443\u0434\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `456`, \u0442\u043e\u043c\u0443 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0456 \u043e\u0442\u0440\u0438\u043c\u0443\u0454\u043c\u043e `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"\u041c\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u043c\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u044e `setTimeout` \u043f\u0435\u0440\u0448\u043e\u044e. \u0422\u0438\u043c \u043d\u0435 \u043c\u0435\u043d\u0448, \u0432\u043e\u043d\u0430 \u0432\u0438\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u044e.\\n\\n\u0426\u0435 \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u0442\u0435, \u0449\u043e \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430\u0445 \u0443 \u043d\u0430\u0441 \u0454 \u043d\u0435 \u0442\u0456\u043b\u044c\u043a\u0438 \u0440\u0430\u043d\u0442\u0430\u0439\u043c \u0434\u0432\u0438\u0436\u043e\u043a, \u0430\u043b\u0435 \u0456 `WebAPI`. `WebAPI` \u043d\u0430\u0434\u0430\u0454 \u043d\u0430\u043c \u0444\u0443\u043d\u043a\u0446\u0456\u044e `setTimeout` \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445 \u043c\u043e\u0436\u043b\u0438\u0432\u043e\u0441\u0442\u0435\u0439. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, DOM.\\n\\n\u041f\u0456\u0441\u043b\u044f \u0442\u043e\u0433\u043e \u044f\u043a _\u043a\u043e\u043b\u043b\u0431\u0435\u043a_ \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0432 `WebAPI`, \u0444\u0443\u043d\u043a\u0446\u0456\u044f `setTimeout` (\u0430\u043b\u0435 \u043d\u0435 \u043a\u043e\u043b\u043b\u0431\u0435\u043a!) \u0432\u0438\u0439\u043c\u0430\u0454\u0442\u044c\u0441\u044f \u0437 \u0441\u0442\u0435\u043a\u0430.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\u0422\u0435\u043f\u0435\u0440 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f `foo`, \u0456 `\\"First\\"` \u0432\u0438\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` \u0434\u0456\u0441\u0442\u0430\u0454\u0442\u044c\u0441\u044f \u0437 \u0441\u0442\u0435\u043a\u0430, \u0456 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f `baz`. `\\"Third\\"` \u0432\u0438\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\n`WebAPI` \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438 \u0432\u043c\u0456\u0441\u0442 \u0432 \u0441\u0442\u0435\u043a \u043a\u043e\u043b\u0438 \u0437\u0430\u0445\u043e\u0447\u0435. \u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0446\u044c\u043e\u0433\u043e \u0432\u0456\u043d \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u044f\u0454 \u043a\u043e\u043b\u043b\u0431\u0435\u043a-\u0444\u0443\u043d\u043a\u0446\u0456\u044e \u0432 \u0442\u0430\u043a \u0437\u0432\u0430\u043d\u0443 _\u0447\u0435\u0440\u0433\u0443_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\u0422\u0443\u0442 \u043d\u0430 \u0441\u0446\u0435\u043d\u0443 \u0432\u0438\u0445\u043e\u0434\u0438\u0442\u044c \u0446\u0438\u043a\u043b \u043f\u043e\u0434\u0456\u0439 (event loop). **Event loop** \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454 \u0441\u0442\u0435\u043a \u0456 \u0447\u0435\u0440\u0433\u0430 \u0437\u0430\u0432\u0434\u0430\u043d\u044c. \u042f\u043a\u0449\u043e \u0441\u0442\u0435\u043a \u043f\u043e\u0440\u043e\u0436\u043d\u0456\u0439, \u0442\u043e \u0432\u0456\u043d \u0431\u0435\u0440\u0435 \u043f\u0435\u0440\u0448\u0438\u0439 \u0435\u043b\u0435\u043c\u0435\u043d\u0442 \u0437 \u0447\u0435\u0440\u0433\u0438 \u0456 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u044f\u0454 \u0439\u043e\u0433\u043e \u0432 \u0441\u0442\u0435\u043a.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n\u0412\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f `bar`, \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0432\u0438\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f `\\"Second\\"` \u0456 \u0446\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u044f \u0434\u0456\u0441\u0442\u0430\u0454\u0442\u044c\u0441\u044f \u0437 \u0441\u0442\u0435\u043a\u0430.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u042f\u043a\u0438\u043c \u0431\u0443\u0434\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\u041c\u0435\u0442\u043e\u044e \u043f\u043e\u0434\u0456\u0457 \u0454 **\u043d\u0430\u0439\u0433\u043b\u0438\u0431\u0448\u0438\u0439** \u0432\u043a\u043b\u0430\u0434\u0435\u043d\u0438\u0439 \u0435\u043b\u0435\u043c\u0435\u043d\u0442. \u0417\u0443\u043f\u0438\u043d\u0438\u0442\u0438 \u043f\u043e\u0448\u0438\u0440\u0435\u043d\u043d\u044f \u043f\u043e\u0434\u0456\u0439 \u043c\u043e\u0436\u043d\u0430 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e `event.stopPropagation`","id":30,"options":["\u0417\u043e\u0432\u043d\u0456\u0448\u043d\u0456\u0439 `div`","\u0412\u043d\u0443\u0442\u0440\u0456\u0448\u043d\u0456\u0439 `div`","`button`","\u041c\u0430\u0441\u0438\u0432 \u0437 \u0443\u0441\u0456\u043c\u0430 \u0432\u043a\u043b\u0430\u0434\u0435\u043d\u0438\u043c\u0438 \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 `event.target` \u043f\u0456\u0441\u043b\u044f \u043a\u043b\u0456\u043a\u0430 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"\u041f\u0456\u0441\u043b\u044f \u043a\u043b\u0456\u043a\u0430 \u043f\u043e `p` \u0431\u0443\u0434\u0435 \u0432\u0438\u0432\u0435\u0434\u0435\u043d\u043e `p` \u0442\u0430 `div`. \u0423 \u0446\u0438\u043a\u043b\u0456 \u0436\u0438\u0442\u0442\u044f \u043f\u043e\u0434\u0456\u0457 \u0454 \u0442\u0440\u0438 \u0444\u0430\u0437\u0438: **\u0437\u0430\u0445\u043e\u043f\u043b\u0435\u043d\u043d\u044f**, **\u043c\u0435\u0442\u0430** \u0456 **\u0441\u043f\u043b\u0438\u0432\u0430\u043d\u043d\u044f**. \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043e\u0431\u0440\u043e\u0431\u043d\u0438\u043a\u0438 \u043f\u043e\u0434\u0456\u0439 \u0432\u0438\u043a\u043e\u043d\u0443\u044e\u0442\u044c\u0441\u044f \u043d\u0430 \u0444\u0430\u0437\u0456 \u0441\u043f\u043b\u0438\u0432\u0430\u043d\u043d\u044f (\u044f\u043a\u0449\u043e \u043d\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `useCapture` \u0432 `true`). \u0421\u043f\u043b\u0438\u0432\u0430\u043d\u043d\u044f \u0439\u0434\u0435 \u0437 \u043d\u0430\u0439\u0433\u043b\u0438\u0431\u0448\u043e\u0433\u043e \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432\u0433\u043e\u0440\u0443.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456 \u043f\u0456\u0441\u043b\u044f \u043a\u043b\u0456\u043a\u0430 \u043f\u043e \u043f\u0430\u0440\u0430\u0433\u0440\u0430\u0444\u0443?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"\u0412 \u043e\u0431\u043e\u0445 \u0432\u0438\u043f\u0430\u0434\u043a\u0430\u0445 \u043c\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0454\u043c\u043e \u043e\u0431\'\u0454\u043a\u0442, \u043d\u0430 \u044f\u043a\u0438\u0439 \u0431\u0443\u0434\u0435 \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 `this`. \u0410\u043b\u0435 `.call` \u0432\u0438\u043a\u043e\u043d\u0443\u0454\u0442\u044c\u0441\u044f _\u0432\u0456\u0434\u0440\u0430\u0437\u0443 \u0436_!\\n\\n`.bind` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 _\u043a\u043e\u043f\u0456\u044e_ \u0444\u0443\u043d\u043a\u0446\u0456\u0457, \u0430\u043b\u0435 \u0437 \u043f\u0440\u0438\u0432\'\u044f\u0437\u0430\u043d\u0438\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043e\u043c. \u0412\u043e\u043d\u0430 \u043d\u0435 \u0432\u0438\u043a\u043e\u043d\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0435\u0433\u0430\u0439\u043d\u043e.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"\u0424\u0443\u043d\u043a\u0446\u0456\u044f `sayHi` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u0449\u043e \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454\u0442\u044c\u0441\u044f \u0437 _\u043d\u0435\u0433\u0430\u0439\u043d\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u043e\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u0438\u0440\u0430\u0437\u0430_ (IIFE). \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0454 `0` \u0442\u0438\u043f\u0443 `\\"number\\"`.\\n\\n\u0414\u043b\u044f \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457: \u0432 JS 7 \u0432\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0445 \u0442\u0438\u043f\u0456\u0432: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, \u0442\u0430 `bigint`. `\\"Function\\"` \u043d\u0435 \u0454 \u043e\u043a\u0440\u0435\u043c\u0438\u043c \u0442\u0438\u043f\u043e\u043c, \u0442\u043e\u043c\u0443 \u0449\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0454 \u043e\u0431\'\u0454\u043a\u0442\u0430\u043c\u0438 \u0442\u0438\u043f\u0443 `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u042f\u043a\u0438\u043c \u0431\u0443\u0434\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"\u0404 \u0442\u0456\u043b\u044c\u043a\u0438 \u0448\u0456\u0441\u0442\u044c \\"\u043f\u043e\u043c\u0438\u043b\u043a\u043e\u0432\u0438\u0445\\" \u0437\u043d\u0430\u0447\u0435\u043d\u044c:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (\u043f\u043e\u0440\u043e\u0436\u043d\u0456\u0439 \u0440\u044f\u0434\u043e\u043a)\\n- `false`\\n\\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u0439, \u0442\u0430\u043a\u0456 \u044f\u043a new `Number` \u0442\u0430 `new Boolean` \u0454 \\"\u0456\u0441\u0442\u0438\u043d\u043d\u0438\u043c\u0438\\".","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","\u0412\u0441\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f."],"question":"\u042f\u043a\u0456 \u0437 \u0446\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u044c \u0454 \\"\u043f\u043e\u043c\u0438\u043b\u043a\u043e\u0432\u0438\u043c\u0438\\"?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `\\"number\\"`.\\n`typeof \\"number\\"` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"\u041a\u043e\u043b\u0438 \u0432 \u043c\u0430\u0441\u0438\u0432 \u0434\u043e\u0434\u0430\u0454\u0442\u044c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0435 \u0432\u0438\u0445\u043e\u0434\u0438\u0442\u044c \u0437\u0430 \u043c\u0435\u0436\u0456 \u0434\u043e\u0432\u0436\u0438\u043d\u0438 \u043c\u0430\u0441\u0438\u0432\u0443, JavaScript \u0441\u0442\u0432\u043e\u0440\u044e\u0454 \u0442\u0430\u043a \u0437\u0432\u0430\u043d\u0456 \\"\u043f\u043e\u0440\u043e\u0436\u043d\u0456 \u043a\u043b\u0456\u0442\u0438\u043d\u043a\u0438\\". \u041d\u0430\u0441\u043f\u0440\u0430\u0432\u0434\u0456 \u0432\u043e\u043d\u0438 \u043c\u0430\u044e\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `undefined`, \u0430\u043b\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456 \u0432\u0438\u0432\u043e\u0434\u044f\u0442\u044c\u0441\u044f \u0442\u0430\u043a:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\n\u0432 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456 \u0432\u0456\u0434 \u043c\u0456\u0441\u0446\u044f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f (\u043c\u043e\u0436\u0435 \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0442\u0438\u0441\u044f \u0434\u043b\u044f \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0456\u0432, Node, \u0456 \u0442.\u0434.).","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"\u0411\u043b\u043e\u043a `catch` \u043e\u0442\u0440\u0438\u043c\u0443\u0454 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `x`. \u0426\u0435 \u043d\u0435 \u0442\u043e\u0439 \u0436\u0435 `x`, \u044f\u043a\u0438\u0439 \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0432 \u044f\u043a\u043e\u0441\u0442\u0456 \u0437\u043c\u0456\u043d\u043d\u043e\u0457 \u043f\u0435\u0440\u0435\u0434 \u0440\u044f\u0434\u043a\u043e\u043c `try`.\\n\\n\u041f\u043e\u0442\u0456\u043c \u043c\u0438 \u043f\u0440\u0438\u0441\u0432\u043e\u044e\u0454\u043c\u043e \u0434\u0430\u043d\u043e\u043c\u0443 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f `1` \u0442\u0430 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454\u043c\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u0437\u043c\u0456\u043d\u043d\u043e\u0457 `y`. \u041f\u043e\u0442\u0456\u043c \u0432\u0438\u0432\u043e\u0434\u0438\u043c\u043e \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0443 `x`, \u0449\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `1`.\\n\\n\u0417\u0430 \u043c\u0435\u0436\u0430\u043c\u0438 \u0431\u043b\u043e\u043a\u0443 `catch` \u0437\u043c\u0456\u043d\u043d\u0430 `x` \u0432\u0441\u0435 \u0449\u0435 `undefined`, \u0430 `y` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `2`. \u041a\u043e\u043b\u0438 \u043c\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u043c\u043e` console.log(x)` \u0437\u0430 \u043c\u0435\u0436\u0430\u043c\u0438 \u0431\u043b\u043e\u043a\u0443 `catch`, \u0446\u0435\u0439 \u0432\u0438\u043a\u043b\u0438\u043a \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `undefined`, \u0430 `y` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"explanation":"\u0412 JavaScript \u0454 \u0442\u0456\u043b\u044c\u043a\u0438 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0438 \u0456 \u043e\u0431\'\u0454\u043a\u0442\u0438.\\n\\n\u0422\u0438\u043f\u0438 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0456\u0432: `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, \u0442\u0430 `symbol`.\\n\\n\u0412\u0456\u0434\u043c\u0456\u043d\u043d\u0456\u0441\u0442\u044e \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0443 \u0432\u0456\u0434 \u043e\u0431\'\u0454\u043a\u0442\u0430 \u0454 \u0442\u0435, \u0449\u043e \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0438 \u043d\u0435 \u043c\u0430\u044e\u0442\u044c \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0435\u0439 \u0430\u0431\u043e \u043c\u0435\u0442\u043e\u0434\u0456\u0432. \u041f\u0440\u043e\u0442\u0435, `\'foo\'.toUpperCase()` \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u044e\u0454\u0442\u044c\u0441\u044f \u0432 `\'FOO\'` \u0442\u0430 \u043d\u0435 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454 `TypeError`. \u0426\u0435 \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u0442\u043e\u043c\u0443, \u0449\u043e \u043f\u0440\u0438 \u0441\u043f\u0440\u043e\u0431\u0456 \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0456 \u0430\u0431\u043e \u043c\u0435\u0442\u043e\u0434\u0443 \u0443 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0443 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u044f\u0434\u043a\u0438), JavaScript \u043d\u0435\u044f\u0432\u043d\u043e \u043e\u0431\u0435\u0440\u043d\u0435 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432 \u043e\u0431\'\u0454\u043a\u0442\u043e\u043c, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 \u043e\u0434\u0438\u043d \u0437 \u043a\u043b\u0430\u0441\u0456\u0432-\u043e\u0431\u0433\u043e\u0440\u0442\u043e\u043a (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, `String`), \u0430 \u043f\u043e\u0442\u0456\u043c \u0432\u0456\u0434\u0440\u0430\u0437\u0443 \u0436 \u0437\u043d\u0438\u0449\u0438\u0442\u044c \u043e\u0431\u0433\u043e\u0440\u0442\u043a\u0443 \u043f\u0456\u0441\u043b\u044f \u043e\u0431\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044f \u0432\u0438\u0440\u0430\u0437\u0443. \u0412\u0441\u0456 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u0438 \u043a\u0440\u0456\u043c `null` \u0442\u0430 `undefined` \u043f\u043e\u0432\u043e\u0434\u044f\u0442\u044c\u0441\u044f \u0442\u0430\u043a\u0438\u043c \u0447\u0438\u043d\u043e\u043c.","id":38,"options":["\u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432 \u0430\u0431\u043e \u043e\u0431\'\u0454\u043a\u0442","\u0444\u0443\u043d\u043a\u0446\u0456\u044f \u0430\u0431\u043e \u043e\u0431\'\u0454\u043a\u0442","\u043f\u0438\u0442\u0430\u043d\u043d\u044f \u0437 \u043f\u0456\u0434\u0441\u0442\u0443\u043f\u043e\u043c! \u0442\u0456\u043b\u044c\u043a\u0438 \u043e\u0431\'\u0454\u043a\u0442\u0438","\u0447\u0438\u0441\u043b\u043e \u0430\u0431\u043e \u043e\u0431\'\u0454\u043a\u0442"],"question":"\u0412\u0441\u0435 \u0432 JavaScript \u0446\u0435..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` - \u043f\u043e\u0447\u0430\u0442\u043a\u043e\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u0437 \u044f\u043a\u0438\u043c \u0456\u043d\u0456\u0446\u0456\u0430\u043b\u0456\u0437\u0443\u0454\u0442\u044c\u0441\u044f \u0437\u043c\u0456\u043d\u043d\u0430 `acc`. \u041f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0448\u043e\u0433\u043e \u043f\u0440\u043e\u0445\u043e\u0434\u0443 `acc` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438\u043c\u0435 `[1,2]`, \u0430 `cur` \u0431\u0443\u0434\u0435 `[0,1]`. \u041f\u0456\u0441\u043b\u044f \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0456\u0457 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435 `[1, 2, 0, 1]`.\\n\\n\u041f\u043e\u0442\u0456\u043c `acc` \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 `[1, 2, 0, 1]`, \u0430 cur `[2, 3]`. \u041f\u0456\u0441\u043b\u044f \u0437\u043b\u0438\u0442\u0442\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u0454\u043c\u043e `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` \\"\u041d\u0415\u043f\u0440\u0430\u0432\u0434\u0438\u0432\u0438\u0439\\". `!null` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `true`. `!true` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `false`.\\n\\n`\\"\\"` \\"\u041d\u0415\u043f\u0440\u0430\u0432\u0434\u0438\u0432\u0438\u0439\\". `!\\"\\"` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `true`. `!true` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `false`.\\n\\n`1` \\"\u043f\u0440\u0430\u0432\u0434\u0438\u0432\u0438\u0439\\". `!1` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `false`. `!false` \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u0429\u043e \u0431\u0443\u0434\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0456?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"\u0426\u0435\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u0439 id, \u044f\u043a\u0438\u0439 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043e\u0447\u0438\u0449\u0435\u043d\u043d\u044f \u0456\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0443 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0444\u0443\u043d\u043a\u0446\u0456\u0457 `clearInterval()`.","id":41,"options":["\u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u0439 id","\u0432\u043a\u0430\u0437\u0430\u043d\u0443 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043c\u0456\u043b\u0456\u0441\u0435\u043a\u0443\u043d\u0434","\u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u044e","`undefined`"],"question":"\u0429\u043e \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u043c\u0435\u0442\u043e\u0434 `setInterval`?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"\u0420\u044f\u0434\u043e\u043a \u0454 \u0456\u0442\u0435\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u044e \u0441\u0443\u0442\u043d\u0456\u0441\u0442\u044e. \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u0448\u0438\u0440\u0435\u043d\u043d\u044f \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u044e\u0454 \u043a\u043e\u0436\u0435\u043d \u0441\u0438\u043c\u0432\u043e\u043b \u0432 \u043e\u043a\u0440\u0435\u043c\u0438\u0439 \u0435\u043b\u0435\u043c\u0435\u043d\u0442.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"What does this return?"}],"locale":"ua-UA"},{"isRTL":false,"language":"\ud83c\uddfb\ud83c\uddf3 Ti\u1ebfng Vi\u1ec7t","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Trong h\xe0m ch\xfang ta \u0111\xe3 khai b\xe1o bi\u1ebfn `name` v\u1edbi `var`. \u0110i\u1ec1u \u0111\xf3 c\xf3 ngh\u0129a l\xe0 bi\u1ebfn n\xe0y s\u1ebd \u0111\u01b0\u1ee3c hoisted (m\u1ed9t v\xf9ng nh\u1edb s\u1ebd \u0111\u01b0\u1ee3c set up khi bi\u1ebfn \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o) v\u1edbi gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh l\xe0 `undefined`, cho t\u1edbi khi ch\xfang ta th\u1ef1c s\u1ef1 \u0111\u1ecbnh ngh\u0129a bi\u1ebfn \u0111\xf3. Trong h\xe0m n\xe0y, ch\xfang ta ch\u01b0a h\u1ec1 \u0111\u1ecbnh ngh\u0129a bi\u1ebfn `name` t\u1ea1i d\xf2ng m\xe0 ta log ra, v\u1eady n\xean gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh c\u1ee7a n\xf3 v\u1eabn l\xe0 `undefined`.\\n\\nC\xe1c bi\u1ebfn \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi keyword `let` (v\xe0 `const`) c\u0169ng \u0111\u01b0\u1ee3c hoisted nh\u01b0ng kh\xf4ng gi\u1ed1ng nh\u01b0 `var`, ch\xfang kh\xf4ng \u0111\u01b0\u1ee3c <i>kh\u1edfi t\u1ea1o</i>. Ch\xfang ta s\u1ebd kh\xf4ng th\u1ec3 truy c\u1eadp ch\xfang cho t\u1edbi khi ch\xfang ta khai b\xe1o (kh\u1edfi t\u1ea1o) ch\xfang. Ng\u01b0\u1eddi ta g\u1ecdi \u0111\xf3 l\xe0 \\"temporal dead zone\\". Khi ta truy c\u1eadp \u0111\u1ebfn m\u1ed9t gi\xe1 tr\u1ecb tr\u01b0\u1edbc khi ch\xfang \u0111\u01b0\u1ee3c khai b\xe1o, JavaScript s\u1ebd throws m\u1ed9t `ReferenceError`.","id":0,"options":["`Lydia` v\xe0 `undefined`","`Lydia` v\xe0 `ReferenceError`","`ReferenceError` v\xe0 `21`","`undefined` v\xe0 `ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"B\u1edfi v\xec event queue trong JavaScript, h\xe0m `setTimeout` callback s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi _sau khi_ v\xf2ng l\u1eb7p \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n. B\u1eddi v\xec bi\u1ebfn `i` trong v\xf2ng l\u1eb7p \u0111\u1ea7u ti\xean \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `var`, n\xean n\xf3 s\u1ebd l\xe0 m\u1ed9t bi\u1ebfn global. Trong su\u1ed1t v\xf2ng l\u1eb7p, m\u1ed7i l\u1ea7n ch\xfang ta t\u0103ng gi\xe1 tr\u1ecb c\u1ee7a `i` l\xean `1`, s\u1eed d\u1ee5ng ph\xe9p to\xe1n `++`. Cho t\u1edbi khi callback `setTimeout` \u0111\u01b0\u1ee3c g\u1ecdi, gi\xe1 tr\u1ecb c\u1ee7a `i` \u0111\xe3 tr\u1edf th\xe0nh `3` r\u1ed3i.\\n\\nTrong v\xf2ng l\u1eb7p th\u1ee9 2, bi\u1ebfn `i` \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `let`, c\xf3 ngh\u0129a n\xf3 l\xe0 m\u1ed9t bi\u1ebfn block-scoped (block l\xe0 nh\u1eefng g\xec \u0111\u01b0\u1ee3c vi\u1ebft b\xean trong c\u1eb7p ngo\u1eb7c `{ }`). T\u1ea1i m\u1ed7i v\xf2ng l\u1eb7p, `i` s\u1ebd l\xe0 m\u1ed9t bi\u1ebfn m\u1edbi c\xf3 m\u1ed9t gi\xe1 tr\u1ecb m\u1edbi, v\xe0 gi\xe1 tr\u1ecb \u0111\xf3 c\xf3 scope l\xe0 b\xean trong v\xf2ng l\u1eb7p m\xe0 th\xf4i.","id":1,"options":["`0 1 2` and `0 1 2`","`0 1 2` and `3 3 3`","`3 3 3` and `0 1 2`"],"question":"Output s\u1ebd l\xe0 g\xec?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"Ch\xfa \xfd r\u1eb1ng gi\xe1 tr\u1ecb `diameter` l\xe0 m\u1ed9t h\xe0m th\xf4ng th\u01b0\u1eddng, c\xf2n `perimeter` l\xe0 m\u1ed9t _arrow function_.\\n\\nKh\xf4ng gi\u1ed1ng nh\u01b0 h\xe0m th\xf4ng th\u01b0\u1eddng, v\u1edbi _arrow function_, bi\u1ebfn`this` s\u1ebd tr\u1ecf t\u1edbi surrounding scope! C\xf3 ngh\u0129a l\xe0 khi ch\xfang ta g\u1ecdi `perimeter`, n\xf3 s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c g\u1ecdi b\u1edfi shape object, m\xe0 n\xf3 \u0111\u01b0\u1ee3c g\u1ecdi b\u1edfi object n\xe0o \u0111\xf3 t\u1ea1i surrounding scope (v\xed d\u1ee5 `window` ch\u1eb3ng h\u1ea1n).\\n\\nKhi kh\xf4ng c\xf3 gi\xe1 tr\u1ecb `radius` t\u1ea1i object \u0111\xf3, n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `undefined`.","id":2,"options":["`20` and `62.83185307179586`","`20` and `NaN`","`20` and `63`","`NaN` and `63`"],"question":"Output s\u1ebd l\xe0 g\xec?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"Ph\xe9p to\xe1n c\u1ed9ng `+` s\u1ebd convert m\u1ed9t to\xe1n h\u1ea1ng sang d\u1ea1ng number. `true` l\xe0 `1`, v\xe0 `false` is `0`.\\n\\nChu\u1ed7i `\'Lydia\'` l\xe0 m\u1ed9t _truthy value_. \u0110i\u1ec1u ch\xfang ta th\u1eadt s\u1ef1 \u0111ang h\u1ecfi ch\xednh l\xe0  \\"c\xf3 ph\u1ea3i m\u1ed9t gi\xe1 tr\u1ecb truthy l\xe0 falsy?\\". R\xf5 r\xe0ng c\xe2u tr\u1ea3 l\u1eddi l\xe0 `false` r\u1ed3i.","id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"Trong JavaScript th\xec t\u1ea5t c\u1ea3 keys c\u1ee7a c\xe1c object \u0111\u1ec1u l\xe0 string (ngo\u1ea1i tr\u1eeb khi n\xf3 l\xe0 m\u1ed9t Symbol). D\xf9 ch\xfang ta kh\xf4ng vi\u1ebft ch\xfang nh\u01b0 m\u1ed9t string, v\u1ec1 c\u01a1 b\u1ea3n ch\xfang s\u1ebd lu\xf4n \u0111\u01b0\u1ee3c chuy\u1ec3n sang d\u1ea1ng string.\\n\\nJavaScript th\xf4ng d\u1ecbch (hay unboxes) t\u1eebng c\xe2u l\u1ec7nh. Khi ch\xfang ta s\u1eed d\u1ee5ng c\u1eb7p d\u1ea5u ngo\u1eb7c `[]`, n\xf3 s\u1ebd t\xecm ki\u1ebfm d\u1ea5u m\u1edf ngo\u1eb7c \u0111\u1ea7u ti\xean `[`, v\xe0 s\u1ebd ti\u1ebfp t\u1ee5c t\xecm ki\u1ebfm cho t\u1edbi khi g\u1eb7p d\u1ea5u \u0111\xf3ng ngo\u1eb7c `]`. Ch\u1ec9 khi \u0111\xf3 th\xec c\xe2u l\u1ec7nh m\u1edbi \u0111\u01b0\u1ee3c th\u1ef1c thi.\\n\\n`mouse[bird.size]`: Gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean `bird.size` l\xe0 `\\"small\\"`. `mouse[\\"small\\"]` s\u1ebd tr\u1ea3 v\u1ec1 `true`\\n\\nTuy nhi\xean, khi ch\xfang ta s\u1eed d\u1ee5ng d\u1ea5u ch\u1ea5m `.`, \u0111i\u1ec1u tr\xean kh\xf4ng c\xf2n \u0111\xfang n\u1eefa. `mouse` kh\xf4ng h\u1ec1 c\xf3 key n\xe0o t\xean l\xe0 `bird`, c\xf3 ngh\u0129a `mouse.bird` s\u1ebd l\xe0 `undefined`. Sau \u0111\xf3 ch\xfang ta g\u1ecdi `size` s\u1eed d\u1ee5ng ch\u1ea5m `.`: `mouse.bird.size`. V\xec  `mouse.bird` l\xe0 `undefined`, l\u1eddi g\u1ecdi s\u1ebd tr\u1edf th\xe0nh `undefined.size`. \u0110\xe2y l\xe0 m\u1ed9t l\u1eddi g\u1ecdi kh\xf4ng h\u1ee3p l\u1ec7, n\xf3 s\u1ebd throw ra m\u1ed9t l\u1ed7i ki\u1ec3u nh\u01b0 `Cannot read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size` kh\xf4ng h\u1ee3p l\u1ec7","`mouse[bird.size]` kh\xf4ng h\u1ee3p l\u1ec7","`mouse[bird[\\"size\\"]]` kh\xf4ng h\u1ee3p l\u1ec7","T\u1ea5t c\u1ea3 \u0111\u1ec1u h\u1ee3p l\u1ec7"],"question":"C\xe1i n\xe0o \u0111\xfang?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"Trong JavaScript, t\u1ea5t c\u1ea3 c\xe1c object s\u1ebd \u0111\u01b0\u1ee3c _tham chi\u1ebfu_ khi ch\xfang \u0111\u01b0\u1ee3c g\xe1n _b\u1eb1ng_wwwww  m\u1ed9t gi\xe1 tr\u1ecb kh\xe1c.\\n\\n\u0110\u1ea7u ti\xean, gi\xe1 tr\u1ecb `c` c\xf3 gi\xe1 tr\u1ecb l\xe0 m\u1ed9t object. Sau \u0111\xf3, ch\xfang ta g\xe1n `d` tham chi\u1ebfu t\u1edbi object m\xe0 `c` tr\u1ecf t\u1edbi.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nKhi ta thay \u0111\u1ed5i gi\xe1 tr\u1ecb c\u1ee7a object, t\u1ea5t c\u1ea3 c\xe1c bi\u1ebfn tham chi\u1ebfu c\u0169ng \u0111\u1ec1u thay \u0111\u1ed5i gi\xe1 tr\u1ecb theo.","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` l\xe0 m\u1ed9t h\xe0m built-in constructor. M\u1eb7c d\xf9 n\xf3 tr\xf4ng c\xf3 v\u1ebb gi\u1ed1ng nh\u01b0 l\xe0 m\u1ed9t s\u1ed1, nh\u01b0ng kh\xf4ng ph\u1ea3i: n\xf3 th\u1ef1c s\u1ef1 l\xe0 m\u1ed9t object v\u1edbi h\xe0ng t\xe1 nh\u1eefng th\xf4ng s\u1ed1 kh\xe1c n\u1eefa.\\n\\nKhi ta s\u1eed d\u1ee5ng ph\xe9p so s\xe1nh `==`, n\xf3 \u0111\u01a1n thu\u1ea7n ch\u1ec9 ki\u1ec3m tra xem 2 bi\u1ebfn c\xf3 _gi\xe1 tr\u1ecb_ gi\u1ed1ng nhau. Ch\xfang \u0111\u1ec1u c\xf3 gi\xe1 tr\u1ecb l\xe0 `3`, v\u1eady n\xean ph\xe9p to\xe1n \u0111\u1ea7u tr\u1ea3 v\u1ec1 `true`.\\n\\nTuy nhi\xean khi s\u1eed d\u1ee5ng ph\xe9p so s\xe1nh `===`, c\u1ea3 _gi\xe1 tr\u1ecb_ v\xe0 _ki\u1ec3u_ \u0111\u1ec1u ph\u1ea3i gi\u1ed1ng nhau. R\xf5 r\xe0ng: `new Number()` kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t s\u1ed1, n\xf3 l\xe0 m\u1ed9t **object**. C\u1ea3 2 ph\xe9p to\xe1n sau \u0111\u1ec1u tr\u1ea3 v\u1ec1 `false.`","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"H\xe0m `colorChange` l\xe0 m\u1ed9t h\xe0m static (h\xe0m t\u0129nh). H\xe0m static \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 ch\u1ec9 \u0111\u1ec3 t\u1ed3n t\u1ea1i \u1edf m\u1ee9c class, v\xe0 kh\xf4ng th\u1ec3 truy\u1ec1n cho b\u1ea5t c\u1ee9 instance con n\xe0o. V\xec `freddie` l\xe0 m\u1ed9t instance con, h\xe0m static n\xe0y s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c truy\u1ec1n xu\u1ed1ng, v\xe0 do \u0111\xf3 kh\xf4ng th\u1ec3 g\u1ecdi \u0111\u01b0\u1ee3c t\u1ea1i `freddie` instance: n\xf3 s\u1ebd throw ra m\u1ed9t `TypeError`.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // L\u1ed7i \u0111\xe1nh m\xe1y!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"N\xf3 s\u1ebd log ra object `greetign`, b\u1edfi v\xec ch\xfang ta v\u1eeba kh\u1edfi t\u1ea1o m\u1ed9t global object! Khi ch\xfang ta \u0111\xe1nh m\xe1y nh\u1ea7m `greeting` th\xe0nh `greetign`, tr\xecnh th\xf4ng d\u1ecbch c\u1ee7a JS s\u1ebd coi n\xf3 nh\u01b0 l\xe0 `global.greetign = {}` (hay `window.greetign = {}` n\u1ebfu ch\u1ea1y tr\xean browser).\\n\\n\u0110\u1ec3 tr\xe1nh \u0111i\u1ec1u n\xe0y ch\xfang ta c\xf3 th\u1ec3 s\u1eed d\u1ee5ng `\\"use strict\\"`. N\xf3 s\u1ebd \u0111\u1ea3m b\u1ea3o r\u1eb3ng c\xe1c bi\u1ebfn \u0111\u1ec1u ph\u1ea3i \u0111\u01b0\u1ee3c khai b\xe1o tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"\u0110i\u1ec1u n\xe0y l\xe0 c\xf3 th\u1ec3 v\u1edbi Javascript, b\u1edfi v\xec `function` c\u0169ng ch\u1ec9 l\xe0 `object` m\xe0 th\xf4i! (M\u1ecdi primitive types \u0111\u1ec1u l\xe0 object)\\n\\nFunction l\xe0 m\u1ed9t object \u0111\u1eb7c bi\u1ec7t. Ph\u1ea7n code m\xe0 b\u1ea1n vi\u1ebft kh\xf4ng ph\u1ea3i l\xe0 function th\u1ef1c t\u1ebf \u0111\xe2u. Function \u1edf \u0111\xe2y ch\xednh l\xe0 m\u1ed9t object v\u1edbi c\xe1c thu\u1ed9c t\xednh. V\xe0 c\xe1c thu\u1ed9c t\xednh n\xe0y c\xf3 th\u1ec3 g\u1ecdi \u0111\u01b0\u1ee3c.","id":9,"options":["Ho\xe0n to\xe0n kh\xf4ng c\xf3 v\u1ea5n \u0111\u1ec1 g\xec!","`SyntaxError`. B\u1ea1n kh\xf4ng th\u1ec3 th\xeam thu\u1ed9c t\xednh theo c\xe1ch n\xe0y.","`undefined`","`ReferenceError`"],"question":"\u0110i\u1ec1u g\xec s\u1ebd x\u1ea3y ra khi ch\xfang ta l\xe0m th\u1ebf n\xe0y?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Ch\xfang ta kh\xf4ng th\u1ec3 add th\xeam m\u1ed9t thu\u1ed9c t\xednh cho m\u1ed9t constructor gi\u1ed1ng nh\u01b0 m\u1ed9t object th\xf4ng th\u01b0\u1eddng. N\u1ebfu b\u1ea1n mu\u1ed1n add th\xeam thu\u1ed9c t\xednh n\xe0o \u0111\xf3 cho t\u1ea5t c\u1ea3 c\xe1c object m\u1ed9t l\u1ea7n, b\u1ea1n ph\u1ea3i d\xf9ng `prototype`. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y c\u0169ng v\u1eady.\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nkhi n\xe0y `member.getFullName()` s\u1ebd ho\u1ea1t \u0111\u1ed9ng. T\u1ea1i sao n\xean l\xe0m v\u1eady? H\xe3y th\u1eed th\xeam ch\xfang tr\u1ef1c ti\u1ebfp v\xe0o constructor xem sao. Kh\xf4ng ph\u1ea3i m\u1ecdi instance `Person` \u0111\u1ec1u c\u1ea7n ph\u01b0\u01a1ng th\u1ee9c n\xe0y. N\xf3 s\u1ebd d\u1eabn t\u1edbi vi\u1ec7c l\xe3ng ph\xed r\u1ea5t nhi\u1ec1u b\u1ed9 nh\u1edb, khi ch\xfang \u0111\u1ec1u ph\u1ea3i l\u01b0u tr\u1eef thu\u1ed9c t\xednh n\xe0y cho m\u1ed7i instance. Thay v\xec th\u1ebf, n\u1ebfu ta ch\u1ec9 th\xeam ch\xfang v\xe0o `prototype`, ta s\u1ebd ch\u1ec9 t\u1ed1n b\u1ed9 nh\u1edb _m\u1ed9t l\u1ea7n_ m\xe0 th\xf4i, v\xe0 m\u1ecdi object kh\xe1c \u0111\u1ec1u c\xf3 th\u1ec3 truy c\u1eadp \u0111\u1ebfn n\xf3!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"V\u1edbi `sarah`, ch\xfang ta khai b\xe1o m\xe0 kh\xf4ng c\xf3 t\u1eeb kh\xf3a `new`. Khi s\u1eed d\u1ee5ng `new`, n\xf3 s\u1ebd tr\u1ecf \u0111\u1ebfn m\u1ed9t object m\u1edbi m\xe0 ta v\u1eeba t\u1ea1o ra. Tuy nhi\xean n\u1ebfu ta kh\xf4ng d\xf9ng `new` th\xec n\xf3 s\u1ebd tr\u1ecf t\u1edbi **global object**!\\n\\nCh\xfang ta cho r\u1eb1ng `this.firstName` l\xe0 `\\"Sarah\\"` v\xe0 `this.lastName` l\xe0 `\\"Smith\\"`. Tuy nhi\xean s\u1ef1 th\u1ef1c l\xe0 ch\xfang ta \u0111\xe3 \u0111\u1ecbnh ngh\u0129a `global.firstName = \'Sarah\'` v\xe0 `global.lastName = \'Smith\'`. B\u1ea3n th\xe2n bi\u1ebfn `sarah` v\u1eabn l\xe0 `undefined`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` v\xe0 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` v\xe0 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` v\xe0 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` v\xe0 `ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"explanation":"Trong **capturing** phase, event \u0111\u01b0\u1ee3c truy\u1ec1n t\u1eeb c\xe1c ph\u1ea7n t\u1eed cha cho t\u1edbi ph\u1ea7n t\u1eed target. Sau khi t\u1edbi \u0111\u01b0\u1ee3c ph\u1ea7n t\u1eed **target** th\xec **bubbling** s\u1ebd b\u1eaft \u0111\u1ea7u.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"3 giai \u0111o\u1ea1n c\u1ee7a event propagation l\xe0 g\xec?"},{"answer":1,"explanation":"T\u1ea5t c\u1ea3 c\xe1c object \u0111\u1ec1u c\xf3 prototypes, ngo\u1ea1i tr\u1eeb **base object**. Object base c\xf3 th\u1ec3 truy c\u1eadp \u0111\u1ebfn v\xe0i methods v\xe0 properties, v\xed d\u1ee5 nh\u01b0 `.toString`. \u0110\xf3 l\xe0 l\xfd do t\u1ea1i sao ch\xfang ta c\xf3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c c\xe1c built-in methods trong JavaScript! T\u1ea5t c\u1ea3 c\xe1c ph\u01b0\u01a1ng th\u1ee9c \u0111\xf3 \u0111\u1ec1u c\xf3 trong prototype. M\u1eb7c d\xf9 JavaScript kh\xf4ng th\u1ec3 t\xecm th\u1ea5y ch\xfang trong object m\u1ed9t c\xe1ch tr\u1ef1c ti\u1ebfp, n\xf3 s\u1ebd \u0111\u01b0\u1ee3c truy\u1ec1n xu\u1ed1ng th\xf4ng qua prototype chain v\xe0 xu\u1ed1ng t\u1edbi object, t\u1ea1i \u0111\xe2y ch\xfang ta c\xf3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c n\xf3.","id":13,"options":["\u0111\xfang","sai"],"question":"T\u1ea5t c\u1ea3 c\xe1c object \u0111\u1ec1u c\xf3 prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript l\xe0 m\u1ed9t ng\xf4n ng\u1eef **dynamically typed**: ch\xfang ta kh\xf4ng khai b\xe1o ki\u1ec3u d\u1eef li\u1ec7u khi khai b\xe1o bi\u1ebfn. Gi\xe1 tr\u1ecb c\xf3 th\u1ec3 b\u1ecb t\u1ef1 \u0111\u1ed9ng convert sang m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u kh\xe1c m\xe0 ta kh\xf4ng h\u1ec1 hay bi\u1ebft, \u0111i\u1ec1u n\xe0y \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 _implicit type coercion_. **Coercion** c\xf3 ngh\u0129a l\xe0 convert t\u1eeb ki\u1ec3u n\xe0y sang ki\u1ec3u kh\xe1c.\\n\\nTrong v\xed d\u1ee5 n\xe0y, JavaScript s\u1ebd convert s\u1ed1 `1` sang d\u1ea1ng string. M\u1ed7i khi ta c\u1ed9ng m\u1ed9t s\u1ed1 (`1`) v\u1edbi m\u1ed9t string (`\'2\'`), s\u1ed1 s\u1ebd lu\xf4n \u0111\u01b0\u1ee3c xem nh\u01b0 l\xe0 m\u1ed9t string. K\u1ebft qu\u1ea3 s\u1ebd l\xe0 m\u1ed9t ph\xe9p n\u1ed1i chu\u1ed7i gi\u1ed1ng nh\u01b0 `\\"Hello\\" + \\"World\\"`, v\u1eady n\xean `\\"1\\" + \\"2\\"` s\u1ebd tr\u1ea3 v\u1ec1 l\xe0 `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"Khi ph\xe9p to\xe1n `++` n\u1eb1m \u1edf **\u0111\u1eb1ng sau** (**postfix**):\\n\\n1. Tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb (tr\u1ea3 v\u1ec1 `0`)\\n2. T\u0103ng gi\xe1 tr\u1ecb l\xean (number gi\u1edd l\xe0 `1`)\\n\\nKhi ph\xe9p to\xe1n `++` n\u1eb1m \u1edf **\u0111\u1eb1ng tr\u01b0\u1edbc** (**prefix**):\\n\\n1. T\u0103ng gi\xe1 tr\u1ecb l\xean (number gi\u1edd l\xe0 `2`)\\n2. Tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb (tr\u1ea3 v\u1ec1 `2`)\\n\\nV\u1eady k\u1ebft qu\u1ea3 l\xe0 `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"N\u1ebfu b\u1ea1n d\xf9ng _tagged template literals_, gi\xe1 tr\u1ecb c\u1ee7a \u0111\u1ed1i s\u1ed1 \u0111\u1ea7u ti\xean lu\xf4n lu\xf4n l\xe0 m\u1ed9t m\u1ea3ng c\xe1c string. Nh\u1eefng \u0111\u1ed1i s\u1ed1 c\xf2n l\u1ea1i s\u1ebd l\u1ea5y gi\xe1 tr\u1ecb t\u1eeb bi\u1ec3u th\u1ee9c \u0111\u01b0a v\xe0o!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Khi test s\u1ef1 b\u1eb1ng nhau, c\xe1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n s\u1ebd so s\xe1nh _gi\xe1 tr\u1ecb_ c\u1ee7a ch\xfang, c\xf2n object th\xec so s\xe1nh _tham chi\u1ebfu_. JavaScript s\u1ebd ki\u1ec3m tra xem c\xe1c object \u0111\xf3 c\xf3 tr\u1ecf \u0111\u1ebfn nh\u1eefng v\xf9ng nh\u1edb gi\u1ed1ng nhau hay kh\xf4ng.\\n\\nHai object ch\xfang ta \u0111ang so s\xe1nh kh\xf4ng c\xf3 \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\xf3: object \u0111\u1ed1i s\u1ed1 tham chi\u1ebfu \u0111\u1ebfn m\u1ed9t v\xf9ng nh\u1edb kh\xe1c v\u1edbi object ch\xfang ta d\xf9ng \u0111\u1ec3 ki\u1ec3m tra s\u1ef1 b\u1eb1ng nhau.\\n\\n\u0110\xf3 l\xe0 l\xfd do t\u1ea1i sao c\u1ea3 `{ age: 18 } === { age: 18 }` v\xe0 `{ age: 18 } == { age: 18 }` \u0111\u1ec1u tr\u1ea3 v\u1ec1 `false`.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"_Spread operator_ (`...args`.) s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t m\u1ea3ng c\xe1c \u0111\u1ed1i s\u1ed1. M\u1ea3ng th\u1ef1c ch\u1ea5t l\xe0 m\u1ed9t object, v\u1eady n\xean `typeof args` s\u1ebd tr\u1ea3 v\u1ec1 `\\"object\\"`.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"V\u1edbi `\\"use strict\\"`, ch\xfang ta s\u1ebd \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c r\u1eb1ng ta s\u1ebd kh\xf4ng bao gi\u1edd khai b\xe1o bi\u1ebfn global m\u1ed9t c\xe1ch v\xf4 \xfd. T\u1ea1i \u0111\xe2y ch\xfang ta ch\u01b0a khai b\xe1o bi\u1ebfn `age`, v\xe0 khi d\xf9ng `\\"use strict\\"`, n\xf3 s\u1ebd throw ra m\u1ed9t _reference error_. N\u1ebfu nh\u01b0 kh\xf4ng d\xf9ng `\\"use strict\\"`, n\xf3 s\u1ebd v\u1eabn ho\u1ea1t \u0111\u1ed9ng, v\xec thu\u1ed9c t\xednh `age` s\u1ebd \u0111\u01b0\u1ee3c th\xeam v\xe0o global object.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` s\u1ebd \u0111\xe1nh gi\xe1 \u0111o\u1ea1n code b\xean trong string. N\u1ebfu n\xf3 l\xe0 m\u1ed9t bi\u1ec3u th\u1ee9c, gi\u1ed1ng nh\u01b0 trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, n\xf3 s\u1ebd t\xednh to\xe1n gi\xe1 tr\u1ecb \u0111\xf3. Bi\u1ec3u th\u1ee9c l\xe0 `10 * 10 + 5`, k\u1ebft qu\u1ea3 s\u1ebd l\xe0 `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"Gi\xe1 tr\u1ecb c\u1ee7a `sum` l\xe0 g\xec?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong `sessionStorage` s\u1ebd \u0111\u01b0\u1ee3c x\xf3a khi \u0111\xf3ng _tab_.\\n\\nN\u1ebfu ch\xfang ta d\xf9ng `localStorage`, data s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef m\xe3i m\xe3i, tr\u1eeb phi h\xe0m `localStorage.clear()` \u0111\u01b0\u1ee3c g\u1ecdi.","id":21,"options":["M\xe3i m\xe3i, d\u1eef li\u1ec7u s\u1ebd kh\xf4ng bao gi\u1edd m\u1ea5t.","Khi user \u0111\xf3ng tab l\u1ea1i.","Khi user kh\xf4ng ch\u1ec9 l\xe0 \u0111\xf3ng tab, m\xe0 \u0111\xf3ng browser l\u1ea1i.","Khi user t\u1eaft m\xe1y t\xednh \u0111i."],"question":"Bi\u1ebfn cool_secret s\u1ebd truy c\u1eadp \u0111\u01b0\u1ee3c trong bao l\xe2u?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"V\u1edbi t\u1eeb kh\xf3a `var` b\u1ea1n c\xf3 th\u1ec3 khai b\xe1o bao nhi\xeau bi\u1ebfn tr\xf9ng t\xean t\xf9y th\xedch. Bi\u1ebfn \u0111\xf3 s\u1ebd c\xf3 gi\xe1 tr\u1ecb l\xe0 l\u1ea7n cu\u1ed1i khai b\xe1o.\\n\\nB\u1ea1n kh\xf4ng th\u1ec3 l\xe0m \u0111i\u1ec1u t\u01b0\u01a1ng t\u1ef1 v\u1edbi `let` hay `const` v\xec ch\xfang l\xe0 _block-scoped_.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"T\u1ea5t c\u1ea3 c\xe1c keys c\u1ee7a object (ngo\u1ea1i tr\u1eeb Symbols) v\u1ec1 b\u1ea3n ch\u1ea5t \u0111\u1ec1u l\xe0 string, d\xf9 ch\xfang ta c\xf3 vi\u1ebft ch\xfang ra d\u1ea1ng string hay kh\xf4ng. N\xf3 l\xe0 l\xfd do t\u1ea1i sao `obj.hasOwnProperty(\'1\')` c\u0169ng tr\u1ea3 v\u1ec1 `true`.\\n\\nTuy nhi\xean \u0111i\u1ec1u \u0111\xf3 kh\xf4ng \u0111\xfang v\u1edbi `set`. Kh\xf4ng h\u1ec1 c\xf3 `\'1\'` trong set c\u1ee7a ch\xfang ta: `set.has(\'1\')` tr\u1ea3 v\u1ec1 `false`. C\xf3 s\u1ed1 `1` trong set, n\xean `set.has(1)` tr\u1ea3 v\u1ec1 `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"N\u1ebfu ch\xfang ta c\xf3 2 keys gi\u1ed1ng nhau, th\xec ch\xfang s\u1ebd b\u1ecb replace. N\xf3 s\u1ebd v\u1eabn n\u1eb1m \u1edf v\u1ecb tr\xed \u0111\u1ea7u ti\xean ch\xfang \u0111\u01b0\u1ee3c khai b\xe1o, nh\u01b0ng gi\xe1 tr\u1ecb th\xec s\u1ebd l\xe0 gi\xe1 tr\u1ecb l\u1ea7n cu\u1ed1i.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"explanation":"Ng\u1eef c\u1ea3nh th\u1ef1c thi c\u01a1 b\u1ea3n ch\xednh l\xe0 ng\u1eef c\u1ea3nh global: n\xf3 l\xe0 th\u1ee9 m\xe0 ch\xfang ta c\xf3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c \u1edf b\u1ea5t c\u1ee9 \u0111\xe2u trong code.","id":25,"options":["\u0111\xfang","sai","c\xf2n t\xf9y"],"question":"Ng\u1eef c\u1ea3nh th\u1ef1c thi global c\u1ee7a JavaScript t\u1ea1o ra 2 th\u1ee9 cho ch\xfang ta: global object, v\xe0 t\u1eeb kh\xf3a \\"this\\"."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"L\u1ec7nh `continue` s\u1ebd b\u1ecf qua m\u1ed9t v\xf2ng l\u1eb7p n\u1ebfu \u0111i\u1ec1u ki\u1ec7n c\u1ee7a n\xf3 l\xe0 `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` l\xe0 m\u1ed9t built-in constructor, c\xf3 ngh\u0129a l\xe0 ch\xfang ta c\xf3 th\u1ec3 th\xeam c\xe1c thu\u1ed9c t\xednh v\xe0o \u0111\xf3. Ta v\u1eeba th\xeam v\xe0o \u0111\xf3 m\u1ed9t thu\u1ed9c t\xednh. Ki\u1ec3u String c\u01a1 b\u1ea3n s\u1ebd \u0111\u01b0\u1ee3c convert sang d\u1ea1ng object b\u1edfi h\xe0m string prototype. V\xec th\u1ebf n\xean t\u1ea5t c\u1ea3 c\xe1c string object \u0111\u1ec1u c\xf3 th\u1ec3 truy c\u1eadp \u0111\u1ebfn h\xe0m `giveLydiaPizza` n\xe0y!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Object keys s\u1ebd t\u1ef1 \u0111\u1ed9ng \u0111\u01b0\u1ee3c convert sang d\u1ea1ng string. Ch\xfang ta \u0111ang set m\u1ed9t object nh\u01b0 l\xe0 m\u1ed9t key cho object `a`, v\u1edbi gi\xe1 tr\u1ecb l\xe0 `123`.\\n\\nTuy nhi\xean khi ta string h\xf3a m\u1ed9t object, n\xf3 s\u1ebd tr\u1edf th\xe0nh `\\"[object Object]\\"`. N\xean t\u1ea1i \u0111\xe2y ph\xe9p g\xe1n n\xe0y th\u1ef1c ch\u1ea5t ch\xednh l\xe0 `a[\\"object Object\\"] = 123`. Ph\xe9p g\xe1n ti\u1ebfp theo c\u0169ng gi\u1ed1ng h\u1ec7t v\u1eady. `c` l\xe0 m\u1ed9t object kh\xe1c m\xe0 ch\xfang ta \u0111ang string h\xf3a n\xf3. Theo \u0111\xf3, `a[\\"object Object\\"] = 456`.\\n\\nCu\u1ed1i c\xf9ng khi g\u1ecdi `a[b]`, th\u1ef1c ch\u1ea5t ch\xednh l\xe0 g\u1ecdi `a[\\"object Object\\"]`. Gi\xe1 tr\u1ecb c\u1ee7a n\xf3 l\xe0 `456`, n\xean tr\u1ea3 v\u1ec1 l\xe0 `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Ch\xfang ta c\xf3 m\u1ed9t h\xe0m `setTimeout` \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ea7u ti\xean. N\xean, n\xf3 s\u1ebd \u0111\u01b0\u1ee3c log ra cu\u1ed1i c\xf9ng.\\n\\n\u0110i\u1ec1u \u0111\xf3 b\u1edfi v\xec tr\xean browser, ch\xfang ta kh\xf4ng h\u1ec1 c\xf3 runtime engine, \u0111\u01a1n thu\u1ea7n ch\u1ec9 c\xf3 `WebAPI`. `WebAPI` cho ch\xfang ta m\u1ed9t h\xe0m `setTimeout`, ta h\xe3y v\xed d\u1ee5 n\xf3 tr\xean DOM.\\n\\nSau khi _callback_ \u0111\u01b0\u1ee3c g\u1eedi t\u1edbi WebAPI, b\u1ea3n th\xe2n h\xe0m `setTimeout` (nh\u01b0ng kh\xf4ng ph\u1ea3i callback nh\xe9!) s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a ra kh\u1ecfi stack.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nGi\u1edd \u0111\xe2y, `foo` \u0111\u01b0\u1ee3c g\u1ecdi, v\xe0 `\\"First\\"` \u0111\u01b0\u1ee3c log ra.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` \u0111\u01b0\u1ee3c \u0111\u01b0a ra kh\u1ecfi stack, v\xe0 `baz` \u0111\u01b0\u1ee3c g\u1ecdi. `\\"Third\\"` \u0111\u01b0\u1ee3c log ra.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI kh\xf4ng th\u1ec3 th\xeam th\u1ee9 g\xec \u0111\xf3 v\xe0o stack cho t\u1edbi khi n\xf3 \u0111\u01b0\u1ee3c s\u1eb5n s\xe0ng. Thay v\xe0o \u0111\xf3, n\xf3 \u0111\u1ea9y callback function \u0111\u1ebfn m\u1ed9t n\u01a1i g\u1ecdi l\xe0 _queue_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\u0110\xf3 ch\xednh l\xe0 n\u01a1i m\xe0 **event loop** l\xe0m vi\u1ec7c. M\u1ed9t **event loop** s\u1ebd quan s\xe1t stack v\xe0 task queue. N\u1ebfu stack tr\u1edf n\xean r\u1ed7ng, n\xf3 s\u1ebd l\u1ea5y gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean trong queue \u0111\u1ec3 \u0111\u01b0a ti\u1ebfp v\xe0o stack.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` \u0111\u01b0\u1ee3c g\u1ecdi, `\\"Second\\"` \u0111\u01b0\u1ee3c log ra, v\xe0 n\xf3 \u0111\u01b0\u1ee3c \u0111\u01b0a ra kh\u1ecfi stack.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"Ph\u1ea7n t\u1eed s\xe2u nh\u1ea5t trong c\xe1c ph\u1ea7n t\u1eed l\u1ed3ng nhau s\u1ebd l\xe0 target c\u1ee7a event. B\u1ea1n c\xf3 th\u1ec3 ng\u0103n vi\u1ec7c \u0111\xf3 l\u1ea1i b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng `event.stopPropagation`","id":30,"options":["Outer `div`","Inner `div`","`button`","M\u1ed9t m\u1ea3ng v\u1edbi to\xe0n b\u1ed9 c\xe1c ph\u1ea7n t\u1eed l\u1ed3ng nhau."],"question":"Gi\xe1 tr\u1ecb c\u1ee7a event.target l\xe0 g\xec khi click button?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"N\u1ebfu ta click v\xe0o `p`, ta s\u1ebd th\u1ea5y hai log: `p` v\xe0 `div`. Trong chu\u1ed7i event s\u1ebd c\xf3 3 phases: capturing, target, v\xe0 bubbling. M\u1eb7c \u0111\u1ecbnh th\xec event handlers s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n t\u1ea1i bubbling phase (tr\u1eeb phi ch\xfang ta khai b\xe1o `useCapture` l\xe0 `true`). Ch\xfang s\u1ebd \u0111i t\u1eeb ph\u1ea7n t\u1eed s\xe2u nh\u1ea5t ra \u0111\u1ebfn b\xean ngo\xe0i.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Khi b\u1ea1n click v\xe0o \u0111o\u1ea1n v\u0103n, gi\xe1 tr\u1ecb c\u1ee7a output s\u1ebd l\xe0 g\xec?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"V\u1edbi c\u1ea3 hai, ch\xfang ta c\xf3 th\u1ec3 \u0111\u01b0a v\xe0o object \u0111\u1ec3 s\u1eed d\u1ee5ng t\u1eeb kh\xf3a `this`. Tuy nhi\xean, `.call` c\xf3 ngh\u0129a l\xe0 _th\u1ef1c hi\u1ec7n ngay l\u1eadp t\u1ee9c_!\\n\\n`.bind.` tr\u1ea3 v\u1ec1 m\u1ed9t b\u1ea3n _copy_ c\u1ee7a function, v\u1edbi context k\xe8m theo! N\xf3 s\u1ebd kh\xf4ng th\u1ef1c hi\u1ec7n ngay l\u1eadp t\u1ee9c.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"`sayHi` function tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb c\u1ee7a m\u1ed9t _h\xe0m g\u1ecdi ngay l\u1eadp t\u1ee9c_ (immediately invoked function - IIFE). Function n\xe0y tr\u1ea3 v\u1ec1 `0`, ki\u1ec3u d\u1eef li\u1ec7u `\\"number\\"`.\\n\\nFYI: ch\u1ec9 c\xf3 7 ki\u1ec3u d\u1eef li\u1ec7u built-in: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, and `bigint`. `\\"function\\"` kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t ki\u1ec3u, m\xe0 l\xe0 objects, ki\u1ec3u d\u1eef li\u1ec7u l\xe0 `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Ch\u1ec9 c\xf3 6 gi\xe1 tr\u1ecb _falsy_:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (chu\u1ed7i r\u1ed7ng)\\n- `false`\\n\\nFunction constructors nh\u01b0 `new Number` v\xe0 `new Boolean` \u0111\u1ec1u l\xe0 _truthy_.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","T\u1ea5t c\u1ea3 \u0111\u1ec1u l\xe0 falsy"],"question":"Gi\xe1 tr\u1ecb n\xe0o trong c\xe1c gi\xe1 tr\u1ecb d\u01b0\u1edbi \u0111\xe2y l\xe0 falsy?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` tr\u1ea3 v\u1ec1 `\\"number\\"`.\\n`typeof \\"number\\"` tr\u1ea3 v\u1ec1 `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"M\u1ed7i khi ch\xfang ta set m\u1ed9t gi\xe1 tr\u1ecb cho m\u1ed9t ph\u1ea7n t\u1eed trong m\u1ea3ng m\xe0 v\u01b0\u1ee3t qu\xe1 \u0111\u1ed9 d\xe0i c\u1ee7a m\u1ea3ng, JavaScript s\u1ebd t\u1ea1o ra nh\u1eefng \\"empty slots\\". Ch\xfang s\u1ebd c\xf3 gi\xe1 tr\u1ecb l\xe0 `undefined`, nh\u01b0ng khi ghi ra th\xec ch\xfang ta s\u1ebd th\u1ea5y d\u1ea1ng:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\nph\u1ee5 thu\u1ed9c v\xe0o n\u01a1i m\xe0 ch\xfang ta ch\u1ea1y ch\xfang (c\xf3 th\u1ec3 kh\xe1c nhau t\xf9y m\xf4i tr\u01b0\u1eddng browser, node, etc.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"`catch` block nh\u1eadn v\u1ec1 gi\xe1 tr\u1ecb `x`. \u0110\xe2y kh\xf4ng ph\u1ea3i l\xe0 gi\xe1 tr\u1ecb `x` m\xe0 ta khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `let` \u1edf b\xean tr\xean. \u0110\xe2y l\xe0 bi\u1ebfn `x` trong _block-scoped_.\\n\\nTi\u1ebfp \u0111\xf3, ch\xfang ta set gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn block-scoped n\xe0y l\xe0 `1`, v\xe0 \u0111\u1ed3ng th\u1eddi c\u0169ng set gi\xe1 tr\u1ecb cho bi\u1ebfn `y`. Gi\u1edd \u0111\xe2y ch\xfang ta log ra gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn block-scoped variable `x`, b\u1eb1ng `1`.\\n\\nB\xean ngo\xe0i `catch` block, `x` v\u1eabn l\xe0 `undefined`, v\xe0 `y` l\xe0 `2`. Khi g\u1ecdi `console.log(x)` b\xean ngo\xe0i `catch` block, n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `undefined`, v\xe0 `y` tr\u1ea3 v\u1ec1 `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"explanation":"JavaScript ch\u1ec9 c\xf3 primitive types v\xe0 objects.\\n\\nPrimitive types l\xe0 `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, and `symbol`.\\n\\n\u0110i\u1ec3m kh\xe1c nhau gi\u1eefa primitive v\xe0 object ch\xednh l\xe0 primitives kh\xf4ng c\xf3 thu\u1ed9c t\xednh hay ph\u01b0\u01a1ng th\u1ee9c; tuy nhi\xean, ch\xfang ta \u0111\u1ec3 \xfd r\u1eb1ng l\xe0 `\'foo\'.toUpperCase()` s\u1ebd tr\u1ea3 v\u1ec1 `\'FOO\'` m\xe0 kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t `TypeError`. \u0110\xf3 l\xe0 b\u1edfi v\xec khi ch\xfang ta truy c\u1eadp c\xe1c thu\u1ed9c t\xednh hay ph\u01b0\u01a1ng th\u1ee9c c\u1ee7a m\u1ed9t primitive nh\u01b0 l\xe0 string, JavaScript s\u1ebd ng\u1ea7m bao n\xf3 b\u1edfi m\u1ed9t `wrapper class`, v\xed d\u1ee5 `String`, v\xe0 sau \u0111\xf3 s\u1ebd h\u1ee7y vi\u1ec7c bao \u0111\xf3 ngay sau khi th\u1ef1c hi\u1ec7n xong. M\u1ecdi primitives ngo\u1ea1i tr\u1eeb `null` v\xe0 `undefine` \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng nh\u01b0 v\u1eady.","id":38,"options":["primitives ho\u1eb7c object","function ho\u1eb7c object","h\u1ecfi m\u1eb9o kh\xf3 \u0111\u1ea5y! ch\u1ec9 _object_ th\xf4i","number ho\u1eb7c object"],"question":"M\u1ecdi th\u1ee9 trong JavaScript \u0111\u1ec1u l\xe0..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` l\xe0 gi\xe1 tr\u1ecb kh\u1edfi t\u1ea1o. \u0110\xe2y l\xe0 gi\xe1 tr\u1ecb ch\xfang ta b\u1eaft \u0111\u1ea7u, v\xe0 c\u0169ng l\xe0 gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean c\u1ee7a `acc`. T\u1ea1i v\xf2ng \u0111\u1ea7u ti\xean, `acc` l\xe0 `[1,2]`, v\xe0 `cur` l\xe0 `[0, 1]`. Ta n\u1ed1i ch\xfang l\u1ea1i t\u1ea1o ra `[1, 2, 0, 1]`.\\n\\nTi\u1ebfp t\u1ee5c, `[1, 2, 0, 1]` l\xe0 `acc` v\xe0 `[2, 3]` l\xe0 `cur`. Ta n\u1ed1i ch\xfang l\u1ea1i t\u1ea1o ra `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` l\xe0 falsy. `!null` tr\u1ea3 v\u1ec1 `true`. `!true` tr\u1ea3 v\u1ec1 `false`.\\n\\n`\\"\\"` l\xe0 falsy. `!\\"\\"` tr\u1ea3 v\u1ec1 `true`. `!true` tr\u1ea3 v\u1ec1 `false`.\\n\\n`1` l\xe0 truthy. `!1` tr\u1ea3 v\u1ec1 `fa\\u001bse`. `!false` tr\u1ea3 v\u1ec1 `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"N\xf3 tr\u1ea3 v\u1ec1 m\u1ed9t id duy nh\u1ea5t. Id n\xe0y d\xf9ng \u0111\u1ec3 clear interval sau n\xe0y v\u1edbi h\xe0m `clearInterval()`.","id":41,"options":["m\u1ed9t id duy nh\u1ea5t","s\u1ed1 l\u01b0\u1ee3ng milliseconds","function truy\u1ec1n v\xe0o","`undefined`"],"question":"H\xe0m `setInterval` tr\u1ea3 v\u1ec1 c\xe1i g\xec?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"String l\xe0 m\u1ed9t _iterable_. Th\u1ebf n\xean _spread operator_ s\u1ebd map to\xe0n b\u1ed9 c\xe1c k\xfd t\u1ef1 trong chu\u1ed7i l\u1ea1i th\xe0nh m\u1ed9t m\u1ea3ng.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"Gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 l\xe0 g\xec?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"M\u1ed9t h\xe0m b\xecnh th\u01b0\u1eddng kh\xf4ng th\u1ec3 b\u1ecb d\u1eebng gi\u1eefa ch\u1eebng khi \u0111\u01b0\u1ee3c g\u1ecdi. Tuy nhi\xean m\u1ed9t _generator_ th\xec kh\xe1c, n\xf3 c\xf3 th\u1ec3 \\"d\u1eebng l\u1ea1i\\" \u0111\u01b0\u1ee3c, v\xe0 sau \u0111\xf3 n\xf3 s\u1ebd ti\u1ebfp t\u1ee5c t\u1eeb v\u1ecb tr\xed n\xf3 d\u1eebng l\u1ea1i. M\u1ed7i khi m\u1ed9t _generator_ g\u1eb7p m\u1ed9t t\u1eeb kh\xf3a `yield`, n\xf3 s\u1ebd sinh ra gi\xe1 tr\u1ecb ngay ph\xeda sau n\xf3. Ch\xfa \xfd l\xe0 _generator_ kh\xf4ng _tr\u1ea3 v\u1ec1_ gi\xe1 tr\u1ecb, n\xf3 _sinh ra_ gi\xe1 tr\u1ecb.\\n\\n\u0110\u1ea7u ti\xean, ch\xfang ta kh\u1edfi t\u1ea1o generator v\u1edbi gi\xe1 tr\u1ecb `i` l\xe0 `10`. Generator \u0111\u01b0\u1ee3c g\u1ecdi b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng ph\u01b0\u01a1ng th\u1ee9c `next()`. Khi l\u1ea7n \u0111\u1ea7u g\u1ecdi th\xec `i` v\u1eabn l\xe0 `10`. Khi n\xf3 b\u1eaft g\u1eb7p t\u1eeb kh\xf3a `yield`: n\xf3 s\u1ebd sinh ra gi\xe1 tr\u1ecb `i`. Generator s\u1ebd \u0111\u01b0\u1ee3c \\"t\u1ea1m d\u1eebng\\" t\u1ea1i \u0111\xe2y, v\xe0 ghi ra gi\xe1 tr\u1ecb `10`.\\n\\nSau \u0111\xf3 chung ta ti\u1ebfp t\u1ee5c g\u1ecdi generator b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng ti\u1ebfp ph\u01b0\u01a1ng th\u1ee9c `next()`. N\xf3 s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb v\u1ecb tr\xed n\xf3 t\u1ea1m d\u1eebng l\xfac tr\u01b0\u1edbc, khi `i` v\u1eabn \u0111ang l\xe0 `10`. V\xe0 khi n\xf3 b\u1eaft g\u1eb7p t\u1eeb kh\xf3a `yield`, n\xf3 s\u1ebd sinh ra gi\xe1 tr\u1ecb `i * 2`. `i` l\xe0 `10`, n\xean n\xf3 s\u1ebd sinh ra `10 * 2`, t\u1ee9c `20`. V\u1eady k\u1ebft qu\u1ea3 cu\u1ed1i c\xf9ng l\xe0 `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"Khi ch\xfang ta \u0111\u01b0a c\xe1c promise v\xe0o trong m\u1ed9t h\xe0m `Promise.race`, n\xf3 s\u1ebd ch\u1ec9 resolves hay rejects promise _\u0111\u1ea7u ti\xean_ \u0111\u01b0\u1ee3c resolves/rejects. V\u1edbi h\xe0m `setTimeout`, ch\xfang ta \u0111\u01b0a v\xe0o m\u1ed9t kho\u1ea3ng th\u1eddi gian: 500 mili gi\xe2y cho promise \u0111\u1ea7u ti\xean (`firstPromise`), v\xe0 100 mili gi\xe2y cho promise th\u1ee9 hai (`secondPromise`). N\xf3 c\xf3 ngh\u0129a l\xe0 `secondPromise` s\u1ebd ho\xe0n th\xe0nh tr\u01b0\u1edbc v\xe0 tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb `\'two\'`. `res` khi n\xe0y s\u1ebd nh\u1eadn gi\xe1 tr\u1ecb `\'two\'` v\xe0 \u0111\u01b0\u1ee3c in ra console.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"Gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 l\xe0 g\xec?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\u0110\u1ea7u ti\xean, ch\xfang ta khai b\xe1o m\u1ed9t bi\u1ebfn `person` l\xe0 m\u1ed9t object c\xf3 thu\u1ed9c t\xednh `name`.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nSau \u0111\xf3 ch\xfang ta khai b\xe1o m\u1ed9t bi\u1ebfn `members`. Ta set gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean c\u1ee7a m\u1ea3ng l\xe0 gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn `person`. Khi s\u1eed d\u1ee5ng g\xe1n b\u1eb1ng, object s\u1ebd \u0111\u01b0\u1ee3c _tham chi\u1ebfu_ t\u1edbi object m\xe0 n\xf3 \u0111\u01b0\u1ee3c g\xe1n. Khi ta g\xe1n tham chi\u1ebfu t\u1eeb m\u1ed9t bi\u1ebfn sang bi\u1ebfn kh\xe1c, ta t\u1ea1o ra m\u1ed9t b\u1ea3n sao c\u1ee7a tham chi\u1ebfu \u0111\xf3. (n\xean nh\u1edb r\u1eb1ng \u0111\xf3 v\u1eabn l\xe0 2 tham chi\u1ebfu ho\xe0n to\xe0n kh\xe1c nhau!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nSau \u0111\xf3 ta set gi\xe1 tr\u1ecb c\u1ee7a `person` b\u1eb1ng `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nCh\xfang ta ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\xe0 thay \u0111\u1ed5i gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn `person` m\xe0 th\xf4i, ch\u1ee9 kh\xf4ng ph\u1ea3i gi\xe1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed \u0111\u1ea7u ti\xean \u1edf trong m\u1ea3ng, v\xec ch\xfang ta c\xf3 m\u1ed9t tham chi\u1ebfu kh\xe1c \u0111\u1ebfn object \u0111\xf3. Ph\u1ea7n t\u1eed \u0111\u1ea7u ti\xean c\u1ee7a m\u1ea3ng `members` v\u1eabn gi\u1eef tham chi\xeau \u0111\u1ebfn object g\u1ed1c. Do v\u1eady, khi ch\xfang ta in ra m\u1ea3ng `members`, ph\u1ea7n t\u1eed \u0111\u1ea7u ti\xean s\u1ebd v\u1eabn in ra gi\xe1 tr\u1ecb c\u1ee7a objet g\u1ed1c.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"V\u1edbi v\xf2ng l\u1eb7p `for-in` ch\xfang ta s\u1ebd l\u1eb7p qua t\u1ea5t c\u1ea3 c\xe1c `keys` c\u1ee7a object, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y l\xe0 `name` v\xe0 `age`. V\u1ec1 c\u01a1 b\u1ea3n, object keys l\xe0 string (n\u1ebfu n\xf3 kh\xf4ng ph\u1ea3i l\xe0 Symbol). T\u1ea1i m\u1ed7i v\xf2ng l\u1eb7p, gi\xe1 tr\u1ecb c\u1ee7a `item` ch\xednh l\xe0 gi\xe1 tr\u1ecb c\u1ee7a key hi\u1ec7n t\u1ea1i trong v\xf2ng l\u1eb7p. \u0110\u1ea7u ti\xean, `item` l\xe0 `name`, v\xe0 \u0111\u01b0\u1ee3c in ra. V\xf2ng l\u1eb7p sau, `item` l\xe0 `age`, v\xe0 \u0111\u01b0\u1ee3c in ra.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"Compiler s\u1ebd \u0111\xe1nh gi\xe1 bi\u1ec3u th\u1ee9c d\u1ef1a tr\xean \u0111\u1ed9 \u01b0u ti\xean gi\u1eefa c\xe1c ph\xe9p to\xe1n trong bi\u1ec3u th\u1ee9c \u0111\xf3, t\u1eeb \u0111\xf3 n\xf3 s\u1ebd t\xednh to\xe1n ho\u1eb7c tr\xe1i-sang-ph\u1ea3i ho\u1eb7c ph\u1ea3i-qua-tr\xe1i. \u1ede \u0111\xe2y ch\xfang ta ch\u1ec9 c\xf3 m\u1ed9t ph\xe9p to\xe1n m\xe0 th\xf4i, ph\xe9p c\u1ed9ng: `+`. V\u1edbi ph\xe9p c\u1ed9ng, t\xednh to\xe1n s\u1ebd l\xe0 t\u1eeb tr\xe1i-qua-ph\u1ea3i.\\n\\nGi\xe1 tr\u1ecb `3 + 4` \u0111\u01b0\u1ee3c t\xednh to\xe1n tr\u01b0\u1edbc. K\u1ebft qu\u1ea3 l\xe0 `7`.\\n\\n`7 + \'5\'` s\u1ebd ra k\u1ebft qu\u1ea3 l\xe0 `\\"75\\"` b\u1edfi xu\u1ea5t hi\u1ec7n \xe9p ki\u1ec3u t\u1ea1i \u0111\xe2y. JavaScript s\u1ebd convert `7` sang d\u1ea1ng string, b\u1ea1n c\xf3 th\u1ec3 xem th\xeam t\u1ea1i c\xe2u h\u1ecfi 15. V\xe0 sau \u0111\xf3 2 string s\u1ebd \u0111\u01b0\u1ee3c n\u1ed1i l\u1ea1i v\u1edbi nhau b\u1edfi ph\xe9p to\xe1n c\u1ed9ng `+`. K\u1ebft qu\u1ea3 `\\"7\\" + \\"5\\"` s\u1ebd l\xe0 `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Ch\u1ec9 c\xf3 s\u1ed1 \u0111\u1ea7u ti\xean trong chu\u1ed7i k\xed t\u1ef1 \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1. H\u1ec7 c\u01a1 s\u1ed1 l\xe0 _h\u1ec7 th\u1eadp ph\xe2n_ (\u0111\u1ed1i s\u1ed1 th\u1ee9 2 trong h\xe0m ch\xednh l\xe0 c\u01a1 s\u1ed1: h\u1ec7 th\u1eadp ph\xe2n, h\u1ec7 16, h\u1ec7 8, h\u1ec7 nh\u1ecb ph\xe2n, vv.), H\xe0m `parseInt` s\u1ebd ki\u1ec3m tra xem c\xe1c k\xfd t\u1ef1 trong chu\u1ed7i c\xf3 \u0111\u1ea3m b\u1ea3o h\u1ee3p l\u1ec7 hay kh\xf4ng. M\u1ed9t khi ch\xfang t\xecm ra k\xfd t\u1ef1 kh\xf4ng ph\u1ea3i l\xe0 k\xfd t\u1ef1 h\u1ee3p l\u1ec7 trong h\u1ec7 c\u01a1 s\u1ed1, n\xf3 d\u1eebng l\u1ea1i v\xe0 b\u1ecf qua c\xe1c k\xfd t\u1ef1 ph\xeda sau.\\n\\n`*` kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t s\u1ed1. V\u1eady n\xean n\xf3 s\u1ebd ch\u1ec9 convert k\xfd t\u1ef1 `\\"7\\"` sang h\u1ec7 th\u1eadp ph\xe2n l\xe0 `7`. `num` s\u1ebd c\xf3 gi\xe1 tr\u1ecb l\xe0 `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"Gi\xe1 tr\u1ecb c\u1ee7a `num` l\xe0 g\xec?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Khi ta ti\u1ebfn h\xe0nh `map` m\u1ed9t m\u1ea3ng, gi\xe1 tr\u1ecb c\u1ee7a `num` s\u1ebd ch\xednh l\xe0 gi\xe1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed hi\u1ec7n gi\u1edd trong v\xf2ng l\u1eb7p. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, c\xe1c ph\u1ea7n t\u1eed \u0111\u1ec1u l\xe0 d\u1ea1ng s\u1ed1, t\u1ee9c l\xe0 `typeof num === \\"number\\"` s\u1ebd l\xe0 `true`. H\xe0m `map` s\u1ebd t\u1ea1o ra m\u1ed9t m\u1ea3ng m\u1edfi t\u1eeb c\xe1c gi\xe1 tr\u1ecb c\u1ee7a m\u1ea3ng ban \u0111\u1ea7u.\\n\\nTuy nhi\xean ch\xfang ta kh\xf4ng h\u1ec1 tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb n\xe0o c\u1ea3. Khi \u0111\xf3, h\xe0m s\u1ed1 s\u1ebd m\u1eb7c \u0111\u1ecbnh tr\u1ea3 v\u1ec1 `undefined`. Do \u0111\xf3 qua m\u1ed7i v\xf2ng l\u1eb7p, ta l\u1ea1i nh\u1eadn \u0111\u01b0\u1ee3c th\xeam m\u1ed9t gi\xe1 tr\u1ecb `undefined` n\u1eefa.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"`\u0110\u1ed1i s\u1ed1` s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o h\xe0m d\u1ea1ng _tham tr\u1ecb_, tr\u1eeb phi n\xf3 l\xe0 object, khi \u0111\xf3 n\xf3 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o h\xe0m d\u1ea1ng _tham chi\u1ebfu_. `birthYear` l\xe0 d\u1ea1ng gi\xe1 tr\u1ecb, v\xec n\xf3 l\xe0 string ch\u1ee9 kh\xf4ng ph\u1ea3i object. Khi ch\xfang ta \u0111\u01b0a v\xe0o d\u1ea1ng gi\xe1 tr\u1ecb, m\u1ed9t b\u1ea3n sao c\u1ee7a gi\xe1 tr\u1ecb \u0111\xf3 s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o ra (xem th\xeam c\xe2u 46).\\n\\n`birthYear` tr\u1ecf \u0111\u1ebfn gi\xe1 tr\u1ecb l\xe0 `\\"1997\\"`. \u0110\u1ed1i s\u1ed1 `year` c\u0169ng s\u1ebd r\u1ecf \u0111\u1ebfn gi\xe1 tr\u1ecb `\\"1997\\"`, nh\u01b0ng gi\xe1 tr\u1ecb n\xe0y ch\u1ec9 l\xe0 m\u1ed9t b\u1ea3n sao c\u1ee7a gi\xe1 tr\u1ecb m\xe0 `birthYear` tr\u1ecf t\u1edbi m\xe0 th\xf4i, hai gi\xe1 tr\u1ecb \u0111\xf3 ho\xe0n to\xe0n kh\xe1c nhau. Do \u0111\xf3 khi ta thay \u0111\u1ed5i gi\xe1 tr\u1ecb `year` b\u1eb1ng `\\"1998\\"`, ch\xfang ta ch\u1ec9 thay \u0111\u1ed5i gi\xe1 tr\u1ecb c\u1ee7a `year` m\xe0 th\xf4i. `birthYear` s\u1ebd v\u1eabn gi\u1eef gi\xe1 tr\u1ecb l\xe0 `\\"1997\\"`.\\n\\n`person` l\xe0 m\u1ed9t object. Bi\u1ebfn `member` c\xf3 m\u1ed9t tham chi\u1ebfu t\u1edbi c\xf9ng object m\xe0 `person` tr\u1ecf t\u1edbi. Khi ch\xfang ta thay \u0111\u1ed5i m\u1ed9t thu\u1ed9c t\xednh c\u1ee7a object m\xe0 `member` tr\u1ecf t\u1edbi, gi\xe1 tr\u1ecb c\u1ee7a `person` c\u0169ng s\u1ebd t\u1ef1 \u0111\u1ed9ng thay \u0111\u1ed5i theo, v\xec ch\xfang c\xf3 chung tham chi\u1ebfu. `name` c\u1ee7a `person` khi n\xe0y s\u1ebd c\xf3 gi\xe1 tr\u1ecb m\u1edbi l\xe0 `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"V\u1edbi l\u1ec7nh `throw`, ch\xfang ta c\xf3 th\u1ec3 t\u1ea1o ra c\xe1c errors t\xf9y \xfd. V\u1edbi c\xe2u l\u1ec7nh \u0111\xf3, ch\xfang ta c\xf3 th\u1ec3 throw c\xe1c exception. M\u1ed9t _exeption_ c\xf3 th\u1ec3 l\xe0 m\u1ed9t <b>chu\u1ed7i</b>, m\u1ed9t <b>s\u1ed1</b>, m\u1ed9t <b>boolean</b> ho\u1eb7c m\u1ed9t <b>object</b>. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y th\xec n\xf3 l\xe0 chu\u1ed7i `\'Hello world\'`.\\n\\nV\u1edbi l\u1ec7nh `catch` ch\xfang ta c\xf3 th\u1ec3 x\u1eed l\xfd nh\u1eefng exeption \u0111\u01b0\u1ee3c throw ra khi th\u1ef1c hi\u1ec7n `try`. M\u1ed9t exeption \u0111\xe3 \u0111\u01b0\u1ee3c throw ra: chu\u1ed7i `\'Hello world\'`. `e` ch\xednh l\xe0 chu\u1ed7i \u0111\xf3 v\xe0 ch\xfang ta s\u1ebd in ra. K\u1ebft qu\u1ea3 l\xe0 `\'Oh an error: Hello world\'`.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error: Hello world!`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Khi ch\xfang ta tr\u1ea3 v\u1ec1 m\u1ed9t thu\u1ed9c t\xednh, gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh b\u1eb1ng v\u1edbi gi\xe1 tr\u1ecb \u0111\xe3 \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 b\u1edfi l\u1ec7nh _return_, ch\u1ee9 kh\xf4ng ph\u1ea3i gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c set trong constructor. Ch\xfang ta tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb l\xe0 `\\"Maserati\\"`, do \u0111\xf3 `myCar.make` s\u1ebd l\xe0 `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` ch\xednh l\xe0 c\xe1ch vi\u1ebft ng\u1eafn g\u1ecdn c\u1ee7a:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nKhi ta set `y` b\u1eb1ng `10`, th\u1ef1c t\u1ebf ch\xfang ta \u0111\xe3 s\u1eed d\u1ee5ng bi\u1ebfn global `y` (`window` n\u1ebfu l\xe0 tr\xean browser, `global` n\u1ebfu l\xe0 m\xf4i tr\u01b0\u1eddng Node).Tr\xean browser, `window.y` s\u1ebd l\xe0 `10`.\\n\\nSau \u0111\xf3, ch\xfang ta khai b\xe1o gi\xe1 tr\u1ecb c\u1ee7a `x` v\u1edbi gi\xe1 tr\u1ecb c\u1ee7a `y`, t\u1ee9c `10`. Tuy nhi\xean khi ta khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `let` bi\u1ebfn x s\u1ebd ch\u1ec9 t\u1ed3n t\u1ea1i trong _block scoped_; hay trong tr\u01b0\u1eddng h\u1ee3p n\xe0y l\xe0 `h\xe0m th\u1ef1c hi\u1ec7n ngay l\u1eadp t\u1ee9c` (immediately-invoked function - IIFE). Khi ta s\u1eed d\u1ee5ng ph\xe9p to\xe1n `typeof`, `x` ho\xe0n to\xe0n ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a: v\xec `x` l\xfac n\xe0y n\u1eb1m b\xean ngo\xe0i block n\xf3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a l\xfac tr\u01b0\u1edbc. Ngh\u0129a l\xe0 `x` l\xe0 `undefined`. Do \u0111\xf3 `console.log(typeof x)` tr\u1ea3 v\u1ec1 `\\"undefined\\"`.\\n\\nTuy nhi\xean v\u1edbi `y` th\xec kh\xe1c, ta \u0111\xe3 c\xf3 gi\xe1 tr\u1ecb c\u1ee7a `y` khi set `y` b\u1eb1ng `10`. Gi\xe1 tr\u1ecb \u0111\xf3 c\xf3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c t\u1eeb b\u1ea5t k\xec \u0111\xe2u b\u1edfi ch\xfang l\xe0 bi\u1ebfn global. `y` \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a v\u1edbi ki\u1ec3u l\xe0 `\\"number\\"`. Do \u0111\xf3 `console.log(typeof y)` tr\u1ea3 v\u1ec1 `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"`Set` l\xe0 m\u1ed9t t\u1eadp h\u01a1p c\xe1c gi\xe1 tr\u1ecb _kh\xf4ng tr\xf9ng nhau_.\\n\\nCh\xfang ta \u0111\u01b0a \u0111\u1ea7u v\xe0o l\xe0 m\u1ed9t m\u1ea3ng `[1, 1, 2, 3, 4]` v\u1edbi gi\xe1 tr\u1ecb `1` b\u1ecb tr\xf9ng. Gi\xe1 tr\u1ecb tr\xf9ng \u0111\xf3 s\u1ebd b\u1ecb lo\u1ea1i b\u1ecf. K\u1ebft qu\u1ea3 l\xe0 `{1, 2, 3, 4}`.","id":54,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"M\u1ed9t module khi \u0111\u01b0\u1ee3c import s\u1ebd l\xe0 __read-only__: ch\xfang ta s\u1ebd kh\xf4ng th\u1ec3 ch\u1ec9nh s\u1eeda module \u0111\xf3, ch\u1ec9 c\xf3 b\u1ea3n th\xe2n module \u0111\xf3 c\xf3 th\u1ec3 ch\u1ec9nh s\u1eeda gi\xe1 tr\u1ecb c\u1ee7a n\xf3 m\xe0 th\xf4i.\\n\\nKhi ta thay \u0111\u1ed5i gi\xe1 tr\u1ecb cu\u1ea3 `myCounter`, n\xf3 s\u1ebd throw ra m\u1ed9t l\u1ed7i: `myCounter` l\xe0 _read-only_ v\xe0 kh\xf4ng th\u1ec3 thay \u0111\u1ed5i.","id":55,"options":["`10`","`11`","`Error`","`NaN`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"Ph\xe9p to\xe1n `delete` s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t gi\xe1 tr\u1ecb boolean: `true` n\u1ebfu x\xf3a th\xe0nh c\xf4ng, `false` n\u1ebfu th\u1ea5t b\u1ea1i. Tuy nhi\xean, n\u1ebfu bi\u1ebfn \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi c\xe1c t\u1eeb kh\xf3a `var`, `const` hay `let` th\xec n\xf3 s\u1ebd kh\xf4ng th\u1ec3 b\u1ecb x\xf3a b\u1edfi ph\xe9p to\xe1n `delete`.\\n\\nBi\u1ebfn `name` \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `const`, n\xean n\xf3 s\u1ebd kh\xf4ng th\u1ec3 b\u1ecb x\xf3a v\xe0 tr\u1ea3 v\u1ec1 `false`. Khi ta set `age` b\u1eb1ng `21`, th\u1ef1c t\u1ebf l\xe0 ta \u0111ang s\u1eed d\u1ee5ng bi\u1ebfn global `age`. Ta c\xf3 th\u1ec3 x\xf3a s\u1eed d\u1ee5ng ph\xe9p to\xe1n `delete`, khi n\xe0y `delete age` tr\u1ea3 v\u1ec1 `true`.","id":56,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"Ch\xfang ta c\xf3 th\u1ec3 unpack c\xe1c gi\xe1 tr\u1ecb t\u1eeb m\u1ea3ng ho\u1eb7c thu\u1ed9c t\xednh t\u1eeb objects b\u1eb1ng ph\u01b0\u01a1ng ph\xe1p `destructuring`. V\xed d\u1ee5:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nGi\xe1 tr\u1ecb c\u1ee7a `a` s\u1ebd l\xe0 `1`, `b` s\u1ebd l\xe0 `2`. Th\u1ef1c t\u1ebf, c\xe2u h\u1ecfi c\u1ee7a ch\xfang ta \u0111\u01a1n gi\u1ea3n l\xe0:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nC\xf3 ngh\u0129a l\xe0 `y` ch\xednh l\xe0 gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean trong m\u1ea3ng, t\u1ee9c s\u1ed1 `1`. Do \u0111\xf3 khi ta in ra `y` th\xec s\u1ebd l\xe0`1`.","id":57,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"Ta c\xf3 th\u1ec3 k\u1ebft h\u1ee3p 2 object s\u1eed d\u1ee5ng ph\xe9p to\xe1n `spread operator` `...`. N\xf3 cho ph\xe9p ta t\u1ea1o ra b\u1ea3n sao c\u1ee7a t\u1eebng c\u1eb7p key/values trong t\u1eebng object v\xe0 n\u1ed1i ch\xfang l\u1ea1i v\u1edbi nhau th\xe0nh m\u1ed9t object m\u1edbi. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y ch\xfang ta t\u1ea1o ra c\xe1c b\u1ea3n sao c\u1ee7a c\xe1c c\u1eb7p key/value c\u1ee7a object `user` object, v\xe0 n\u1ed1i ch\xfang v\xe0o object `admin`. `admin` object khi n\xe0y s\u1ebd tr\u1edf th\xe0nh `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":58,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"V\u1edbi ph\u01b0\u01a1ng th\u1ee9c `defineProperty`, ch\xfang ta c\xf3 th\u1ec3 th\xeam c\xe1c thu\u1ed9c t\xednh m\u1edbi, c\u0169ng nh\u01b0 s\u1eeda c\xe1c thu\u1ed9c t\xednh s\u1eb5n c\xf3 c\u1ee7a object. Khi ch\xfang ta th\xeam thu\u1ed9c t\xednh v\xe0o object b\u1eb1ng `defineProperty`, ch\xfang s\u1ebd m\u1eb7c \u0111\u1ecbnh l\xe0 thu\u1ed9c t\xednh _not enumerable_. Ph\u01b0\u01a1ng th\u1ee9c `Object.keys` s\u1ebd tr\u1ea3 v\u1ec1 t\u1ea5t c\u1ea3 c\xe1c thu\u1ed9c t\xednh _enumerable_ c\u1ee7a object, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y th\xec ch\u1ec9 c\xf3 `\\"name\\"` m\xe0 th\xf4i.\\n\\nTh\xeam n\u1eefa, c\xe1c thu\u1ed9c t\xednh \u0111\u01b0\u1ee3c th\xeam b\u1edfi `defineProperty` l\xe0 m\u1eb7c \u0111\u1ecbnh kh\xf4ng th\u1ec3 thay \u0111\u1ed5i \u0111\u01b0\u1ee3c. T\u1ea5t nhi\xean ta c\xf3 th\u1ec3 override c\xe1c \u0111i\u1ec1u \u0111\xf3 b\u1eb1ng c\xe1c thu\u1ed9c t\xednh nh\u01b0 `writable`, `configurable` v\xe0 `enumerable`. T\u1ee9c l\xe0 `defineProperty` l\xe0 m\u1ed9t c\xe1ch r\u1ea5t m\u1ec1m d\u1ebbo \u0111\u1ec3 t\u1ea1o ra v\xe0 \u0111i\u1ec1u ch\u1ec9nh thu\u1ed9c t\xednh c\u1ee7a object.","id":59,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"\u0110\u1ed1i s\u1ed1 th\u1ee9 hai c\u1ee7a `JSON.stringify` l\xe0 _replacer_. Replacer C\xf3 th\u1ec3 l\xe0 m\u1ed9t h\xe0m ho\u1eb7c m\u1ed9t m\u1ea3ng, n\xf3 s\u1ebd quy \u0111\u1ecbnh xem gi\xe1 tr\u1ecb n\xe0o s\u1ebd \u0111\u01b0\u1ee3c chu\u1ed7i h\xf3a ra sao.\\n\\nN\u1ebfu replacer l\xe0 m\u1ed9t _m\u1ea3ng_, ch\u1ec9 c\xf3 c\xe1c thu\u1ed9c t\xednh c\xf3 t\xean trong m\u1ea3ng \u0111\u01b0\u1ee3c convert th\xe0nh chu\u1ed7i JSON. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ch\u1ec9 c\xf3 c\xe1c thu\u1ed9c t\xednh `\\"level\\"` v\xe0 `\\"health\\"` \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o, `\\"username\\"` b\u1ecb lo\u1ea1i b\u1ecf. `data` gi\u1edd s\u1ebd l\xe0 `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nN\u1ebfu replacer l\xe0 _function_, h\xe0m n\xe0y s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi tr\xean t\u1eebng thu\u1ed9c t\xednh c\u1ee7a object \u0111\u01b0\u1ee3c chu\u1ed7i h\xf3a. Gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 s\u1ebd l\xe0 gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o chu\u1ed7i JSON. N\u1ebfu tr\u1ea3 v\u1ec1 `undefined`, thu\u1ed9c t\xednh n\xe0y s\u1ebd b\u1ecb lo\u1ea1i b\u1ecf kh\u1ecfi chu\u1ed7i.","id":60,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"Ph\xe9p to\xe1n `++` s\u1ebd _tr\u1ea3 v\u1ec1 tr\u01b0\u1edbc_ gi\xe1 tr\u1ecb c\u1ee7a to\xe1n h\u1ea1ng, _sau \u0111\xf3 t\u0103ng_ gi\xe1 tr\u1ecb c\u1ee7a to\xe1n h\u1ea1ng l\xean. Gi\xe1 tr\u1ecb c\u1ee7a `num1` l\xe0 `10`, v\xec `increaseNumber` s\u1ebd tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb c\u1ee7a `num`, \u0111ang l\xe0 `10`, v\xe0 sau \u0111\xf3 m\u1edbi t\u0103ng gi\xe1 tr\u1ecb c\u1ee7a `num` l\xean.\\n\\n`num2` c\u0169ng l\xe0 `10`, v\xec ch\xfang ta \u0111\u01b0a `num1` v\xe0o `increasePassedNumber`. `number` b\u1eb1ng `10`(t\u1ee9c gi\xe1 tr\u1ecb c\u1ee7a `num1`). C\u0169ng gi\u1ed1ng nh\u01b0 tr\xean, ph\xe9p to\xe1n `++` s\u1ebd _tr\u1ea3 v\u1ec1 tr\u01b0\u1edbc_ gi\xe1 tr\u1ecb c\u1ee7a to\xe1n h\u1ea1ng, _sau \u0111\xf3 t\u0103ng_ gi\xe1 tr\u1ecb c\u1ee7a to\xe1n h\u1ea1ng l\xean. Gi\xe1 tr\u1ecb c\u1ee7a `number` l\xe0 `10`, do \u0111\xf3 `num2` c\u0169ng s\u1ebd l\xe0 `10`.","id":61,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"Trong ES6 th\xec ch\xfang ta c\xf3 th\u1ec3 kh\u1edfi t\u1ea1o tham s\u1ed1 v\u1edbi gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh. Gi\xe1 tr\u1ecb c\u1ee7a tham s\u1ed1 s\u1ebd l\xe0 gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh n\u1ebfu ta kh\xf4ng truy\u1ec1n g\xec v\xe0o h\xe0m, ho\u1eb7c khi gi\xe1 tr\u1ecb truy\u1ec1n v\xe0o l\xe0 `\\"undefined\\"`. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ta d\xf9ng `spread operator` (to\xe1n t\u1eed m\u1edf r\u1ed9ng) \u0111\u1ec3 bi\u1ebfn `value` th\xe0nh m\u1ed9t object m\u1edbi, do \u0111\xf3 `x` s\u1ebd c\xf3 gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh l\xe0 `{ number: 10 }`.\\n\\nCh\xfa \xfd m\u1ed9t \u0111i\u1ec1u l\xe0 \u0111\u1ed1i s\u1ed1 s\u1ebd \u0111\u01b0\u1ee3c x\xe9t gi\xe1 tr\u1ecb t\u1ea1i _call time_! C\xf3 ngh\u0129a l\xe0 m\u1ed7i khi ch\xfang ta g\u1ecdi h\xe0m, m\u1ed9t _object m\u1edbi_ s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o ra. Ch\xfang ta g\u1ecdi h\xe0m `multiply` hai l\u1ea7n m\xe0 kh\xf4ng truy\u1ec1n v\xe0o \u0111\u1ed1i s\u1ed1 n\xe0o c\u1ea3: `x` s\u1ebd nh\u1eadn gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh `{ number: 10 }`. Sau \u0111\xf3 ch\xfang ta s\u1ebd ghi ra gi\xe1 tr\u1ecb l\xe0 `20`.\\n\\nL\u1ea7n g\u1ecdi th\u1ee9 ba ch\xfang ta truy\u1ec1n v\xe0o m\u1ed9t \u0111\u1ed1i s\u1ed1: ch\xednh l\xe0 `value`. To\xe1n t\u1eed `*=` ch\xednh l\xe0 c\xe1ch vi\u1ebft g\u1ecdn c\u1ee7a `x.number = x.number * 2`: ch\xfang ta thay \u0111\u1ed5i gi\xe1 tr\u1ecb c\u1ee7a `x.number`, v\xe0 ghi ra gi\xe1 tr\u1ecb `20`. \\n\\nT\u1ea1i l\u1ea7n g\u1ecdi th\u1ee9 t\u01b0, ch\xfang ta truy\u1ec1n v\xe0o `value` m\u1ed9t l\u1ea7n n\u1eefa. `x.number` tr\u01b0\u1edbc \u0111\xf3 \u0111\xe3 b\u1ecb thay \u0111\u1ed5i th\xe0nh `20`, n\xean `x.number *= 2` s\u1ebd ghi ra `40`.","id":62,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"\u0110\u1ed1i s\u1ed1 \u0111\u1ea7u ti\xean c\u1ee7a h\xe0m `reduce` ch\xednh l\xe0 _accumulator_ (t\u1ed5ng t\xedch l\u0169y), trong tr\u01b0\u1eddng h\u1ee3p n\xe0y l\xe0 `x`. \u0110\u1ed1i s\u1ed1 th\u1ee9 2 ch\xednh l\xe0 _gi\xe1 tr\u1ecb hi\u1ec7n t\u1ea1i_, t\u1ee9c `y`. V\u1edbi h\xe0m reduce, ta s\u1ebd g\u1ecdi callback tr\xean m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng, c\u1ee9 v\u1eady cho t\u1edbi khi ra \u0111\u1ebfn m\u1ed9t gi\xe1 tr\u1ecb cu\u1ed1i c\xf9ng. \\n\\nTrong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ch\xfang ta kh\xf4ng tr\u1ea3 v\u1ec1 b\u1ea5t c\u1ee9 gi\xe1 tr\u1ecb n\xe0o c\u1ea3, m\xe0 \u0111\u01a1n thu\u1ea7n ch\u1ec9 l\xe0 ghi ra gi\xe1 tr\u1ecb c\u1ee7a _t\u1ed5ng t\xedch l\u0169y_ v\xe0 _gi\xe1 tr\u1ecb hi\u1ec7n t\u1ea1i_ m\xe0 th\xf4i.\\n\\nGi\xe1 tr\u1ecb c\u1ee7a t\u1ed5ng t\xedch l\u0169y ch\xednh l\xe0 gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c h\xe0m callback tr\u1ea3 v\u1ec1 t\u1ea1i v\xf2ng l\u1eb7p tr\u01b0\u1edbc \u0111\xf3. N\u1ebfu ta kh\xf4ng \u0111\u1eb7t gi\xe1 tr\u1ecb kh\u1edfi t\u1ea1o cho \u0111\u1ed1i s\u1ed1 trong h\xe0m `reduce`, th\xec t\u1ed5ng t\xedch l\u0169y s\u1ebd ch\xednh b\u1eb1ng gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean t\u1ea1i l\u1eddi g\u1ecdi \u0111\u1ea7u ti\xean.\\n\\nTrong l\u1eddi g\u1ecdi \u0111\u1ea7u ti\xean, t\u1ed5ng t\xedch l\u0169y (`x`) l\xe0 `1`, v\xe0 gi\xe1 tr\u1ecb hi\u1ec7n t\u1ea1i (`y`) l\xe0 `2`. Ch\xfang ta kh\xf4ng tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb cho h\xe0m callback, m\xe0 \u0111\u01a1n thu\u1ea7n ch\u1ec9 ghi ch\xfang ta, v\u1eady n\xean `1` v\xe0 `2` \u0111\u01b0\u1ee3c ghi ra.  \\n\\nN\u1ebfu ta kh\xf4ng tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb trong m\u1ed9t function, th\xec n\xf3 s\u1ebd m\u1eb7c \u0111\u1ecbnh tr\u1ea3 v\u1ec1 l\xe0 `undefined`. Do \u0111\xf3 trong l\u1eddi g\u1ecdi ti\u1ebfp theo t\u1ed5ng t\xedch l\u0169y s\u1ebd l\xe0 `undefined`, v\xe0 gi\xe1 tr\u1ecb hi\u1ec7n t\u1ea1i l\xe0 `3`. `undefined` v\xe0 `3` s\u1ebd \u0111\u01b0\u1ee3c ghi ra. \\n\\nTi\u1ebfp t\u1ee5c nh\u01b0 v\u1eady, trong l\u1eddi g\u1ecdi th\u1ee9 t\u01b0 th\xec t\u1ed5ng t\xedch l\u0169y s\u1ebd v\u1eabn l\xe0 `undefined`, gi\xe1 tr\u1ecb hi\u1ec7n t\u1ea1i l\xe0 `4`. `undefined` v\xe0 `4` s\u1ebd \u0111\u01b0\u1ee3c ghi ra.","id":63,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"Trong class d\u1eabn xu\u1ea5t, ta kh\xf4ng th\u1ec3 truy c\u1eadp t\u1eeb kh\xf3a `this` tr\u01b0\u1edbc khi g\u1ecdi `super`. N\u1ebfu b\u1ea1n ch\u1ea1y th\u1eed, n\xf3 s\u1ebd throw ra m\u1ed9t `ReferenceError`, do \u0111\xf3 1 v\xe0 4 s\u1ebd throw ra reference error.\\n\\nV\u1edbi vi\u1ec7c g\u1ecdi `super`, ch\xfang ta \u0111\xe3 g\u1ecdi h\xe0m constructor c\u1ee7a class cha v\u1edbi tham s\u1ed1 truy\u1ec1n v\xe0o. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, class cha nh\u1eadn `name` l\xe0m \u0111\u1ed1i s\u1ed1 trong constructor, do \u0111\xf3 ch\xfang c\u1ea7n \u0111\u01b0a `name` v\xe0o h\xe0m `super`. \\n\\n`Labrador` class nh\u1eadn v\xe0o hai \u0111\u1ed1i s\u1ed1, `name` v\xec n\xf3 k\u1ebf th\u1eeba `Dog`, v\xe0 `size` - m\u1ed9t thu\u1ed9c t\xednh c\u1ee7a `Labrador` class. C\u1ea3 hai \u0111\u1ec1u c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u01b0a v\xe0o trong constructor c\u1ee7a class `Labrador`, do \u0111\xf3 c\xe1ch kh\u1edfi t\u1ea1o \u0111\xfang l\xe0 2.","id":64,"options":["1","2","3","4"],"question":"V\u1edbi c\xe1ch n\xe0o ch\xfang ta c\xf3 th\u1ec3 k\u1ebf th\u1eeba `Dog` class?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"V\u1edbi `import`, t\u1ea5t c\u1ea3 c\xe1c module import v\xe0o \u0111\u1ec1u s\u1ebd \u0111\u01b0\u1ee3c _pre-parsed_ (\u0111\xe1nh gi\xe1 tr\u01b0\u1edbc). C\xf3 ngh\u0129a l\xe0 nh\u1eefng module \u0111\u01b0\u1ee3c import v\xe0o s\u1ebd \u0111\u01b0\u1ee3c _ch\u1ea1y tr\u01b0\u1edbc_, c\xf2n code trong file s\u1ebd _ch\u1ea1y sau_.\\n\\n\u0110\xf3 ch\xednh l\xe0 \u0111i\u1ec1u kh\xe1c bi\u1ec7t gi\u1eefa `require()` trong CommonJS v\xe0 `import`! V\u1edbi `require()`, ta c\xf3 th\u1ec3 load c\xe1c dependencies t\u1ea1i b\u1ea5t c\u1ee9 khi n\xe0o ta c\u1ea7n. N\u1ebfu ta s\u1eed d\u1ee5ng `require` thay th\u1ebf cho `import` th\xec `running index.js`, `running sum.js`, `3` s\u1ebd \u0111\u01b0\u1ee3c ghi ra.","id":65,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))****","codeLanguage":"javascript","explanation":"M\u1ed7i Symbol l\xe0 m\u1ed9t th\u1ee9 ho\xe0n to\xe0n kh\xe1c bi\u1ec7t. Gi\xe1 tr\u1ecb truy\u1ec1n v\xe0o l\xe0m \u0111\u1ed1i s\u1ed1 trong Symbol ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\xe0 ph\u1ea7n gi\u1ea3i th\xedch cho Symbol \u0111\xf3 m\xe0 th\xf4i, v\xe0 n\xf3 kh\xf4ng li\xean quan g\xec t\u1edbi gi\xe1 tr\u1ecb c\u1ee7a Symbol \u0111\xf3 c\u1ea3. Ch\xfang ta ki\u1ec3m tra t\xednh b\u1eb1ng nhau c\u1ee7a hai Symbol ho\xe0n to\xe0n kh\xe1c bi\u1ec7t: `Symbol(\'foo\')` th\u1ee9 nh\u1ea5t, v\xe0 `Symbol(\'foo\')` th\u1ee9 hai. M\u1ed7i gi\xe1 tr\u1ecb \u0111\u1ec1u l\xe0 ri\xeang bi\u1ec7t v\xe0 duy nh\u1ea5t, n\xean `Symbol(\'foo\') === Symbol(\'foo\')` s\u1ebd tr\u1ea3 v\u1ec1 `false`.","id":66,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"V\u1edbi h\xe0m `padStart` ch\xfang ta c\xf3 th\u1ec3 th\xeam v\xe0o kho\u1ea3ng tr\u1eafng \u0111\u1eb1ng tr\u01b0\u1edbc m\u1ed7i chu\u1ed7i. Gi\xe1 tr\u1ecb \u0111\u01b0a v\xe0o trong h\xe0m l\xe0 _t\u1ed5ng \u0111\u1ed9 d\xe0i_ c\u1ee7a chu\u1ed7i sau khi th\xeam v\xe0o kho\u1ea3ng tr\u1eafng. Chu\u1ed7i `\\"Lydia Hallie\\"` c\xf3 \u0111\u1ed9 d\xe0i l\xe0 `12` n\xean `name.padStart(13)` s\u1ebd th\xeam v\xe0o m\u1ed9t kho\u1ea3ng tr\u1eafng \u0111\u1eb1ng tr\u01b0\u1edbc chu\u1ed7i.\\n\\nN\u1ebfu \u0111\u1ed1i s\u1ed1 truy\u1ec1n v\xe0o cho h\xe0m `padStart` nh\u1ecf h\u01a1n \u0111\u1ed9 d\xe0i c\u1ee7a chu\u1ed7i, kh\xf4ng c\xf3 kho\u1ea3ng tr\u1eafng n\xe0o \u0111\u01b0\u1ee3c th\xeam v\xe0o.","id":67,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"V\u1edbi ph\xe9p to\xe1n `+`, ta c\xf3 th\u1ec3 n\u1ed1i c\xe1c x\xe2u chu\u1ed7i. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ta n\u1ed1i chu\u1ed7i `\\"\ud83e\udd51\\"` v\u1edbi chu\u1ed7i `\\"\ud83d\udcbb\\"`, k\u1ebft qu\u1ea3 t\u1ea1o ra `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":68,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","A string containing their code points","Error"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"M\u1ed9t _generator_ s\u1ebd \\"t\u1ea1m d\u1eebng\\" khi nh\xecn th\u1ea5y t\u1eeb kh\xf3a `yield`. \u0110\u1ea7u ti\xean ra s\u1ebd \u0111\u01b0a ra chu\u1ed7i \\"Do you love JavaScript?\\", b\u1eb1ng c\xe1ch g\u1ecdi `game.next().value`.\\n\\nCh\u01b0\u01a1ng tr\xecnh s\u1ebd ch\u1ea1y t\u1eebng d\xf2ng, cho t\u1edbi khi n\xf3 t\xecm th\u1ea5y t\u1eeb kh\xf3a `yield`. C\xf3 m\u1ed9t t\u1eeb kh\xf3a `yield` t\u1ea1i d\xf2ng \u0111\u1ea7u ti\xean c\u1ee7a h\xe0m: ch\u01b0\u01a1ng tr\xecnh s\u1ebd d\u1eebng t\u1ea1i \u0111\xe2! _\u0110i\u1ec1u \u0111\xf3 c\xf3 ngh\u0129a l\xe0 bi\u1ebfn `answer` ch\u01b0a h\u1ec1 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a!_\\n\\nKhi ta g\u1ecdi `game.next(\\"Yes\\").value`, `yield` tr\u01b0\u1edbc \u0111\xf3 s\u1ebd \u0111\u01b0\u1ee3c thay th\u1ebf b\u1edfi gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o h\xe0m `next()`, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y l\xe0`\\"Yes\\"`. Theo \u0111\xf3 gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn `answer` gi\u1edd s\u1ebd l\xe0 `\\"Yes\\"`. \u0110i\u1ec1u ki\u1ec7n if s\u1ebd tr\u1ea3 v\u1ec1 `false`, v\xe0 `JavaScript loves you back \u2764\ufe0f` s\u1ebd \u0111\u01b0\u1ee3c ghi ra.\\n\\n\\n\\n\\n\\n****","id":69,"options":["`game.next(\\"Yes\\").value` and `game.next().value`","`game.next.value(\\"Yes\\")` and `game.next.value()`","`game.next().value` and `game.next(\\"Yes\\").value`","`game.next.value()` and `game.next.value(\\"Yes\\")`"],"question":"L\xe0m th\u1ebf n\xe0o c\xf3 th\u1ec3 ghi ra gi\xe1 tr\u1ecb gi\u1ed1ng nh\u01b0 trong comment khi console.log?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` tr\u1ea3 v\u1ec1 chu\u1ed7i nguy\xean b\u1ea3n, c\xe1c k\xfd t\u1ef1 (`\\n`, `\\u000b`, `\\t` etc.) s\u1ebd v\u1eabn l\xe0 nguy\xean b\u1ea3n v\xe0 kh\xf4ng bi\u1ebfn th\xe0nh xu\u1ed1ng d\xf2ng hay kho\u1ea3ng tr\u1eafng! N\u1ebfu ta kh\xf4ng \u0111\u1ec3 l\xe0 chu\u1ed7i nguy\xean b\u1ea3n, s\u1ebd c\xf3 tr\u01b0\u1eddng h\u1ee3p x\u1ea3y ra l\u1ed7i kh\xf4ng mong mu\u1ed1n, v\xed d\u1ee5 v\u1edbi \u0111\u01b0\u1eddng d\u1eabn:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nS\u1ebd cho ta chu\u1ed7i l\xe0:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nV\u1edbi `String.raw`, n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 l\xe0:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nDo \u0111\xf3, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y `Hello\\nworld` s\u1ebd \u0111\u01b0\u1ee3c ghi ra.","id":70,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"M\u1ed9t h\xe0m `async` lu\xf4n lu\xf4n tr\u1ea3 v\u1ec1 m\u1ed9t `promise`. `await` s\u1ebd ch\u1edd cho t\u1edbi khi promise \u0111\xf3 \u0111\u01b0\u1ee3c ho\xe0n th\xe0nh: m\u1ed9t pending promise s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 khi ta g\u1ecdi `getData()` b\u1eb1ng c\xe1ch g\xe1n n\xf3 cho bi\u1ebfn `data`.\\n\\nN\u1ebfu ta mu\u1ed1n truy c\u1eadp gi\xe1 tr\u1ecb \u0111\xe3 ho\xe0n th\xe0nh c\u1ee7a promise, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y l\xe0 `\\"I made it\\"`, ta c\xf3 th\u1ec3 s\u1eed d\u1ee5ng h\xe0m `.then()` ngay sau `data` nh\u01b0 sau:\\n\\n`data.then(res => console.log(res))`\\n\\nKhi n\xe0y n\xf3 s\u1ebd ghi ra `\\"I made it!\\"`","id":71,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"H\xe0m `.push()` tr\u1ea3 v\u1ec1 _\u0111\u1ed9 d\xe0i_ c\u1ee7a m\u1ea3ng m\u1edbi! Tr\u01b0\u1edbc \u0111\xf3, m\u1ea3ng ch\u1ec9 h\u1ed3m m\u1ed9t ph\u1ea7n t\u1eed l\xe0 `\\"banana\\"` v\xe0 c\xf3 \u0111\u1ed9 d\xe0i l\xe0 `1`. Sau khi th\xeam chu\u1ed7i `\\"apple\\"` v\xe0o m\u1ea3ng, m\u1ea3ng l\xfac n\xe0y c\xf3 hai chu\u1ed7i v\xe0 c\xf3 \u0111\u1ed9 d\xe0i l\xe0 `2`. Do \u0111\xf3 h\xe0m `addToList` s\u1ebd tr\u1ea3 v\u1ec1 2.\\n\\nH\xe0m `push` s\u1ebd thay \u0111\u1ed5i ch\xednh b\u1ea3n th\xe2n m\u1ea3ng truy\u1ec1n v\xe0o. Do \u0111\xf3 n\u1ebfu ch\xfang ta mu\u1ed1n tr\u1ea3 v\u1ec1 _m\u1ea3ng_ thay v\xec ch\u1ec9 tr\u1ea3 v\u1ec1 _\u0111\u1ed9 d\xe0i_, ch\xfang ta n\xean tr\u1ea3 v\u1ec1 tr\u1ef1c ti\u1ebfp m\u1ea3ng `list` sau khi \u0111\xe3 th\xeam `item` v\xe0o \u0111\xf3.","id":72,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` khi\u1ebfn cho ch\xfang ta kh\xf4ng th\u1ec3 th\xeam v\xe0o, x\xf3a \u0111i hay thay \u0111\u1ed5i b\u1ea5t k\xec thu\u1ed9c t\xednh n\xe0o c\u1ee7a object (tr\u1eeb phi gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh l\u1ea1i ch\xednh l\xe0 m\u1ed9t object kh\xe1c).\\n\\nKhi ch\xfang ta t\u1ea1o ra bi\u1ebfn `shape` v\xe0 set cho n\xf3 gi\xe1 tr\u1ecb b\u1eb1ng v\u1edbi m\u1ed9t object \u0111\xe3 \u0111\u01b0\u1ee3c \u0111\xf3ng b\u0103ng l\xe0 `box`, th\xec `shape` c\u0169ng s\u1ebd tr\u1ecf t\u1edbi m\u1ed9t object \u0111\xe3 \u0111\u01b0\u1ee3c \u0111\xf3ng b\u0103ng. Ta c\xf3 th\u1ec3 check m\u1ed9t object c\xf3 \u0111ang b\u1ecb \u0111\xf3ng b\u0103ng hay kh\xf4ng b\u1eb1ng `Object.isFrozen`. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, `Object.isFrozen(shape)` tr\u1ea3 v\u1ec1 true, v\xec `shape` \u0111ang tr\u1ecf t\u1edbi m\u1ed9t object b\u1ecb \u0111\xf3ng b\u0103ng.\\n\\nDo \u0111\xf3, c\u1ed9ng v\u1edbi vi\u1ec7c `x` kh\xf4ng ph\u1ea3i l\xe0 object, ta s\u1ebd kh\xf4ng th\u1ec3 thay \u0111\u1ed5i gi\xe1 tr\u1ecb c\u1ee7a `x`. `x` s\u1ebd v\u1eabn l\xe0 `10`, v\xe0 `{ x: 10, y: 20 }` \u0111\u01b0\u1ee3c ghi ra.","id":73,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"Khi ta ti\u1ebfn h\xe0nh unpack gi\xe1 tr\u1ecb `name` t\u1eeb object \u1edf ph\xeda b\xean ph\u1ea3i, ta \u0111\xe3 g\xe1n gi\xe1 tr\u1ecb `\\"Lydia\\"` c\u1ee7a n\xf3 cho bi\u1ebfn c\xf3 t\xean l\xe0 `myName`.\\n\\nV\u1edbi c\xfa ph\xe1p `{ name: myName }`, ch\xfang ta mu\u1ed1n khai b\xe1o m\u1ed9t bi\u1ebfn `myName` v\u1edbi gi\xe1 tr\u1ecb l\xe0 gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `name` trong object ph\xeda b\xean ph\u1ea3i.\\n\\nDo `name` ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a, n\xean ghi log ra, n\xf3 s\u1ebd throw ra m\u1ed9t ReferenceError.","id":74,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"M\u1ed9t h\xe0m \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 _pure function_ khi n\xf3 lu\xf4n lu\xf4n tr\u1ea3 v\u1ec1 m\u1ed9t gi\xe1 tr\u1ecb gi\u1ed1ng nhau, n\u1ebfu \u0111\u1ed1i s\u1ed1 \u0111\u01b0a v\xe0o l\xe0 gi\u1ed1ng nhau.\\n\\nH\xe0m `sum` lu\xf4n tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb gi\u1ed1ng nhau. N\u1ebfu ta \u0111\u01b0a v\xe0o `1` v\xe0 `2`, n\xf3 s\u1ebd _lu\xf4n_ tr\u1ea3 v\u1ec1 `3`. N\u1ebfu ta \u0111\u01b0a v\xe0o `5` v\xe0 `10`, n\xf3 _lu\xf4n_ tr\u1ea3 v\u1ec1 `15`. C\u1ee9 nh\u01b0 v\u1eady, \u0111\xe2y l\xe0 m\u1ed9t _pure function_.","id":75,"options":["Yes","No"],"question":"\u0110\xe2y c\xf3 ph\u1ea3i l\xe0 m\u1ed9t pure function kh\xf4ng?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"H\xe0m `add` ch\xednh l\xe0 m\u1ed9t h\xe0m _memoized_ (h\xe0m c\xf3 nh\u1edb). V\u1edbi vi\u1ec7c c\xf3 nh\u1edb, ch\xfang ta c\xf3 th\u1ec3 cache l\u1ea1i k\u1ebft qu\u1ea3 c\u1ee7a function \u0111\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9 t\xednh to\xe1n l\xean. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ch\xfang ta t\u1ea1o ra m\u1ed9t `cache` object \u0111\u1ec3 l\u01b0u tr\u1eef nh\u1eefng k\u1ebft qu\u1ea3 t\xednh to\xe1n tr\u01b0\u1edbc \u0111\xf3.\\n\\nM\u1ed7i l\u1ea7n ch\xfang ta g\u1ecdi h\xe0m `addFunction` v\u1edbi \u0111\u1ed1i s\u1ed1 gi\u1ed1ng nhau, \u0111\u1ea7u ti\xean n\xf3 s\u1ebd check xem \u0111\u1ed1i s\u1ed1 \u0111\xf3 c\xf3 t\u1ed3n t\u1ea1i trong cache hay kh\xf4ng. N\u1ebfu c\xf3, gi\xe1 tr\u1ecb trong cache s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 lu\xf4n, ti\u1ebft ki\u1ec7m th\u1eddi gian t\xednh to\xe1n. C\xf2n n\u1ebfu kh\xf4ng th\xec n\xf3 s\u1ebd ti\u1ebfn h\xe0nh t\xednh to\xe1n k\u1ebft qu\u1ea3 v\xe0 ti\u1ebfp t\u1ee5c l\u01b0u v\xe0o cache.\\n\\nCh\xfang ta g\u1ecdi h\xe0m `addFunction` ba l\u1ea7n v\u1edbi c\xf9ng m\u1ed9t \u0111\u1ed1i s\u1ed1: trong l\u1ea7n g\u1ecdi \u0111\u1ea7u ti\xean, gi\xe1 tr\u1ecb c\u1ee7a `num` l\xe0 `10` v\xe0 ch\u01b0a c\xf3 m\u1eb7t trong cache. Do \u0111\xf3 `num in cache` tr\u1ea3 v\u1ec1 `false`, v\xe0 s\u1ebd ch\u1ea1y v\xe0o else block: `Calculated! 20` s\u1ebd \u0111\u01b0\u1ee3c ghi ra, v\xe0 10 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o c\u1ea1che. `cache` khi n\xe0y s\u1ebd l\xe0 `{ 10: 20 }`.\\n\\nT\u1ea1i l\u1ea7n g\u1ecdi th\u1ee9 hai, `cache` object \u0111\xe3 c\xf3 gi\xe1 tr\u1ecb `10`. `num in cache` tr\u1ea3 v\u1ec1 `true`, v\xe0 `\'From cache! 20\'` \u0111\u01b0\u1ee3c ghi ra.\\n\\nT\u1ea1i l\u1ea7n g\u1ecdi th\u1ee9 ba, ta \u0111\u01b0a v\xe0o `5 * 2`, t\u1ee9c `10` v\xe0o h\xe0m. Ti\u1ebfp t\u1ee5c gi\u1ed1ng nh\u01b0 tr\xean, `\'From cache! 20\'` s\u1ebd \u0111\u01b0\u1ee3c ghi ra.","id":76,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item)\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item)\\n}","codeLanguage":"javascript","explanation":"V\u1edbi v\xf2ng l\u1eb7p _for-in_, ch\xfang ta c\xf3 th\u1ec3 duy\u1ec7t qua c\xe1c thu\u1ed9c t\xednh **enumerable** c\u1ee7a object. V\u1edbi m\u1ea3ng, thu\u1ed9c t\xednh enumerable ch\xednh l\xe0 c\xe1c \\"key\\" c\u1ee7a m\u1ea3ng, hay ch\xednh l\xe0 c\xe1c index c\u1ee7a m\u1ea3ng \u0111\xf3. Ta c\xf3 th\u1ec3 coi m\u1ea3ng nh\u01b0 l\xe0:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\nDo \u0111\xf3 `0` `1` `2` `3` \u0111\u01b0\u1ee3c ghi ra.\\n\\nV\u1edbi v\xf2ng l\u1eb7p _for-of_, ch\xfang ta s\u1ebd duy\u1ec7t qua c\xe1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ed9t **iterable**. M\u1ed9t m\u1ea3ng ch\xednh l\xe0 m\u1ed9t iterable. Khi ch\xfang ta duy\u1ec7t qua m\u1ea3ng, bi\u1ebfn \\"item\\" ch\xednh l\xe0 ph\u1ea7n t\u1eed m\xe0 n\xf3 \u0111ang duy\u1ec7t qua, do \u0111\xf3 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \u0111\u01b0\u1ee3c ghi ra.","id":77,"options":["`0` `1` `2` `3` and `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` and `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` and `0` `1` `2` `3`","`0` `1` `2` `3` and `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"M\u1ea3ng c\xf3 th\u1ec3 nh\u1eadn b\u1ea5t c\u1ee9 gi\xe1 tr\u1ecb n\xe0o. S\u1ed1, chu\u1ed7i, objects, m\u1ea3ng kh\xe1c, null, boolean, undefined, v\xe0 nhi\u1ec1u d\u1ea1ng bi\u1ec3u th\u1ee9c n\u1eefa nh\u01b0 ng\xe0y th\xe1ng, h\xe0m, v\xe0 c\xe1c t\xednh to\xe1n.\\n\\nGi\xe1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed ch\xednh l\xe0 gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1.  `1 + 2` tr\u1ea3 v\u1ec1 `3`, `1 * 2` tr\u1ea3 v\u1ec1 `2`, v\xe0 `1 / 2` tr\u1ea3 v\u1ec1 `0.5`.","id":78,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"M\u1eb7c \u0111\u1ecbnh, \u0111\u1ed1i s\u1ed1 s\u1ebd c\xf3 gi\xe1 tr\u1ecb l\xe0 `undefined`, tr\u1eeb phi ta g\xe1n gi\xe1 tr\u1ecb cho n\xf3 khi \u0111\u01b0a v\xe0o h\xe0m. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ta kh\xf4ng \u0111\u01b0a v\xe0o gi\xe1 tr\u1ecb n\xe0o cho \u0111\u1ed1i s\u1ed1 `name` c\u1ea3. Do \u0111\xf3 `name` s\u1ebd l\xe0 `undefined` v\xe0 \u0111\u01b0\u1ee3c ghi ra.\\n\\nV\u1edbi c\xfa ph\xe1p ES6, ta c\xf3 th\u1ec3 thay \u0111\u1ed5i gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh `undefined` b\u1eb1ng m\u1ed9t gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh kh\xe1c. V\xed d\u1ee5:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nTrong tr\u01b0\u1eddng h\u1ee3p n\xe0y, n\u1ebfu ta kh\xf4ng \u0111\u01b0a gi\xe1 tr\u1ecb n\xe0o v\xe0o ho\u1eb7c \u0111\u01b0a v\xe0o `undefined`, `name` c\u0169ng s\u1ebd nh\u1eadn gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh l\xe0 `Lydia`.","id":79,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"Gi\xe1 tr\u1ecb c\u1ee7a `this` ph\u1ee5 thu\u1ed9c v\xe0o v\u1ecb tr\xed m\xe0 n\xf3 \u0111\u01b0\u1ee3c g\u1ecdi. Trong m\u1ed9t **ph\u01b0\u01a1ng th\u1ee9c**, v\xed d\u1ee5 `getStatus`, `this` tr\u1ecf t\u1edbi _object ch\u1ee9a ph\u01b0\u01a1ng th\u1ee9c \u0111\xf3_. Ph\u01b0\u01a1ng th\u1ee9c n\xe0y thu\u1ed9c `data` object, do \u0111\xf3 `this` tr\u1ecf t\u1edbi `data` object. Khi ch\xfang ta g\u1ecdi `this.status` th\xec thu\u1ed9c t\xednh `status` c\u1ee7a `data` s\u1ebd \u0111\u01b0\u1ee3c ghi ra, ch\xednh l\xe0 `\\"\ud83e\udd51\\"`.\\n\\nV\u1edbi ph\u01b0\u01a1ng th\u1ee9c `call`, ch\xfang ta thay \u0111\u1ed5i tham chi\u1ebfu m\xe0 `this` tr\u1ecf t\u1edbi. Trong **h\xe0m**, t\u1eeb kh\xf3a `this` tr\u1ecf t\u1edbi _object ch\u1ee9a h\xe0m \u0111\xf3_. Ch\xfang ta khai b\xe1o h\xe0m `setTimeout` trong _global object_, do \u0111\xf3 b\xean trong h\xe0m `setTimeout` th\xec `this` s\u1ebd tr\u1ecf t\u1edbi _global object_. T\u1ea1i bi\u1ebfn global object, c\xf3 m\u1ed9t bi\u1ebfn _status_ v\u1edbi gi\xe1 tr\u1ecb `\\"\ud83d\ude0e\\"`. Do \u0111\xf3 khi g\u1ecdi `this.status`, `\\"\ud83d\ude0e\\"` s\u1ebd \u0111\u01b0\u1ee3c ghi ra.","id":80,"options":["`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` and `\\"\ud83d\ude0e\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"Ch\xfang ta set bi\u1ebfn `city` b\u1eb1ng v\u1edbi gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `city` c\u1ee7a object `person`. Nh\u01b0ng object n\xe0y kh\xf4ng c\xf3 thu\u1ed9c t\xednh n\xe0o l\xe0 `city` c\u1ea3, n\xean gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn `city` s\u1ebd l\xe0 `undefined`. \\n\\nCh\xfa \xfd l\xe0 ch\xfang ta _kh\xf4ng tham chi\u1ebfu_ t\u1edbi b\u1ea3n th\xe2n object `person`! Ch\xfang ta ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\xe0 set gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn `city` b\u1eb1ng v\u1edbi gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `city` trong object `person` m\xe0 th\xf4i.\\n\\nSau \u0111\xf3 ch\xfang ta set bi\u1ebfn `city` b\u1eb1ng v\u1edbi chu\u1ed7i `\\"Amsterdam\\"`. \u0110i\u1ec1u n\xe0y kh\xf4ng h\u1ec1 \u1ea3nh h\u01b0\u1edfng g\xec t\u1edbi object person v\xec kh\xf4ng c\xf3 tham chi\u1ebfu n\xe0o \u1edf \u0111\xe2y c\u1ea3.\\n\\nDo \u0111\xf3 khi ghi object `person` ra, T\u1ea5t c\u1ea3 c\xe1c thu\u1ed9c t\xednh v\u1eabn nh\u01b0 c\u0169 kh\xf4ng h\u1ec1 thay \u0111\u1ed5i g\xec c\u1ea3.","id":81,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"Bi\u1ebfn s\u1ed1 \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi c\xe1c t\u1eeb kh\xf3a nh\u01b0 `const` hay `let` \u0111\u1ec1u l\xe0 _block-scoped_. Block ch\xednh l\xe0 nh\u1eefng kh\u1ed1i \u0111\u01b0\u1ee3c bao b\u1ecdc b\u1edfi c\u1eb7p ngo\u1eb7c nh\u1ecdn (`{ }`). Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y n\xf3 ch\xednh l\xe0 c\u1eb7p ngo\u1eb7c bao quanh nh\u1eefng c\xe2u l\u1ec7nh `if/else`. Ch\xfang ta kh\xf4ng th\u1ec3 truy c\u1eadp \u0111\u1ebfn bi\u1ebfn \u0111\xf3 b\xean ngo\xe0i block, v\xe0 k\u1ebft qu\u1ea3 l\xe0 throw m\u1ed9t ReferenceError.","id":82,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"Gi\xe1 tr\u1ecb c\u1ee7a `res` trong `.then` th\u1ee9 hai ch\xednh l\xe0 gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 t\u1eeb `.then` tr\u01b0\u1edbc \u0111\xf3. Ch\xfang ta c\xf3 th\u1ec3 th\u1ef1c hi\u1ec7n `.then` li\xean ti\u1ebfp nh\u01b0 v\u1eady, c\xe1c gi\xe1 tr\u1ecb s\u1ebd li\xean ti\u1ebfp \u0111\u01b0\u1ee3c truy\u1ec1n t\u1edbi h\xe0m x\u1eed l\xfd ti\u1ebfp theo.","id":83,"options":["The result of the `fetch` method.","The result of the second invocation of the `fetch` method.","The result of the callback in the previous `.then()`.","It would always be undefined."],"question":"Nh\u1eefng th\xf4ng tin n\xe0o s\u1ebd \u0111\u01b0\u1ee3c ghi ra?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"V\u1edbi `!!name`, ch\xfang ta s\u1ebd \u0111\xe1nh gi\xe1 gi\xe1 tr\u1ecb c\u1ee7a `name` l\xe0 _truthy_ hay _falsy_. N\u1ebfu name l\xe0 truthy, th\xec `!name` s\u1ebd tr\u1ea3 v\u1ec1 `false`. `!false` (hay ch\xednh l\xe0 `!!name` khi n\xe0y) s\u1ebd tr\u1ea3 v\u1ec1 `true`.\\n\\nB\u1eb1ng c\xe1ch set `hasName` b\u1eb1ng v\u1edbi `name`, ch\xfang ta set `hasName` b\u1eb1ng v\u1edbi gi\xe1 tr\u1ecb \u0111\u1ed1i s\u1ed1 \u0111\u01b0a v\xe0o trong h\xe0m `getName`, kh\xf4ng th\u1ecfa m\xe3n v\xec ta \u0111\xe3 gi\u1edbi h\u1ea1n l\xe0 kh\xf4ng \u0111\u01b0a `true` v\xe0o.\\n\\n`new Boolean(true)` tr\u1ea3 v\u1ec1 m\u1ed9t object wrapper, ch\u1ee9 kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t gi\xe1 tr\u1ecb boolean.\\n\\n`name.length` tr\u1ea3 v\u1ec1 \u0111\u1ed9 d\xe0i c\u1ee7a \u0111\u1ed1i s\u1ed1, ch\u1ee9 kh\xf4ng ph\u1ea3i `true`.","id":84,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"B\u1eb1ng c\xe1ch n\xe0o ch\xfang ta c\xf3 th\u1ec3 set `hasName` b\u1eb1ng `true`, n\u1ebfu ch\xfang ta kh\xf4ng \u0111\u01b0a `true` v\xe0o \u0111\u1ed1i s\u1ed1?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"Ta c\xf3 th\u1ec3 set gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh c\u1ee7a m\u1ed9t tham s\u1ed1 l\xe0 tham s\u1ed1 kh\xe1c trong h\xe0m, mi\u1ec5n l\xe0 tham s\u1ed1 \u0111\xf3 \u0111\u01b0\u1ee3c khai b\xe1o _tr\u01b0\u1edbc_ tham s\u1ed1 m\u1eb7c \u0111\u1ecbnh. Ch\xfang ta \u0111\u01b0a `10` v\xe0o h\xe0m `sum`. N\u1ebfu h\xe0m `sum` ch\u1ec9 nh\u1eadn 1 \u0111\u1ed1i s\u1ed1, n\xf3 c\xf3 ngh\u0129a l\xe0 gi\xe1 tr\u1ecb c\u1ee7a `num2` kh\xf4ng \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o, n\xean n\xf3 s\u1ebd l\u1ea5y gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh l\xe0 gi\xe1 tr\u1ecb c\u1ee7a `num1` \u0111\xe3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o, hay ch\xednh l\xe0 `10` trong tr\u01b0\u1eddng h\u1ee3p n\xe0y. Khi n\xe0y `num1 + num2` tr\u1ea3 v\u1ec1 `20`.\\n\\nN\u1ebfu ch\xfang ta th\u1eed set m\u1ed9t gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh c\u1ee7a tham s\u1ed1 b\u1eb1ng v\u1edbi gi\xe1 tr\u1ecb c\u1ee7a tham s\u1ed1 khai b\xe1o _sau_ (v\u1ec1 b\xean ph\u1ea3i), gi\xe1 tr\u1ecb c\u1ee7a tham s\u1ed1 \u0111\xf3 s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o v\xe0 d\u1eabn \u0111\u1ebfn throw ra l\u1ed7i.","id":85,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"C\xfa ph\xe1p `import * as data` s\u1ebd import _t\u1ea5t c\u1ea3 nh\u1eefng g\xec \u0111\u01b0\u1ee3c export_ t\u1eeb `module.js` v\xe0o trong `index.js` v\xe0 l\u01b0u tr\u1eef d\u01b0\u1edbi m\u1ed9t object c\xf3 t\xean l\xe0 `data`. Trong file `module.js`, c\xf3 hai th\u1ee9 \u0111\u01b0\u1ee3c export ra: default export v\xe0 m\u1ed9t named export. Default export l\xe0 m\u1ed9t h\xe0m tr\u1ea3 v\u1ec1 chu\u1ed7i `\\"Hello World\\"`, v\xe0 named export l\xe0 m\u1ed9t bi\u1ebfn `name` nh\u1eadn gi\xe1 tr\u1ecb l\xe0 chu\u1ed7i `\\"Lydia\\"`. \\n\\nDo \u0111\xf3 `data` object c\xf3 thu\u1ed9c t\xednh `default` cho default export, c\xe1c thu\u1ed9c t\xednh kh\xe1c s\u1ebd c\xf3 t\xean ch\xednh l\xe0 t\xean c\u1ee7a named exports v\xe0 gi\xe1 tr\u1ecb \u0111i k\xe8m.","id":86,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"Classes ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\xe0 `syntactical sugar` (c\xfa ph\xe1p \u0111\u1eb7c bi\u1ec7t) c\u1ee7a function constructors m\xe0 th\xf4i. N\xf3 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c ta vi\u1ebft m\u1ed9t function th\u1ebf n\xe0y:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\nG\u1ecdi m\u1ed9t constructor v\u1edbi t\u1eeb kh\xf3a `new` s\u1ebd t\u1ea1o ra m\u1ed9t instance c\u1ee7a class `Person`, `typeof` s\u1ebd tr\u1ea3 v\u1ec1 l\xe0 `\\"object\\"` cho c\xe1c instance. Do \u0111\xf3 `typeof member` tr\u1ea3 v\u1ec1 `\\"object\\"`.","id":87,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"H\xe0m `.push` tr\u1ea3 v\u1ec1 _\u0111\u1ed9 d\xe0i m\u1edbi_ c\u1ee7a m\u1ea3ng, ch\u1ee9 kh\xf4ng ph\u1ea3i b\u1ea3n th\xe2n m\u1ea3ng \u0111\xf3! B\u1eb1ng c\xe1ch set `newList` b\u1eb1ng v\u1edbi `[1, 2, 3].push(4)`, ta \u0111\xe3 set cho `newList` gi\xe1 tr\u1ecb l\xe0 `4` - t\u1ee9c \u0111\u1ed9 d\xe0i c\u1ee7a m\u1ea3ng l\xfac n\xe0y. \\n\\nSau \u0111\xf3 ch\xfang ta ti\u1ebfn h\xe0nh `.push` tr\xean `newList`. V\xec `newList` l\xe0 m\u1ed9t s\u1ed1 th\xf4ng th\u01b0\u1eddng, ta kh\xf4ng th\u1ec3 d\xf9ng `.push` \u0111\u01b0\u1ee3c, n\xean s\u1ebd throw ra m\u1ed9t TypeError.","id":88,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"H\xe0m th\xf4ng th\u01b0\u1eddng gi\u1ed1ng nh\u01b0 `giveLydiaPizza`, s\u1ebd c\xf3 thu\u1ed9c t\xednh `prototype` l\xe0 m\u1ed9t object (prototype object) v\u1edbi m\u1ed9t thu\u1ed9c t\xednh l\xe0 `constructor`. C\xf2n `arrow functions` gi\u1ed1ng nh\u01b0 `giveLydiaChocolate`th\xec kh\xf4ng c\xf3 thu\u1ed9c t\xednh `prototype` n\xe0y. `undefined` tr\u1ea3 v\u1ec1 khi ta truy c\u1eadp thu\u1ed9c t\xednh `prototype` b\u1eb1ng c\xe1ch g\u1ecdi `giveLydiaChocolate.prototype`.","id":89,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t m\u1ea3ng c\u1ee7a m\u1ea3ng, bao g\u1ed3m c\xe1c key v\xe0 c\xe1c object:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]` \\n\\nKh\xed s\u1eed d\u1ee5ng `for-of`, ch\xfang ta s\u1ebd duy\u1ec7t qua t\u1eebng th\xe0nh ph\u1ea7n c\u1ee7a m\u1ea3ng, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y ch\xednh l\xe0 nh\u1eefng m\u1ea3ng con. \u0110\u1ed3ng th\u1eddi ti\u1ebfn h\xe0nh g\xe1n gi\xe1 tr\u1ecb lu\xf4n trong vongf l\u1eb7p for-of, b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng `const [x, y]`. Khi n\xe0y `x` s\u1ebd l\xe0 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\xean trong m\u1ea3ng con, `y` ch\xednh l\xe0 ph\u1ea7n t\u1eed th\u1ee9 hai trong m\u1ea3ng con. \\n\\nM\u1ea3ng con \u0111\u1ea7u ti\xean l\xe0 `[ \\"name\\", \\"Lydia\\" ]`, n\xean `x` s\u1ebd l\xe0 `\\"name\\"`, v\xe0 `y` s\u1ebd l\xe0 `\\"Lydia\\"`, v\xe0 \u0111\u01b0\u1ee3c ghi ra.\\nM\u1ea3ng con th\u1ee9 hai l\xe0 `[ \\"age\\", 21 ]`, n\xean `x` s\u1ebd l\xe0 `\\"age\\"`, v\xe0 `y` s\u1ebd l\xe0 `21`, v\xe0 \u0111\u01b0\u1ee3c ghi ra.","id":90,"options":["`name` `Lydia` v\xe0 `age` `21`","`[\\"name\\", \\"Lydia\\"]` v\xe0 `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` v\xe0 `undefined`","`Error`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` l\xe0 c\xfa ph\xe1p tham s\u1ed1 cu\u1ed1i c\xf9ng. Gi\xe1 tr\u1ecb c\u1ee7a tham s\u1ed1 cu\u1ed1i c\xf9ng ch\xednh l\xe0 to\xe0n b\u1ed9 c\xe1c \u0111\u1ed1i s\u1ed1 c\xf2n l\u1ea1i, **v\xe0 n\xf3 l\xe0 tham s\u1ed1 cu\u1ed1i c\xf9ng duy nh\u1ea5t**! Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, tham s\u1ed1 cu\u1ed1i c\xf9ng l\u1ea1i l\xe0 tham s\u1ed1 th\u1ee9 hai. \u0110i\u1ec1u \u0111\xf3 l\xe0 kh\xf4ng th\u1ec3 \u0111\u01b0\u1ee3c, v\xe0 s\u1ebd throw ra m\u1ed9t l\u1ed7i c\xfa ph\xe1p. \\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nN\u1ebfu ta code nh\u01b0 th\u1ebf n\xe0y th\xec l\u1ea1i \u0111\xfang. Gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 s\u1ebd l\xe0 `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":91,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"Ch\xfang ta c\xf3 th\u1ec3 set m\u1ed9t class v\u1edbi gi\xe1 tr\u1ecb l\xe0 m\u1ed9t classes/function constructor kh\xe1c. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ta set `Person` b\u1eb1ng v\u1edbi `AnotherPerson`. Trong constructor, `this.name` l\xe0 `Sarah`, do \u0111\xf3 gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh n\xe0y trong instance `member` ch\xednh l\xe0 `\\"Sarah\\"`.","id":92,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"Ph\u01b0\u01a1ng th\u1ee9c `Object.keys` s\u1ebd tr\u1ea3 v\u1ec1 to\xe0n b\u1ed9 nh\u1eefng key c\u1ee7a c\xe1c thu\u1ed9c t\xednh _enumerable_ tr\xean m\u1ed9t object. Nh\u01b0ng Symbol kh\xf4ng ph\u1ea3i d\u1ea1ng _enumerable_. do \u0111\xf3 n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t m\u1ea3ng r\u1ed7ng. Tuy nhi\xean khi ta log ra to\xe0n b\u1ed9 object, th\xec ta s\u1ebd ghi ra to\xe0n b\u1ed9 c\xe1c thu\u1ed9c t\xednh, cho d\xf9 \u0111\xf3 c\xf3 l\xe0 thu\u1ed9c t\xednh _enumerable_ hay kh\xf4ng.\\n\\n\u0110\xf3 ch\xednh l\xe0 m\u1ed9t \u0111\u1eb7c tr\u01b0ng c\u1ee7a Symbol: B\xean c\u1ea1nh vi\u1ec7c n\xf3 bi\u1ec3u di\u1ec5n m\u1ed9t gi\xe1 tr\u1ecb duy nh\u1ea5t (tr\xe1nh vi\u1ec7c x\u1ea3y ra xung \u0111\u1ed9t t\xean g\u1ecdi, v\xed d\u1ee5 khi ta s\u1eed d\u1ee5ng 2 th\u01b0 vi\u1ec7n m\xe0 mu\u1ed1n th\xeam thu\u1ed9c t\xednh v\xe0o cho c\xf9ng m\u1ed9t object ch\u1eb3ng h\u1ea1n), n\xf3 c\xf2n gi\xfap \\"\u1ea9n\\" thu\u1ed9c t\xednh \u0111\xf3 \u0111i (d\xf9 kh\xf4ng ho\xe0n to\xe0n, ta v\u1eabn c\xf3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng ph\u01b0\u01a1ng th\u1ee9c `Object.getOwnPropertySymbols()`).","id":93,"options":["`{Symbol(\'a\'): \'b\'}` v\xe0 `[\\"{Symbol(\'a\')\\"]`","`{}` v\xe0 `[]`","`{ a: \\"b\\" }` v\xe0 `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` v\xe0 `[]`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"H\xe0m `getList` nh\u1eadn v\xe0o m\u1ed9t m\u1ea3ng c\xe1c \u0111\u1ed1i s\u1ed1, v\xe0 ti\u1ebfn h\xe0nh x\u1eed l\xfd m\u1ea3ng \u0111\xf3 lu\xf4n khi \u0111\u01b0a v\xe0o h\xe0m:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\n V\u1edbi vi\u1ec7c s\u1eed d\u1ee5ng c\xfa ph\xe1p tham s\u1ed1 cu\u1ed1i c\xf9ng `...y`, ch\xfang ta \u0111\u01b0a to\xe0n b\u1ed9 \\"nh\u1eefng \u0111\u1ed1i s\u1ed1 c\xf2n l\u1ea1i\\" v\xe0o m\u1ed9t m\u1ea3ng y. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y \u0111\xf3 l\xe0 m\u1ea3ng g\u1ed3m c\xe1c ph\u1ea7n t\u1eed `2`, `3` v\xe0 `4`. Do \u0111\xf3 gi\xe1 tr\u1ecb c\u1ee7a `y` l\xfac n\xe0y ch\xednh l\xe0 m\u1ea3ng `[2, 3, 4]`. Gi\xe1 tr\u1ecb c\u1ee7a `x` l\xe0 `1`, n\xean khi ghi `[x, y]` ra, k\u1ebft qu\u1ea3 s\u1ebd l\xe0 `[1, [2, 3, 4]]`.\\n\\nH\xe0m `getUser` nh\u1eadn v\xe0o m\u1ed9t object. V\u1edbi c\xfa ph\xe1p arrow function, ch\xfang ta s\u1ebd kh\xf4ng ph\u1ea3i vi\u1ebft trong ngo\u1eb7c nh\u1ecdn `{}` n\u1eefa n\u1ebfu ta ch\u1ec9 mu\u1ed1n \u0111\u01a1n thu\u1ea7n tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb. Tuy nhi\xean, n\u1ebfu ta mu\u1ed1n tr\u1ea3 v\u1ec1 m\u1ed9t _object_ t arrow function, ta s\u1ebd ph\u1ea3i vi\u1ebft ch\xfang trong d\u1ea5u ngo\u1eb7c tr\xf2n `()`, n\u1ebfu kh\xf4ng th\xec s\u1ebd kh\xf4ng c\xf3 gi\xe1 tr\u1ecb n\xe0o \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1! V\xed d\u1ee5 nh\u01b0 sau:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\nDo kh\xf4ng gi\xe1 tr\u1ecb n\xe0o \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1, k\u1ebft qu\u1ea3 s\u1ebd l\xe0 `undefined`.","id":94,"options":["`[1, [2, 3, 4]]` v\xe0 `undefined`","`[1, [2, 3, 4]]` v\xe0 `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` v\xe0 `{ name: \\"Lydia\\", age: 21 }`","`Error` v\xe0 `{ name: \\"Lydia\\", age: 21 }`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"Bi\u1ebfn `name` c\xf3 gi\xe1 tr\u1ecb l\xe0 m\u1ed9t chu\u1ed7i, kh\xf4ng ph\u1ea3i h\xe0m, v\xec th\u1ebf kh\xf4ng th\u1ec3 g\u1ecdi \u0111\u01b0\u1ee3c. \\n\\nTypeErrors s\u1ebd \u0111\u01b0\u1ee3c throw ra n\u1ebfu m\u1ed9t gi\xe1 tr\u1ecb kh\xf4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\xfang ki\u1ec3u. JavaScript mu\u1ed1n `name` l\xe0 m\u1ed9t h\xe0m khi ta ti\u1ebfn h\xe0nh g\u1ecdi n\xf3. Nh\u01b0ng n\xf3 l\xe0 chu\u1ed7i, n\xean s\u1ebd throw ra m\u1ed9t TypeError.\\n\\nSyntaxErrors s\u1ebd \u0111\u01b0\u1ee3c throw khi ta vi\u1ebft code kh\xf4ng \u0111\xfang c\xfa ph\xe1p c\u1ee7a JavaScript, v\xed d\u1ee5 thay v\xec `return` ta vi\u1ebft `retrun`. \\n\\nReferenceErrors s\u1ebd \u0111\u01b0\u1ee3c throw ra khi Javascript kh\xf4ng th\u1ec3 t\xecm \u0111\u01b0\u1ee3c tham chi\u1ebfu n\xe0o \u0111\u1ebfn gi\xe1 tr\u1ecb m\xe0 ta \u0111ang c\u1ed1 truy c\u1eadp.","id":95,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"// \ud83c\udf89\u2728 \u0110\xe2y l\xe0 c\xe2u h\u1ecfi th\u1ee9 100 c\u1ee7a t\xf4i! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` l\xe0 m\u1ed9t gi\xe1 tr\u1ecb truthy. V\u1edbi ph\xe9p to\xe1n `&&` , gi\xe1 tr\u1ecb b\xean ph\u1ea3i s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 n\u1ebfu gi\xe1 tr\u1ecb b\xean tr\xe1i l\xe0 truthy. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y gi\xe1 tr\u1ecb b\xean tr\xe1i `[]` l\xe0 truthy, n\xean `\\"Im\'` s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1.\\n\\n`\\"\\"` l\xe0 m\u1ed9t gi\xe1 tr\u1ecb falsy. N\u1ebfu gi\xe1 tr\u1ecb b\xean tr\xe1i l\xe0 falsy, kh\xf4ng c\xf3 g\xec \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 c\u1ea3. Do \u0111\xf3 `n\'t` s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1.","id":96,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"V\u1edbi ph\xe9p to\xe1n `||`, ta s\u1ebd tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb truethy \u0111\u1ea7u ti\xean. N\u1ebfu t\u1ea5t c\u1ea3 \u0111\u1ec1u l\xe0 falsy, gi\xe1 tr\u1ecb cu\u1ed1i c\xf9ng s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1.\\n\\n`(false || {} || null)`: object r\u1ed7ng `{}` l\xe0 m\u1ed9t gi\xe1 tr\u1ecb truthy. N\xf3 l\xe0 gi\xe1 tr\u1ecb truethy \u0111\u1ea7u ti\xean v\xe0 duy nh\u1ea5t n\xean s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1. Do \u0111\xf3 `one` s\u1ebd l\xe0 `{}`.\\n\\n`(null || false || \\"\\")`: T\u1ea5t c\u1ea3 to\xe1n h\u1ea1ng \u0111\u1ec1u l\xe0 falsy. C\xf3 ngh\u0129a l\xe0 to\xe1n h\u1ea1ng cu\u1ed1i c\xf9ng `\\"\\"` s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1. Do \u0111\xf3 `two` s\u1ebd l\xe0 `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: m\u1ea3ng r\u1ed7ng `[]` l\xe0 m\u1ed9t gi\xe1 tr\u1ecb truthy. N\xf3 l\xe0 gi\xe1 tr\u1ecb truthy \u0111\u1ea7u ti\xean n\xean s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1. Do \u0111\xf3 `three` s\u1ebd l\xe0 `[]`.","id":97,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"C\xf3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng \u0111\u01a1n gi\u1ea3n c\xe1ch promise th\u1ef1c thi nh\u01b0 sau: _b\xe2y gi\u1edd t\xf4i s\u1ebd \u0111\u1ec3 t\u1ea1m n\xf3 sang m\u1ed9t b\xean v\xec n\xf3 t\xednh to\xe1n m\u1ea5t th\u1eddi gian. Ch\u1ec9 khi n\xe0o n\xf3 \u0111\u01b0\u1ee3c ho\xe0n th\xe0nh (resolved) hay b\u1ecb h\u1ee7y b\u1ecf (rejected) hay khi call stack tr\u1edf n\xean r\u1ed7ng th\xec t\xf4i s\u1ebd l\u1ea5y gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 ra._\\n\\nD\xf9 ch\xfang ta c\xf3 th\u1ec3 s\u1eed d\u1ee5ng gi\xe1 tr\u1ecb thu \u0111\u01b0\u1ee3c b\u1eb1ng c\xfa ph\xe1p `.then`, ho\u1eb7c s\u1eed d\u1ee5ng c\u1eb7p c\xfa ph\xe1p `await/async`, nh\u01b0ng, c\xe1ch ch\xfang ho\u1ea1t \u0111\u1ed9ng l\xe0 kh\xe1c nhau.\\n\\nTrong `firstFunction`, ch\xfang ta \u0111\u01b0a promise qua m\u1ed9t b\xean ch\u1edd cho n\xf3 t\xednh to\xe1n xong, v\xe0 v\u1eabn ti\u1ebfp t\u1ee5c ch\u1ea1y nh\u1eefng code ti\u1ebfp sau \u0111\xf3, theo \u0111\xf3 `console.log(\'second\')` s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y. Sau \u0111\xf3 promise \u0111\u01b0\u1ee3c ho\xe0n th\xe0nh tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb `I have resolved`, gi\xe1 tr\u1ecb n\xe0y s\u1ebd \u0111\u01b0\u1ee3c log ra khi call stack tr\u1edf n\xean r\u1ed7ng. \\n\\nV\u1edbi t\u1eeb kh\xf3a `await` trong `secondFunction`, ta \u0111\xe3 t\u1ea1m d\u1eebng m\u1ed9t h\xe0m b\u1ea5t \u0111\u1ed3ng b\u1ed9 cho t\u1edbi khi ch\xfang tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb, sau \u0111\xf3 ta m\u1edbi \u0111i ti\u1ebfp \u0111\u1ebfn c\xe1c c\xe2u l\u1ec7nh ti\u1ebfp theo.\\n\\nDo \u0111\xf3 n\xf3 s\u1ebd ch\u1edd cho t\u1edbi khi `myPromise` \u0111\u01b0\u1ee3c ho\xe0n th\xe0nh v\xe0 tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb `I have resolved`, sau \u0111\xf3 ch\xfang ta s\u1ebd ch\u1ea1y ti\u1ebfp c\xe2u l\u1ec7nh ti\u1ebfp theo in ra `second`.","id":98,"options":["`I have resolved!`, `second` v\xe0 `I have resolved!`, `second`","`second`, `I have resolved!` v\xe0 `second`, `I have resolved!`","`I have resolved!`, `second` v\xe0 `second`, `I have resolved!`","`second`, `I have resolved!` v\xe0 `I have resolved!`, `second`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"Ph\xe9p to\xe1n `+` kh\xf4ng ch\u1ec9 d\xf9ng \u0111\u1ec3 c\u1ed9ng c\xe1c s\u1ed1, m\xe0 n\xf3 c\xf2n d\xf9ng \u0111\u1ec3 n\u1ed1i chu\u1ed7i n\u1eefa. M\u1ed7i khi Javascript engine g\u1eb7p m\u1ed9t gi\xe1 tr\u1ecb trong ph\xe9p to\xe1n kh\xf4ng ph\u1ea3i d\u1ea1ng s\u1ed1, n\xf3 s\u1ebd chuy\u1ec3n c\xe1c s\u1ed1 trong ph\xe9p to\xe1n \u0111\xf3 sang d\u1ea1ng chu\u1ed7i. \\n\\nPh\xe9p to\xe1n \u0111\u1ea7u ti\xean item l\xe0 m\u1ed9t s\u1ed1 `1`, n\xean `1 + 2` tr\u1ea3 v\u1ec1 3.\\n\\n\u1ede ph\xe9p to\xe1n th\u1ee9 hai, item l\xe0 m\u1ed9t chu\u1ed7i `\\"Lydia\\"`. trong khi \u0111\xf3 `2` l\xe0 m\u1ed9t s\u1ed1, n\xean `2` s\u1ebd b\u1ecb chuy\u1ec3n sang d\u1ea1ng chu\u1ed7i, sau khi n\u1ed1i v\xe0o ta c\xf3 chu\u1ed7i `\\"Lydia2\\"`. \\n\\n\u1ede ph\xe9p to\xe1n th\u1ee9 ba, `{ name: \\"Lydia\\" }` l\xe0 m\u1ed9t object. Tuy nhi\xean d\xf9 c\xf3 l\xe0 object hay g\xec \u0111i n\u1eefa th\xec n\xf3 c\u0169ng s\u1ebd b\u1ecb chuy\u1ec3n sang d\u1ea1ng chu\u1ed7i. \u0110\u1ed1i v\u1edbi object th\xec khi chuy\u1ec3n sang d\u1ea1ng chu\u1ed7i n\xf3 s\u1ebd tr\u1edf th\xe0nh `\\"[object Object]\\"`. `\\"[object Object]\\"` n\u1ed1i v\u1edbi `\\"2\\"` tr\u1edf th\xe0nh `\\"[object Object]2\\"`.","id":99,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"Ta c\xf3 th\u1ec3 truy\u1ec1n v\xe0o gi\xe1 tr\u1ecb b\u1ea5t k\xec cho `Promise.resolve`, d\xf9 c\xf3 l\xe0 promise hay kh\xf4ng promise. B\u1ea3n th\xe2n n\xf3 s\u1ebd l\xe0 m\u1ed9t h\xe0m tr\u1ea3 v\u1ec1 m\u1ed9t promise v\u1edbi gi\xe1 tr\u1ecb \u0111\xe3 \u0111\u01b0\u1ee3c resolved.\\n\\nTrong tr\u01b0\u1eddng h\u1ee3p n\xe0y ta \u0111\u01b0a v\xe0o gi\xe1 tr\u1ecb `5`. N\xf3 s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t resolved promise v\u1edbi gi\xe1 tr\u1ecb `5`.","id":100,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"Object s\u1ebd \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o h\xe0m theo reference. Khi ch\xfang ta n\xf3i so s\xe1nh strict equal (`===`), ngh\u0129a l\xe0 ta \u0111ang so s\xe1nh c\xe1c reference c\u1ee7a ch\xfang. \\n\\nTa set gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh c\u1ee7a `person2` l\xe0 object `person`, v\xe0 \u0111\u01b0a object `person` v\xe0o l\xe0m gi\xe1 tr\u1ecb cho \u0111\u1ed1i s\u1ed1 `person1`.\\n\\n\u0110i\u1ec1u \u0111\xf3 c\xf3 ngh\u0129a l\xe0 ch\xfang c\xf9ng tr\u1ecf \u0111\u1ebfn m\u1ed9t object trong b\u1ed9 nh\u1edb, do \u0111\xf3 ch\xfang b\u1eb1ng nhau, v\xe0 `They are the same!` \u0111\u01b0\u1ee3c in ra.","id":101,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"Trong Javascript ta c\xf3 hai c\xe1ch \u0111\u1ec3 truy c\u1eadp thu\u1ed9c t\xednh c\u1ee7a m\u1ed9t object: s\u1eed d\u1ee5ng ngo\u1eb7c vu\xf4ng `[]`, ho\u1eb7c s\u1eed d\u1ee5ng ch\u1ea5m `.`. Trong tr\u01b0\u01a1ng h\u1ee3p n\xe0y ch\xfang ta s\u1eed d\u1ee5ng ch\u1ea5m (`colorConfig.colors`) thay cho ngo\u1eb7c vu\xf4ng (`colorConfig[\\"colors\\"]`). \\n\\nV\u1edbi c\xe1ch s\u1eed d\u1ee5ng ch\u1ea5m, Javascript s\u1ebd t\xecm ki\u1ebfm m\u1ed9t thu\u1ed9c t\xednh c\xf3 t\xean ch\xednh x\xe1c nh\u01b0 t\xean ta \u0111\u01b0a v\xe0o. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y n\xf3 l\xe0 thu\u1ed9c t\xednh `colors` trong object `colorConfig` Tuy nhi\xean trong object n\xe0y kh\xf4ng c\xf3 thu\u1ed9c t\xednh n\xe0o t\xean l\xe0  `colors`, n\xean n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `undefined`. Sau \u0111\xf3 ch\xfang ta c\u1ed1 truy c\u1ead v\xe0o thu\u1ed9c t\xednh 1 c\u1ee7a n\xf3 b\u1eb1ng c\xe1ch g\u1ecdi `[1]`. Ch\xfang ta kh\xf4ng th\u1ec3 l\xe0m nh\u01b0 v\u1eady tr\xean gi\xe1 tr\u1ecb `undefined`, n\xean n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `TypeError`: `Cannot read property \'1\' of undefined`.\\n\\nJavascript th\xf4ng d\u1ecbch theo c\xe2u l\u1ec7nh. Khi ta s\u1eed d\u1ee5ng ngo\u1eb7c vu\xf4ng, Nn\xf3 s\u1ebd t\xecm m\u1edf ngo\u1eb7c \u0111\u1ea7u ti\xean `[` v\xe0 ti\u1ebfp t\u1ee5c cho t\u1edbi khi g\u1eb7p \u0111\xf3ng ngo\u1eb7c t\u01b0\u01a1ng \u1ee9ng `]`. Ch\u1ec9 khi \u0111\xf3 n\xf3 m\u1edbi \u0111\xe1nh gi\xe1 c\xe2u l\u1ec7nh. N\u1ebfu ch\xfang ta s\u1eed d\u1ee5ng c\xfa ph\xe1p `colorConfig[colors[1]]`, n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `red` trong object `colorConfig`.","id":102,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"V\u1ec1 c\u01a1 b\u1ea3n, emoji v\u1eabn l\xe0 c\xe1c k\xfd t\u1ef1 unicode m\xe0 th\xf4i. M\xe3 unicode cho h\xecnh tr\xe1i tim l\xe0 `\\"U+2764 U+FE0F\\"`. Ch\xfang lu\xf4n lu\xf4n l\xe0 m\u1ed9t, n\xean ph\xe9p to\xe1n \u0111\u01a1n gi\u1ea3n tr\u1ea3 v\u1ec1 `true`.","id":103,"options":["`true`","`false`"],"question":"Ouput l\xe0 g\xec?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"V\u1edbi `splice`, ta thay \u0111\u1ed5i m\u1ea3ng g\u1ed1c b\u1eb1ng c\xe1ch th\xeam s\u1eeda x\xf3a c\xe1c ph\u1ea7n t\u1eed. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y ta x\xf3a 2 ph\u1ea7n t\u1eed k\u1ec3 t\u1eeb index 1 (ta x\xf3a `\'\ud83e\udd51\'` v\xe0 `\'\ud83d\ude0d\'`) v\xe0 th\xeam v\xe0o \u2728 emoji. \\n\\n`map`, `filter` v\xe0 `slice` tr\u1ea3 v\u1ec1 m\u1ed9t m\u1ea3ng m\u1edbi, `find` tr\u1ea3 v\u1ec1 m\u1ed9t ph\u1ea7n t\u1eed, v\xe0 `reduce` tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb t\xedch l\u0169y.","id":104,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"Ph\xe9p to\xe1n n\xe0o sau \u0111\xe2y l\xe0m thay \u0111\u1ed5i m\u1ea3ng g\u1ed1c?"},{"answer":0,"code":"const food = [\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']\\nconst info = { favoriteFood: food[0] }\\n\\ninfo.favoriteFood = \'\ud83c\udf5d\'\\n\\nconsole.log(food)","codeLanguage":"javascript","explanation":"Trong Javascript t\u1ea5t c\u1ea3 c\xe1c ki\u1ec3u c\u01a1 b\u1ea3n (m\u1ecdi th\u1ee9 kh\xf4ng ph\u1ea3i object) \u0111\u1ec1u t\u01b0\u01a1ng t\xe1c b\u1eb1ng _gi\xe1 tr\u1ecb_. Ch\xfang ta set gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `favoriteFood` trong object `info` b\u1eb1ng k\xfd t\u1ef1 b\xe1nh pizza, `\'\ud83c\udf55\'`. Chu\u1ed7i trong javascript l\xe0 m\u1ed9t ki\u1ec3u c\u01a1 b\u1ea3n, n\xean n\xf3 c\u0169ng s\u1ebd t\u01b0\u01a1ng t\xe1c b\u1eb1ng gi\xe1 tr\u1ecb.\\n\\nB\u1ea3n th\xe2n m\u1ea3ng `food` kh\xf4ng h\u1ec1 thay \u0111\u1ed5i, do gi\xe1 tr\u1ecb c\u1ee7a `favoriteFood` ch\u1ec9 l\xe0 m\u1ed9t b\u1ea3n _copy_ c\u1ee7a gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean trong m\u1ea3ng m\xe0 th\xf4i, v\xe0 kh\xf4ng h\u1ec1 tr\u1ecf t\u1edbi reference c\u1ee7a `food[0]`. Do \u0111\xf3 khi ghi ra, gi\xe1 tr\u1ecb c\u1ee7a m\u1ea3ng v\u1eabn l\xe0 gi\xe1 tr\u1ecb ban \u0111\u1ea7u, `[\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`.","id":105,"options":["`[\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`[\'\ud83c\udf5d\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`[\'\ud83c\udf5d\', \'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"V\u1edbi ph\u01b0\u01a1ng th\u1ee9c `JSON.parse()`, ta s\u1ebd parse m\u1ed9t chu\u1ed7i JSON th\xe0nh m\u1ed9t gi\xe1 tr\u1ecb JavaScript. \\n\\nV\xed d\u1ee5:\\n\\n```javascript\\n// Chuy\u1ec3n m\u1ed9t s\u1ed1 th\xe0nh m\u1ed9t chu\u1ed7i JSON, sau \u0111\xf3 parse chu\u1ed7i JSON \u0111\xf3 \u0111\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t gi\xe1 tr\u1ecb JavaScript:\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// Chuy\u1ec3n m\u1ed9t m\u1ea3ng th\xe0nh m\u1ed9t chu\u1ed7i JSON, sau \u0111\xf3 parse chu\u1ed7i JSON \u0111\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t gi\xe1 tr\u1ecb JavaScript:\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// Chuy\u1ec3n m\u1ed9t object th\xe0nh m\u1ed9t chu\u1ed7i JSON, sau \u0111\xf3 parse chu\u1ed7i JSON \u0111\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t gi\xe1 tr\u1ecb JavaScript:\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":106,"options":["Parse JSON th\xe0nh m\u1ed9t gi\xe1 tr\u1ecb JavaScript","Parse m\u1ed9t JavaScript object th\xe0nh JSON","Parse gi\xe1 tr\u1ecb JavaScript b\u1ea5t k\xec th\xe0nh JSON","Parse JSON th\xe0nh m\u1ed9t JavaScript object"],"question":"Ph\xe9p to\xe1n n\xe0y d\xf9ng \u0111\u1ec3 l\xe0m g\xec?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"M\u1ed7i h\xe0m s\u1ebd c\xf3 m\u1ed9t _context th\u1ef1c thi_ (hay _scope_) c\u1ee7a ri\xeang n\xf3. H\xe0m `getName` \u0111\u1ea7u ti\xean s\u1ebd t\xecm trong context c\u1ee7a n\xf3 (scope) \u0111\u1ec3 t\xecm xem c\xf3 bi\u1ebfn n\xe0o t\xean l\xe0 `name` hay kh\xf4ng. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, h\xe0m `getName` c\xf3 bi\u1ebfn `name` \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `let`, gi\xe1 tr\u1ecb l\xe0 `\'Sarah\'`. \\n\\nM\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `let` (ho\u1eb7c `const`) s\u1ebd \u0111\u01b0\u1ee3c `hoisted`, nh\u01b0ng kh\xf4ng gi\u1ed1ng nh\u01b0 `var`, n\xf3 s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c _kh\u1edfi t\u1ea1o_. N\xf3 s\u1ebd kh\xf4ng th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c tr\u01b0\u1edbc d\xf2ng ta khai b\xe1o (initialize). N\xf3 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 \\"temporal dead zone\\". Khi ta c\u1ed1 truy c\u1eadp m\u1ed9t bi\u1ebfn tr\u01b0\u1edbc khi n\xf3 \u0111\u01b0\u1ee3c khai b\xe1o, JavaScript s\u1ebd throw ra `ReferenceError`. \\n\\nN\u1ebfu ta kh\xf4ng khai b\xe1o bi\u1ebfn `name` b\xean trong h\xe0m `getName`, th\xec Javascript engine s\u1ebd ti\u1ebfp t\u1ee5c t\xecm ki\u1ebfm trong _scope chain_. N\xf3 s\u1ebd t\xecm th\u1ea5y \u1edf scope ph\xeda ngo\xe0i m\u1ed9t bi\u1ebfn `name` v\u1edbi gi\xe1 tr\u1ecb l\xe0 `Lydia`. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y n\xf3 s\u1ebd log ra `Lydia`. \\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":107,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"Ouput l\xe0 g\xec?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"V\u1edbi t\u1eeb kh\xf3a `yield`, ta s\u1ebd tr\u1ea3 v\u1ec1 c\xe1c gi\xe1 tr\u1ecb trong m\u1ed9t `generator`. V\u1edbi t\u1eeb kh\xf3a `yield*`, ta c\xf3 th\u1ec3 tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb t\u1eeb m\u1ed9t `engerator` kh\xe1c, ho\u1eb7c m\u1ed9t `iterable object` (v\xed d\u1ee5 m\u1ea3ng).\\n\\nTrong `generatorOne`, ta tr\u1ea3 v\u1ec1 to\xe0n b\u1ed9 m\u1ea3ng `[\'a\', \'b\', \'c\']` s\u1eed d\u1ee5ng t\u1eeb kh\xf3a `yield`. Gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `value` trong object thu \u0111\u01b0\u1ee3c b\u1edfi ph\u01b0\u01a1ng th\u1ee9c `next` trong `one` (`one.next().value`) l\xe0 to\xe0n b\u1ed9 m\u1ea3ng `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\nTrong `generatorTwo`, ta s\u1eed d\u1ee5ng t\u1eeb kh\xf3a `yield*`. C\xf3 ngh\u0129a l\xe0 gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean m\xe0 `two` tr\u1ea3 v\u1ec1 l\xe0 gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean trong `iterator`. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y `iterator` c\u1ee7a ch\xfang ta l\xe0 m\u1ea3ng `[\'a\', \'b\', \'c\']`. Gi\xe1 tr\u1ecb \u0111\u1ea7u ti\xean c\u1ee7a m\u1ea3ng l\xe0 `a`, n\xean l\u1ea7n \u0111\u1ea7u ti\xean khi ta g\u1ecdi `two.next().value`, `a` s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1. \\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":108,"options":["`a` and `a`","`a` and `undefined`","`[\'a\', \'b\', \'c\']` and `a`","`a` and `[\'a\', \'b\', \'c\']`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"Bi\u1ec3u th\u1ee9c b\xean trong chu\u1ed7i template (t\u1ee9c chu\u1ed7i n\u1eb1m trong hai d\u1ea5u ``, g\u1ecdi l\xe0 `template literals`) s\u1ebd \u0111\u01b0\u1ee3c \u0111\xe1nh gi\xe1 tr\u01b0\u1edbc. Sau \u0111\xf3 k\u1ebft qu\u1ea3 c\u1ee7a bi\u1ec3u th\u1ee9c s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o chu\u1ed7i, trong tr\u01b0\u1eddng h\u1ee3p n\xe0y bi\u1ec3u th\u1ee9c l\xe0 `(x => x)(\'I love\')`. Ch\xfang ta truy\u1ec1n gi\xe1 tr\u1ecb \u0111\u1ed1i s\u1ed1 `\'I love\'` cho m\u1ed9t arrow function `x => x`. `x` l\xfac n\xe0y l\xe0 `\'I love\'`, v\xe0 tr\u1ea3 v\u1ec1 ch\xednh n\xf3. Cu\u1ed1i c\xf9ng k\u1ebft qu\u1ea3 c\u1ee7a chu\u1ed7i l\xe0 `I love to program`.","id":109,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\')\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"Th\xf4ng th\u01b0\u1eddng khi ta set m\u1ed9t object b\u1eb1ng `null`, th\xec object n\xe0y s\u1ebd \u0111\u01b0\u1ee3c b\u1ed9 d\u1ecdn r\xe1c d\u1ecdn \u0111i do kh\xf4ng c\xf2n g\xec reference \u0111\u1ebfn n\xf3 n\u1eefa (_garbage collected_). Tuy nhi\xean, do callback trong `setInterval` l\xe0 m\u1ed9t arrow function (do \u0111\xf3 n\xf3 s\u1ebd g\u1eafn v\u1edbi object `config`), n\xean callback n\xe0y v\u1eabn s\u1ebd gi\u1eef reference \u0111\u1ebfn object `config`. V\xec v\u1eabn c\xf2n gi\u1eef reference, n\xean object s\u1ebd kh\xf4ng b\u1ecb d\u1ecdn \u0111i. Do \u0111\xf3 n\xf3 v\u1eabn s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi sau m\u1ed7i 1000ms (t\u1ee9c 1 gi\xe2y).","id":110,"options":["Callback `setInterval` s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c g\u1ecdi","Callback `setInterval` s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi m\u1ed9t l\u1ea7n duy nh\u1ea5t","Callback `setInterval` v\u1eabn s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi m\u1ed7i gi\xe2y m\u1ed9t l\u1ea7n","`config.alert()` kh\xf4ng bao gi\u1edd \u0111\u01b0\u1ee3c g\u1ecdi b\u1edfi config l\xe0 `null`"],"question":"\u0110i\u1ec1u g\xec s\u1ebd x\u1ea3y ra?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\')","codeLanguage":"javascript","explanation":"Khi ta th\xeam v\xe0o m\u1ed9t c\u1eb7p key/value v\u1edbi t\u1eeb kh\xf3a `set`, key s\u1ebd l\xe0 \u0111\u1ed1i s\u1ed1 \u0111\u1ea7u ti\xean \u0111\u01b0a v\xe0o trong h\xe0m `set` function, v\xe0 value s\u1ebd l\xe0 \u0111\u1ed1i s\u1ed1 th\u1ee9 hai.Trong tr\u01b0\u1eddng h\u01a1p n\xe0y key ch\xednh l\xe0 _h\xe0m_ `() => \'greeting\'`, value l\xe0 `\'Hello world\'`. `myMap` tr\u1edf th\xe0nh `{ () => \'greeting\' => \'Hello world!\' }`. \\n\\n1 sai, v\xec key l\xe0 `() => \'greeting\'` ch\u1ee9 kh\xf4ng ph\u1ea3i l\xe0 `\'greeting\'`.\\n3 sai, v\xec khi ch\xfang ta \u0111\u01b0a m\u1ed9t h\xe0m v\xe0o l\xe0m \u0111\u1ed1i s\u1ed1 trong ph\u01b0\u01a1ng th\u1ee9c `get`, n\xf3 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o d\u01b0\u1edbi d\u1ea1ng _reference_. Function v\u1ed1n l\xe0 object, do \u0111\xf3 2 h\xe0m s\u1ebd kh\xf4ng bao gi\u1edd l\xe0 `strictly equal`, m\u1eb7c d\xf9 ch\xfang c\xf3 tr\xf4ng gi\u1ed1ng nhau \u0111i ch\u0103ng n\u1eefa th\xec ch\xfang v\u1eabn tr\u1ecf \u0111\u1ebfn c\xe1c v\xf9ng nh\u1edb kh\xe1c nhau.","id":111,"options":["1","2","2 v\xe0 3","T\u1ea5t c\u1ea3"],"question":"Nh\u1eefng h\xe0m n\xe0o s\u1ebd tr\u1ea3 v\u1ec1 `\'Hello world!\'`?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"C\u1ea3 hai h\xe0m `changeAge` v\xe0 `changeAgeAndName` \u0111\u1ec1u c\xf3 tham s\u1ed1 m\u1eb7c \u0111\u1ecbnh - n\xf3 l\xe0 m\u1ed9t _b\u1ea3n copy_ m\u1edbi c\u1ee7a object `{ ...person }`. Object n\xe0y s\u1ebd copy t\u1ea5t c\u1ea3 nh\u1eefng c\u1eb7p key/values b\xean trong object `person`. \\n\\n\u0110\u1ea7u ti\xean, ch\xfang ta g\u1ecdi h\xe0m `changeAge` v\xe0 \u0111\u01b0a ch\xednh object `person` v\xe0o l\xe0m \u0111\u1ed1i s\u1ed1. H\xe0m n\xe0y s\u1ebd t\u0103ng gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh `age` l\xean 1. `person` l\xfac n\xe0y l\xe0 `{ name: \\"Lydia\\", age: 22 }`.\\n\\nSau \u0111\xf3, ch\xfang ta g\u1ecdi h\xe0m `changeAgeAndName` tuy nhi\xean kh\xf4ng \u0111\u01b0a v\xe0o \u0111\u1ed1i s\u1ed1 n\xe0o c\u1ea3. Do \u0111\xf3 gi\xe1 tr\u1ecb c\u1ee7a `x` l\xfac n\xe0y s\u1ebd l\xe0 gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh, t\u1ee9c m\u1ed9t b\u1ea3n _copy_ c\u1ee7a object `{ ...person }`. Do n\xf3 ch\u1ec9 l\xe0 m\u1ed9t b\u1ea3n copy (t\u1ee9c object m\u1edbi), n\xean n\xf3 kh\xf4ng \u1ea3nh h\u01b0\u1edfng g\xec t\u1edbi gi\xe1 tr\u1ecb c\u1ee7a object `person` g\u1ed1c, gi\xe1 tr\u1ecb c\u1ee7a `person` g\u1ed1c s\u1ebd v\u1eabn l\xe0 `{ name: \\"Lydia\\", age: 22 }`.","id":112,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"function sumValues(x, y, z) {\\n\\treturn x + y + z;\\n}","codeLanguage":"javascript","explanation":"V\u1edbi to\xe1n t\u1eed ba ch\u1ea5m (`spread operator`) `...`, ch\xfang ta c\xf3 th\u1ec3 unpack m\u1ed9t iterable th\xe0nh t\u1eebng c\xe1c ph\u1ea7n t\u1eed ri\xeang bi\u1ec7t. H\xe0m `sumValues` nh\u1eadn v\xe0o 3 gi\xe1 tr\u1ecb: `x`, `y` v\xe0 `z`. `...[1, 2, 3]` s\u1ebd tr\u1ea3 v\u1ec1 `1, 2, 3`, \u0111\u01b0a v\xe0o `sumValues` s\u1ebd cho ta k\u1ebft qu\u1ea3 l\xe0 6.","id":113,"options":["`sumValues([...1, 2, 3])`","`sumValues([...[1, 2, 3]])`","`sumValues(...[1, 2, 3])`","`sumValues([1, 2, 3])`"],"question":"Ph\xe9p t\xednh n\xe0o d\u01b0\u1edbi \u0111\xe2y tr\u1ea3 v\u1ec1 `6`?"},{"answer":1,"code":"let num = 1;\\nconst list = [\\"\ud83e\udd73\\", \\"\ud83e\udd20\\", \\"\ud83e\udd70\\", \\"\ud83e\udd2a\\"];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"V\u1edbi ph\xe9p to\xe1n `+=`, Ta t\u0103ng gi\xe1 tr\u1ecb c\u1ee7a `num` l\xean `1`. `num` c\xf3 gi\xe1 tr\u1ecb kh\u1edfi t\u1ea1o l\xe0 `1`, do \u0111\xf3 `1 + 1` l\xe0 `2`. Ph\u1ea7n t\u1eed th\u1ee9 hai c\u1ee7a `list` l\xe0 \ud83e\udd70, do \u0111\xf3 `console.log(list[2])` s\u1ebd in ra \ud83e\udd70.","id":114,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const person = {\\n\\tfirstName: \\"Lydia\\",\\n\\tlastName: \\"Hallie\\",\\n\\tpet: {\\n\\t\\tname: \\"Mara\\",\\n\\t\\tbreed: \\"Dutch Tulip Hound\\"\\n\\t},\\n\\tgetFullName() {\\n\\t\\treturn `${this.firstName} ${this.lastName}`;\\n\\t}\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"V\u1edbi ph\xe9p to\xe1n optional chaining `?.`, ch\xfang ta s\u1ebd kh\xf4ng c\u1ea7n ph\u1ea3i check xem gi\xe1 tr\u1ecb ph\xeda sau n\xf3 c\xf3 \u0111\u01b0\u1ee3c ph\xe9p truy c\u1eadp hay c\xf3 t\u1ed3n t\u1ea1i hay kh\xf4ng. N\u1ebfu ta c\u1ed1 l\u1ea5y m\u1ed9t thu\u1ed9c t\xednh c\u1ee7a `undefined` hay `null` (_nullish_), bi\u1ec3u th\u1ee9c s\u1ebd d\u1eebng l\u1ea1i v\xe0 tr\u1ea3 v\u1ec1 `undefined`.\\n\\n`person.pet?.name`: `person` c\xf3 thu\u1ed9c t\xednh `pet`: do \u0111\xf3 `person.pet` kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t nullish. N\xf3 c\xf3 m\u1ed9t thu\u1ed9c t\xednh `name`, v\u1edbi gi\xe1 tr\u1ecb `Mara`.\\n\\n`person.pet?.family?.name`: `person` c\xf3 thu\u1ed9c t\xednh `pet`: do \u0111\xf3 `person.pet` kh\xf4ng ph\u1ea3i l\xe0 nullish. Tuy nhi\xean `pet` kh\xf4ng c\xf3 thu\u1ed9c t\xednh `family`, n\xean `person.pet.family` l\xe0 nullish. Bi\u1ec3u th\u1ee9c s\u1ebd tr\u1ea3 v\u1ec1 `undefined`.\\n\\n`person.getFullName?.()`: `person` c\xf3 thu\u1ed9c t\xednh `getFullName`: do \u0111\xf3 `person.getFullName()` kh\xf4ng ph\u1ea3i nullish v\xe0 c\xf3 th\u1ec3 g\u1ecdi ra, tr\u1ea3 v\u1ec1 `Lydia Hallie`.\\n\\n`member.getLastName?.()`: `member` kh\xf4ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a: do \u0111\xf3 `member.getLastName()` l\xe0 nullish. Bi\u1ec3u th\u1ee9c tr\u1ea3 v\u1ec1 `undefined`.","id":115,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `undefined`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const groceries = [\\"banana\\", \\"apple\\", \\"peanuts\\"];\\n\\nif (groceries.indexOf(\\"banana\\")) {\\n\\tconsole.log(\\"We have to buy bananas!\\");\\n} else {\\n\\tconsole.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"Ta \u0111\u01b0a m\u1ed9t \u0111i\u1ec1u ki\u1ec7n `groceries.indexOf(\\"banana\\")` v\xe0o c\xe2u l\u1ec7nh `if`. `groceries.indexOf(\\"banana\\")` tr\u1ea3 v\u1ec1 `0`, l\xe0 m\u1ed9t gi\xe1 tr\u1ecb `falsy`. Do \u0111\xf3 \u0111i\u1ec7u ki\u1ec7n `if` s\u1ebd ch\u1ea1y v\xe0o kh\u1ed1i `else` v\xe0 in ra `We don\'t have to buy bananas!`.","id":116,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"Ouput l\xe0 g\xec?"},{"answer":3,"code":"const config = {\\n\\tlanguages: [],\\n\\tset language(lang) {\\n\\t\\treturn this.languages.push(lang);\\n\\t}\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"Ph\u01b0\u01a1ng th\u1ee9c `language` l\xe0 m\u1ed9t `setter`. Setter kh\xf4ng mang gi\xe1 tr\u1ecb, nhi\u1ec7m v\u1ee5 c\u1ee7a n\xf3 ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\xe0 _thay \u0111\u1ed5i_ thu\u1ed9c t\xednh. Khi ta g\u1ecdi m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c `setter` n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `undefined`.","id":117,"options":["`function language(lang) { this.languages.push(lang }`","`0`","`[]`","`undefined`"],"question":"Ouput l\xe0 g\xec?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\n\\nconsole.log(!typeof name === \\"object\\");\\nconsole.log(!typeof name === \\"string\\");","codeLanguage":"javascript","explanation":"`typeof name` tr\u1ea3 v\u1ec1 `\\"string\\"`. Chu\u1ed7i `\\"string\\"` l\xe0 m\u1ed9t gi\xe1 tr\u1ecb `truthy`, do \u0111\xf3 `!typeof name` s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t gi\xe1 tr\u1ecb bool l\xe0 `false`. Do \u0111\xf3 `false === \\"object\\"` v\xe0 `false === \\"string\\"` \u0111\u1ec1u tr\u1ea3 v\u1ec1`false`.\\n\\n(N\u1ebfu ch\xfang ta mu\u1ed1n check xem m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t ki\u1ec3u n\xe0o \u0111\xf3, ch\xfang ta n\xean vi\u1ebft `!==` thay v\xec `!typeof`)","id":118,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const add = x => y => z => {\\n\\tconsole.log(x, y, z);\\n\\treturn x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"H\xe0m `add` tr\u1ea3 v\u1ec1 m\u1ed9t arrow function, arrow function n\xe0y l\u1ea1i tr\u1ea3 v\u1ec1 m\u1ed9t arrow function kh\xe1c, arrow function n\xe0y l\u1ea1i tr\u1ea3 v\u1ec1 m\u1ed9t arrow function kh\xe1c n\u1eefa. H\xe0m \u0111\u1ea7u ti\xean nh\u1eadn v\xe0o m\u1ed9t tham s\u1ed1 `x` v\u1edbi gi\xe1 tr\u1ecb l\xe0 4 `4`. Ch\xfang ta g\u1ecdi h\xe0m th\u1ee9 hai, nh\u1eadn v\xe0o gi\xe1 tr\u1ecb c\u1ee7a `y` l\xe0 `5`. Sau \u0111\xf3 ch\xfang ta g\u1ecdi h\xe0m th\u1ee9 3, nh\u1eadn v\xe0o gi\xe1 tr\u1ecb c\u1ee7a `z` l\xe0 `6`. Sau \u0111\xf3 ta truy c\u1eadp c\xe1c gi\xe1 tr\u1ecb c\u1ee7a `x`, `y` v\xe0 `z` b\xean trong arrow function cu\u1ed1i c\xf9ng, khi n\xe0y JS engine s\u1ebd l\u1ea7n ng\u01b0\u1ee3c l\u1ea1i scope chain \u0111\u1ec3 t\xecm c\xe1c gi\xe1 tr\u1ecb `x` v\xe0 `y` t\u01b0\u01a1ng \u1ee9ng. Do \u0111\xf3 cu\u1ed1i c\xf9ng n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `4` `5` `6`.","id":119,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"async function* range(start, end) {\\n\\tfor (let i = start; i <= end; i++) {\\n\\t\\tyield Promise.resolve(i);\\n\\t}\\n}\\n\\n(async () => {\\n\\tconst gen = range(1, 3);\\n\\tfor await (const item of gen) {\\n\\t\\tconsole.log(item);\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"Generator `range` tr\u1ea3 v\u1ec1 m\u1ed9t async object v\u1edbi c\xe1c promise t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i ph\u1ea7n t\u1eed ta \u0111\u01b0a v\xe0o: `Promise{1}`, `Promise{2}`, `Promise{3}`. Ta set gi\xe1 tr\u1ecb `gen` b\u1eb1ng v\u1edbi m\u1ed9t async object \u0111\u1ec3 th\u1ef1c hi\u1ec7n v\xf2ng l\u1eb7p `for await ... of` sau \u0111\xf3. Ti\u1ebfp \u0111\xf3 ta l\u1ea1i set gi\xe1 tr\u1ecb c\u1ee7a `item` b\u1eb1ng v\u1edbi gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 c\u1ee7a m\u1ed7i promise: \u0111\u1ea7u ti\xean l\xe0 `Promise{1}`, sau \u0111\xf3 `Promise{2}`, sau \u0111\xf3 `Promise{3}`. Do ch\xfang ta s\u1eed d\u1ee5ng c\xfa ph\xe1p `async/await` n\xean s\u1ebd tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb \u0111\xe3 \u0111\u01b0\u1ee3c resolve c\u1ee7a promise `item`, do \u0111\xf3 l\u1ea7n l\u01b0\u1ee3t `1`, `2`, v\xe0 `3` \u0111\u01b0\u1ee3c in ra.","id":120,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n\\tconsole.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"`myFunc` nh\u1eadn v\xe0o m\u1ed9t object c\xf3 c\xe1c thu\u1ed9c t\xednh `x`, `y` v\xe0 `z` l\xe0m \u0111\u1ed1i s\u1ed1 c\u1ee7a n\xf3. Do ch\xfang ta \u0111\u01b0a v\xe0o 3 s\u1ed1 ri\xeang bi\u1ec7t (1, 2, 3) ch\u1ee9 kh\xf4ng ph\u1ea3i m\u1ed9t object v\u1edbi c\xe1c thu\u1ed9c t\xednh `x`, `y`, `z` nh\u01b0 ({x: 1, y: 2, z: 3}), n\xean `x`, `y`, `z` \u0111\u1ec1u c\xf3 gi\xe1 tr\u1ecb l\xe0 `undefined`.","id":121,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'unit\', unit: \'mile-per-hour\' }\\n  }).format(speed)\\n\\n  const formattedAmount = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'currency\', currency: \'USD\' }\\n  }).format(amount)\\n\\n  return `The driver drove ${formattedSpeed} and has to pay ${formattedAmount}`\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"V\u1edbi ph\u01b0\u01a1ng th\u1ee9c `Intl.NumberFormat`, ch\xfang ta c\xf3 th\u1ec3 format b\u1ea5t c\u1ee9 s\u1ed1 n\xe0o theo \u0111\u1ecbnh d\u1ea1ng ta mong mu\u1ed1n. \u1ede \u0111\xe2y ta format gi\xe1 tr\u1ecb `130` theo \u0111\u1ecbnh d\u1ea1ng `en-US`, ki\u1ec3u `unit`, \u0111\u01a1n v\u1ecb l\xe0 `mile-per-hour`, v\xe0 n\xf3 s\u1ebd tr\u1ea3 v\u1ec1 `130 mph`. Ti\u1ebfp theo s\u1ed1 `300` s\u1ebd \u0111\u01b0\u1ee3c format theo \u0111\u1ecbnh d\u1ea1ng `en-US`, ki\u1ec3u `currentcy`, \u0111\u01a1n v\u1ecb `USD`, v\xe0 k\u1ebft qu\u1ea3 l\xe0 `$300.00`.","id":122,"options":["The driver drove 130 and has to pay 300","The driver drove 130 mph and has to pay $300.00","The driver drove undefined and has to pay undefined","The driver drove 130.00 and has to pay 300.00"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const spookyItems = [\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"];\\n({ item: spookyItems[3] } = { item: \\"\ud83d\udc80\\" });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"Khi ti\u1ebfn h\xe0nh c\xfa ph\xe1p destructuring object, ch\xfang ta c\xf3 th\u1ec3 unpack c\xe1c gi\xe1 tr\u1ecb \u1edf ph\xeda ph\u1ea3i c\u1ee7a m\u1ed9t object, v\xe0 \u0111\u01b0a gi\xe1 tr\u1ecb \u0111\xe3 \u0111\u01b0\u1ee3c unpack \u0111\xf3 l\xe0m gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh t\u01b0\u01a1ng \u1ee9ng c\u1ee7a object ph\xeda tr\xe1i. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ta \u0111\xe3 g\xe1n gi\xe1 tr\u1ecb \\"\ud83d\udc80\\" cho `spookyItems[3]`. C\xf3 ngh\u0129a l\xe0 m\u1ea3ng `spookyItems` \u0111\xe3 b\u1ecb thay \u0111\u1ed5i, ch\xfang ta \u0111\xe3 th\xeam v\xe0o n\xf3 m\u1ed9t ph\u1ea7n t\u1eed \\"\ud83d\udc80\\". Do \u0111\xf3 khi in ra th\xec k\u1ebft qu\u1ea3 s\u1ebd l\xe0 `[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]` .","id":123,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"V\u1edbi ph\u01b0\u01a1ng th\u1ee9c `Number.isNaN`, ta c\xf3 th\u1ec3 check m\u1ed9t gi\xe1 tr\u1ecb c\xf3 ph\u1ea3i l\xe0 _d\u1ea1ng s\u1ed1_ v\xe0 b\u1eb1ng `NaN` hay kh\xf4ng. `name` kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t s\u1ed1, do \u0111\xf3 `Number.isNaN(name)` s\u1ebd tr\u1ea3 v\u1ec1 `false`. `age` l\xe0 m\u1ed9t s\u1ed1, nh\u01b0ng kh\xf4ng b\u1eb1ng `NaN`, do \u0111\xf3 `Number.isNaN(age)` c\u0169ng tr\u1ea3 v\u1ec1 `false`.\\nV\u1edbi ph\u01b0\u01a1ng th\u1ee9c `isNaN`, ta \u0111\u01a1n thu\u1ea7n ch\u1ec9 check xem gi\xe1 tr\u1ecb \u0111\u01b0a v\xe0o kh\xf4ng ph\u1ea3i l\xe0 _d\u1ea1ng s\u1ed1_ hay kh\xf4ng. `name` kh\xf4ng ph\u1ea3i l\xe0 d\u1ea1ng s\u1ed1, n\xean `isNaN(name)` tr\u1ea3 v\u1ec1 `true`. `age` l\xe0 s\u1ed1, n\xean `isNaN(age)` tr\u1ea3 v\u1ec1 `false`.","id":124,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n\\tconsole.log(typeof randomValue);\\n\\tconst randomValue = \\"Lydia Hallie\\";\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"M\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c khai b\xe1o v\u1edbi t\u1eeb kh\xf3a `const` s\u1ebd kh\xf4ng th\u1ec3 truy c\u1eadp tr\u01b0\u1edbc khi n\xf3 \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o: n\xf3 g\u1ecdi l\xe0 _temporal dead zone_. Trong h\xe0m `getInfo`, gi\xe1 tr\u1ecb `randomValue` s\u1ebd \u0111\u01b0\u1ee3c t\xecm ki\u1ebfm \u0111\u1ea7u ti\xean trong scope c\u1ee7a h\xe0m `getInfo`. T\u1ea1i d\xf2ng ta mu\u1ed1n l\u1ea5y ra `typeof randomValue`, gi\xe1 tr\u1ecb `randomValue` ch\u01b0a \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o, do \u0111\xf3 m\u1ed9t `ReferenceError` s\u1ebd \u0111\u01b0\u1ee3c throw ra! L\u01b0u \xfd nh\u1ecf l\xe0 Javascript engine s\u1ebd kh\xf4ng t\xecm ki\u1ebfm \u1edf scope kh\xe1c n\u1eefa do `randomValue` \u0111\xe3 \u0111\u01b0\u1ee3c khai b\xe1o b\xean trong h\xe0m `getInfo`.","id":125,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"const myPromise = Promise.resolve(\\"Woah some cool data\\");\\n\\n(async () => {\\n\\ttry {\\n\\t\\tconsole.log(await myPromise);\\n\\t} catch {\\n\\t\\tthrow new Error(`Oops didn\'t work`);\\n\\t} finally {\\n\\t\\tconsole.log(\\"Oh finally!\\");\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"Trong kh\u1ed1i `try`, ta in ra gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn `myPromise`: `\\"Woah some cool data\\"`. Do kh\xf4ng c\xf3 l\u1ed7i g\xec x\u1ea3y ra \u1edf \u0111\xe2y c\u1ea3, n\xean c\xe1c l\u1ec7nh trong kh\u1ed1i `catch` s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c ch\u1ea1y. Tuy nhi\xean c\xe1c l\u1ec7nh trong kh\u1ed1i `finally` th\xec s\u1ebd _lu\xf4n lu\xf4n_ ch\u1ea1y, n\xean `\\"Oh finally!\\"` s\u1ebd \u0111\u01b0\u1ee3c in ra.","id":126,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"Ouput l\xe0 g\xec?"},{"answer":1,"code":"const emojis = [\\"\ud83e\udd51\\", [\\"\u2728\\", \\"\u2728\\", [\\"\ud83c\udf55\\", \\"\ud83c\udf55\\"]]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"V\u1edbi ph\u01b0\u01a1ng th\u1ee9c `flat`, ta c\xf3 th\u1ec3 t\u1ea1o m\u1ed9t m\u1ea3ng m\u1edbi v\u1edbi c\xe1c ph\u1ea7n t\u1eed \u0111\xe3 \u0111\u01b0\u1ee3c `flattened` (l\xe0m ph\u1eb3ng). \u0110\u1ed9 s\xe2u c\u1ee7a m\u1ea3ng \u0111\xe3 l\xe0m ph\u1eb3ng s\u1ebd ph\u1ee5 thu\u1ed9c v\xe0o gi\xe1 tr\u1ecb ta \u0111\u01b0a v\xe0o. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y ta \u0111\u01b0a v\xe0o l\xe0 `1` (th\u1ef1c ra \u0111\xe2y l\xe0 gi\xe1 tr\u1ecb default, ta kh\xf4ng \u0111\u01b0a v\xe0o c\u0169ng kh\xf4ng sao), c\xf3 ngh\u0129a l\xe0 ch\u1ec9 nh\u1eefng ph\u1ea7n t\u1eed \u1edf \u0111\u1ed9 s\xe2u 1 s\u1ebd \u0111\u01b0\u1ee3c l\xe0m ph\u1eb3ng. Ch\xfang l\xe0`[\'\ud83e\udd51\']` v\xe0 `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]` trong tr\u01b0\u1eddng h\u1ee3p n\xe0y. N\u1ed1i l\u1ea1i ta s\u1ebd c\xf3 m\u1ea3ng m\u1edbi `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":127,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"class Counter {\\n\\tconstructor() {\\n\\t\\tthis.count = 0;\\n\\t}\\n\\n\\tincrement() {\\n\\t\\tthis.count++;\\n\\t}\\n}\\n\\nconst counterOne = new Counter();\\ncounterOne.increment();\\ncounterOne.increment();\\n\\nconst counterTwo = counterOne;\\ncounterTwo.increment();\\n\\nconsole.log(counterOne.count);","codeLanguage":"javascript","explanation":"`counterOne` l\xe0 m\u1ed9t instance c\u1ee7a class `Counter`. Trong counter class c\xf3 thu\u1ed9c t\xednh `count` b\xean trong constructor, v\xe0 m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c `increment`. \u0110\u1ea7u ti\xean ch\xfang ta g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c `increment` hai l\u1ea7n b\u1eb1ng `counterOne.increment()`. N\xean hi\u1ec7n t\u1ea1i gi\xe1 tr\u1ecb c\u1ee7a `counterOne.count` l\xe0 `2`.\\n\\n<img src=\\"https://i.imgur.com/KxLlTm9.png\\" width=\\"400\\">\\n\\nSau \u0111\xf3 ch\xfang ta c\xf3 th\xeam m\u1ed9t bi\u1ebfn m\u1edbi l\xe0 `counterTwo`, v\xe0 set cho n\xf3 gi\xe1 tr\u1ecb b\u1eb1ng v\u1edbi `counterOne`. Do object \u0111\u01b0\u1ee3c t\u01b0\u01a1ng t\xe1c b\u1eb1ng reference, n\xean vi\u1ec7c n\xe0y t\u01b0\u01a1ng \u1ee9ng v\u1edbi ta \u0111\xe3 t\u1ea1o th\xeam m\u1ed9t reference \u0111\u1ebfn b\u1ed9 nh\u1edb m\xe0 bi\u1ebfn `counterOne` \u0111\xe3 tr\u1ecf v\xe0o. Do ch\xfang c\xf3 chung b\u1ed9 nh\u1edb, b\u1ea5t c\u1ee9 thay \u0111\u1ed5i n\xe0o tr\xean `counterTwo` c\u0169ng s\u1ebd thay \u0111\u1ed5i tr\xean `counterOne`. L\xfac n\xe0y `counterTwo.count` c\u0169ng s\u1ebd l\xe0 `2`.\\n\\nTa g\u1ecdi h\xe0m `counterTwo.increment()` \u0111\u1ec3 t\u0103ng `count` l\xean `3`. Sau \u0111\xf3 ch\xfang ta in ra `count` \u1edf `counterOne`, k\u1ebft qu\u1ea3 l\xe0 `3`.\\n\\n<img src=\\"https://i.imgur.com/BNBHXmc.png\\" width=\\"400\\">","id":128,"options":["`0`","`1`","`2`","`3`"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const myPromise = Promise.resolve(Promise.resolve(\\"Promise!\\"));\\n\\nfunction funcOne() {\\n\\tmyPromise.then(res => res).then(res => console.log(res));\\n\\tsetTimeout(() => console.log(\\"Timeout!\\", 0));\\n\\tconsole.log(\\"Last line!\\");\\n}\\n\\nasync function funcTwo() {\\n\\tconst res = await myPromise;\\n\\tconsole.log(await res);\\n\\tsetTimeout(() => console.log(\\"Timeout!\\", 0));\\n\\tconsole.log(\\"Last line!\\");\\n}\\n\\nfuncOne();\\nfuncTwo();","codeLanguage":"javascript","explanation":"\u0110\u1ea7u ti\xean ch\xfang ta g\u1ecdi `funcOne`. Trong d\xf2ng \u0111\u1ea7u ti\xean c\u1ee7a `funcOne`, ch\xfang ta g\u1ecdi `myPromise`, \u0111\xe2y l\xe0 m\u1ed9t h\xe0m _b\u1ea5t \u0111\u1ed3ng b\u1ed9_. Trong khi ch\u1edd promise n\xe0y ho\xe0n th\xe0nh, n\xf3 s\u1ebd ti\u1ebfp t\u1ee5c th\u1ef1c thi c\xe1c d\xf2ng kh\xe1c trong `funcOne`. D\xf2ng ti\u1ebfp theo l\xe0 c\u0169ng l\xe0 m\u1ed9t h\xe0m _b\u1ea5t \u0111\u1ed3ng b\u1ed9_ `setTimeout`, ph\u1ea7n callback c\u1ee7a n\xf3 s\u1ebd \u0111\u01b0\u1ee3c g\u1eedi t\u1edbi Web API (c\xe1c b\u1ea1n c\xf3 th\u1ec3 tham kh\u1ea3o c\xe2u h\u1ecfi tr\u01b0\u1edbc \u0111\xf3 \u0111\u1ec3 hi\u1ec3u v\u1ec1 callstack v\xe0 Web API).\\n\\nDo c\u1ea3 promise v\xe0 timeout \u0111\u1ec1u l\xe0 nh\u1eefng h\xe0m x\u1eed l\xfd b\u1ea5t \u0111\u1ed3ng b\u1ed9, n\xean trong khi ch\u1edd ch\xfang ho\xe0n th\xe0nh th\xec c\xe1c d\xf2ng ti\u1ebfp theo v\u1eabn ti\u1ebfp t\u1ee5c \u0111\u01b0\u1ee3c th\u1ef1c thi. C\xf3 ngh\u0129a l\xe0 `Last line!` s\u1ebd \u0111\u01b0\u1ee3c in ra \u0111\u1ea7u ti\xean, do n\xf3 l\xe0 m\u1ed9t h\xe0m ch\u1ea1y _\u0111\u1ed3ng b\u1ed9_. V\xe0 \u0111\xe2y c\u0169ng l\xe0 d\xf2ng cu\u1ed1i c\xf9ng c\u1ee7a h\xe0m `funcOne`, khi n\xe0y promise s\u1ebd \u0111\u01b0\u1ee3c resolve, tr\u1ea3 v\u1ec1 `Promise!`. Tuy nhi\xean do ta ti\u1ebfp t\u1ee5c g\u1ecdi h\xe0m `funcTwo()`, call stack c\u1ee7a ta v\u1eabn ch\u01b0a r\u1ed7ng, n\xean callback c\u1ee7a `setTimeout` v\u1eabn ch\u01b0a th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o callstack (v\u1eabn \u0111ang n\u0103m \u1edf Web API).\\n\\nTrong h\xe0m `funcTwo` \u0111\u1ea7u ti\xean ta s\u1ebd _awaiting_ myPromise. V\u1edbi t\u1eeb kh\xf3a `await`, Ta s\u1ebd t\u1ea1m d\u1eebng th\u1ef1c thi cho t\u1edbi khi n \xe0o promise \u0111\u01b0\u1ee3c resolved (hay rejected). Khi n\xe0y ta s\u1ebd in ra gi\xe1 tr\u1ecb c\u1ee7a `res` (do b\u1ea3n th\xe2n h\xe0m promise l\u1ea1i tr\u1ea3 v\u1ec1 m\u1ed9t promise). N\xf3 s\u1ebd in ra `Promise!`.\\n\\nD\xf2ng ti\u1ebfp theo l\u1ea1i l\xe0 m\u1ed9t h\xe0m _b\u1ea5t \u0111\u1ed3ng b\u1ed9_ `setTimeout`, callback khi n\xe0y ti\u1ebfp t\u1ee5c \u0111\u01b0\u1ee3c g\u1eedi t\u1edbi Web API.\\n\\nTa ti\u1ebfp t\u1ee5c th\u1ef1c thi d\xf2ng cu\u1ed1i c\xf9ng c\u1ee7a `funcTwo`, tr\u1ea3 v\u1ec1 `Last line!`. Khi n\xe0y `funcTwo` \u0111\xe3 l\xe0m r\u1ed7ng call stack. C\xe1c callback khi n\xe3y (`() => console.log(\\"Timeout!\\")` t\u1eeb `funcOne`, v\xe0 `() => console.log(\\"Timeout!\\")` t\u1eeb `funcTwo`) l\u1ea7n l\u01b0\u1ee3t \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o trong call stack. Callback \u0111\u1ea7u ti\xean in ra `Timeout!`. Callback th\u1ee9 hai in ra `Timeout!`. K\u1ebft qu\u1ea3 cu\u1ed1i c\xf9ng s\u1ebd l\xe0 `Last line! Promise! Promise! Last line! Timeout! Timeout!`","id":129,"options":["`Promise! Last line! Promise! Last line! Last line! Promise!`","`Last line! Timeout! Promise! Last line! Timeout! Promise!`","`Promise! Last line! Last line! Promise! Timeout! Timeout!`","`Last line! Promise! Promise! Last line! Timeout! Timeout!`"],"question":"Output l\xe0 g\xec?"},{"answer":2,"code":"// sum.js\\nexport default function sum(x) {\\n\\treturn x + x;\\n}\\n\\n// index.js\\nimport * as sum from \\"./sum\\";","codeLanguage":"javascript","explanation":"V\u1edbi d\u1ea5u hoa th\u1ecb `*`, ta s\u1ebd import t\u1ea5t c\u1ea3 nh\u1eefng g\xec \u0111\xe3 \u0111\u01b0\u1ee3c export ra b\u1edfi file \u0111\xf3, c\u1ea3 default l\u1eabn nh\u1eefng h\xe0m c\xf3 t\xean. N\u1ebfu ta c\xf3 m\u1ed9t d\xf2ng nh\u01b0 sau:\\n\\n```javascript\\n// info.js\\nexport const name = \\"Lydia\\";\\nexport const age = 21;\\nexport default \\"I love JavaScript\\";\\n\\n// index.js\\nimport * as info from \\"./info\\";\\nconsole.log(info);\\n```\\n\\nTh\xec k\u1ebft qu\u1ea3 s\u1ebd l\xe0:\\n\\n```javascript\\n{\\n  default: \\"I love JavaScript\\",\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n```\\n\\nTrong v\xed d\u1ee5 h\xe0m `sum`, n\xf3 gi\u1ed1ng v\u1edbi ch\xfang ta \u0111\xe3 import h\xe0m `sum` nh\u01b0 th\u1ebf n\xe0y:\\n\\n```javascript\\n{ default: function sum(x) { return x + x } }\\n```\\n\\nTa c\xf3 th\u1ec3 g\u1ecdi h\xe0m n\xe0y b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng `sum.default`","id":130,"options":["`sum(4)`","`sum.sum(4)`","`sum.default(4)`","Default aren\'t imported with `*`, only named exports"],"question":"L\xe0m th\u1ebf n\xe0o c\xf3 th\u1ec3 g\u1ecdi h\xe0m `sum` trong `index.js` t\u1eeb `sum.js?`"},{"answer":2,"code":"const handler = {\\n\\tset: () => console.log(\\"Added a new property!\\"),\\n\\tget: () => console.log(\\"Accessed a property!\\")\\n};\\n\\nconst person = new Proxy({}, handler);\\n\\nperson.name = \\"Lydia\\";\\nperson.name;","codeLanguage":"javascript","explanation":"V\u1edbi Proxy object, ta c\xf3 th\u1ec3 add th\xeam \u0111\u01b0\u1ee3c c\xe1c h\xe0nh vi (behavior) cho object b\u1eb1ng c\xe1ch \u0111\u01b0a n\xf3 v\xe0o l\xe0m \u0111\u1ed1i s\u1ed1 th\u1ee9 hai. Trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, ch\xfang ta \u0111\u01b0a v\xe0o object `handler` c\xf3 hai thu\u1ed9c t\xednh: `set` v\xe0 `get`. `set` s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi m\u1ed7i khi ta _thay \u0111\u1ed5i_ gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh, `get` s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi m\u1ed7i khi ta _truy c\u1eadp_ gi\xe1 tr\u1ecb c\u1ee7a thu\u1ed9c t\xednh.\\n\\nGi\xe1 tr\u1ecb c\u1ee7a `person` s\u1ebd l\xe0 \u0111\u1ed1i s\u1ed1 \u0111\u1ea7u ti\xean \u0111\u01b0a v\xe0o, l\xe0 m\u1ed9t object r\u1ed7ng `{}`. H\xe0nh vi c\u1ee7a `person` l\xe0 \u0111\u1ed1i s\u1ed1 th\u1ee9 hai, t\u1ee9c `handler`. Do \u0111\xf3 m\xf4i khi ta th\xeam thu\u1ed9c t\xednh c\u1ee7a obejct `person`, `set` s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi. N\u1ebfu ta truy c\u1eadp thu\u1ed9c t\xednh c\u1ee7a `person` th\xec `get` s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi.\\n\\n\u0110\u1ea7u ti\xean ra th\xeam v\xe0o thu\u1ed9c t\xednh `name` cho proxy object (`person.name = \\"Lydia\\"`). `set` \u0111\u01b0\u1ee3c g\u1ecdi v\xe0 in ra `\\"Added a new property!\\"`.\\n\\nSau \u0111\xf3 ch\xfang truy c\u1eadp thu\u1ed9c t\xednh n\xe0y, `get` \u0111\u01b0\u1ee3c g\u1ecdi v\xe0 in ra `\\"Accessed a property!\\"`.","id":131,"options":["`Added a new property!`","`Accessed a property!`","`Added a new property!` `Accessed a property!`","Nothing gets logged"],"question":"Output l\xe0 g\xec?"},{"answer":0,"code":"const person = { name: \\"Lydia Hallie\\" };\\n\\nObject.seal(person);","codeLanguage":"javascript","explanation":"V\u1edbi `Object.seal` ta c\xf3 th\u1ec3 ng\u0103n _th\xeam v\xe0o_ c\xe1c thu\u1ed9c t\xednh m\u1edbi, hay _x\xf3a \u0111i_ c\xe1c thu\u1ed9c t\xednh c\u0169.\\n\\nTuy nhi\xean ta v\u1eabn c\xf3 th\u1ec3 _thay \u0111\u1ed5i_ c\xe1c thu\u1ed9c t\xednh c\u0169.","id":132,"options":["`person.name = \\"Evan Bacon\\"`","`person.age = 21`","`delete person.name`","`Object.assign(person, { age: 21 })`"],"question":"C\xe1ch n\xe0o sau \u0111\xe2y s\u1ebd thay \u0111\u1ed5i object `person`?"},{"answer":2,"code":"const person = {\\n\\tname: \\"Lydia Hallie\\",\\n\\taddress: {\\n\\t\\tstreet: \\"100 Main St\\"\\n\\t}\\n};\\n\\nObject.freeze(person);","codeLanguage":"javascript","explanation":"Ph\u01b0\u01a1ng th\u1ee9c `Object.freeze` s\u1ebd _\u0111\xf3ng b\u0103ng_ object. Ta kh\xf4ng th\u1ec3 th\xeam/s\u1eeda/x\xf3a b\u1ea5t k\xec thu\u1ed9c t\xednh n\xe0o.\\n\\nTuy nhi\xean tr\xean th\u1ef1c t\u1ebf \u0111\xe2y ch\u1ec9 l\xe0 \u0111\xf3ng b\u0103ng _n\xf4ng_ (_shallowly_) object, c\xf3 ngh\u0129a l\xe0 n\xf3 ch\u1ec9 \u0111\xf3ng b\u0103ng c\xe1c thu\u1ed9c t\xednh _tr\u1ef1c ti\u1ebfp_ c\u1ee7a object m\xe0 th\xf4i. N\u1ebfu thu\u1ed9c t\xednh l\u1ea1i l\xe0 m\u1ed9t object kh\xe1c, nh\u01b0 `address` trong tr\u01b0\u1eddng h\u1ee3p n\xe0y, thu\u1ed9c t\xednh b\xean trong c\u1ee7a `address` s\u1ebd kh\xf4ng b\u1ecb \u0111\xf3ng b\u0103ng, v\xe0 ta v\u1eabn c\xf3 th\u1ec3 ch\u1ec9nh s\u1eeda nh\u01b0 b\xecnh th\u01b0\u1eddng.","id":133,"options":["`person.name = \\"Evan Bacon\\"`","`delete person.address`","`person.address.street = \\"101 Main St\\"`","`person.pet = { name: \\"Mara\\" }`"],"question":"C\xe1ch n\xe0o sau \u0111\xe2y c\xf3 th\u1ec3 thay \u0111\u1ed5i object `person`?"},{"answer":0,"code":"const add = x => x + x;\\n\\nfunction myFunc(num = 2, value = add(num)) {\\n\\tconsole.log(num, value);\\n}\\n\\nmyFunc();\\nmyFunc(3);","codeLanguage":"javascript","explanation":"\u0110\u1ea7u ti\xean, ta g\u1ecdi h\xe0m `myFunc()` nh\u01b0ng kh\xf4ng \u0111\u01b0a v\xe0o \u0111\u1ed1i s\u1ed1 n\xe0o. Do \u0111\xf3 `num` v\xe0 `value` s\u1ebd nh\u1eadn c\xe1c gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh: `num` l\xe0 `2`, v\xe0 `value` s\u1ebd l\xe0 gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 c\u1ee7a h\xe0m `add`. V\u1edbi h\xe0m `add`, ta \u0111\u01b0a `num` v\xe0o l\xe0m \u0111\u1ed1i s\u1ed1, t\u1ee9c `2`. `add` tr\u1ea3 v\u1ec1 `4`, \u0111\xe2y s\u1ebd l\xe0 gi\xe1 tr\u1ecb c\u1ee7a `value`.\\n\\nSau \u0111\xf3 ta g\u1ecdi h\xe0m `myFunc(3)`, khi n\xe0y `3` s\u1ebd l\xe0 gi\xe1 tr\u1ecb c\u1ee7a `num`. Ta kh\xf4ng \u0111\u01b0a v\xe0o gi\xe1 tr\u1ecb cho `value`. L\xfac n\xe0y `value` ti\u1ebfp t\u1ee5c nh\u1eadn gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh: gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 c\u1ee7a h\xe0m `add`. Trong `add`, ta \u0111\u01b0a v\xe0o `num`, khi n\xe0y l\xe0 `3`. `add` s\u1ebd tr\u1ea3 v\u1ec1 `6`, \u0111\xe2y s\u1ebd l\xe0 gi\xe1 tr\u1ecb c\u1ee7a `value`.","id":134,"options":["`2` `4` and `3` `6`","`2` `NaN` and `3` `NaN`","`2` `Error` and `3` `6`","`2` `4` and `3` `Error`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"const teams = [\\n\\t{ name: \\"Team 1\\", members: [\\"Paul\\", \\"Lisa\\"] },\\n\\t{ name: \\"Team 2\\", members: [\\"Laura\\", \\"Tim\\"] }\\n];\\n\\nfunction* getMembers(members) {\\n\\tfor (let i = 0; i < members.length; i++) {\\n\\t\\tyield members[i];\\n\\t}\\n}\\n\\nfunction* getTeams(teams) {\\n\\tfor (let i = 0; i < teams.length; i++) {\\n\\t\\t// \u2728 SOMETHING IS MISSING HERE \u2728\\n\\t}\\n}\\n\\nconst obj = getTeams(teams);\\nobj.next(); // { value: \\"Paul\\", done: false }\\nobj.next(); // { value: \\"Lisa\\", done: false }","codeLanguage":"javascript","explanation":"Ta duy\u1ec7t v\xe0 in ra gi\xe1 tr\u1ecb c\u1ee7a t\u1eebng member b\xean trong `members`, m\xe0 `members` l\u1ea1i n\u1eb1m b\xean trong m\u1ea3ng `teams`, ta c\u1ea7n \u0111\u01b0a v\xe0o \u0111\u1ed1i s\u1ed1 `teams[i].members` cho h\xe0m generator `getMembers` trong ph\u1ea7n code thi\u1ebfu. H\xe0m generator s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t generator object. \u0110\u1ec3 duy\u1ec7t qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a m\u1ed9t generator object, ta d\xf9ng t\u1eeb kh\xf3a `yield*`.\\n\\nN\u1ebfu ta d\xf9ng `yield`, `return yield`, hay `return`, to\xe0n b\u1ed9 generator s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 trong l\u1ea7n \u0111\u1ea7u ti\xean ch\xfang ta g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c `next`.","id":135,"options":["`yield getMembers(teams[i].members)`","`yield* getMembers(teams[i].members)`","`return getMembers(teams[i].members)`","`return yield getMembers(teams[i].members)`"],"question":"C\xe2u l\u1ec7nh c\xf2n thi\u1ebfu l\xe0 g\xec?"},{"answer":2,"code":"const person = {\\n\\tname: \\"Lydia Hallie\\",\\n\\thobbies: [\\"coding\\"]\\n};\\n\\nfunction addHobby(hobby, hobbies = person.hobbies) {\\n\\thobbies.push(hobby);\\n\\treturn hobbies;\\n}\\n\\naddHobby(\\"running\\", []);\\naddHobby(\\"dancing\\");\\naddHobby(\\"baking\\", person.hobbies);\\n\\nconsole.log(person.hobbies);","codeLanguage":"javascript","explanation":"H\xe0m `addHobby` nh\u1eadn v\xe0o hai \u0111\u1ed1i s\u1ed1, `hobby`, v\xe0 `hobbies` v\u1edbi gi\xe1 tr\u1ecb default l\xe0 m\u1ea3ng `hobbies` c\u1ee7a object `person`.\\n\\n\u0110\u1ea7u ti\xean ch\xfang ta g\u1ecdi h\xe0m `addHobby` v\xe0 \u0111\u01b0a v\xe0o `\\"running\\"` l\xe0m gi\xe1 tr\u1ecb cho `hobby`, v\xe0 m\u1ed9t m\u1ea3ng r\u1ed7ng cho `hobbies`. Do ch\xfang ta \u0111\u01b0a v\xe0o m\u1ed9t m\u1ea3ng r\u1ed7ng cho `hobbies`, `\\"running\\"` s\u1ebd \u0111\u01b0\u1ee3c add v\xe0o m\u1ed9t m\u1ea3ng r\u1ed7ng.\\n\\nSau \u0111\xf3 ch\xfang ta ti\u1ebfp t\u1ee5c g\u1ecdi h\xe0m `addHobby`, \u0111\u01b0a `\\"dancing\\"` v\xe0o l\xe0m gi\xe1 tr\u1ecb cho `hobby`. Ch\xfang ta kh\xf4ng h\u1ec1 \u0111\u01b0a v\xe0o gi\xe1 tr\u1ecb n\xe0o cho `hobbies`, do \u0111\xf3 n\xf3 s\u1ebd s\u1eed d\u1ee5ng gi\xe1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh, t\u1ee9c m\u1ea3ng `hobbies` trong thu\u1ed9c t\xednh c\u1ee7a object `person`. C\xf3 ngh\u0129a l\xe0 ta \u0111\xe3 th\xeam `dancing` v\xe0o trong m\u1ea3ng `person.hobbies`.\\n\\nCu\u1ed1i c\xf9ng ch\xfang ta l\u1ea1i g\u1ecdi `addHobby`, \u0111\u01b0a `\\"baking\\"` v\xe0o l\xe0m gi\xe1 tr\u1ecb cho `hobby`, v\xe0 m\u1ea3ng `person.hobbies` l\xe0m gi\xe1 tr\u1ecb cho `hobbies`. C\xf3 ngh\u0129a l\xe0 ta \u0111\xe3 th\xeam `baking` v\xe0o trong m\u1ea3ng `person.hobbies`.\\n\\nSau khi th\xeam `dancing` v\xe0 `baking`, gi\xe1 tr\u1ecb c\u1ee7a `person.hobbies` l\xe0 `[\\"coding\\", \\"dancing\\", \\"baking\\"]`","id":136,"options":["`[\\"coding\\"]`","`[\\"coding\\", \\"dancing\\"]`","`[\\"coding\\", \\"dancing\\", \\"baking\\"]`","`[\\"coding\\", \\"running\\", \\"dancing\\", \\"baking\\"]`"],"question":"Output l\xe0 g\xec?"},{"answer":1,"code":"class Bird {\\n\\tconstructor() {\\n\\t\\tconsole.log(\\"I\'m a bird. \ud83e\udda2\\");\\n\\t}\\n}\\n\\nclass Flamingo extends Bird {\\n\\tconstructor() {\\n\\t\\tconsole.log(\\"I\'m pink. \ud83c\udf38\\");\\n\\t\\tsuper();\\n\\t}\\n}\\n\\nconst pet = new Flamingo();","codeLanguage":"javascript","explanation":"Ch\xfang ta t\u1ea1o ra bi\u1ebfn `pet` l\xe0 m\u1ed9t instance c\u1ee7a clas `Flamingo`. Khi ta t\u1ea1o ra instance, `constructor` b\xean trong `Flamingo` s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi. \u0110\u1ea7u ti\xean, `\\"I\'m pink. \ud83c\udf38\\"` \u0111\u01b0\u1ee3c in ra, sau \u0111\xf3 ch\xfang ta g\u1ecdi `super()`. `super()` s\u1ebd g\u1ecdi constructor \u1edf class cha, t\u1ee9c `Bird`. H\xe0m constructor trong `Bird` \u0111\u01b0\u1ee3c g\u1ecdi v\xe0 in ra `\\"I\'m a bird. \ud83e\udda2\\"`.","id":137,"options":["`I\'m pink. \ud83c\udf38`","`I\'m pink. \ud83c\udf38` `I\'m a bird. \ud83e\udda2`","`I\'m a bird. \ud83e\udda2` `I\'m pink. \ud83c\udf38`","Nothing, we didn\'t call any method"],"question":"Output l\xe0 g\xec?"},{"answer":3,"code":"const emojis = [\\"\ud83c\udf84\\", \\"\ud83c\udf85\ud83c\udffc\\", \\"\ud83c\udf81\\", \\"\u2b50\\"];\\n\\n/* 1 */ emojis.push(\\"\ud83e\udd8c\\");\\n/* 2 */ emojis.splice(0, 2);\\n/* 3 */ emojis = [...emojis, \\"\ud83e\udd42\\"];\\n/* 4 */ emojis.length = 0;","codeLanguage":"javascript","explanation":"T\u1eeb kh\xf3a `const` l\xe0m cho ta kh\xf4ng th\u1ec3 _\u0111\u1ecbnh ngh\u0129a l\u1ea1i_ gi\xe1 tr\u1ecb c\u1ee7a bi\u1ebfn, n\xf3 l\xe0 _read-only_. Tuy nhi\xean gi\xe1 tr\u1ecb c\u1ee7a b\xean trong n\xf3 th\xec kh\xf4ng ph\u1ea3i l\xe0 b\u1ea5t bi\u1ebfn. C\xe1c thu\u1ed9c t\xednh b\xean trong m\u1ea3ng `emojis` v\u1eabn c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i, v\xed d\u1ee5 th\xeam ph\u1ea7n t\u1eed, c\u1eaft, ho\u1eb7c l\xe0 \u0111\u01b0a \u0111\u1ed9 d\xe0i m\u1ea3ng v\u1ec1 0.","id":138,"options":["1","1 and 2","3 and 4","3"],"question":"C\xe2u l\u1ec7nh n\xe0o s\u1ebd b\u1ecb l\u1ed7i?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia Hallie\\",\\n  age: 21\\n}\\n\\n[...person] // [\\"Lydia Hallie\\", 21]","codeLanguage":"javascript","explanation":"M\u1eb7c \u0111\u1ecbnh ta kh\xf4ng th\u1ec3 duy\u1ec7t qua \u0111\u01b0\u1ee3c object. Tr\u1eeb phi n\xf3 \u0111\u01b0\u1ee3c c\xe0i \u0111\u1eb7t iterator protocol. Ta c\xf3 th\u1ec3 c\xe0i \u0111\u1eb7t b\u1eb1ng c\xe1ch th\xeam v\xe0o m\u1ed9t iterator symbol `[Symbol.iterator]`, bi\u1ebfn n\xf3 tr\u1edf th\xe0nh generator object (object c\xf3 th\u1ec3 duy\u1ec7t \u0111\u01b0\u1ee3c), v\xed d\u1ee5 `*[Symbol.iterator]() {}`.\\n\\n\u0110\u1ec3 generator n\xe0y tr\u1ea3 v\u1ec1 \u0111\u01b0\u1ee3c m\u1ea3ng c\xe1c gi\xe1 tr\u1ecb c\u1ee7a c\xe1c thu\u1ed9c t\xednh c\u1ee7a object `person`, t\u1ee9c `Object.values` c\u1ee7a object `person`, ta s\u1ebd s\u1eed d\u1ee5ng c\u1ea5u tr\xfac `yield* Object.values(this)`.","id":139,"options":["Nothing, object are iterable by default","`*[Symbol.iterator]() { for (let x in this) yield* this[x] }`","`*[Symbol.iterator]() { for (let x in this) yield* Object.values(this) }`","`*[Symbol.iterator]() { for (let x in this) yield this }`"],"question":"Ta c\u1ea7n th\xeam g\xec v\xe0o object `person` \u0111\u1ec3 khi g\u1ecdi `[...person]` s\u1ebd cho k\u1ebft qu\u1ea3 l\xe0 `[\\"Lydia Hallie\\", 21]`?"}],"locale":"vi-VI"},{"isRTL":false,"language":"\ud83c\uddeb\ud83c\uddf7 Fran\xe7ais","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Dans la fonction, nous d\xe9clarons en premier la variable `name` gr\xe2ce au mot cl\xe9 `var`. Cela signifie que la variable est \\"lev\xe9e\\" _(hoisted)_ (l\'espace m\xe9moire est d\xe9finie \xe0 la phase de cr\xe9ation) avec pour valeur par d\xe9faut `undefined`, jusqu\'\xe0 ce que le script atteigne la ligne de d\xe9finition de la variable. Nous n\'avons pas encore d\xe9fini la variable lorsque nous essayons d\'afficher la variable `name`, donc elle a toujours la valeur `undefined`.\\n\\nLes variables avec le mot cl\xe9 `let` (et `const`) sont \\"lev\xe9es\\" _(hoisted)_, mais contrairement \xe0 `var`, elle n\'est pas <i>initialis\xe9e</i>. Elles ne sont pas accessible avant la ligne qui les d\xe9clare (initialise). C\'est appel\xe9 la \\"zone morte temporaire\\". Lorsque nous essayons d\'acc\xe9der aux variables avant leur d\xe9claration, JavaScript renvoie une `ReferenceError`.","id":0,"options":["`Lydia` et `undefined`","`Lydia` et `ReferenceError`","`ReferenceError` et `21`","`undefined` et `ReferenceError`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"\xc0 cause du syst\xe8me de queue dans JavaScript, la fonction de rappel _(callback)_ du `setTimeout` est appel\xe9e _apr\xe8s_ que la boucle soit ex\xe9cut\xe9e. Comme la variable `i` dans la premi\xe8re boucle est d\xe9clar\xe9e avec le mot-cl\xe9 `var`, c\'est une variable globale. Pendant la boucle, nous incr\xe9mentons la valeur de `i` de `1` \xe0 chaque fois, en utilisant l\'op\xe9rateur arithm\xe9tique `++`. Lorsque la fonction de rappel _(callback)_ du `setTimeout` est invoqu\xe9e, `i` est \xe9gal \xe0 `3` dans le premier exemple.\\n\\nDans la seconde boucle, la variable `i` est d\xe9clar\xe9e avec le mot cl\xe9 `let` : les variables d\xe9clar\xe9es avec `let` (et `const`) ont une port\xe9e de bloc (tout ce qui est entre `{ }` est consid\xe9r\xe9 comme un bloc). Pendant chaque it\xe9ration, `i` aura une nouvelle valeur, et chaque valeur sera d\xe9finie dans la boucle.","id":1,"options":["`0 1 2` et `0 1 2`","`0 1 2` et `3 3 3`","`3 3 3` et `0 1 2`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"Notez que la valeur de `diameter` est une fonction r\xe9guli\xe8re, alors que celle de `perimeter` est une fonction fl\xe9ch\xe9e.\\n\\nAvec les fonctions fl\xe9ch\xe9e, le mot cl\xe9 `this` r\xe9f\xe8re \xe0 son p\xe9rim\xe8tre actuel, contrairement aux fonctions r\xe9guli\xe8res ! Cela signifie que lorsque nous appelons `perimeter`, elle ne r\xe9f\xe8re pas \xe0 l\'objet `shape`, mais \xe0 son p\xe9rim\xe8tre actuel (`window` par exemple).\\n\\nIl n\'y a pas de valeur `radius` dans cet objet, on retournera `undefined`.","id":2,"options":["`20` et `62.83185307179586`","`20` et `NaN`","`20` et `63`","`NaN` et `63`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"L\'op\xe9rateur arithm\xe9tique `+` essait de convertir un op\xe9rande en une valeur num\xe9rique. `true` devient `1`, et `false` devient `0`.\\n\\nLa cha\xeene de caract\xe8re `\'Lydia\'` est une valeur consid\xe9r\xe9e comme vraie _(truthy)_. Ce que nous sommes actuellement en train de demander, c\'est \\"est-ce que cette valeur consid\xe9r\xe9e comme vraie est fausse ?\\". Ce qui retournera `false`.","id":3,"options":["`1` et `false`","`false` et `NaN`","`false` et `false`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"En JavaScript, toutes les cl\xe9s d\'objet sont des cha\xeenes de caract\xe8res (sauf si c\'est un Symbol). Bien que nous ne puissions pas les _typer_ comme des cha\xeenes de caract\xe8res, elles sont converties en cha\xeenes de caract\xe8res sous le capot.\\n\\nJavaScript interpr\xe8te (ou d\xe9compresse) les instructions. Lorsque nous utilisons la notation pas crochet, il voit le premier crochet `[` et continue jusqu\'\xe0 ce qu\'il trouve le crochet fermant `]`. Seulement apr\xe8s, il \xe9value l\'instruction.\\n\\n`mouse[bird.size]` : Premi\xe8rement, il \xe9value `bird.size`, qui est `\\"small\\"`. `mouse[\\"small\\"]` retourne `true`.\\n\\nCependant, avec la notation par points, cela n\'arrive pas. `mouse` n\'a pas de cl\xe9 appel\xe9e `bird`, ce qui signifie que `mouse.bird` est `undefined`. Puis, on demande `size` en utilisant la notation par point : `mouse.bird.size`. Comme `mouse.bird` est `undefined`, on demande `undefined.size`. Cela n\'est pas valide, et nous aurons une erreur similaire \xe0 `Impossible de lire la propri\xe9t\xe9 \\"size\\" de undefined`.","id":4,"options":["`mouse.bird.size` n\'est pas valide","`mouse[bird.size]` n\'est pas valide","`mouse[bird[\\"size\\"]]` n\'est pas valide","Toutes sont valides"],"question":"Laquelle est vraie ?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"En JavaScript, tous les objets interagissent par _r\xe9f\xe9rence_ lorsqu\'on les d\xe9finit \xe9gaux les uns aux autres.\\n\\nPremi\xe8rement, la variable `c` contaient une valeur d\'objet. Plus tard, nous assignons `d` avec la m\xeame r\xe9f\xe9rence que `c` \xe0 l\'objet.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nQuand on modifie un objet, on les modifie donc tous.","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` est une fonction globale. Bien qu\'il ressemble \xe0 un nombre, ce n\'en est pas vraiment un : il a une poign\xe9e de fonctionnalit\xe9s suppl\xe9mentaire et est un objet.\\n\\nQuand nous utilisons l\'op\xe9rateur `==`, il v\xe9rifie seulement qu\'il s\'agisse de la m\xeame _valeur_. Les deux ont pour valeur `3`, donc il retourne `true`.\\n\\nCependant, quand on utilise l\'op\xe9rateur `===`, les 2 valeurs _et_ types doivent \xeatre les m\xeames. `new Number()` n\'est pas un nombre, c\'est un **objet**, il retourne `false`.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"Quelle est la sortie ?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"La fonction `colorChange` est statique. Les m\xe9thodes statiques sont d\xe9sign\xe9es pour vivre seulement dans le constructeur qui les a cr\xe9\xe9 et ne peuvent pas \xeatre transf\xe9rer aux enfants. Comme `freddie` est un enfant, la fonction n\'est pas transf\xe9r\xe9e et n\'est pas disponible dans l\'instance de `freddie` : une erreur `TypeError` est renvoy\xe9e.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Il affiche l\'objet, car on a juste cr\xe9\xe9 un objet vide dans l\'objet global ! Quand on \xe9crit mal `greeting` en `greetign`, JavaScript l\'interpr\xe8te comme il le voit `global.greetign = {}` (ou `window.greetign = {}` dans le navigateur).\\n\\nPour \xe9viter cela, on peut utiliser `\\"use strict\\"`. Cela nous assure de devoir d\xe9clarer la variable avant de lui assigner une valeur.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"C\'est possible en JavaScript, car les fonctions sont des objets ! (Tout ce qui n\'est pas de type primitif est un objet)\\n\\nUne fonction est un type sp\xe9cial d\'objet. Le code que vous \xe9crivez vous-m\xeame n\'est pas la fonction. La fonction est un objet avec des propri\xe9t\xe9s. Cette propri\xe9t\xe9 est invocable.","id":9,"options":["Rien, c\'est tout \xe0 fait bon !","`SyntaxError`. Vous ne pouvez pas ajouter de propri\xe9t\xe9s \xe0 une fonction de cette fa\xe7on.","`undefined`","`ReferenceError`"],"question":"Que se passe-t-il lorsque nous faisons \xe7a ?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Vous ne pouvez pas ajouter de propri\xe9t\xe9s \xe0 un constructeur comme pour des objets normaux. Si vous voulez ajouter une fonctionnalit\xe9 pour tous les objets en une fois, vous devez utiliser le prototype. Donc dans ce cas,\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nrendra fonctionnel `member.getFullName`. Pourquoi est-ce b\xe9n\xe9fique\xa0? Disons que nous ajoutons cette m\xe9thode au constructeur directement. Peut-\xeatre que toutes les instances de `Person` n\'ont pas besoin de cette m\xe9thode. Cela fera perdre de l\'espace m\xe9moire, car elles auront tous cette propri\xe9t\xe9, ce qui prendra de l\'espace m\xe9moire pour chaque instance. Alors que, si nous ajoutons la m\xe9thode au prototype uniquement, nous n\'utilisons qu\'un seul slot m\xe9moire, et ils y auront tous acc\xe8s\xa0!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"Pour `sarah`, nous n\'avons pas utilis\xe9 le mot cl\xe9 `new`. Quand nous utilisons `new`, il fait r\xe9f\xe9rence \xe0 un nouvel objet vide que nous cr\xe9ons. Cependant, nous n\'ajoutons pas `new`. Il r\xe9f\xe8re \xe0 **l\'objet global**\xa0!\\n\\nNous disons que `this.firstName` est \xe9gal \xe0 `\\"Sarah\\"` et que `this.lastName` est \xe9gal \xe0 `Smith`. Ce que nous faisons c\'est d\xe9finir `global.firstName = \'Sarah\'` et `global.lastName = \'Smith\'`. La variable `sarah` elle-m\xeame reste \xe0 `undefined`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` et `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` et `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` et `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` et `ReferenceError`"],"question":"Quelle est la sortie ?"},{"answer":3,"explanation":"Durant la phase de **capture** _(capturing)_, l\'\xe9v\xe9nement passe par les \xe9l\xe9ments parents jusqu\'\xe0 l\'\xe9l\xe9ment cibl\xe9. Il atteint ensuite l\'\xe9l\xe9ment **cibl\xe9** _(target)_, et commence \xe0 **bouillonner** _(bubbling)_.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Quelle sont les trois phases de propagation des \xe9v\xe9nements ?"},{"answer":1,"explanation":"Tous les objets ont des prototypes, except\xe9 pour les **objets standards**. Les objets standards ont acc\xe8s \xe0 certaines m\xe9thodes et propri\xe9t\xe9s, comme `.toString`. C\'est pour cette raison que vous pouvez utiliser les m\xe9thodes natives de JavaScript ! Toutes ces m\xe9thodes sont disponibles dans le prototype. Bien que JavaScript ne trouve pas la fonction dans l\'objet, il parcourt le prototype et la m\xe9thode afin de la rendre accessible.","id":13,"options":["vrai","faux"],"question":"Tous les objets ont des prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript est un **langage \xe0 types dynamiques**\xa0: nous n\'avons pas besoin de sp\xe9cifier le types des variables. Les valeurs peuvent \xeatre automatiquement converties vers les autres types sans que vous le sachiez, c\'est ce que l\'on appelle _la conversion de types implicites_ _(implicit type coercion)_.\\n\\nDans cette exemple, JavaScript convertit le nombre `1` en une cha\xeene de caract\xe8re, afin que la fonction ait du sens et puisse renvoyer une valeur. Durant l\'addition d\'un type num\xe9rique (`1`) et d\'un type cha\xeene de caract\xe8re (`\'2\'`), le nombre est trait\xe9 comme une cha\xeene de caract\xe8re. Nous pouvons concat\xe9ner les cha\xeenes de caract\xe8res comme `\\"Hello\\" + \\"World\\"`, c\'est donc ce qui arrive ici avec `\\"1\\" + \\"2\\"` qui retourne `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"L\'op\xe9rateur arithm\xe9tique **postfix** `++` :\\n\\n1. Retourne la valeur (ici il retourne `0`)\\n2. Incr\xe9mente la valeur (le nombre est maintenant \xe9gal \xe0 `1`)\\n\\nL\'op\xe9rateur arithm\xe9tique **pr\xe9fix** `++` :\\n\\n1. Incr\xe9mente la valeur (le nombre est maintenant \xe9gal \xe0 `2`)\\n2. Retourne la valeur (ici il retourne `2`)\\n\\nCela retourne donc `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"Si vous utilisez les litt\xe9raux de gabarits, la valeur du premier argument sera toujours un tableau de valeurs des cha\xeenes de caract\xe8re. Le reste des arguments seront les valeurs des expressions utilis\xe9es !","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"Vous \xeates un adulte !\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"Vous \xeates toujours un adulte.\\");\\n  } else {\\n    console.log(`Hmm.. Vous n\'avez pas l\'\xe2ge, je suppose.`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Lorsque l\'on teste une \xe9galit\xe9, les primitifs sont compar\xe9s par leur valeur, alors que les objets sont compar\xe9s par leur _r\xe9f\xe9rence_. JavaScript v\xe9rifie si les objets ont une r\xe9f\xe9rence \xe0 la m\xeame zone de la m\xe9moire.=\\n\\nLes 2 objets que nous comparons n\'ont pas \xe7a : l\'objet pass\xe9 en param\xe8tre fait r\xe9f\xe9rence \xe0 une zone m\xe9moire diff\xe9rente que l\'objet que nous utilisons pour faire la comparaison.\\n\\nC\'est pourquoi les 2 conditions `{ age: 18 } === { age: 18 }` et `{ age: 18 } == { age: 18 }` retournent `false`.","id":17,"options":["`Vous \xeates un adulte !`","`Vous \xeates toujours un adulte.`","`Hmm.. Vous n\'avez pas l\'\xe2ge, je suppose.`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"La syntaxe des param\xe8tres du reste _(rest parameters)_ (`...args`) retourne un tableau avec les arguments. Un tableau est un objet, donc `typeof args` retournera `\\"object\\"`.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Avec `\\"use strict\\"`, vous pouvez \xeates s\xfbr de ne pas d\xe9clarer accidentellement des variables gloables. Nous ne d\xe9clarerons jamais la variable `age`, et temps que nous utiliserons `\\"use strict\\"`, cela cr\xe9era une erreur de r\xe9f\xe9rence. Si nous n\'utilisons pas `\\"use strict\\"`, cela fonctionnera et la variable `age` sera attribu\xe9 \xe0 l\'objet global.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` \xe9value les codes que nous passons en param\xe8tre de type cha\xeene de caract\xe8res. Si c\'est une expression, comme dans notre cas, il \xe9valuera l\'expression. L\'expression est `10 * 10 + 5`, ce qui retourne le nombre `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"Quelle est la valeur de `sum` ?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"La donn\xe9e stock\xe9e dans le `sessionStorage` est supprim\xe9e apr\xe8s la fermeture de l\'onglet.\\n\\nSi vous utilisez le `localStorage`, la donn\xe9e sera l\xe0 pour toujours, jusqu\'\xe0 ce que, par exemple, `localStorage.clear()` soit invoqu\xe9e.","id":21,"options":["Pour toujours, les donn\xe9es ne seront pas perdues.","Jusqu\'\xe0 ce que l\'utilisateur ferme l\'onglet.","Jusqu\'\xe0 ce que l\'utilisateur ferme son navigateur en entier, pas seulement son onglet.","Jusqu\'\xe0 ce que l\'utilisateur \xe9teindra son ordinateur."],"question":"Pendant combien de temps `cool_secret` sera-t-il accessible ?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Avec le mot cl\xe9 `var`, vous pouvez d\xe9clarer plusieurs variables avec le m\xeame nom. La variable aura pour valeur la derni\xe8re assign\xe9e.\\n\\nVous ne pouvez pas faire cela avec `let` ou `const` puisqu\'ils ont une port\xe9e de bloc.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"Toutes les cl\xe9s d\'objet (\xe0 l\'exception des symboles) sont des cha\xeenes de caract\xe8res sous le capot, m\xeame si vous ne les tapez pas vous-m\xeame en tant que cha\xeene. C\'est pourquoi `obj.hasOwnProperty(\\"1\\")` renvoie \xe9galement la valeur `true`.\\n\\n\xc7a ne marche pas comme \xe7a pour un set. Il n\'y a pas de `\'1\'` dans notre ensemble : `set.has(\'1\')` renvoie `false`. Il a le type num\xe9rique `1`, `set.has(1)` renvoie `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"const obj = { a: \\"un\\", b: \\"deux\\", a: \\"trois\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Si vous avez deux cl\xe9s portant le m\xeame nom, la cl\xe9 sera remplac\xe9e. Elle sera toujours dans sa premi\xe8re position, mais avec la derni\xe8re valeur sp\xe9cifi\xe9e.","id":24,"options":["`{ a: \\"un\\", b: \\"deux\\" }`","`{ b: \\"deux\\", a: \\"trois\\" }`","`{ a: \\"trois\\", b: \\"deux\\" }`","`SyntaxError`"],"question":"Quelle est la sortie ?"},{"answer":0,"explanation":"Le contexte d\'ex\xe9cution de base est le contexte d\'ex\xe9cution global : c\'est ce qui est accessible partout dans votre code.","id":25,"options":["Vrai","Faux","\xc7a d\xe9pend"],"question":"Le contexte global d\'ex\xe9cution de JavaScript cr\xe9e 2 choses pour vous : l\'objet global and le mot-cl\xe9 `this`."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"L\'instruction `continue` ignore une it\xe9ration si une condition donn\xe9e renvoie `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` est un constructeur int\xe9gr\xe9, auquel nous pouvons ajouter des propri\xe9t\xe9s. Je viens d\'ajouter une m\xe9thode \xe0 son prototype. Les cha\xeenes de caract\xe8re primitives sont automatiquement converties en un objet cha\xeene, g\xe9n\xe9r\xe9 par la fonction prototype de cha\xeene. Ainsi, toutes les cha\xeenes (objets de cha\xeene) ont acc\xe8s \xe0 cette m\xe9thode !","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Les cl\xe9s d\'objet sont automatiquement converties en cha\xeenes de caract\xe8res. Nous essayons de d\xe9finir un objet en tant que cl\xe9 de l\'objet `a`, avec la valeur `123`.\\n\\nCependant, lorsque nous transformons un objet en cha\xeene de caract\xe8re, il devient `\\"[Objet objet]\\"`. Donc, ce que nous disons ici, c\'est que un `a[\\"Objet objet\\"] = 123`. Ensuite, nous pouvons essayer de refaire la m\xeame chose. `c` est un autre objet que nous sommes implicitement en train de transformer en cha\xeene de caract\xe8re. Donc, `a[\\"Objet objet\\"] = 456`.\\n\\nEnsuite, nous affichons `a[b]`, qui est en fait `a[\\"Objet objet\\"]`. Que nous venons de d\xe9finir \xe0 `456`, nous renvoyons donc `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const foo = () => console.log(\\"Premier\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Troisi\xe8me\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Nous avons une fonction `setTimeout` et nous l\'avons d\'abord appel\xe9e. Pourtant, il a \xe9t\xe9 affich\xe9 en dernier.\\n\\nEn effet, dans les navigateurs, nous n\u2019avons pas seulement le moteur d\u2019ex\xe9cution, nous avons aussi quelque chose appel\xe9 `WebAPI`. `WebAPI` nous donne la fonction` setTimeout` pour commencer, et par exemple le DOM.\\n\\nUne fois que la fonction de rappel _(callback)_ est pouss\xe9e via la WebAPI, la fonction `setTimeout` elle-m\xeame (mais pas la fonction de rappel !) est extraite de la pile.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nMaintenant, `foo` est invoqu\xe9 et `\\"Premier\\"` est affich\xe9.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` est extrait de la pile et `baz` est invoqu\xe9. `\\"Troisi\xe8me\\"` est affich\xe9.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI ne peut simplement pas ajouter des \xe9l\xe9ments \xe0 la pile d\xe8s qu\u2019elle est pr\xeate. Au lieu de cela, elle pousse la fonction de rappel vers quelque chose appel\xe9 la _file d\'attente_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nC\'est ici qu\'une boucle d\'\xe9v\xe9nement commence \xe0 fonctionner. La **boucle d\'\xe9v\xe9nement** examine la pile et la file d\'attente des t\xe2ches. Si la pile est vide, il prend la premi\xe8re chose dans la file d\'attente et la pousse sur la pile.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` est invoqu\xe9, `\\"Second\\"` est affich\xe9 et il est sorti de la pile.","id":29,"options":["`Premier` `Second` `Troisi\xe8me`","`Premier` `Troisi\xe8me` `Second`","`Second` `Premier` `Troisi\xe8me`","`Second` `Troisi\xe8me` `Premier`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"L\'\xe9l\xe9ment imbriqu\xe9 le plus profond qui a provoqu\xe9 l\'\xe9v\xe9nement est la cible de l\'\xe9v\xe9nement. Vous pouvez arr\xeater le bouillonnement _(bubbling)_ en utilisant `event.stopPropagation`.","id":30,"options":["La `div` ext\xe9rieure","La `div` int\xe9rieure","`button`","Un tableau de tous les \xe9l\xe9ments imbriqu\xe9s."],"question":"Quel est l\'\xe9l\xe9ment cibl\xe9 _(event.target)_ au clic sur le bouton _(button)_ ?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"Si nous cliquons sur `p`, nous verrons deux lignes : `p` et `div`. Lors de la propagation d\'un \xe9v\xe9nement, il y a 3 phases: capture, cible et bouillonnement _(bubbling)_. Par d\xe9faut, les gestionnaires d\'\xe9v\xe9nements sont ex\xe9cut\xe9s dans la phase de bouillonnement (sauf si vous d\xe9finissez `useCapture` sur` true`). Il va de l\'\xe9l\xe9ment imbriqu\xe9 le plus profond vers l\'ext\xe9rieur.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Quand vous cliquez sur le paragraphe, quelle est la sortie ?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"Avec les deux, nous pouvons transmettre l\'objet auquel nous voulons que le mot cl\xe9 `this` fasse r\xe9f\xe9rence. Cependant, `.call` est aussi _ex\xe9cut\xe9 imm\xe9diatement_ !\\n\\n`.bind.` renvoie une copie de la fonction, mais avec un contexte li\xe9 ! Elle n\'est pas ex\xe9cut\xe9e imm\xe9diatement.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"La fonction `sayHi` renvoie la valeur renvoy\xe9e par la fonction imm\xe9diatement appel\xe9e (IIFE). Cette fonction a renvoy\xe9 `0`, qui est du type `\\"nombre\\"`.\\n\\nPour info : il n\'y a que 7 types natifs : `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol` et `bigint`. `\\"function\\"` n\'est pas un type, puisque les fonctions sont des objets, il est de type `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"Quelle est la sortie ?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Il n\'y a que six valeurs de fausses :\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (cha\xeene de caract\xe8re vide)\\n- `false`\\n\\nLes constructeurs de fonctions, comme `new Number` et `new Boolean` sont la vraies.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"Lesquelles de ces valeurs sont fausses ?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` retourne `\\"number\\"`.\\n`typeof \\"number\\"` retourne `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Lorsque vous d\xe9finissez une valeur sur un \xe9l\xe9ment d\'un tableau qui d\xe9passe la longueur du tableau, JavaScript cr\xe9e un quelque chose appel\xe9 \\"emplacements vides\\". Ceux-ci ont en fait la valeur `undefined`, mais vous verrez quelque chose comme :\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\nen fonction de l\'endroit o\xf9 vous l\'ex\xe9cutez (diff\xe9rent pour chaque navigateur, n\u0153ud, etc.).","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"Le bloc `catch` re\xe7oit l\'argument `x`. Ce n\'est pas le m\xeame `x` que la variable que nous passons en arguments. Cette variable `x` a une port\xe9e de bloc.\\n\\nPlus tard, nous d\xe9finissons cette variable de bloc \xe9gale \xe0 `1` et d\xe9finissons la valeur de la variable `y`. Maintenant, nous affichons la variable `x` de port\xe9e de bloc, dont la valeur est \xe9gale \xe0 `1`.\\n\\nEn dehors du bloc `catch`, `x` est toujours `undefined` et `y` est \xe9gal \xe0 `2`. Lorsque nous voulons `console.log(x)` en dehors du bloc `catch`, il renvoie `undefined`, et `y` renvoie `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"Quelle est la sortie ?"},{"answer":0,"explanation":"JavaScript n\'a que des types et des objets primitifs.\\n\\nLes types primitifs sont `boolean`, `null`, `undefined`, `bigint`, `number`, `string` et `symbol`.\\n\\nCe qui diff\xe9rencie une primitive d\'un objet, c\'est que les primitives n\'ont aucune propri\xe9t\xe9 ou m\xe9thode. Cependant, vous remarquerez que  `\'foo\'.toUpperCase()` est \xe9valu\xe9 \xe0 `\'FOO\'` et n\'entra\xeene pas de `TypeError`. En effet, lorsque vous essayez d\'acc\xe9der \xe0 une propri\xe9t\xe9 ou \xe0 une m\xe9thode sur une primitive telle qu\'une cha\xeene, JavaScript encapsule implicitement l\'objet \xe0 l\'aide de l\'une des classes d\'encapsulation, \xe0 savoir `String`, puis supprime imm\xe9diatement l\'encapsulation apr\xe8s l\'\xe9valuation de l\'expression. Toutes les primitives \xe0 l\'exception de `null` et` undefined` pr\xe9sentent ce comportement.","id":38,"options":["primitif ou objet","fonction ou objet","question d\xe9licate ! Seulement des objets","nombre ou objet"],"question":"Tout en JavaScript est..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` est notre valeur initiale. C\'est la valeur avec laquelle nous commen\xe7ons et la valeur du tout premier `acc`. Au premier tour, `acc` est `[1,2]` et `cur` est `[0, 1]`. Nous les concat\xe9nons, ce qui donne `[1, 2, 0, 1]`.\\n\\nEnsuite, `acc` est `[1, 2, 0, 1]` et `cur` est `[2, 3]`. Nous les concat\xe9nons et obtenons `[1, 2, 0, 1, 2, 3]`","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` est faux. `!null` retourne `true`. `!true` retourne `false`.\\n\\n`\\"\\"` est faux. `!\\"\\"` retourne `true`. `!true` retourne `false`.\\n\\n`1` est vrai. `!1` retourne `false`. `!false` retourne `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Il retourne un identifiant unique. Cet identifiant peut \xeatre utilis\xe9 pour effacer cet interval avec la fonction `clearInterval()`.","id":41,"options":["un identifiant unique","le temps de millisecondes sp\xe9cifi\xe9","la fonction pass\xe9e en param\xe8tre","`undefined`"],"question":"Que retourne la m\xe9thode `setInterval` ?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"Une cha\xeene de caract\xe8re est it\xe9rable. L\'op\xe9rateur de d\xe9construction transforme chaque caract\xe8re d\'un it\xe9rable en un \xe9l\xe9ment.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"Que retourne ceci ?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Les fonctions r\xe9guli\xe8res ne peuvent pas \xeatre arr\xeat\xe9es \xe0 mi-parcours apr\xe8s l\'invocation. Cependant, une fonction de g\xe9n\xe9rateur peut \xeatre \\"arr\xeat\xe9e\\" \xe0 mi-chemin et continuer plus tard \xe0 partir de son point d\'arr\xeat. Chaque fois qu\'une fonction g\xe9n\xe9ratrice rencontre un mot-cl\xe9 `yield`, elle renvoie la valeur sp\xe9cifi\xe9e apr\xe8s celui-ci. Notez que la fonction du g\xe9n\xe9rateur dans ce cas ne _return_ pas la valeur, il _yields_ la valeur.\\n\\nPremi\xe8rement, nous initialisons la fonction du g\xe9n\xe9rateur avec `i` \xe9gal \xe0` 10`. Nous appelons la fonction g\xe9n\xe9ratrice en utilisant la m\xe9thode `next()`. La premi\xe8re fois que nous appelons la fonction de g\xe9n\xe9rateur, `i` est \xe9gal \xe0 `10`. Il rencontre le premier mot-cl\xe9 `yield` : il donne la valeur de `i`. Le g\xe9n\xe9rateur est maintenant \\"en pause\\" et `10` est affich\xe9.\\n\\nEnsuite, nous appelons \xe0 nouveau la fonction avec la m\xe9thode `next()`. Il commence \xe0 continuer l\xe0 o\xf9 il s\u2019\xe9tait arr\xeat\xe9 pr\xe9c\xe9demment, toujours avec `i` \xe9gal \xe0 `10`. Maintenant, il rencontre le prochain mot-cl\xe9 `yield` et donne `i * 2`. `i` est \xe9gal \xe0 `10`, donc il renvoie `10 * 2`, ce qui correspond \xe0 `20`. Cela donne `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"Lorsque nous passons plusieurs promesses \xe0 la m\xe9thode `Promise.race`, elle r\xe9sout/rejette la promesse _first_ qui r\xe9sout/rejette. Nous passons, \xe0 la m\xe9thode `setTimeout`, un timer: 500 ms pour la premi\xe8re promesse (`firstPromise`), et 100 ms pour la deuxi\xe8me promesse (`secondPromise`). Cela signifie que le `secondPromise` se r\xe9sout en premier avec la valeur de `\'two\'`. `res` contient maintenant la valeur de `\'deux\'`, qui est affich\xe9.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"Qu\'est-ce que cela retourne ?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"Tout d\'abord, nous d\xe9clarons une variable `person` avec la valeur d\'un objet poss\xe9dant une propri\xe9t\xe9 `name`.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nEnsuite, nous d\xe9clarons une variable appel\xe9e `membres`. Nous d\xe9finissons le premier \xe9l\xe9ment de ce tableau \xe9gal \xe0 la valeur de la variable `person`. Les objets interagissent par r\xe9f\xe9rence quand ils sont \xe9gaux. Lorsque vous affectez une r\xe9f\xe9rence d\'une variable \xe0 une autre, vous cr\xe9ez une copie de cette r\xe9f\xe9rence. (notez qu\'ils n\'ont pas la m\xeame r\xe9f\xe9rence !)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nEnsuite, nous d\xe9finissons la variable `person` \xe9gale \xe0 `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nNous modifions seulement la valeur de la variable `person`, et non le premier \xe9l\xe9ment du tableau, car cet \xe9l\xe9ment a une r\xe9f\xe9rence (copi\xe9e) diff\xe9rente de l\'objet. Le premier \xe9l\xe9ment de `members` conserve sa r\xe9f\xe9rence \xe0 l\'objet d\'origine. Lorsque nous affichons le tableau `members`, le premier \xe9l\xe9ment contient toujours la valeur de l\'objet, qui est affich\xe9.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"Avec une boucle `for-in`, nous pouvons parcourir les cl\xe9s d\'objet, dans ce cas `name` et `age`. Sous le capot, les cl\xe9s d\'objet sont des cha\xeenes (si elles ne sont pas un symbole). A chaque boucle, nous d\xe9finissons la valeur de `item` \xe9gal \xe0 la cl\xe9 courante sur laquelle elle est entrain d\'it\xe9r\xe9. Premi\xe8rement, `item` est \xe9gal \xe0 `name` et est affich\xe9. Ensuite, `item` est \xe9gal \xe0 `age`, qui est affich\xe9.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"L\'associativit\xe9 des op\xe9rateurs correspond \xe0 l\'ordre dans lequel le compilateur \xe9value les expressions, de gauche \xe0 droite ou de droite \xe0 gauche. Cela se produit uniquement si tous les op\xe9rateurs ont la m\xeame priorit\xe9. Nous n\'avons qu\'un type d\'op\xe9rateur : `+`. De plus, l\'associativit\xe9 est de gauche \xe0 droite.\\n\\n`3 + 4` est \xe9valu\xe9 en premier. Cela donne le nombre `7`.\\n\\n`7 + \'5\'` donne `\'75\'` \xe0 cause de la conversion. JavaScript convertit le nombre `7` en une cha\xeene, voir question 15. Nous pouvons concat\xe9ner deux cha\xeenes en utilisant l\'op\xe9rateur `+`. `\\"7\\" + \\"5\\"` a pour r\xe9sultat `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Seuls les premiers nombres de la cha\xeene sont renvoy\xe9s. Bas\xe9 sur la base dix (le deuxi\xe8me argument permettant de sp\xe9cifier le type de nombre que nous voulons analyser: base 10, hexad\xe9cimal, octal, binaire, etc.), `parseInt` v\xe9rifie si les caract\xe8res de la cha\xeene sont valides. Une fois qu\'il rencontre un caract\xe8re qui n\'est pas un nombre valide dans la base, il arr\xeate l\'analyse et ignore les caract\xe8res suivants.\\n\\n`*` n\'est pas un nombre valide. Il analyse seulement `7` dans la d\xe9cimale `7`. `num` contient maintenant la valeur de` 7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"Quelle est la valeur de `num` ?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Lors du l\'utilisation de `map` sur le tableau, la valeur de `num` est \xe9gale \xe0 l\u2019\xe9l\xe9ment sur lequel elle est en train de boucler. Dans ce cas, les \xe9l\xe9ments sont des nombres. La condition de l\'instruction si `typeof num === \\"num\xe9ro\\"` renvoie `true`. La fonction map cr\xe9e un nouveau tableau et ins\xe8re les valeurs renvoy\xe9es par la fonction.\\n\\nCependant, nous ne renvoyons pas de valeur. Lorsque nous ne renvoyons pas de valeur \xe0 partir de la fonction, la fonction renvoie `undefined`. Le bloc de fonction est appel\xe9 pour chaque \xe9l\xe9ment du tableau. Ainsi, pour chaque \xe9l\xe9ment, nous renvoyons `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Les arguments sont pass\xe9s par _valeur_, \xe0 moins que leur valeur ne soit un objet, ils sont pass\xe9s par _r\xe9f\xe9rence_. `birthYear` est pass\xe9e par valeur, car c\'est une cha\xeene, pas un objet. Lorsque nous passons des arguments par valeur, une copie de cette valeur est cr\xe9\xe9e (voir question 46).\\n\\nLa variable `birthYear` a une r\xe9f\xe9rence \xe0 la valeur `\\"1997\\"`. L\'argument `year` fait \xe9galement r\xe9f\xe9rence \xe0 la valeur `\\"1997\\"`, mais il ne s\'agit pas de la m\xeame valeur que celle de `birthYear`. Lorsque nous mettons \xe0 jour la valeur de `year` en pla\xe7ant `year` \xe9gal \xe0 `\\"1998\\"`, nous ne mettons \xe0 jour que la valeur de `year`. `birthYear` est toujours \xe9gal \xe0 `\\"1997\\"`.\\n\\nLa valeur de `person` est un objet. L\'argument `membre` a une r\xe9f\xe9rence (copi\xe9e) au m\xeame objet. Lorsque nous modifions une propri\xe9t\xe9 de l\'objet, `membre` a une r\xe9f\xe9rence \xe0 la valeur de` person` sera \xe9galement modifi\xe9e, puisqu\'elles ont toutes les deux une r\xe9f\xe9rence au m\xeame objet. La propri\xe9t\xe9 `name` de `person` est maintenant \xe9gale \xe0 la valeur `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"Quelle est la sortie ?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Avec l\'instruction `throw`, nous pouvons cr\xe9er des erreurs personnalis\xe9es. Avec cette d\xe9claration, vous pouvez lancer des exceptions. Une exception peut \xeatre une <b>cha\xeene</b>, un <b>num\xe9ro</b>, un <b>bool\xe9en</b> ou un <b>objet</b>. Dans ce cas, notre exception est la cha\xeene `\'Hello world\'`.\\n\\nAvec l\'instruction `catch`, nous pouvons sp\xe9cifier quoi faire si une exception est lev\xe9e dans le bloc `try`. Une exception est lev\xe9e : la cha\xeene `\'Hello world\'`. `e` est maintenant \xe9gal \xe0 cette cha\xeene, que nous affichons. Il en r\xe9sulte `\'Oh an error: Hello world\'`.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error: Hello world!`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Lorsque vous retournez une propri\xe9t\xe9, la valeur de la propri\xe9t\xe9 est \xe9gale \xe0 la valeur _retourn\xe9e_ et non \xe0 la valeur d\xe9finie dans la fonction constructeur. Nous renvoyons la cha\xeene `\\"Maserati\\"`, donc `myCar.make` est \xe9gal \xe0 `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` est en r\xe9alit\xe9 un raccourci pour :\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nLorsque nous d\xe9finissons `y` \xe9gal \xe0 `10`, nous ajoutons en fait une propri\xe9t\xe9 `y` \xe0 l\'objet global (`window` dans le navigateur,` global` dans NodeJS). Dans un navigateur, `window.y` est \xe9gal \xe0 `10`.\\n\\nEnsuite, nous d\xe9clarons une variable `x` avec la valeur de `y`, qui est `10`. Les variables d\xe9clar\xe9es avec le mot-cl\xe9 `let` ont une port\xe9e de bloc, elles ne sont d\xe9finies que dans le bloc dans lequel elles sont d\xe9clar\xe9es; la fonction imm\xe9diatement invoqu\xe9e (IIFE) dans ce cas. Lorsque nous utilisons l\'op\xe9rateur `typeof`, l\'op\xe9rande `x` n\'est pas d\xe9fini: nous essayons d\'acc\xe9der \xe0 `x` en dehors du bloc dans lequel il est d\xe9clar\xe9. Cela signifie que `x` n\'est pas d\xe9fini. Les valeurs auxquelles aucune valeur n\'a \xe9t\xe9 attribu\xe9e ni d\xe9clar\xe9e sont du type `\\"undefined\\"`. `console.log (typeof x)` renvoie `\\"undefined\\"`.\\n\\nCependant, nous avons cr\xe9\xe9 une variable globale `y` lorsque `y` est \xe9gal \xe0 `10`. Cette valeur est accessible n\'importe o\xf9 dans notre code. `y` est d\xe9fini et contient une valeur de type `\\"number\\"`. `console.log (typeof y)` renvoie `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"Nous pouvons supprimer des propri\xe9t\xe9s d\'objets en utilisant le mot-cl\xe9 `delete`, \xe9galement dans le prototype. En supprimant une propri\xe9t\xe9 dans le prototype, elle n\u2019est plus disponible dans la cha\xeene de prototypes. Dans ce cas, la fonction `bark` n\'est plus disponible dans le prototype apr\xe8s `delete Dog.prototype.bark`, mais nous essayons toujours d\'y acc\xe9der.\\n\\nLorsque nous essayons d\'appeler quelque chose qui n\'est pas une fonction, un `TypeError` est lev\xe9. Dans ce cas, `TypeError: pet.bark n\'est pas une fonction`, puisque` pet.bark` est `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`,`\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"Quelle est la sortie ?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"L\'objet `Set` est une collection de valeurs _uniques_ : une valeur ne peut appara\xeetre qu\'une seule fois dans un ensemble.\\n\\nNous avons pass\xe9 l\'it\xe9rable `[1, 1, 2, 3, 4]` avec une valeur dupliqu\xe9e `1`. Puisque nous ne pouvons pas avoir deux valeurs identiques dans un ensemble, l\'une d\'entre elles est supprim\xe9e. Cela donne `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"Un module import\xe9 est _en lecture seule_ : vous ne pouvez pas modifier le module import\xe9. Seul le module qui les exporte peut en changer la valeur.\\n\\nLorsque nous essayons d\'incr\xe9menter la valeur de `myCounter`, une erreur est g\xe9n\xe9r\xe9e : `myCounter` est en lecture seule et ne peut pas \xeatre modifi\xe9.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"L\'op\xe9rateur `delete` renvoie une valeur bool\xe9enne : `true` en cas de suppression r\xe9ussie, sinon il renvoie `false`. Toutefois, les variables d\xe9clar\xe9es avec les mots cl\xe9s `var`,` const` ou `let` ne peuvent pas \xeatre supprim\xe9es \xe0 l\'aide de l\'op\xe9rateur` delete`.\\n\\nLa variable `name` a \xe9t\xe9 d\xe9clar\xe9e avec un mot-cl\xe9 `const`. Par cons\xe9quent, sa suppression a \xe9chou\xe9 : `false` est renvoy\xe9. Lorsque nous d\xe9finissons `age` \xe9gal \xe0 `21`, nous avons en fait ajout\xe9 une propri\xe9t\xe9 appel\xe9e `age` \xe0 l\'objet global. De cette fa\xe7on, vous pouvez supprimer des propri\xe9t\xe9s d\u2019objets, ainsi que de l\u2019objet global, pour que `delete age` renvoie` true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"Nous pouvons d\xe9compresser les valeurs des tableaux ou les propri\xe9t\xe9s des objets en les d\xe9truisant. Par exemple :\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nLa valeur de `a` est maintenant `1` et la valeur de `b` est maintenant `2`. Ce que nous avons r\xe9ellement fait dans la question, c\'est :\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nCela signifie que la valeur de `y` est \xe9gale \xe0 la premi\xe8re valeur du tableau, qui correspond au nombre `1`. Lorsque nous affichons `y`,` 1` est renvoy\xe9.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"Il est possible de combiner des objets en utilisant l\'op\xe9rateur de d\xe9construction `...`. Il vous permet de cr\xe9er des copies des paires cl\xe9 / valeur d\'un objet et de les ajouter \xe0 un autre objet. Dans ce cas, nous cr\xe9ons des copies de l\'objet `user` et nous les ajoutons \xe0 l\'objet` admin`. L\'objet `admin` contient maintenant les paires cl\xe9 / valeur copi\xe9es, ce qui donne `{admin: true, nom: \\"Lydia\\", age: 21}`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"Quelle est la sortie ?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"Avec la m\xe9thode `defineProperty`, nous pouvons ajouter de nouvelles propri\xe9t\xe9s \xe0 un objet ou modifier celles existantes. Lorsque nous ajoutons une propri\xe9t\xe9 \xe0 un objet en utilisant la m\xe9thode `defineProperty`, il s\u2019agit par d\xe9faut d\'une propri\xe9t\xe9 _non \xe9num\xe9rable_. La m\xe9thode `Object.keys` renvoie tous les noms de propri\xe9t\xe9s _\xe9num\xe9rable_ \xe0 partir d\'un objet, dans ce cas uniquement `\\"name\\"`.\\n\\nLes propri\xe9t\xe9s ajout\xe9es \xe0 l\'aide de la m\xe9thode `defineProperty` sont immuables par d\xe9faut. Vous pouvez remplacer ce comportement en utilisant les propri\xe9t\xe9s `writeable`, `configurable` et `enumerable`. De cette fa\xe7on, la m\xe9thode `defineProperty` vous donne beaucoup plus de contr\xf4le sur les propri\xe9t\xe9s que vous ajoutez \xe0 un objet.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Le second argument de `JSON.stringify` est le _repla\xe7ant_. Le rempla\xe7ant peut \xeatre une fonction ou un tableau, et vous permet de contr\xf4ler quoi et comment les valeurs doivent \xeatre stringifi\xe9es.\\n\\nSi le rempla\xe7ant est un _tableau_, seules les propri\xe9t\xe9s dont les noms sont inclus dans le tableau seront ajout\xe9es \xe0 la cha\xeene JSON. Dans ce cas, seules les propri\xe9t\xe9s avec les noms `\\"level\\"` et `\\"health\\"` sont incluses, `\\"username\\"` est exclu. `data` est maintenant \xe9gal \xe0 `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nSi le rempla\xe7ant est une _fonction_, cette fonction est appel\xe9e sur chaque propri\xe9t\xe9 de l\'objet que vous personnalisez. La valeur renvoy\xe9e par cette fonction sera la valeur de la propri\xe9t\xe9 lorsqu\'elle sera ajout\xe9e \xe0 la cha\xeene JSON. Si la valeur est `undefined`, cette propri\xe9t\xe9 est exclue de la cha\xeene JSON.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"Quelle est la sortie ?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"L\'op\xe9rateur arithm\xe9tique `++` _renvoie en premier_ la valeur de l\'op\xe9rande, _puis incr\xe9mente_ la valeur de l\'op\xe9rande. La valeur de `num1` est \xe9gale \xe0 `10`, puisque la fonction `increaseNumber` renvoie d\'abord la valeur de `num`, qui correspond \xe0 `10`, et augmente la valeur de `num` par la suite.\\n\\n`num2` est \xe9gal \xe0 `10`, puisque nous avons pass\xe9 `num1` \xe0 la commande `increasePassedNumber`. `number` est \xe9gal \xe0 `10` (la valeur de `num1`). Encore une fois, l\'op\xe9rateur arithm\xe9tique `++` _renvoie d\'abord_ la valeur de l\'op\xe9rande, puis incr\xe9mente_ la valeur de l\'op\xe9rande. La valeur de `nombre` est `10`, donc `num2` est \xe9gal \xe0 `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"Quelle est la sortie ?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"Dans ES6, nous pouvons initialiser les param\xe8tres avec une valeur par d\xe9faut. La valeur du param\xe8tre sera la valeur par d\xe9faut, si aucune autre valeur n\'a \xe9t\xe9 pass\xe9e \xe0 la fonction, ou si la valeur du param\xe8tre est `\\"undefined\\"`. Dans ce cas, nous r\xe9partissons les propri\xe9t\xe9s de l\'objet `value` dans un nouvel objet, donc `x` a la valeur par d\xe9faut `{number: 10}`.\\n\\nL\'argument par d\xe9faut est \xe9valu\xe9 at _call time_! Chaque fois que nous appelons la fonction, un a _new_ object  cr\xe9\xe9. Nous invoquons la fonction `multiply` les deux premi\xe8res fois sans passer de valeur: `x` a la valeur par d\xe9faut `{number: 10}`. Nous enregistrons ensuite la valeur multipli\xe9e de ce nombre, qui est `20`.\\n\\nLa troisi\xe8me fois que nous invoquons multiplier, nous passons un argument: l\'objet appel\xe9 `value`. L\'op\xe9rateur `* =` est en fait un raccourci pour `x.number = x.number * 2`: nous modifions la valeur de `x.number`, et enregistrons la valeur multipli\xe9e `20`.\\n\\nLa quatri\xe8me fois, nous passons \xe0 nouveau l\'objet `value`. `x.number` a \xe9t\xe9 pr\xe9c\xe9demment modifi\xe9 en `20`, donc `x.number * = 2` enregistre \xab40\xbb.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"Quelle est la sortie?"}],"locale":"fr-FR"},{"isRTL":false,"language":"\ud83c\uddee\ud83c\udde9 Indonesia","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \'Lydia\';\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Di dalam function, kita buat variabel `name` dan variabel declaration-nya menggunakan `var`. Artinya variable tersebut hoisted (dalam fase pembuatan ini menggunakan memory penyimpanan) dengan isi standar-nya `undefined`, hingga kita benar berada di baris code pembuatan variabel-nya. Kita belum membuat variabel tersebut saat kita memanggil variabel `name`, jadi isi dari varabel tersebut masih `undefined`\\n\\nVariabel declaration yang menggunakan `let` (dan `const`) juga hoisted, tapi tidak seperti `var`, variabel declaration `let` dan `const` tidak ditentukan isi standar-nya. `let` dan `const` tidak bisa diakses sebelum di tentukan dulu isi-nya. Kejadian ini disebut \\"temporal dead zone\\". Saat kita mencoba memanggil variabel yang belum ditentukan isi-nya, Javascript mengeluarkan error `ReferenceError`.","id":0,"options":["`Lydia` dan `undefined`","`Lydia` dan `ReferenceError`","`ReferenceError` dan `21`","`undefined` dan `ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Karena antrean peristiwa di JavaScript, fungsi callback `setTimeout` disebut _after_ loop telah dijalankan. Karena variabel `i` di loop pertama dideklarasikan menggunakan kata kunci` var`, nilai ini adalah global. Selama perulangan, kita menambah nilai `i` sebesar `1` setiap kali, menggunakan operator unary` ++ `. Pada saat fungsi callback `setTimeout` dipanggil,` i` sama dengan `3` di contoh pertama.\\n\\nPada perulangan kedua, variabel `i` dideklarasikan menggunakan kata kunci` let`: variabel yang dideklarasikan dengan kata kunci `let` (dan` const`) memiliki cakupan blok (blok adalah apa saja di antara `{}`). Selama setiap iterasi, `i` akan memiliki nilai baru, dan setiap nilai dicakup di dalam loop.","id":1,"options":["`0 1 2` and `0 1 2`","`0 1 2` and `3 3 3`","`3 3 3` and `0 1 2`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius,\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());","codeLanguage":"javascript","explanation":"Perhatikan pada nilai \'diameter\' adalah fungsi biasa, sedangkan nilai \'perimeter\' yaitu fungsi panah.\\n\\nDengan fungsi panah, kata kunci \'this\' merujuk ke cakupan sekitarnya saat ini, tidak seperti fungsi biasa. Ini berarti bahwa ketika kita memanggil \'perimeter\' itu tidak mengacu pada objek bentuk, tetapi pada lingkup sekitarnya.\\n\\nTidak ada nilai \'radius\' pada objek itu, yang mengembalikan \'tidak ditentukan\'.","id":2,"options":["`20` dan `62.83185307179586`","`20` dan `NaN`","`20` dan `63`","`NaN` dan `63`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"+true;\\n!\'Lydia\';","codeLanguage":"javascript","explanation":"Tia unary plus mencoba mengonversi operan menjadi angka. `true` adalah` 1`, dan `false` adalah` 0`.\\n\\nString \\"\'Lydia\'` adalah nilai yang benar. Apa yang sebenarnya kami tanyakan adalah \\"apakah nilai kebenaran ini salah?\\". Ini mengembalikan `salah`.","id":3,"options":["`1` dan `false`","`false` dan `NaN`","`false` dan `false`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const bird = {\\n  size: \'small\',\\n};\\n\\nconst mouse = {\\n  name: \'Mickey\',\\n  small: true,\\n};","codeLanguage":"javascript","explanation":"Pada JavaScript, semua kunci objek adalah string (kecuali jika itu berupa Simbol). Meskipun kita mungkin tidak mengetiknya sebagai string, tetap saja mereka selalu berubah menjadi string didalamnya.\\n\\nJavaScript menginterpretasikan (atau membuka) pernyataan-pernyataan. Saat kita menggunakan notasi kurung siku, ia melihat kurung buka pertama `[` dan terus berjalan sampai menemukan kurung tutup `]`. Baru setelah itu akan mengevaluasi pernyataannya. `mouse[bird.size]`: Pertama, ini mengevaluasi `bird.size`, yang mana `\\"small\\"`. `mouse[\\"small\\"]` mengembalikan nilai `true`.\\n\\nNamun, dengan notasi dot (.), hal ini tidak terjadi. `mouse` tidak memiliki kunci dengan nama `bird`, yang menyebabkan `mouse.bird` bernilai `undefined`. Kemudian, kita meminta `size` untuk menggunakan notasi dot (.): `mouse.bird.size`. Kita mengetahui bahwa `mouse.bird` bernilai `undefined`, yang sebenarnya kita minta adalah `undefined.size`. Yang mana hal ini tidak valid, dan akan memunculkan kesalahan yang mirip dengan `Cannot read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size` tidak benar","`mouse[bird.size]` tidak benar","`mouse[bird[\\"size\\"]]` tidak benar","Semua jawaban benar"],"question":"Mana yang benar?"},{"answer":0,"code":"let c = { greeting: \'Hey!\' };\\nlet d;\\n\\nd = c;\\nc.greeting = \'Hello\';\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"Dalam JavaScript, semua objek berinteraksi dengan _reference_ saat menyetelnya agar sama satu sama lain.\\n\\nPertama, variabel `c` menyimpan nilai ke sebuah objek. Nanti, kita menetapkan `d` dengan referensi yang sama yang dimiliki` c` ke objek.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nSaat Anda mengubah satu objek, Anda mengubah semuanya.","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` adalah konstruktor fungsi bawaan pada JavaScript. Meskipun hasilnya terlihat seperti integer, namun sebenarnya itu bukan integer: aslinya memiliki banyak fitur tambahan dan merupakan sebuah objek.\\n\\nSaat kita menggunakan operator `==`, hal ini hanya akan memeriksa bahwa keduanya memiliki nilai yang sama. Pada kasus ini kedua variabel tersebut memiliki nilai yang sama, yaitu `3`, maka akan mengembalikan nilai `true`.\\n\\nNamun, saat kita menggunakan operator `===`, operator ini memeriksa bahwa kedua variabel memiliki nilai dan tipe yang sama. Bagaimanapun: `new Number()` bukanlah sebuah integer, ini adalah sebuah **object**. Keduanya akan mengembalikan nilai `false.`","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \'green\' } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \'purple\' });\\nconsole.log(freddie.colorChange(\'orange\'));","codeLanguage":"javascript","explanation":"Fungsi `colorChange` adalah statis. Metode statis dirancang hanya dapat aktif pada kontruktor dimana fungsi itu dibuat, dan tidak bisa dibawa ke-turunannya. Kita tahu bahwa `freddie` adalah sebuah turunan, maka fungsi itu tidak bisa turun, dan tidak tersedia pada instance `freddie`: sebuah pesan `TypeError` akan dikembalikan","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Ini mencatat objek, karena kita baru saja membuat objek kosong di objek global! Saat kita salah mengetik `greeting` sebagai` greetign`, interpreter JS sebenarnya melihat ini sebagai `global.greetign = {}` (atau `window.greetign = {}` di browser).\\n\\nUntuk menghindari hal ini, kita bisa menggunakan `\\" use strict \\"`. Ini memastikan bahwa Anda telah mendeklarasikan variabel sebelum menetapkannya dengan apa pun.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"function bark() {\\n  console.log(\'Woof!\');\\n}\\n\\nbark.animal = \'dog\';","codeLanguage":"javascript","explanation":"Ini dimungkinkan dalam JavaScript, karena fungsi adalah objek! (Segala sesuatu selain tipe primitif adalah objek)\\n\\nFungsi adalah jenis objek khusus. Kode yang Anda tulis sendiri bukanlah fungsi sebenarnya. Fungsinya adalah objek dengan properti. Properti ini tidak dapat dipanggil.","id":9,"options":["Nothing, this is totally fine!","`SyntaxError`. You cannot add properties to a function this way.","`\\"Woof\\"` gets logged.","`ReferenceError`"],"question":"Apa yang terjadi jika kita melakukan ini?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\'Lydia\', \'Hallie\');\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Anda tidak dapat menambahkan properti ke constructor seperti yang Anda lakukan dengan objek biasa. Jika Anda ingin menambahkan fitur ke semua objek sekaligus, Anda harus menggunakan prototipe sebagai gantinya. Jadi dalam kasus ini:\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nAkan membuat `member.getFullName()` berfungsi. Mengapa ini bermanfaat? Katakanlah kita menambahkan metode ini ke konstruktor itu sendiri. Mungkin tidak setiap instance `Person` membutuhkan metode ini. Ini akan membuang banyak ruang memori, karena mereka masih memiliki properti itu, yang mengambil ruang memori untuk setiap instance. Sebaliknya, jika kita hanya menambahkannya ke prototipe, kita hanya memilikinya di satu tempat di memori, namun mereka semua memiliki akses ke sana!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\'Lydia\', \'Hallie\');\\nconst sarah = Person(\'Sarah\', \'Smith\');\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"Pada `sarah`, kita tidak menggunakan kata kunci `new`. Saat menggunakan `new`, Ini mengacu pada object kosong yang kita buat. Namun, jika Anda tidak menambahkan `new` ini merujuk pada **global object**!\\n\\nKita tahu bahwa `this.firstName` setara dengan `\\"Sarah\\"` dan `this.lastName` sama dengan `\\"Smith\\"`. Apa yang sebenarnya kami lakukan adalah mendefinisikan `global.firstName = \'Sarah\'` dan `global.lastName = \'Smith\'`. `sarah` sendiri dibiarkan `undefined`, karena kita tidak mengembalikan nilai dari fungsi `Person`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` dan `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` dan `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` dan `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` dan `ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":3,"explanation":"Selama fase **capturing**, event melewati elemen ancestor hingga ke elemen target. Kemudian mencapai element **target**, dan **bubbling** dimulai.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Apa tiga fase dari event propagation?"},{"answer":1,"explanation":"Semua objek memiliki prototypes, kecuali **objek dasar**. Objek dasar adalah objek yang dibuat oleh pengguna, atau objek yang dibuat dengan menggunakan kata kunci `baru`. Objek dasar memiliki akses ke beberapa metode dan properti, seperti `.toString`. Inilah alasan mengapa Anda dapat menggunakan metode JavaScript bawaan! Semua metode tersebut tersedia di prototipe. Meskipun JavaScript tidak dapat menemukannya secara langsung di objek Anda, JavaScript berada di rantai prototipe dan menemukannya di sana, yang membuatnya dapat diakses untuk Anda.","id":13,"options":["true","false"],"question":"Semua objek memiliki prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \'2\');","codeLanguage":"javascript","explanation":"JavaScript adalah **Bahasa yang bersifat dinamis**: yang tidak menentukan jenis variabel tertentu. Values dapat secara otomatis diubah menjadi jenis lain tanpa Anda sadari, yang disebut _implicit type coercion_. **Coercion** adalah mengubah dari satu jenis ke jenis lainnya.\\n\\nPada contoh ini, JavaScript mengubah number `1` menjadi sebuah string, agar fungsi tersebut masuk akal dan mengembalikan nilai. Selama penambahan tipe numerik (`1`) dan tipe string (`\'2\'`), angka tersebut diperlakukan sebagai string. Kita bisa menggabungkan string seperti `\\"Hello\\" + \\"World\\"`, jadi yang terjadi di sini adalah `\\"1\\" + \\"2\\"` yang mengembalikan `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"**Akhiran** operator unary `++`:\\n\\n1. Mengembalikan nilai (ini mengembalikan `0`)\\n2. Menambahkan nilai (angkanya sekarang `1`)\\n\\n**Awalan** operator unary `++`:\\n\\n1. Menambah nilai (angkanya sekarang `2`)\\n2. Mengembalikan nilai (ini mengembalikan `2`)\\n\\nIni mengembalikan `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \'Lydia\';\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"Jika Anda menggunakan literal template yang diberi tag, nilai argumen pertama selalu berupa array bernilai string. Argumen yang tersisa mendapatkan nilai dari ekspresi yang diteruskan!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\'You are an adult!\');\\n  } else if (data == { age: 18 }) {\\n    console.log(\'You are still an adult.\');\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Saat menguji persamaan, primitif dibandingkan dengan nilainya, sedangkan objek dibandingkan dengan referensinya. JavaScript memeriksa apakah objek memiliki referensi ke lokasi yang sama di memori.\\n\\nDua objek yang kita bandingkan tidak memiliki itu: objek yang kita lewati sebagai parameter merujuk ke lokasi yang berbeda dalam memori dari objek yang kita gunakan untuk memeriksa persamaan.\\n\\nInilah mengapa `{age: 18} === {age: 18}` dan `{age: 18} == {age: 18}` mengembalikan nilai `false`.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"Parameter sisanya (`... args`.) Memungkinkan kita \\"mengumpulkan\\" semua argumen yang tersisa ke dalam sebuah array. Array adalah sebuah objek, jadi `typeof args` mengembalikan \\"objek\\"","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"function getAge() {\\n  \'use strict\';\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Dengan `\\" use strict \\"`, Anda dapat memastikan bahwa Anda tidak mendeklarasikan variabel global secara tidak sengaja. Kita tidak pernah mendeklarasikan variabel `age`, dan karena kita menggunakan `\\" use strict \\"`, ini akan memunculkan kesalahan referensi. Jika kita tidak menggunakan `\\" use strict \\"`, ini akan berhasil, karena properti `age` akan ditambahkan ke objek global.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const sum = eval(\'10*10+5\');","codeLanguage":"javascript","explanation":"`eval` mengevaluasi kode yang berlalu sebagai string. Jika itu adalah ekspresi, seperti dalam kasus ini, itu mengevaluasi ekspresi. Ungkapannya adalah `10 * 10 + 5`. Ini kembali nomor `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"What\'s value of `sum`?"},{"answer":1,"code":"sessionStorage.setItem(\'cool_secret\', 123);","codeLanguage":"javascript","explanation":"Data yang disimpan di `sessionStorage` akan dihapus setelah menutup _tab_.\\n\\nJika anda menggunakan `localStorage`, data tersebut akan tersimpan selamanya, kecuali misalnya _method_ `localStorage.clear()` dipanggil.","id":21,"options":["Selamanya, data tersebut tidak akan hilang.","Saat pengguna menutup tab browser.","Saat pengguna menutup seluruh browser, tidak hanya tab.","Saat pengguna mematikan komputernya."],"question":"Sampai berapa lama kah cool_secret dapat diakses?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Dengan kata kunci `var`, anda dapat menyatakan beberapa variabel dengan nama yang sama. Variabelnya akan memegang nilai terakhir.\\n\\nAnda tidak dapat melakukan ini dengan `let` atau `const` karena mereka block-scoped.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const obj = { 1: \'a\', 2: \'b\', 3: \'c\' };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\'1\');\\nobj.hasOwnProperty(1);\\nset.has(\'1\');\\nset.has(1);","codeLanguage":"javascript","explanation":"All object keys (excluding Symbols) are strings under the hood, even if you don\'t type it yourself as a string. This is why `obj.hasOwnProperty(\'1\')` also returns true.\\n\\nIt doesn\'t work that way for a set. There is no `\'1\'` in our set: `set.has(\'1\')` returns `false`. It has the numeric type `1`, `set.has(1)` returns `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const obj = { a: \'one\', b: \'two\', a: \'three\' };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Jika anda memiliki dua kunci dengan nama yang sama, kunci akan diganti. Ini masih dalam posisi pertama, tetapi dengan nilai terakhir yang ditentukan.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"Apa yang akan tampil?"},{"answer":0,"explanation":"The base execution context is the global execution context: it\'s what\'s accessible everywhere in your code.","id":25,"options":["true","false","it depends"],"question":"The JavaScript global execution context creates two things for you: the global object, and the \\"this\\" keyword."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"Pernyataan `continue` melewatkan iterasi jika kondisi tertentu mengembalikan `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \'Just give Lydia pizza already!\';\\n};\\n\\nconst name = \'Lydia\';\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` adalah konstruksi dibangun, yang dapat kita tambahkan properti ke. Aku hanya menambahkan metode ke prototipe. String primitif string secara otomatis dikonversi menjadi objek string, dihasilkan oleh fungsi prototipe string. Jadi, semua string (objek string) memiliki akses ke metode itu!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \'b\' };\\nconst c = { key: \'c\' };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Object keys are automatically converted into strings. We are trying to set an object as a key to object `a`, with the value of `123`.\\n\\nHowever, when we stringify an object, it becomes `\\"[object Object]\\"`. So what we are saying here, is that `a[\\"object Object\\"] = 123`. Then, we can try to do the same again. `c` is another object that we are implicitly stringifying. So then, `a[\\"object Object\\"] = 456`.\\n\\nThen, we log `a[b]`, which is actually `a[\\"object Object\\"]`. We just set that to `456`, so it returns `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const foo = () => console.log(\'First\');\\nconst bar = () => setTimeout(() => console.log(\'Second\'));\\nconst baz = () => console.log(\'Third\');\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Kami memiliki fungsi `setTimeout` dan dimohonkan terlebih dahulu. Namun, itu login terakhir.\\n\\nHal ini karena di browsers, kita tidak hanya memiliki mesin waktu runtime, kita juga memiliki sesuatu yang disebut `WebAPI`. `WebAPI` memberi kita fungsi `setTimeout`, dan misalnya DOM.\\n\\nSetelah _callback_ (panggilan balik) didorong ke WebAPI, fungsi `setTimeout` itu sendiri (tetapi tidak panggilan balik) muncul dari tumpukan.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nSekarang, `foo` mendapat hambatan, dan `\\"First\\"` yang login.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` yang muncul dari tumpukan, dan `baz` mendapat perantara. `\\"Third\\"` akan login.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI tidak bisa hanya menambahkan barang-barang ke tumpukan setiap kali siap. Sebaliknya, ia mendorong fungsi panggilan balik ke sesuatu yang disebut _queue_ (antrian).\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nDi sinilah serangkaian acara mulai bekerja. Sebuah **event loop** (putaran kejadian/peristiwa) melihat tumpukan dan antrian tugas. Jika tumpukan kosong, itu mengambil hal pertama pada antrian dan mendorong ke tumpukan.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` bisa dipanggil, `\\"Second\\"` akan login, dan itu muncul dari tumpukan.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"The deepest nested element that caused the event is the target of the event. You can stop bubbling by `event.stopPropagation`","id":30,"options":["Outer `div`","Inner `div`","`button`","An array of all nested elements."],"question":"What is the event.target when clicking the button?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"If we click `p`, we see two logs: `p` and `div`. During event propagation, there are 3 phases: capturing, target, and bubbling. By default, event handlers are executed in the bubbling phase (unless you set `useCapture` to `true`). It goes from the deepest nested element outwards.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"When you click the paragraph, what\'s the logged output?"},{"answer":3,"code":"const person = { name: \'Lydia\' };\\n\\nfunction sayHi(age) {\\n  return `${this.name} is ${age}`;\\n}\\n\\nconsole.log(sayHi.call(person, 21));\\nconsole.log(sayHi.bind(person, 21));","codeLanguage":"javascript","explanation":"With both, we can pass the object to which we want the `this` keyword to refer to. However, `.call` is also _executed immediately_!\\n\\n`.bind.` returns a _copy_ of the function, but with a bound context! It is not executed immediately.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"The `sayHi` function returns the returned value of the immediately invoked function (IIFE). This function returned `0`, which is type `\\"number\\"`.\\n\\nFYI: there are only 7 built-in types: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, and `bigint`. `\\"function\\"` is not a type, since functions are objects, it\'s of type `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\'\');\\n(\' \');\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Hanya ada enam nilai yang salah:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (string kosong)\\n- `false`\\n\\nKonstruktor fungsi, seperti Number baru dan Boolean baru, benar.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"Which of these values are falsy?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` returns `\\"number\\"`.\\n`typeof \\"number\\"` returns `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Saat Anda menyetel nilai ke elemen dalam larik yang melebihi panjang larik, JavaScript membuat sesuatu yang disebut \\"slot kosong\\". Ini sebenarnya memiliki nilai `tidak terdefinisi`, tetapi Anda akan melihat sesuatu seperti:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\ntergantung di mana Anda menjalankannya (berbeda untuk setiap browser, node, dll.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"The `catch` block receives the argument `x`. This is not the same `x` as the variable when we pass arguments. This variable `x` is block-scoped.\\n\\nLater, we set this block-scoped variable equal to `1`, and set the value of the variable `y`. Now, we log the block-scoped variable `x`, which is equal to `1`.\\n\\nOutside of the `catch` block, `x` is still `undefined`, and `y` is `2`. When we want to `console.log(x)` outside of the `catch` block, it returns `undefined`, and `y` returns `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"Apa yang akan tampil?"},{"answer":0,"explanation":"JavaScript only has primitive types and objects.\\n\\nPrimitive types are `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, and `symbol`.\\n\\nWhat differentiates a primitive from an object is that primitives do not have any properties or methods; however, you\'ll note that `\'foo\'.toUpperCase()` evaluates to `\'FOO\'` and does not result in a `TypeError`. This is because when you try to access a property or method on a primitive like a string, JavaScript will implicitly wrap the object using one of the wrapper classes, i.e. `String`, and then immediately discard the wrapper after the expression evaluates. All primitives except for `null` and `undefined` exhibit this behaviour.","id":38,"options":["primitive or object","function or object","trick question! only objects","number or object"],"question":"Everything in JavaScript is either a..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2],\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` is our initial value. This is the value we start with, and the value of the very first `acc`. During the first round, `acc` is `[1,2]`, and `cur` is `[0, 1]`. We concatenate them, which results in `[1, 2, 0, 1]`.\\n\\nThen, `[1, 2, 0, 1]` is `acc` and `[2, 3]` is `cur`. We concatenate them, and get `[1, 2, 0, 1, 2, 3]`","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"!!null;\\n!!\'\';\\n!!1;","codeLanguage":"javascript","explanation":"`null` is falsy. `!null` returns `true`. `!true` returns `false`.\\n\\n`\\"\\"` is falsy. `!\\"\\"` returns `true`. `!true` returns `false`.\\n\\n`1` is truthy. `!1` returns `false`. `!false` returns `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"setInterval(() => console.log(\'Hi\'), 1000);","codeLanguage":"javascript","explanation":"Itu adalah mengembalikan sebuah id unik. id unik dapat digunakan untuk menghapus interval dengan menggunakan fungsi clearInterval()","id":41,"options":["a unique id","the amount of milliseconds specified","the passed function","`undefined`"],"question":"What does the `setInterval` method return in the browser?"},{"answer":0,"code":"[...\'Lydia\'];","codeLanguage":"javascript","explanation":"Sebuah string adalah iterable. Operator memetakan setiap karakter dari sebuah iterable ke dalam satu elemen.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"What does this return?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Regular functions cannot be stopped mid-way after invocation. However, a generator function can be \\"stopped\\" midway, and later continue from where it stopped. Every time a generator function encounters a `yield` keyword, the function yields the value specified after it. Note that the generator function in that case doesn\u2019t _return_ the value, it _yields_ the value.\\n\\nFirst, we initialize the generator function with `i` equal to `10`. We invoke the generator function using the `next()` method. The first time we invoke the generator function, `i` is equal to `10`. It encounters the first `yield` keyword: it yields the value of `i`. The generator is now \\"paused\\", and `10` gets logged.\\n\\nThen, we invoke the function again with the `next()` method. It starts to continue where it stopped previously, still with `i` equal to `10`. Now, it encounters the next `yield` keyword, and yields `i * 2`. `i` is equal to `10`, so it returns `10 * 2`, which is `20`. This results in `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 dan 10, 20`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \'one\');\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \'two\');\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"When we pass multiple promises to the `Promise.race` method, it resolves/rejects the _first_ promise that resolves/rejects. To the `setTimeout` method, we pass a timer: 500ms for the first promise (`firstPromise`), and 100ms for the second promise (`secondPromise`). This means that the `secondPromise` resolves first with the value of `\'two\'`. `res` now holds the value of `\'two\'`, which gets logged.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"What does this return?"},{"answer":3,"code":"let person = { name: \'Lydia\' };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"First, we declare a variable `person` with the value of an object that has a `name` property.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nThen, we declare a variable called `members`. We set the first element of that array equal to the value of the `person` variable. Objects interact by _reference_ when setting them equal to each other. When you assign a reference from one variable to another, you make a _copy_ of that reference. (note that they don\'t have the _same_ reference!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nThen, we set the variable `person` equal to `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nWe are only modifying the value of the `person` variable, and not the first element in the array, since that element has a different (copied) reference to the object. The first element in `members` still holds its reference to the original object. When we log the `members` array, the first element still holds the value of the object, which gets logged.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"With a `for-in` loop, we can iterate through object keys, in this case `name` and `age`. Under the hood, object keys are strings (if they\'re not a Symbol). On every loop, we set the value of `item` equal to the current key it\u2019s iterating over. First, `item` is equal to `name`, and gets logged. Then, `item` is equal to `age`, which gets logged.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"console.log(3 + 4 + \'5\');","codeLanguage":"javascript","explanation":"Operator associativity is the order in which the compiler evaluates the expressions, either left-to-right or right-to-left. This only happens if all operators have the _same_ precedence. We only have one type of operator: `+`. For addition, the associativity is left-to-right.\\n\\n`3 + 4` gets evaluated first. This results in the number `7`.\\n\\n`7 + \'5\'` results in `\\"75\\"` because of coercion. JavaScript converts the number `7` into a string, see question 15. We can concatenate two strings using the `+`operator. `\\"7\\" + \\"5\\"` results in `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const num = parseInt(\'7*6\', 10);","codeLanguage":"javascript","explanation":"Only the first numbers in the string is returned. Based on the _radix_ (the second argument in order to specify what type of number we want to parse it to: base 10, hexadecimal, octal, binary, etc.), the `parseInt` checks whether the characters in the string are valid. Once it encounters a character that isn\'t a valid number in the radix, it stops parsing and ignores the following characters.\\n\\n`*` is not a valid number. It only parses `\\"7\\"` into the decimal `7`. `num` now holds the value of `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"What\'s the value of `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \'number\') return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"When mapping over the array, the value of `num` is equal to the element it\u2019s currently looping over. In this case, the elements are numbers, so the condition of the if statement `typeof num === \\"number\\"` returns `true`. The map function creates a new array and inserts the values returned from the function.\\n\\nHowever, we don\u2019t return a value. When we don\u2019t return a value from the function, the function returns `undefined`. For every element in the array, the function block gets called, so for each element we return `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"What\'s the output`?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \'Lydia\';\\n  year = \'1998\';\\n}\\n\\nconst person = { name: \'Sarah\' };\\nconst birthYear = \'1997\';\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Arguments are passed by _value_, unless their value is an object, then they\'re passed by _reference_. `birthYear` is passed by value, since it\'s a string, not an object. When we pass arguments by value, a _copy_ of that value is created (see question 46).\\n\\nThe variable `birthYear` has a reference to the value `\\"1997\\"`. The argument `year` also has a reference to the value `\\"1997\\"`, but it\'s not the same value as `birthYear` has a reference to. When we update the value of `year` by setting `year` equal to `\\"1998\\"`, we are only updating the value of `year`. `birthYear` is still equal to `\\"1997\\"`.\\n\\nThe value of `person` is an object. The argument `member` has a (copied) reference to the _same_ object. When we modify a property of the object `member` has a reference to, the value of `person` will also be modified, since they both have a reference to the same object. `person`\'s `name` property is now equal to the value `\\"Lydia\\"`","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"function greeting() {\\n  throw \'Hello world!\';\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\'It worked!\', data);\\n  } catch (e) {\\n    console.log(\'Oh no an error:\', e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"With the `throw` statement, we can create custom errors. With this statement, you can throw exceptions. An exception can be a <b>string</b>, a <b>number</b>, a <b>boolean</b> or an <b>object</b>. In this case, our exception is the string `\'Hello world\'`.\\n\\nWith the `catch` statement, we can specify what to do if an exception is thrown in the `try` block. An exception is thrown: the string `\'Hello world\'`. `e` is now equal to that string, which we log. This results in `\'Oh an error: Hello world\'`.","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function Car() {\\n  this.make = \'Lamborghini\';\\n  return { make: \'Maserati\' };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"When you return a property, the value of the property is equal to the _returned_ value, not the value set in the constructor function. We return the string `\\"Maserati\\"`, so `myCar.make` is equal to `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` is actually shorthand for:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nWhen we set `y` equal to `10`, we actually add a property `y` to the global object (`window` in browser, `global` in Node). In a browser, `window.y` is now equal to `10`.\\n\\nThen, we declare a variable `x` with the value of `y`, which is `10`. Variables declared with the `let` keyword are _block scoped_, they are only defined within the block they\'re declared in; the immediately-invoked function (IIFE) in this case. When we use the `typeof` operator, the operand `x` is not defined: we are trying to access `x` outside of the block it\'s declared in. This means that `x` is not defined. Values who haven\'t been assigned a value or declared are of type `\\"undefined\\"`. `console.log(typeof x)` returns `\\"undefined\\"`.\\n\\nHowever, we created a global variable `y` when setting `y` equal to `10`. This value is accessible anywhere in our code. `y` is defined, and holds a value of type `\\"number\\"`. `console.log(typeof y)` returns `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\'Mara\');\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"We can delete properties from objects using the `delete` keyword, also on the prototype. By deleting a property on the prototype, it is not available anymore in the prototype chain. In this case, the `bark` function is not available anymore on the prototype after `delete Dog.prototype.bark`, yet we still try to access it.\\n\\nWhen we try to invoke something that is not a function, a `TypeError` is thrown. In this case `TypeError: pet.bark is not a function`, since `pet.bark` is `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"The `Set` object is a collection of _unique_ values: a value can only occur once in a set.\\n\\nWe passed the iterable `[1, 1, 2, 3, 4]` with a duplicate value `1`. Since we cannot have two of the same values in a set, one of them is removed. This results in `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"Modul yang diimpor adalah _read-only_: Anda tidak dapat mengubah modul yang diimpor. Hanya modul yang mengekspornya yang dapat mengubah nilainya.\\n\\nKetika kita mencoba untuk menambah nilai `myCounter`, itu melemparkan kesalahan: `myCounter` adalah baca-saja dan tidak dapat dimodifikasi.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const name = \'Lydia\';\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"The `delete` operator returns a boolean value: `true` on a successful deletion, else it\'ll return `false`. However, variables declared with the `var`, `const` or `let` keyword cannot be deleted using the `delete` operator.\\n\\nThe `name` variable was declared with a `const` keyword, so its deletion is not successful: `false` is returned. When we set `age` equal to `21`, we actually added a property called `age` to the global object. You can successfully delete properties from objects this way, also the global object, so `delete age` returns `true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"We can unpack values from arrays or properties from objects through destructuring. For example:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nThe value of `a` is now `1`, and the value of `b` is now `2`. What we actually did in the question, is:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nThis means that the value of `y` is equal to the first value in the array, which is the number `1`. When we log `y`, `1` is returned.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const user = { name: \'Lydia\', age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"It\'s possible to combine objects using the spread operator `...`. It lets you create copies of the key/value pairs of one object, and add them to another object. In this case, we create copies of the `user` object, and add them to the `admin` object. The `admin` object now contains the copied key/value pairs, which results in `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const person = { name: \'Lydia\' };\\n\\nObject.defineProperty(person, \'age\', { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"With the `defineProperty` method, we can add new properties to an object, or modify existing ones. When we add a property to an object using the `defineProperty` method, they are by default _not enumerable_. The `Object.keys` method returns all _enumerable_ property names from an object, in this case only `\\"name\\"`.\\n\\nProperties added using the `defineProperty` method are immutable by default. You can override this behavior using the `writable`, `configurable` and `enumerable` properties. This way, the `defineProperty` method gives you a lot more control over the properties you\'re adding to an object.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const settings = {\\n  username: \'lydiahallie\',\\n  level: 19,\\n  health: 90,\\n};\\n\\nconst data = JSON.stringify(settings, [\'level\', \'health\']);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"The second argument of `JSON.stringify` is the _replacer_. The replacer can either be a function or an array, and lets you control what and how the values should be stringified.\\n\\nIf the replacer is an _array_, only the property names included in the array will be added to the JSON string. In this case, only the properties with the names `\\"level\\"` and `\\"health\\"` are included, `\\"username\\"` is excluded. `data` is now equal to `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nIf the replacer is a _function_, this function gets called on every property in the object you\'re stringifying. The value returned from this function will be the value of the property when it\'s added to the JSON string. If the value is `undefined`, this property is excluded from the JSON string.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"The unary operator `++` _first returns_ the value of the operand, _then increments_ the value of the operand. The value of `num1` is `10`, since the `increaseNumber` function first returns the value of `num`, which is `10`, and only increments the value of `num` afterwards.\\n\\n`num2` is `10`, since we passed `num1` to the `increasePassedNumber`. `number` is equal to `10`(the value of `num1`. Again, the unary operator `++` _first returns_ the value of the operand, _then increments_ the value of the operand. The value of `number` is `10`, so `num2` is equal to `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"In ES6, we can initialize parameters with a default value. The value of the parameter will be the default value, if no other value has been passed to the function, or if the value of the parameter is `\\"undefined\\"`. In this case, we spread the properties of the `value` object into a new object, so `x` has the default value of `{ number: 10 }`.\\n\\nThe default argument is evaluated at _call time_! Every time we call the function, a _new_ object is created. We invoke the `multiply` function the first two times without passing a value: `x` has the default value of `{ number: 10 }`. We then log the multiplied value of that number, which is `20`.\\n\\nThe third time we invoke multiply, we do pass an argument: the object called `value`. The `*=` operator is actually shorthand for `x.number = x.number * 2`: we modify the value of `x.number`, and log the multiplied value `20`.\\n\\nThe fourth time, we pass the `value` object again. `x.number` was previously modified to `20`, so `x.number *= 2` logs `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"The first argument that the `reduce` method receives is the _accumulator_, `x` in this case. The second argument is the _current value_, `y`. With the reduce method, we execute a callback function on every element in the array, which could ultimately result in one single value.\\n\\nIn this example, we are not returning any values, we are simply logging the values of the accumulator and the current value.\\n\\nThe value of the accumulator is equal to the previously returned value of the callback function. If you don\'t pass the optional `initialValue` argument to the `reduce` method, the accumulator is equal to the first element on the first call.\\n\\nOn the first call, the accumulator (`x`) is `1`, and the current value (`y`) is `2`. We don\'t return from the callback function, we log the accumulator and current value: `1` and `2` get logged.\\n\\nIf you don\'t return a value from a function, it returns `undefined`. On the next call, the accumulator is `undefined`, and the current value is `3`. `undefined` and `3` get logged.\\n\\nOn the fourth call, we again don\'t return from the callback function. The accumulator is again `undefined`, and the current value is `4`. `undefined` and `4` get logged.","id":64,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1\\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4\\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"In a derived class, you cannot access the `this` keyword before calling `super`. If you try to do that, it will throw a ReferenceError: 1 and 4 would throw a reference error.\\n\\nWith the `super` keyword, we call that parent class\'s constructor with the given arguments. The parent\'s constructor receives the `name` argument, so we need to pass `name` to `super`.\\n\\nThe `Labrador` class receives two arguments, `name` since it extends `Dog`, and `size` as an extra property on the `Labrador` class. They both need to be passed to the constructor function on `Labrador`, which is done correctly using constructor 2.","id":65,"options":["1","2","3","4"],"question":"With which constructor can we successfully extend the `Dog` class?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"With the `import` keyword, all imported modules are _pre-parsed_. This means that the imported modules get run _first_, the code in the file which imports the module gets executed _after_.\\n\\nThis is a difference between `require()` in CommonJS and `import`! With `require()`, you can load dependencies on demand while the code is being run. If we would have used `require` instead of `import`, `running index.js`, `running sum.js`, `3` would have been logged to the console.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"console.log(Number(2) === Number(2));\\nconsole.log(Boolean(false) === Boolean(false));\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'));","codeLanguage":"javascript","explanation":"Every Symbol is entirely unique. The purpose of the argument passed to the Symbol is to give the Symbol a description. The value of the Symbol is not dependent on the passed argument. As we test equality, we are creating two entirely new symbols: the first `Symbol(\'foo\')`, and the second `Symbol(\'foo\')`. These two values are unique and not equal to each other, `Symbol(\'foo\') === Symbol(\'foo\')` returns `false`.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\nconsole.log(name.padStart(13));\\nconsole.log(name.padStart(2));","codeLanguage":"javascript","explanation":"With the `padStart` method, we can add padding to the beginning of a string. The value passed to this method is the _total_ length of the string together with the padding. The string `\\"Lydia Hallie\\"` has a length of `12`. `name.padStart(13)` inserts 1 space at the start of the string, because 12 + 1 is 13.\\n\\nIf the argument passed to the `padStart` method is smaller than the length of the array, no padding will be added.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\" Lydia Hallie\\"`, `\\" Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"console.log(\'\ud83e\udd51\' + \'\ud83d\udcbb\');","codeLanguage":"javascript","explanation":"With the `+` operator, you can concatenate strings. In this case, we are concatenating the string `\\"\ud83e\udd51\\"` with the string `\\"\ud83d\udcbb\\"`, resulting in `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","A string containing their code points","Error"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \'Do you love JavaScript?\';\\n  if (answer !== \'Yes\') {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \'JavaScript loves you back \u2764\ufe0f\';\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"A generator function \\"pauses\\" its execution when it sees the `yield` keyword. First, we have to let the function yield the string \\"Do you love JavaScript?\\", which can be done by calling `game.next().value`.\\n\\nEvery line is executed, until it finds the first `yield` keyword. There is a `yield` keyword on the first line within the function: the execution stops with the first yield! _This means that the variable `answer` is not defined yet!_\\n\\nWhen we call `game.next(\\"Yes\\").value`, the previous `yield` is replaced with the value of the parameters passed to the `next()` function, `\\"Yes\\"` in this case. The value of the variable `answer` is now equal to `\\"Yes\\"`. The condition of the if-statement returns `false`, and `JavaScript loves you back \u2764\ufe0f` gets logged.","id":70,"options":["`game.next(\\"Yes\\").value` dan `game.next().value`","`game.next.value(\\"Yes\\")` dan `game.next.value()`","`game.next().value` dan `game.next(\\"Yes\\").value`","`game.next.value()` dan `game.next.value(\\"Yes\\")`"],"question":"How can we log the values that are commented out after the console.log statement?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` returns a string where the escapes (`\\n`, `\\u000b`, `\\t` etc.) are ignored! Backslashes can be an issue since you could end up with something like:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nWhich would result in:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nWith `String.raw`, it would simply ignore the escape and print:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nIn this case, the string is `Hello\\nworld`, which gets logged.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\'I made it!\');\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"An async function always returns a promise. The `await` still has to wait for the promise to resolve: a pending promise gets returned when we call `getData()` in order to set `data` equal to it.\\n\\nIf we wanted to get access to the resolved value `\\"I made it\\"`, we could have used the `.then()` method on `data`:\\n\\n`data.then(res => console.log(res))`\\n\\nThis would\'ve logged `\\"I made it!\\"`","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\'apple\', [\'banana\']);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"The `.push()` method returns the _length_ of the new array! Previously, the array contained one element (the string `\\"banana\\"`) and had a length of `1`. After adding the string `\\"apple\\"` to the array, the array contains two elements, and has a length of `2`. This gets returned from the `addToList` function.\\n\\nThe `push` method modifies the original array. If you wanted to return the _array_ from the function rather than the _length of the array_, you should have returned `list` after pushing `item` to it.","id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` makes it impossible to add, remove, or modify properties of an object (unless the property\'s value is another object).\\n\\nWhen we create the variable `shape` and set it equal to the frozen object `box`, `shape` also refers to a frozen object. You can check whether an object is frozen by using `Object.isFrozen`. In this case, `Object.isFrozen(shape)` returns true, since the variable `shape` has a reference to a frozen object.\\n\\nSince `shape` is frozen, and since the value of `x` is not an object, we cannot modify the property `x`. `x` is still equal to `10`, and `{ x: 10, y: 20 }` gets logged.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const { name: myName } = { name: \'Lydia\' };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"When we unpack the property `name` from the object on the right-hand side, we assign its value `\\"Lydia\\"` to a variable with the name `myName`.\\n\\nWith `{ name: myName }`, we tell JavaScript that we want to create a new variable called `myName` with the value of the `name` property on the right-hand side.\\n\\nSince we try to log `name`, a variable that is not defined, a ReferenceError gets thrown.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"A pure function is a function that _always_ returns the same result, if the same arguments are passed.\\n\\nThe `sum` function always returns the same result. If we pass `1` and `2`, it will _always_ return `3` without side effects. If we pass `5` and `10`, it will _always_ return `15`, and so on. This is the definition of a pure function.","id":76,"options":["Yes","No"],"question":"Is this a pure function?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"The `add` function is a _memoized_ function. With memoization, we can cache the results of a function in order to speed up its execution. In this case, we create a `cache` object that stores the previously returned values.\\n\\nIf we call the `addFunction` function again with the same argument, it first checks whether it has already gotten that value in its cache. If that\'s the case, the caches value will be returned, which saves on execution time. Else, if it\'s not cached, it will calculate the value and store it afterwards.\\n\\nWe call the `addFunction` function three times with the same value: on the first invocation, the value of the function when `num` is equal to `10` isn\'t cached yet. The condition of the if-statement `num in cache` returns `false`, and the else block gets executed: `Calculated! 20` gets logged, and the value of the result gets added to the cache object. `cache` now looks like `{ 10: 20 }`.\\n\\nThe second time, the `cache` object contains the value that gets returned for `10`. The condition of the if-statement `num in cache` returns `true`, and `\'From cache! 20\'` gets logged.\\n\\nThe third time, we pass `5 * 2` to the function which gets evaluated to `10`. The `cache` object contains the value that gets returned for `10`. The condition of the if-statement `num in cache` returns `true`, and `\'From cache! 20\'` gets logged.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"What is the output?"},{"answer":0,"code":"const myLifeSummedUp = [\'\u2615\', \'\ud83d\udcbb\', \'\ud83c\udf77\', \'\ud83c\udf6b\'];\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item);\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"With a _for-in_ loop, we can iterate over **enumerable** properties. In an array, the enumerable properties are the \\"keys\\" of array elements, which are actually their indexes. You could see an array as:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\nWhere the keys are the enumerable properties. `0` `1` `2` `3` get logged.\\n\\nWith a _for-of_ loop, we can iterate over **iterables**. An array is an iterable. When we iterate over the array, the variable \\"item\\" is equal to the element it\'s currently iterating over, `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` get logged.","id":78,"options":["`0` `1` `2` `3` and `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` and `\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` `\\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` and `0` `1` `2` `3`","`0` `1` `2` `3` and `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"What is the output?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2];\\nconsole.log(list);","codeLanguage":"javascript","explanation":"Elemen array dapat berisi beberapa nilai. angka, string, objek, array lain, null, nilai boolean, undefined, dan lainnya seperti tanggal, fungsi, dan kalkulasi.\\n\\nelemen akan sama dengan nilai hasilnya. `1 + 2` menghasilkan `3`, `1 * 2` menghasilkan `2`, dan `1 / 2` menghasilkan `0.5`.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`;\\n}\\n\\nconsole.log(sayHi());","codeLanguage":"javascript","explanation":"Secara default, arguments memiliki nilai `undefined`, kecuali nilai telah diisi ke fungsi. Pada kasus ini, kita tidak mengisi nilai untuk argument `name`. `name` sama dengan `undefined` yang mana mendapat catatan.\\n\\nDi ES6, kita dapat menulis ulang nilai default `undefined` dengan parameter default. Sebagai contoh:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nPada kasus ini, juka kita tidak mengisi nilai atau mengisi `undefined`, `name` akan selalu sama dengan string `Lydia`","id":80,"options":["`Hi there,`","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"var status = \'\ud83d\ude0e\';\\n\\nsetTimeout(() => {\\n  const status = \'\ud83d\ude0d\';\\n\\n  const data = {\\n    status: \'\ud83e\udd51\',\\n    getStatus() {\\n      return this.status;\\n    },\\n  };\\n\\n  console.log(data.getStatus());\\n  console.log(data.getStatus.call(this));\\n}, 0);","codeLanguage":"javascript","explanation":"The value of the `this` keyword is dependent on where you use it. In a **method**, like the `getStatus` method, the `this` keyword refers to _the object that the method belongs to_. The method belongs to the `data` object, so `this` refers to the `data` object. When we log `this.status`, the `status` property on the `data` object gets logged, which is `\\"\ud83e\udd51\\"`.\\n\\nWith the `call` method, we can change the object to which the `this` keyword refers. In **functions**, the `this` keyword refers to the _the object that the function belongs to_. We declared the `setTimeout` function on the _global object_, so within the `setTimeout` function, the `this` keyword refers to the _global object_. On the global object, there is a variable called _status_ with the value of `\\"\ud83d\ude0e\\"`. When logging `this.status`, `\\"\ud83d\ude0e\\"` gets logged.","id":81,"options":["`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` and `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` and `\\"\ud83d\ude0e\\"`"],"question":"What is the output?"},{"answer":3,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nlet city = person.city;\\ncity = \'Amsterdam\';\\n\\nconsole.log(person);","codeLanguage":"javascript","explanation":"We set the variable `city` equal to the value of the property called `city` on the `person` object. There is no property on this object called `city`, so the variable `city` has the value of `undefined`.\\n\\nNote that we are _not_ referencing the `person` object itself! We simply set the variable `city` equal to the current value of the `city` property on the `person` object.\\n\\nThen, we set `city` equal to the string `\\"Amsterdam\\"`. This doesn\'t change the person object: there is no reference to that object.\\n\\nWhen logging the `person` object, the unmodified object gets returned.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"What is the output?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\";\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\";\\n  }\\n\\n  return message;\\n}\\n\\nconsole.log(checkAge(21));","codeLanguage":"javascript","explanation":"Variables with the `const` and `let` keyword are _block-scoped_. A block is anything between curly brackets (`{ }`). In this case, the curly brackets of the if/else statements. You cannot reference a variable outside of the block it\'s declared in, a ReferenceError gets thrown.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"What is the output?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n        .then(res => res.json())\\n        .then(res => console.log(res))","codeLanguage":"javascript","explanation":"The value of `res` in the second `.then` is equal to the returned value of the previous `.then`. You can keep chaining `.then`s like this, where the value is passed to the next handler.","id":84,"options":["The result of the `fetch` method.","The result of the second invocation of the `fetch` method.","The result of the callback in the previous `.then()`.","It would always be undefined."],"question":"What kind of information would get logged?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"With `!!name`, we determine whether the value of `name` is truthy or falsy. If name is truthy, which we want to test for, `!name` returns `false`. `!false` (which is what `!!name` practically is) returns `true`.\\n\\nBy setting `hasName` equal to `name`, you set `hasName` equal to whatever value you passed to the `getName` function, not the boolean value `true`.\\n\\n`new Boolean(true)` returns an object wrapper, not the boolean value itself.\\n\\n`name.length` returns the length of the passed argument, not whether it\'s `true`.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"Which option is a way to set `hasName` equal to `true`, provided you cannot pass `true` as an argument?"},{"answer":1,"code":"console.log(\'I want pizza\'[0]);","codeLanguage":"javascript","explanation":"In order to get an character on a specific index in a string, you can use bracket notation. The first character in the string has index 0, and so on. In this case we want to get the element which index is 0, the character `\\"I\'`, which gets logged.\\n\\nNote that this method is not supported in IE7 and below. In that case, use `.charAt()`","id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2);\\n}\\n\\nsum(10);","codeLanguage":"javascript","explanation":"You can set a default parameter\'s value equal to another parameter of the function, as long as they\'ve been defined _before_ the default parameter. We pass the value `10` to the `sum` function. If the `sum` function only receives 1 argument, it means that the value for `num2` is not passed, and the value of `num1` is equal to the passed value `10` in this case. The default value of `num2` is the value of `num1`, which is `10`. `num1 + num2` returns `20`.\\n\\nIf you\'re trying to set a default parameter\'s value equal to a parameter which is defined _after_ (to the right), the parameter\'s value hasn\'t been initialized yet, which will throw an error.","id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"// module.js\\nexport default () => \'Hello world\';\\nexport const name = \'Lydia\';\\n\\n// index.js\\nimport * as data from \'./module\';\\n\\nconsole.log(data);","codeLanguage":"javascript","explanation":"With the `import * as name` syntax, we import _all exports_ from the `module.js` file into the `index.js` file as a new object called `data` is created. In the `module.js` file, there are two exports: the default export, and a named export. The default export is a function which returns the string `\\"Hello World\\"`, and the named export is a variable called `name` which has the value of the string `\\"Lydia\\"`.\\n\\nThe `data` object has a `default` property for the default export, other properties have the names of the named exports and their corresponding values.","id":88,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nconst member = new Person(\'John\');\\nconsole.log(typeof member);","codeLanguage":"javascript","explanation":"Classes are syntactical sugar for function constructors. The equivalent of the `Person` class as a function constructor would be:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name;\\n}\\n```\\n\\nCalling a function constructor with `new` results in the creation of an instance of `Person`, `typeof` keyword returns `\\"object\\"` for an instance. `typeof member` returns `\\"object\\"`.","id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4);\\n\\nconsole.log(newList.push(5));","codeLanguage":"javascript","explanation":"The `.push` method returns the _new length_ of the array, not the array itself! By setting `newList` equal to `[1, 2, 3].push(4)`, we set `newList` equal to the new length of the array: `4`.\\n\\nThen, we try to use the `.push` method on `newList`. Since `newList` is the numerical value `4`, we cannot use the `.push` method: a TypeError is thrown.","id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \'Here is pizza!\';\\n}\\n\\nconst giveLydiaChocolate = () =>\\n  \\"Here\'s chocolate... now go hit the gym already.\\";\\n\\nconsole.log(giveLydiaPizza.prototype);\\nconsole.log(giveLydiaChocolate.prototype);","codeLanguage":"javascript","explanation":"Regular functions, such as the `giveLydiaPizza` function, have a `prototype` property, which is an object (prototype object) with a `constructor` property. Arrow functions however, such as the `giveLydiaChocolate` function, do not have this `prototype` property. `undefined` gets returned when trying to access the `prototype` property using `giveLydiaChocolate.prototype`.","id":91,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y);\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` returns an array of nested arrays, containing the keys and objects:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]`\\n\\nUsing the `for-of` loop, we can iterate over each element in the array, the subarrays in this case. We can destructure the subarrays instantly in the for-of loop, using `const [x, y]`. `x` is equal to the first element in the subarray, `y` is equal to the second element in the subarray.\\n\\nThe first subarray is `[ \\"name\\", \\"Lydia\\" ]`, with `x` equal to `\\"name\\"`, and `y` equal to `\\"Lydia\\"`, which get logged.\\nThe second subarray is `[ \\"age\\", 21 ]`, with `x` equal to `\\"age\\"`, and `y` equal to `21`, which get logged.","id":92,"options":["`name` `Lydia` and `age` `21`","`[\\"name\\", \\"Lydia\\"]` and `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` and `undefined`","`Error`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` is a rest parameter. The rest parameter\'s value is an array containing all remaining arguments, **and can only be the last parameter**! In this example, the rest parameter was the second parameter. This is not possible, and will throw a syntax error.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit];\\n}\\n\\ngetItems([\'banana\', \'apple\'], \'pear\', \'orange\');\\n```\\n\\nThe above example works. This returns the array `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function nums(a, b) {\\n  if (a > b) console.log(\'a is bigger\');\\n  else console.log(\'b is bigger\');\\n  return;\\n  a + b;\\n}\\n\\nconsole.log(nums(4, 2));\\nconsole.log(nums(1, 2));","codeLanguage":"javascript","explanation":"In JavaScript, we don\'t _have_ to write the semicolon (`;`) explicitly, however the JavaScript engine still adds them after statements. This is called **Automatic Semicolon Insertion**. A statement can for example be variables, or keywords like `throw`, `return`, `break`, etc.\\n\\nHere, we wrote a `return` statement, and another value `a + b` on a _new line_. However, since it\'s a new line, the engine doesn\'t know that it\'s actually the value that we wanted to return. Instead, it automatically added a semicolon after `return`. You could see this as:\\n\\n```javascript\\nreturn;\\na + b;\\n```\\n\\nThis means that `a + b` is never reached, since a function stops running after the `return` keyword. If no value gets returned, like here, the function returns `undefined`. Note that there is no automatic insertion after `if/else` statements!","id":94,"options":["`a is bigger`, `6` and `b is bigger`, `3`","`a is bigger`, `undefined` and `b is bigger`, `undefined`","`undefined` and `undefined`","`SyntaxError`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \'Lydia\';\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \'Sarah\';\\n  }\\n};\\n\\nconst member = new Person();\\nconsole.log(member.name);","codeLanguage":"javascript","explanation":"Kita dapat mengatur kelas yang sama dengan kelas / fungsi konstruktor lainnya. Dalam kasus ini, kita mengatur `Person` sama dengan `AnotherPerson`. Nama pada konstruktor ini adalah `Sarah`, jadi nama properti yang baru pada `Person` instance `member` adalah `\\"Sarah\\"`.","id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\',\\n};\\n\\nconsole.log(info);\\nconsole.log(Object.keys(info));","codeLanguage":"javascript","explanation":"Simbol bukanlah merupakan suatu _enumerable_. Metode Object.keys akan mengembalikan semua properti kunci _enumerable_ pada sebuah objek. Simbol tidak akan terlihat, dan array kosong dikembalikan. Saat mencatat seluruh objek, semua properti akan terlihat, bahkan yang bukan non-enumerable.\\n\\nIni adalah salah satu dari banyak kualitas simbol: Disamping selain mewakili nilai yang sepenuhnya unik  (yang mencegah terjadinya benturan nama yang tidak disengaja pada objek, misalnya saat bekerja dengan 2 library yang ingin menambahkan properti ke objek yang sama),  anda juga dapat \\"menyembunyikan\\"  properti pada objek dengan cara ini (meskipun tidak seluruhnya. Anda masih dapat mengakses simbol menggunakan metode `Object.getOwnPropertySymbols()`).","id":96,"options":["`{Symbol(\'a\'): \'b\'}` and `[\\"{Symbol(\'a\')\\"]`","`{}` and `[]`","`{ a: \\"b\\" }` and `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` and `[]`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"Fungsi `getList` menerima array sebagai argumennya. Di antara tanda kurung pada fungsi `getList`, Kita akan menstruktur ulang. Anda dapat melihat ini sebagai:\\n\\n`[x, ...y] = [1, 2, 3, 4]`\\n\\nDengan parameter sisa `...y`, kita akan meletakkan semua argumen \\"yang tersisa\\" dalam array. Dalam kasus ini argumen yang tersisa adalah `2`, `3` dan `4`. Nilai dari `y` merupakan suatu array, yang berisi semua parameter lainnya. Pada kasus ini nilai dari `x` sama dengan `1`, jadi saat kita mencatat `[x, y]`,  maka catatannya `[1, [2, 3, 4]]`.\\n\\nFungsi `getUser` menerima sebuah objek. Dengan fungsi tanda panah, kita tidak _perlu_ menulis tanda kurung kurawal jika hanya mengembalikan satu nilai. Namun, jika anda mengembalikan nilai _object_ dari fungsi tanda panah, Anda harus menuliskannya di antara tanda kurung, jika tidak maka tidak ada nilai yang dikembalikan! Fungsi berikut akan mengembalikan sebuah objek:\\n\\n`const getUser = user => ({ name: user.name, age: user.age })`\\n\\nKarena tidak ada nilai yang dikembalikan dalam kasus ini, maka fungsi akan mengembalikan `undefined`.","id":97,"options":["`[1, [2, 3, 4]]` and `undefined`","`[1, [2, 3, 4]]` and `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` and `{ name: \\"Lydia\\", age: 21 }`","`Error` and `{ name: \\"Lydia\\", age: 21 }`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const name = \'Lydia\';\\n\\nconsole.log(name());","codeLanguage":"javascript","explanation":"Variabel `name` menyimpan nilai string, yang bukan merupakan suatu fungsi, sehingga tidak dapat dipanggil.\\n\\nTypeErrors dilemparkan ketika nilai yang didapatkan bukan dari jenis yang kita harapkan. JavaScript mengharapkan `name` menjadi sebuah fungsi karena kita mencoba untuk memanggilnya. Namun itu adalah sebuah string, sehingga akan muncul TypeError gets thrown: name is not a function!\\n\\nSyntaxErrors muncul ketika anda salah menulis suatu Javascript, seperti `return` menjadi `retrun`.\\nReferenceErrors muncul ketika JavaScript tidak dapat menemukan nilai referensi ke nilai yang anda coba akses.","id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`;","codeLanguage":"javascript","explanation":"`[]` is a truthy value. With the `&&` operator, the right-hand value will be returned if the left-hand value is a truthy value. In this case, the left-hand value `[]` is a truthy value, so `\\"Im\'` gets returned.\\n\\n`\\"\\"` is a falsy value. If the left-hand value is falsy, nothing gets returned. `n\'t` doesn\'t get returned.","id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"What\'s the value of output?"},{"answer":2,"code":"const one = false || {} || null;\\nconst two = null || false || \'\';\\nconst three = [] || 0 || true;\\n\\nconsole.log(one, two, three);","codeLanguage":"javascript","explanation":"With the `||` operator, we can return the first truthy operand. If all values are falsy, the last operand gets returned.\\n\\n`(false || {} || null)`: the empty object `{}` is a truthy value. This is the first (and only) truthy value, which gets returned. `one` is equal to `{}`.\\n\\n`(null || false || \\"\\")`: all operands are falsy values. This means that the past operand, `\\"\\"` gets returned. `two` is equal to `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: the empty array`[]` is a truthy value. This is the first truthy value, which gets returned. `three` is equal to `[]`.","id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"What\'s the value of output?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\');\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res));\\n  console.log(\'second\');\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise());\\n  console.log(\'second\');\\n}\\n\\nfirstFunction();\\nsecondFunction();","codeLanguage":"javascript","explanation":"With a promise, we basically say _I want to execute this function, but I\'ll put it aside for now while it\'s running since this might take a while. Only when a certain value is resolved (or rejected), and when the call stack is empty, I want to use this value._\\n\\nWe can get this value with both `.then` and the `await` keyword in an `async` function. Although we can get a promise\'s value with both `.then` and `await`, they work a bit differently.\\n\\nIn the `firstFunction`, we (sort of) put the myPromise function aside while it was running, but continued running the other code, which is `console.log(\'second\')` in this case. Then, the function resolved with the string `I have resolved`, which then got logged after it saw that the callstack was empty.\\n\\nWith the await keyword in `secondFunction`, we literally pause the execution of an async function until the value has been resolved befoer moving to the next line.\\n\\nThis means that it waited for the `myPromise` to resolve with the value `I have resolved`, and only once that happened, we moved to the next line: `second` got logged.","id":101,"options":["`I have resolved!`, `second` and `I have resolved!`, `second`","`second`, `I have resolved!` and `second`, `I have resolved!`","`I have resolved!`, `second` and `second`, `I have resolved!`","`second`, `I have resolved!` and `I have resolved!`, `second`"],"question":"What\'s the value of output?"},{"answer":2,"code":"const set = new Set();\\n\\nset.add(1);\\nset.add(\'Lydia\');\\nset.add({ name: \'Lydia\' });\\n\\nfor (let item of set) {\\n  console.log(item + 2);\\n}","codeLanguage":"javascript","explanation":"The `+` operator is not only used for adding numerical values, but we can also use it to concatenate strings. Whenever the JavaScript engine sees that one or more values are not a number, it coerces the number into a string.\\n\\nThe first one is `1`, which is a numerical value. `1 + 2` returns the number 3.\\n\\nHowever, the second one is a string `\\"Lydia\\"`. `\\"Lydia\\"` is a string and `2` is a number: `2` gets coerced into a string. `\\"Lydia\\"` and `\\"2\\"` get concatenated, which results in the string `\\"Lydia2\\"`.\\n\\n`{ name: \\"Lydia\\" }` is an object. Neither a number nor an object is a string, so it stringifies both. Whenever we stringify a regular object, it becomes `\\"[object Object]\\"`. `\\"[object Object]\\"` concatenated with `\\"2\\"` becomes `\\"[object Object]2\\"`.","id":102,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"What\'s the value of output?"},{"answer":2,"code":"Promise.resolve(5);","codeLanguage":"javascript","explanation":"We can pass any type of value we want to `Promise.resolve`, either a promise or a non-promise. The method itself returns a promise with the resolved value (`<fulfilled>`). If you pass a regular function, it\'ll be a resolved promise with a regular value. If you pass a promise, it\'ll be a resolved promise with the resolved value of that passed promise.\\n\\nIn this case, we just passed the numerical value `5`. It returns a resolved promise with the value `5`.","id":103,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"What\'s its value?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\'Not the same!\');\\n  } else {\\n    console.log(\'They are the same!\');\\n  }\\n}\\n\\nconst person = { name: \'Lydia\' };\\n\\ncompareMembers(person);","codeLanguage":"javascript","explanation":"Objects are passed by reference. When we check objects for strict equality (`===`), we\'re comparing their references.\\n\\nWe set the default value for `person2` equal to the `person` object, and passed the `person` object as the value for `person1`.\\n\\nThis means that both values have a reference to the same spot in memory, thus they are equal.\\n\\nThe code block in the `else` statement gets run, and `They are the same!` gets logged.","id":104,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"What\'s its value?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n};\\n\\nconst colors = [\'pink\', \'red\', \'blue\'];\\n\\nconsole.log(colorConfig.colors[1]);","codeLanguage":"javascript","explanation":"In JavaScript, we have two ways to access properties on an object: bracket notation, or dot notation. In this example, we use dot notation (`colorConfig.colors`) instead of bracket notation (`colorConfig[\\"colors\\"]`).\\n\\nWith dot notation, JavaScript tries to find the property on the object with that exact name. In this example, JavaScript tries to find a property called `colors` on the `colorConfig` object. There is no proprety called `colors`, so this returns `undefined`. Then, we try to access the value of the first element by using `[1]`. We cannot do this on a value that\'s `undefined`, so it throws a `TypeError`: `Cannot read property \'1\' of undefined`.\\n\\nJavaScript interprets (or unboxes) statements. When we use bracket notation, it sees the first opening bracket `[` and keeps going until it finds the closing bracket `]`. Only then, it will evaluate the statement. If we would\'ve used `colorConfig[colors[1]]`, it would have returned the value of the `red` property on the `colorConfig` object.","id":105,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"What\'s its value?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\');","codeLanguage":"javascript","explanation":"Di belakang layar, emoji adalah sebuah unicode. Unicode untuk emoji hati adalah `\\"U+2764 U+FE0F\\"`. Keduanya akan selalu sama untuk emoji yang sama, jadi sebetulnya kita telah membandingkan dua string yang sama satu sama lain, yang mana akan menghasilkan true.","id":106,"options":["`true`","`false`"],"question":"Apakah hasil nilai dibawah ini ?"},{"answer":3,"code":"const emojis = [\\"\u2728\\", \\"\ud83e\udd51\\", \\"\ud83d\ude0d\\"];\\n\\nemojis.map((x) => x + \\"\u2728\\");\\nemojis.filter((x) => x !== \\"\ud83e\udd51\\");\\nemojis.find((x) => x !== \\"\ud83e\udd51\\");\\nemojis.reduce((acc, cur) => acc + \\"\u2728\\");\\nemojis.slice(1, 2, \\"\u2728\\");\\nemojis.splice(1, 2, \\"\u2728\\");","codeLanguage":"javascript","explanation":"Metode `splice`, akan memodifikasi array aslinya dengan cara menghapus, mengganti atau menambahkan elemen. Dalam kasus ini, kami menghapus 2 item dari indeks 1 (kami menghapus `\'\ud83e\udd51\'` dan`\' \ud83d\ude0d\'`) dan menambahkan emoji \u2728 sebagai penggantinya.\\n\\n`map`,` filter` dan `slice` akan mengembalikan array baru,` find` akan mengembalikan elemen yang dicari, dan `reduce` akan mengembalikan nilai yang telah dikurangi.","id":107,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"Manakah metode berikut yang akan memodifikasi array aslinya?"},{"answer":0,"code":"JSON.parse();","codeLanguage":"javascript","explanation":"With the `JSON.parse()` method, we can parse JSON string to a JavaScript value.\\n\\n```javascript\\n// Stringifying a number into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonNumber = JSON.stringify(4); // \'4\'\\nJSON.parse(jsonNumber); // 4\\n\\n// Stringifying an array value into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify([1, 2, 3]); // \'[1, 2, 3]\'\\nJSON.parse(jsonArray); // [1, 2, 3]\\n\\n// Stringifying an object  into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify({ name: \'Lydia\' }); // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray); // { name: \'Lydia\' }\\n```","id":108,"options":["Parses JSON to a JavaScript value","Parses a JavaScript object to JSON","Parses any JavaScript value to JSON","Parses JSON to a JavaScript object only"],"question":"What does this method do?"},{"answer":3,"code":"let name = \'Lydia\';\\n\\nfunction getName() {\\n  console.log(name);\\n  let name = \'Sarah\';\\n}\\n\\ngetName();","codeLanguage":"javascript","explanation":"Each function has its own _execution context_ (or _scope_). The `getName` function first looks within its own context (scope) to see if it contains the variable `name` we\'re trying to access. In this case, the `getName` function contains its own `name` variable: we declare the variable `name` with the `let` keyword, and with the value of `\'Sarah\'`.\\n\\nVariables with the `let` keyword (and `const`) are hoisted, but unlike `var`, don\'t get <i>initialized</i>. They are not accessible before the line we declare (initialize) them. This is called the \\"temporal dead zone\\". When we try to access the variables before they are declared, JavaScript throws a `ReferenceError`.\\n\\nIf we wouldn\'t have declared the `name` variable within the `getName` function, the javascript engine would\'ve looked down the _scope chain_. The outer scope has a variable called `name` with the value of `Lydia`. In that case, it would\'ve logged `Lydia`.\\n\\n```javascript\\nlet name = \'Lydia\';\\n\\nfunction getName() {\\n  console.log(name);\\n}\\n\\ngetName(); // Lydia\\n```","id":109,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne();\\nconst two = generatorTwo();\\n\\nconsole.log(one.next().value);\\nconsole.log(two.next().value);","codeLanguage":"javascript","explanation":"With the `yield` keyword, we `yield` values in a generator function. With the `yield*` keyword, we can yield values from another generator function, or iterable object (for example an array).\\n\\nIn `generatorOne`, we yield the entire array `[\'a\', \'b\', \'c\']` using the `yield` keyword. The value of `value` property on the object returned by the `next` method on `one` (`one.next().value`) is equal to the entire array `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value); // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value); // undefined\\n```\\n\\nIn `generatorTwo`, we use the `yield*` keyword. This means that the first yielded value of `two`, is equal to the first yielded value in the iterator. The iterator is the array `[\'a\', \'b\', \'c\']`. The first yielded value is `a`, so the first time we call `two.next().value`, `a` is returned.\\n\\n```javascript\\nconsole.log(two.next().value); // \'a\'\\nconsole.log(two.next().value); // \'b\'\\nconsole.log(two.next().value); // \'c\'\\nconsole.log(two.next().value); // undefined\\n```","id":110,"options":["`a` and `a`","`a` and `undefined`","`[\'a\', \'b\', \'c\']` and `a`","`a` and `[\'a\', \'b\', \'c\']`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`);","codeLanguage":"javascript","explanation":"Expressions within template literals are evaluated first. This means that the string will contain the returned value of the expression, the immediately invoked function `(x => x)(\'I love\')` in this case. We pass the value `\'I love\'` as an argument to the `x => x` arrow function. `x` is equal to `\'I love\'`, which gets returned. This results in `I love to program`.","id":111,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\');\\n  }, 1000),\\n};\\n\\nconfig = null;","codeLanguage":"javascript","explanation":"Normally when we set objects equal to `null`, those objects get _garbage collected_ as there is no reference anymore to that object. However, since the callback function within `setInterval` is an arrow function (thus bound to the `config` object), the callback function still holds a reference to the `config` object. As long as there is a reference, the object won\'t get garbage collected. Since it\'s not garbage collected, the `setInterval` callback function will still get invoked every 1000ms (1s).","id":112,"options":["The `setInterval` callback won\'t be invoked","The `setInterval` callback gets invoked once","The `setInterval` callback will still be called every second","We never invoked `config.alert()`, config is `null`"],"question":"What will happen?"},{"answer":1,"code":"const myMap = new Map();\\nconst myFunc = () => \'greeting\';\\n\\nmyMap.set(myFunc, \'Hello world!\');\\n\\n//1\\nmyMap.get(\'greeting\');\\n//2\\nmyMap.get(myFunc);\\n//3\\nmyMap.get(() => \'greeting\');","codeLanguage":"javascript","explanation":"When adding a key/value pair using the `set` method, the key will be the value of the first argument passed to the `set` function, and the value will be the second argument passed to the `set` function. The key is the _function_ `() => \'greeting\'` in this case, and the value `\'Hello world\'`. `myMap` is now `{ () => \'greeting\' => \'Hello world!\' }`.\\n\\n1 is wrong, since the key is not `\'greeting\'` but `() => \'greeting\'`.\\n3 is wrong, since we\'re creating a new function by passing it as a parameter to the `get` method. Object interact by _reference_. Functions are objects, which is why two functions are never strictly equal, even if they are identical: they have a reference to a different spot in memory.","id":113,"options":["1","2","2 and 3","All of them"],"question":"Which method(s) will return the value `\'Hello world!\'`?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nconst changeAge = (x = { ...person }) => (x.age += 1);\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1;\\n  x.name = \'Sarah\';\\n};\\n\\nchangeAge(person);\\nchangeAgeAndName();\\n\\nconsole.log(person);","codeLanguage":"javascript","explanation":"Both the `changeAge` and `changeAgeAndName` functions have a default parameter, namely a _newly_ created object `{ ...person }`. This object has copies of all the key/values in the `person` object.\\n\\nFirst, we invoke the `changeAge` function and pass the `person` object as its argument. This function increases the value of the `age` property by 1. `person` is now `{ name: \\"Lydia\\", age: 22 }`.\\n\\nThen, we invoke the `changeAgeAndName` function, however we don\'t pass a parameter. Instead, the value of `x` is equal to a _new_ object: `{ ...person }`. Since it\'s a new object, it doesn\'t affect the values of the properties on the `person` object. `person` is still equal to `{ name: \\"Lydia\\", age: 22 }`.","id":114,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"function sumValues(x, y, z) {\\n  return x + y + z;\\n}","codeLanguage":"javascript","explanation":"With the spread operator `...`, we can _spread_ iterables to individual elements. The `sumValues` function receives three arguments: `x`, `y` and `z`. `...[1, 2, 3]` will result in `1, 2, 3`, which we pass to the `sumValues` function.","id":115,"options":["`sumValues([...1, 2, 3])`","`sumValues([...[1, 2, 3]])`","`sumValues(...[1, 2, 3])`","`sumValues([1, 2, 3])`"],"question":"Which of the following options will return `6`?"},{"answer":1,"code":"let num = 1;\\nconst list = [\'\ud83e\udd73\', \'\ud83e\udd20\', \'\ud83e\udd70\', \'\ud83e\udd2a\'];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"With the `+=` operand, we\'re incrementing the value of `num` by `1`. `num` had the initial value `1`, so `1 + 1` is `2`. The item on the second index in the `list` array is \ud83e\udd70, `console.log(list[2])` prints \ud83e\udd70.","id":116,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const person = {\\n  firstName: \'Lydia\',\\n  lastName: \'Hallie\',\\n  pet: {\\n    name: \'Mara\',\\n    breed: \'Dutch Tulip Hound\',\\n  },\\n  getFullName() {\\n    return `${this.firstName} ${this.lastName}`;\\n  },\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"With the optional chaining operator `?.`, we no longer have to explicitly check whether the deeper nested values are valid or not. If we\'re trying to access a property on an `undefined` or `null` value (_nullish_), the expression short-circuits and returns `undefined`.\\n\\n`person.pet?.name`: `person` has a property named `pet`: `person.pet` is not nullish. It has a property called `name`, and returns `Mara`.\\n`person.pet?.family?.name`: `person` has a property named `pet`: `person.pet` is not nullish. `pet` does _not_ have a property called `family`, `person.pet.family` is nullish. The expression returns `undefined`.\\n`person.getFullName?.()`: `person` has a property named `getFullName`: `person.getFullName()` is not nullish and can get invoked, which returns `Lydia Hallie`.\\n`member.getLastName?.()`: `member` is not defined: `member.getLastName()` is nullish. The expression returns `undefined`.","id":117,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `undefined`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const groceries = [\'banana\', \'apple\', \'peanuts\'];\\n\\nif (groceries.indexOf(\'banana\')) {\\n  console.log(\'We have to buy bananas!\');\\n} else {\\n  console.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"We passed the condition `groceries.indexOf(\\"banana\\")` to the if-statement. `groceries.indexOf(\\"banana\\")` returns `0`, which is a falsy value. Since the condition in the if-statement is falsy, the code in the `else` block runs, and `We don\'t have to buy bananas!` gets logged.","id":118,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const config = {\\n  languages: [],\\n  set language(lang) {\\n    return this.languages.push(lang);\\n  },\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"The `language` method is a `setter`. Setters don\'t hold an actual value, their purpose is to _modify_ properties. When calling a `setter` method, `undefined` gets returned.","id":119,"options":["`function language(lang) { this.languages.push(lang }`","`0`","`[]`","`undefined`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\n\\nconsole.log(!typeof name === \'object\');\\nconsole.log(!typeof name === \'string\');","codeLanguage":"javascript","explanation":"`typeof name` returns `\\"string\\"`. The string `\\"string\\"` is a truthy value, so `!typeof name` returns the boolean value `false`. `false === \\"object\\"` and `false === \\"string\\"` both return`false`.\\n\\n(If we wanted to check whether the type was (un)equal to a certain type, we should\'ve written `!==` instead of `!typeof`)","id":120,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const add = x => y => z => {\\n  console.log(x, y, z);\\n  return x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"The `add` function returns an arrow function, which returns an arrow function, which returns an arrow function (still with me?). The first function receives an argument `x` with the value of `4`. We invoke the second function, which receives an argument `y` with the value `5`. Then we invoke the third function, which receives an argument `z` with the value `6`. When we\'re trying to access the value `x`, `y` and `z` within the last arrow function, the JS engine goes up the scope chain in order to find the values for `x` and `y` accordingly. This returns `4` `5` `6`.","id":121,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"async function* range(start, end) {\\n  for (let i = start; i <= end; i++) {\\n    yield Promise.resolve(i);\\n  }\\n}\\n\\n(async () => {\\n  const gen = range(1, 3);\\n  for await (const item of gen) {\\n    console.log(item);\\n  }\\n})();","codeLanguage":"javascript","explanation":"The generator function `range` returns an async object with promises for each item in the range we pass: `Promise{1}`, `Promise{2}`, `Promise{3}`. We set the variable `gen` equal to the async object, after which we loop over it using a `for await ... of` loop. We set the variable `item` equal to the returned Promise values: first `Promise{1}`, then `Promise{2}`, then `Promise{3}`. Since we\'re _awaiting_ the value of `item`, the resolved promsie, the resolved _values_ of the promises get returned: `1`, `2`, then `3`.","id":122,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n  console.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"`myFunc` expects an object with properties `x`, `y` and `z` as its argument. Since we\'re only passing three separate numeric values (1, 2, 3) instead of one object with properties `x`, `y` and `z` ({x: 1, y: 2, z: 3}), `x`, `y` and `z` have their default value of `undefined`.","id":123,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'unit\', unit: \'mile-per-hour\' }\\n  }).format(speed)\\n\\n  const formattedAmount = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'currency\', currency: \'USD\' }\\n  }).format(amount)\\n\\n  return `The driver drove ${formattedSpeed} and has to pay ${formattedAmount}`\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"With the `Intl.NumberFormat` method, we can format numeric values to any locale. We format the numeric value `130` to the `en-US` locale as a `unit` in `mile-per-hour`, which results in `130 mph`. The numeric value `300` to the `en-US` locale as a `currentcy` in `USD` results in `$300.00`.","id":124,"options":["The driver drove 130 and has to pay 300","The driver drove 130 mph and has to pay $300.00","The driver drove undefined and has to pay undefined","The driver drove 130.00 and has to pay 300.00"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const spookyItems = [\'\ud83d\udc7b\', \'\ud83c\udf83\', \'\ud83d\udd78\'];\\n({ item: spookyItems[3] } = { item: \'\ud83d\udc80\' });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"By destructuring objects, we can unpack values from the right-hand object, and assign the unpacked value to the value of the same property name on the left-hand object. In this case, we\'re assigning the value \\"\ud83d\udc80\\" to `spookyItems[3]`. This means that we\'re modifying the `spookyItems` array, we\'re adding the \\"\ud83d\udc80\\" to it. When logging `spookyItems`, `[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]` gets logged.","id":125,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"With the `Number.isNaN` method, you can check if the value you pass is a _numeric value_ and equal to `NaN`. `name` is not a numeric value, so `Number.isNaN(name)` returns `false`. `age` is a numeric value, but is not equal to `NaN`, so `Number.isNaN(age)` returns `false`.\\n\\nWith the `isNaN` method, you can check if the value you pass is not a number. `name` is not a number, so `isNaN(name)` returns true. `age` is a number, so `isNaN(age)` returns `false`.","id":126,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n  console.log(typeof randomValue);\\n  const randomValue = \'Lydia Hallie\';\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"Variables declared with the `const` keyword are not referencable before their initialization: this is called the _temporal dead zone_. In the `getInfo` function, the variable `randomValue` is scoped in the functional scope of `getInfo`. On the line where we want to log the value of `typeof randomValue`, the variable `randomValue` isn\'t initialized yet: a `ReferenceError` gets thrown! The engine didn\'t go down the scope chain since we declared the variable `randomValue` in the `getInfo` function.","id":127,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const myPromise = Promise.resolve(\'Woah some cool data\');\\n\\n(async () => {\\n  try {\\n    console.log(await myPromise);\\n  } catch {\\n    throw new Error(`Oops didn\'t work`);\\n  } finally {\\n    console.log(\'Oh finally!\');\\n  }\\n})();","codeLanguage":"javascript","explanation":"In the `try` block, we\'re logging the awaited value of the `myPromise` variable: `\\"Woah some cool data\\"`. Since no errors were thrown in the `try` block, the code in the `catch` block doesn\'t run. The code in the `finally` block _always_ runs, `\\"Oh finally!\\"` gets logged.","id":128,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const emojis = [\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"With the `flat` method, we can create a new, flattened array. The depth of the flattened array depends on the value that we pass. In this case, we passed the value `1` (which we didn\'t have to, that\'s the default value), meaning that only the arrays on the first depth will be concatenated. `[\'\ud83e\udd51\']` and `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]` in this case. Concatenating these two arrays results in `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":129,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const myPromise = Promise.resolve(Promise.resolve(\'Promise!\'));\\n\\nfunction funcOne() {\\n  myPromise.then(res => res).then(res => console.log(res));\\n  setTimeout(() => console.log(\'Timeout!\', 0));\\n  console.log(\'Last line!\');\\n}\\n\\nasync function funcTwo() {\\n  const res = await myPromise;\\n  console.log(await res);\\n  setTimeout(() => console.log(\'Timeout!\', 0));\\n  console.log(\'Last line!\');\\n}\\n\\nfuncOne();\\nfuncTwo();","codeLanguage":"javascript","explanation":"First, we invoke `funcOne`. On the first line of `funcOne`, we call the `myPromise` promise, which is an _asynchronous_ operation. While the engine is busy completing the promise, it keeps on running the function `funcOne`. The next line is the _asynchronous_ `setTimeout` function, from which the callback is sent to the Web API. (see my article on the event loop here.)\\n\\nBoth the promise and the timeout are asynchronous operations, the function keeps on running while it\'s busy completing the promise and handling the `setTimeout` callback. This means that `Last line!` gets logged first, since this is not an asynchonous operation. This is the last line of `funcOne`, the promise resolved, and `Promise!` gets logged. However, since we\'re invoking `funcTwo()`, the call stack isn\'t empty, and the callback of the `setTimeout` function cannot get added to the callstack yet.\\n\\nIn `funcTwo` we\'re, first _awaiting_ the myPromise promise. With the `await` keyword, we pause the execution of the function until the promise has resolved (or rejected). Then, we log the awaited value of `res` (since the promise itself returns a promise). This logs `Promise!`.\\n\\nThe next line is the _asynchronous_ `setTimeout` function, from which the callback is sent to the Web API.\\n\\nWe get to the last line of `funcTwo`, which logs `Last line!` to the console. Now, since `funcTwo` popped off the call stack, the call stack is empty. The callbacks waiting in the queue (`() => console.log(\\"Timeout!\\")` from `funcOne`, and `() => console.log(\\"Timeout!\\")` from `funcTwo`) get added to the call stack one by one. The first callback logs `Timeout!`, and gets popped off the stack. Then, the second callback logs `Timeout!`, and gets popped off the stack. This logs `Last line! Promise! Promise! Last line! Timeout! Timeout!`","id":130,"options":["`Promise! Last line! Promise! Last line! Last line! Promise!`","`Last line! Timeout! Promise! Last line! Timeout! Promise!`","`Promise! Last line! Last line! Promise! Timeout! Timeout!`","`Last line! Promise! Promise! Last line! Timeout! Timeout!`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"// sum.js\\nexport default function sum(x) {\\n  return x + x;\\n}\\n\\n// index.js\\nimport * as sum from \'./sum\';","codeLanguage":"javascript","explanation":"With the asterisk `*`, we import all exported values from that file, both default and named. If we had the following file:\\n\\n```javascript\\n// info.js\\nexport const name = \'Lydia\';\\nexport const age = 21;\\nexport default \'I love JavaScript\';\\n\\n// index.js\\nimport * as info from \'./info\';\\nconsole.log(info);\\n```\\n\\nThe following would get logged:\\n\\n```javascript\\n{\\n  default: \\"I love JavaScript\\",\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n```\\n\\nFor the `sum` example, it means that the imported value `sum` looks like this:\\n\\n```javascript\\n{ default: function sum(x) { return x + x } }\\n```\\n\\nWe can invoke this function, by calling `sum.default`","id":131,"options":["`sum(4)`","`sum.sum(4)`","`sum.default(4)`","Default aren\'t imported with `*`, only named exports"],"question":"How can we invoke `sum` in `index.js` from `sum.js?`"},{"answer":2,"code":"const handler = {\\n  set: () => console.log(\'Added a new property!\'),\\n  get: () => console.log(\'Accessed a property!\'),\\n};\\n\\nconst person = new Proxy({}, handler);\\n\\nperson.name = \'Lydia\';\\nperson.name;","codeLanguage":"javascript","explanation":"With a Proxy object, we can add custom behavior to an object that we pass to it as the second argument. In tis case, we pass the `handler` object which contained to properties: `set` and `get`. `set` gets invoked whenever we _set_ property values, `get` gets invoked whenever we _get_ (access) property values.\\n\\nThe first argument is an empty object `{}`, which is the value of `person`. To this object, the custom behavior specified in the `handler` object gets added. If we add a property to the `person` object, `set` will get invoked. If we access a property on the `person` object, `get` gets invoked.\\n\\nFirst, we added a new property `name` to the proxy object (`person.name = \\"Lydia\\"`). `set` gets invoked, and logs `\\"Added a new property!\\"`.\\n\\nThen, we access a property value on the proxy object, the `get` property on the handler object got invoked. `\\"Accessed a property!\\"` gets logged.","id":132,"options":["`Added a new property!`","`Accessed a property!`","`Added a new property!` `Accessed a property!`","Nothing gets logged"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"const person = { name: \'Lydia Hallie\' };\\n\\nObject.seal(person);","codeLanguage":"javascript","explanation":"With `Object.seal` we can prevent new properies from being _added_, or existing properties to be _removed_.\\n\\nHowever, you can still modify the value of existing properties.","id":133,"options":["`person.name = \\"Evan Bacon\\"`","`person.age = 21`","`delete person.name`","`Object.assign(person, { age: 21 })`"],"question":"Which of the following will modify the `person` object?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia Hallie\',\\n  address: {\\n    street: \'100 Main St\',\\n  },\\n};\\n\\nObject.freeze(person);","codeLanguage":"javascript","explanation":"The `Object.freeze` method _freezes_ an object. No properties can be added, modified, or removed.\\n\\nHowever, it only _shallowly_ freezes the object, meaning that only _direct_ properties on the object are frozen. If the property is another object, like `address` in this case, the properties on that object aren\'t frozen, and can be modified.","id":134,"options":["`person.name = \\"Evan Bacon\\"`","`delete person.address`","`person.address.street = \\"101 Main St\\"`","`person.pet = { name: \\"Mara\\" }`"],"question":"Which of the following will modify the `person` object?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia Hallie\',\\n  address: {\\n    street: \'100 Main St\',\\n  },\\n};\\n\\nObject.freeze(person);","codeLanguage":"javascript","explanation":"The `Object.freeze` method _freezes_ an object. No properties can be added, modified, or removed.\\n\\nHowever, it only _shallowly_ freezes the object, meaning that only _direct_ properties on the object are frozen. If the property is another object, like `address` in this case, the properties on that object aren\'t frozen, and can be modified.","id":135,"options":["`person.name = \\"Evan Bacon\\"`","`delete person.address`","`person.address.street = \\"101 Main St\\"`","`person.pet = { name: \\"Mara\\" }`"],"question":"Which of the following will modify the `person` object?"},{"answer":0,"code":"const add = x => x + x;\\n\\nfunction myFunc(num = 2, value = add(num)) {\\n  console.log(num, value);\\n}\\n\\nmyFunc();\\nmyFunc(3);","codeLanguage":"javascript","explanation":"First, we invoked `myFunc()` without passing any arguments. Since we didn\'t pass arguments, `num` and `value` got their default values: num is `2`, and `value` the returned value of the function `add`. To the `add` function, we pass `num` as an argument, which had the value of `2`. `add` returns `4`, which is the value of `value`.\\n\\nThen, we invoked `myFunc(3)` and passed the value `3` as the value for the argument `num`. We didn\'t pass an argument for `value`. Since we didn\'t pass a value for the `value` argument, it got the default value: the returned value of the `add` function. To `add`, we pass `num`, which has the value of `3`. `add` returns `6`, which is the value of `value`.","id":136,"options":["`2` `4` dan `3` `6`","`2` `NaN` dan `3` `NaN`","`2` `Error` dan `3` `6`","`2` `4` dan `3` `Error`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"const teams = [\\n  { name: \'Team 1\', members: [\'Paul\', \'Lisa\'] },\\n  { name: \'Team 2\', members: [\'Laura\', \'Tim\'] },\\n];\\n\\nfunction* getMembers(members) {\\n  for (let i = 0; i < members.length; i++) {\\n    yield members[i];\\n  }\\n}\\n\\nfunction* getTeams(teams) {\\n  for (let i = 0; i < teams.length; i++) {\\n    // \u2728 SOMETHING IS MISSING HERE \u2728\\n  }\\n}\\n\\nconst obj = getTeams(teams);\\nobj.next(); // { value: \\"Paul\\", done: false }\\nobj.next(); // { value: \\"Lisa\\", done: false }","codeLanguage":"javascript","explanation":"Untuk melakukan pengulangan pada `members` dalam setiap elemen array `tim`, kita perlu melemparkan `tim[i].members` ke fungsi generator `getMembers`. Fungsi generator akan mengembalikan objek hasil generator. Untuk mengulang setiap elemen dalam objek generator ini, kita perlu menggunakan `yield*`.\\n\\nJika kita telah menulis `yield`, `return yield`, atau `return`, maka seluruh fungsi generator akan dikembalikan saat pertama kali kita memanggil metode `next`.","id":137,"options":["`yield getMembers(teams[i].members)`","`yield* getMembers(teams[i].members)`","`return getMembers(teams[i].members)`","`return yield getMembers(teams[i].members)`"],"question":"Apa yang akan tampil?"},{"answer":2,"code":"const person = {\\n  name: \'Lydia Hallie\',\\n  hobbies: [\'coding\'],\\n};\\n\\nfunction addHobby(hobby, hobbies = person.hobbies) {\\n  hobbies.push(hobby);\\n  return hobbies;\\n}\\n\\naddHobby(\'running\', []);\\naddHobby(\'dancing\');\\naddHobby(\'baking\', person.hobbies);\\n\\nconsole.log(person.hobbies);","codeLanguage":"javascript","explanation":"The `addHobby` function receives two arguments, `hobby` and `hobbies` with the default value of the `hobbies` array on the `person` object.\\n\\nFirst, we invoke the `addHobby` function, and pass `\\"running\\"` as the value for `hobby` and an empty array as the value for `hobbies`. Since we pass an empty array as the value for `y`, `\\"running\\"` gets added to this empty array.\\n\\nThen, we invoke the `addHobby` function, and pass `\\"dancing\\"` as the value for `hobby`. We didn\'t pass a value for `hobbies`, so it gets the default value, the `hobbies` property on the `person` object. We push the hobby `dancing` to the `person.hobbies` array.\\n\\nLast, we invoke the `addHobby` function, and pass `\\"bdaking\\"` as the value for `hobby`, and the `person.hobbies` array as the value for `hobbies`. We push the hobby `baking` to the `person.hobbies` array.\\n\\nAfter pushing `dancing` and `baking`, the value of `person.hobbies` is `[\\"coding\\", \\"dancing\\", \\"baking\\"]`","id":138,"options":["`[\\"coding\\"]`","`[\\"coding\\", \\"dancing\\"]`","`[\\"coding\\", \\"dancing\\", \\"baking\\"]`","`[\\"coding\\", \\"running\\", \\"dancing\\", \\"baking\\"]`"],"question":"Apa yang akan tampil?"},{"answer":1,"code":"class Bird {\\n  constructor() {\\n    console.log(\\"I\'m a bird. \ud83e\udda2\\");\\n  }\\n}\\n\\nclass Flamingo extends Bird {\\n  constructor() {\\n    console.log(\\"I\'m pink. \ud83c\udf38\\");\\n    super();\\n  }\\n}\\n\\nconst pet = new Flamingo();","codeLanguage":"javascript","explanation":"Kita membuat variabel `pet` yang merupakan turunan dari class `Flamingo`. Saat kita membuat turunan, `constructor` pada `Flamingo` dipanggil. Pertama, `\\"I\'m pink. \ud83c\udf38\\"` ditampilkan, setelah itu kita memanggil `super()`. `super()` memanggil konstruktor class induk, `Bird`. Constructor pada `Bird` dipanggil, dan menampilkan `\\"I\'m a bird. \ud83e\udda2\\"`.","id":139,"options":["`I\'m pink. \ud83c\udf38`","`I\'m pink. \ud83c\udf38` `I\'m a bird. \ud83e\udda2`","`I\'m a bird. \ud83e\udda2` `I\'m pink. \ud83c\udf38`","Nothing, we didn\'t call any method"],"question":"Apa yang akan tampil?"},{"answer":3,"code":"const emojis = [\'\ud83c\udf84\', \'\ud83c\udf85\ud83c\udffc\', \'\ud83c\udf81\', \'\u2b50\'];\\n\\n/* 1 */ emojis.push(\'\ud83e\udd8c\');\\n/* 2 */ emojis.splice(0, 2);\\n/* 3 */ emojis = [...emojis, \'\ud83e\udd42\'];\\n/* 4 */ emojis.length = 0;","codeLanguage":"javascript","explanation":"Deklarasi `const` pada dasarnya berarti tidak dapat _mengubah_ nilai dari variable tersebut, karena bersifat _read-only (tidak dapat diubah)_. Bagaimanapun, nilainya tidak mutlak. Seperti array pada variable `emojis` dimana nilainya bisa diubah, contohnya untuk menambah nilai array baru, menghilangkan, atau mengubah properti `length` dari array menjadi 0.","id":140,"options":["1","1 dan 2","3 dan 4","3"],"question":"Manakah dari pilihan di bawah ini yang salah?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia Hallie\\",\\n  age: 21\\n}\\n\\n[...person] // [\\"Lydia Hallie\\", 21]","codeLanguage":"javascript","explanation":"Objek tidak dapat diulang secara default. Sebuah iterable adalah sebuah iterable jika protokol iterator ada. Kita dapat menambahkan ini secara manual dengan menambahkan simbol iterator\\n `[Symbol.iterator]`, dimana harus mengembalikan objek generator, sebagai contoh dengan membuat fungsi generator `*[Symbol.iterator]() {}`. Fungsi generator ini harus menghasilkan `Object.values` dari objek `person` jika kita mau mengembalikan array `[\\"Lydia Hallie\\", 21]`: `yield* Object.values(this)`.","id":141,"options":["Tidak ada, objek adalah iterable secara default","`*[Symbol.iterator]() { for (let x in this) yield* this[x] }`","`*[Symbol.iterator]() { for (let x in this) yield* Object.values(this) }`","`*[Symbol.iterator]() { for (let x in this) yield this }`"],"question":"Apa yang harus kita tambahkan ke objek `person` untuk mendapatkan `[\\"Lydia Hallie\\", 21]` sebagai output dari `[...person]`?"},{"answer":2,"code":"let count = 0;\\nconst nums = [0, 1, 2, 3];\\n\\nnums.forEach(num => {\\n\\tif (num) count += 1\\n})\\n\\nconsole.log(count)","codeLanguage":"javascript","explanation":"Pernyataan `if` didalam perulangan `forEach` akan mengecek apakah nilai dari `num` benar atau salah. Sejak nilai pertama dari array `nums` adalah `0`, yang merupakan nilai salah, pernyataan `if` tidak akan dieksekusi. maka `count` yang mendapat increment hanya untuk 3 nomor yang lain di array `nums`, `1`, `2` dan `3`. sejak `count` mendapat increment `1` 3 kali, maka nilai dari `count` adalah `3`.","id":142,"options":["1","2","3","4"],"question":"Apa yang akan tampil?"},{"answer":0,"code":"class Calc {\\n\\tconstructor() {\\n\\t\\tthis.count = 0\\n\\t}\\n\\n\\tincrease() {\\n\\t\\tthis.count ++\\n\\t}\\n}\\n\\nconst calc = new Calc()\\nnew Calc().increase()\\n\\nconsole.log(calc.count)","codeLanguage":"javascript","explanation":"Kami mengatur variabel `calc` sama dengan instance baru dari class `Calc`. Kemudian, kami membuat instance baru dari `Calc`, dan memanggil metode `increase` pada contoh ini. Karena properti count berada dalam konstruktor dari class `Calc`, properti count tidak dibagikan pada prototipe `Calc`. Ini berarti bahwa nilai hitungan belum diperbarui untuk contoh yang ditunjukkan kalk, hitung masih `0`.","id":143,"options":["`0`","`1`","`undefined`","`ReferenceError`"],"question":"Apa hasilnya?"},{"answer":1,"code":"const user = {\\n\\temail: \\"e@mail.com\\",\\n\\tpassword: \\"12345\\"\\n}\\n\\nconst updateUser = ({ email, password }) => {\\n\\tif (email) {\\n\\t\\tObject.assign(user, { email })\\n\\t}\\n\\n\\tif (password) {\\n\\t\\tuser.password = password\\n\\t}\\n\\n\\treturn user\\n}\\n\\nconst updatedUser = updateUser({ email: \\"new@email.com\\" })\\n\\nconsole.log(updatedUser === user)","codeLanguage":"javascript","explanation":"Fungsi `updateUser` memperbarui nilai properti `email` dan `password` pada pengguna, jika nilainya diteruskan ke fungsi, setelah itu fungsi mengembalikan objek `user`. Nilai yang dikembalikan dari fungsi `updateUser` adalah objek `user`, yang berarti bahwa nilai updatedUser adalah referensi ke objek `user` yang sama dengan yang ditunjuk oleh `user`. `updatedUser === user` sama dengan `true`.","id":144,"options":["`false`","`true`","`TypeError`","`ReferenceError`"],"question":"Apa hasilnya?"},{"answer":2,"code":"const fruit = [\'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']\\n\\nfruit.slice(0, 1)\\nfruit.splice(0, 1)\\nfruit.unshift(\'\ud83c\udf47\')","codeLanguage":"javascript","explanation":"Pertama, kita memanggil metode `slice` pada array fruit. Metode slice tidak mengubah array asli, tetapi mengembalikan nilai yang dipotongnya dari array: banana emoji.\\nKemudian, kita memanggil metode `splice` pada array fruit. Metode splice memang mengubah array asli, yang berarti array fruit sekarang terdiri dari `[\'\ud83c\udf4a\', \'\ud83c\udf4e\']`.\\nAkhirnya, kita memanggil metode `unshift` pada array `fruit`, yang memodifikasi array asli dengan menambahkan nilai yang diberikan, \u2018\ud83c\udf47\u2019 dalam hal ini, sebagai elemen pertama dalam array. Susunan fruit sekarang terdiri dari `[\'\ud83c\udf47\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`.","id":145,"options":["`[\'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf47\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`","`[\'\ud83c\udf47\', \'\ud83c\udf4c\', \'\ud83c\udf4a\', \'\ud83c\udf4e\']`"],"question":"Apa hasilnya?"},{"answer":1,"code":"const animals = {};\\nlet dog = { emoji: \'\ud83d\udc36\' }\\nlet cat = { emoji: \'\ud83d\udc08\' }\\n\\nanimals[dog] = { ...dog, name: \\"Mara\\" }\\nanimals[cat] = { ...cat, name: \\"Sara\\" }\\n\\nconsole.log(animals[dog])","codeLanguage":"javascript","explanation":"Kunci objek diubah menjadi string.\\n\\nKarena nilai `dog` adalah sebuah objek,  `animals[dog]`sebenarnya berarti kita membuat properti baru bernama `\\"object Object\\"`yang sama dengan objek baru. `animals[\\"object Object\\"]` sekarang sama dengan `{ emoji: \\"\ud83d\udc36\\", name: \\"Mara\\"}`.\\n\\n`cat` juga merupakan objek, yang berarti bahwa `animals[cat]` sebenarnya berarti bahwa kami menimpa nilai `animals[``\\"``object Object``\\"``]` dengan properti cat yang baru.\\n\\nMencatat `animals[dog]`, atau sebenarnya `animals[\\"object Object\\"]` karena mengonversi objek `dog` menjadi string menghasilkan `\\"object Object\\"`, mengembalikan `{emoji: \\"\ud83d\udc08\\", nama: \\"Sara\\"}`.","id":146,"options":["`{ emoji: \\"\ud83d\udc36\\", name: \\"Mara\\" }`","`{ emoji: \\"\ud83d\udc08\\", name: \\"Sara\\" }`","`undefined`","`ReferenceError`"],"question":"Apa hasilnya?"},{"answer":0,"code":"const user = {\\n        email: \\"my@email.com\\",\\n        updateEmail: (email) => {\\n          this.email = email;\\n        },\\n};\\n\\nuser.updateEmail(\\"new@email.com\\");\\nconsole.log(user.email);","codeLanguage":"javascript","explanation":"Fungsi `updateEmail` adalah fungsi panah, dan tidak terikat ke objek `user`. Artinya, kata kunci `this` tidak merujuk ke objek `user`, tetapi merujuk pada cakupan global dalam kasus ini. Nilai `email` dalam objek `user` tidak diperbarui. Saat memasukkan nilai `user.email`, nilai asli `my@email.com` akan dikembalikan.","id":147,"options":["`my@email.com`","`new@email.com`","`undefined`","`ReferenceError`"],"question":"Apa hasilnya?"},{"answer":3,"code":"const promise1 = Promise.resolve(\'First\')\\nconst promise2 = Promise.resolve(\'Second\')\\nconst promise3 = Promise.reject(\'Third\')\\nconst promise4 = Promise.resolve(\'Fourth\')\\n\\nconst runPromises = async () => {\\n      const res1 = await Promise.all([promise1, promise2]);\\n      const res2 = await Promise.all([promise3, promise4]);\\n      return [res1, res2];\\n}\\n\\nrunPromises()\\n\\t.then(res => console.log(res))\\n\\t.catch(err => console.log(err))","codeLanguage":"javascript","explanation":"Metode `Promise.all` menjalankan promise yang diberikan secara paralel. Jika satu promise gagal, metode `Promise.all` dengan nilai promise yang ditolak. Dalam kasus ini, `promise3` ditolak dengan nilai `\\"Third\\"`. Kami menangkap nilai yang ditolak dalam metode `catch` yang dirantai pada pemanggilan `runPromises` untuk menangkap setiap kesalahan dalam fungsi `runPromises`. Hanya `\\"Third\\"` yang dicatat, karena `promise3` ditolak dengan nilai ini.","id":148,"options":["`[[\'First\', \'Second\'], [\'Fourth\']]`","`[[\'First\', \'Second\'], [\'Third\', \'Fourth\']]`","`[[\'First\', \'Second\']]`","`\'Third\'`"],"question":"Apa hasilnya?"},{"answer":0,"code":"const keys = [\\"name\\", \\"age\\"];\\nconst values = [\\"Lydia\\", 22];\\n\\nconst method =\\n  /* ?? */\\n  Object[method](\\n    keys.map((_, i) => {\\n      return [keys[i], values[i]];\\n    })\\n  ); // { name: \\"Lydia\\", age: 22 }","codeLanguage":"javascript","explanation":"```javascript\\nconst keys = [\\"name\\", \\"age\\"];\\nconst values = [\\"Lydia\\", 22];\\n\\nconst method =\\n  /* ?? */\\n  Object[method](\\n    keys.map((_, i) => {\\n      return [keys[i], values[i]];\\n    })\\n  ); // { name: \\"Lydia\\", age: 22 }\\n```\\n\\n- A: `entries`\\n- B: `values`\\n- C: `fromEntries`\\n- D: `forEach`\\n\\n<details><summary><b>Jawaban</b></summary>\\n<p>","id":149,"options":["`entries`","`values`","`fromEntries`","`forEach`"],"question":""},{"answer":2,"code":"const createMember = ({ email, address = {}}) => {\\n\\tconst validEmail = /.+@.+..+/.test(email)\\n\\tif (!validEmail) throw new Error(\\"Valid email pls\\")\\n\\n\\treturn {\\n\\t\\temail,\\n\\t\\taddress: address ? address : null\\n\\t}\\n}\\n\\nconst member = createMember({ email: \\"my@email.com\\" })\\nconsole.log(member)","codeLanguage":"javascript","explanation":"Nilai default dari `address` adalah objek kosong `{}`. Saat kita menyetel variabel `member` sama dengan objek yang dikembalikan oleh fungsi `createMember`, kita tidak meneruskan nilai untuk address, yang berarti bahwa nilai address adalah objek kosong default `{}`.Objek kosong adalah nilai sebenarnya, yang berarti kondisi `address ? address: null` mengembalikan `true`. Nilai address adalah objek kosong `{}`.","id":150,"options":["`{ email: \\"my@email.com\\", address: null }`","`{ email: \\"my@email.com\\" }`","`{ email: \\"my@email.com\\", address: {} }`","`{ email: \\"my@email.com\\", address: undefined }`"],"question":"Apa hasilnya?"},{"answer":1,"code":"let randomValue = { name: \\"Lydia\\" }\\nrandomValue = 23\\n\\nif (!typeof randomValue === \\"string\\") {\\n\\tconsole.log(\\"It\'s not a string!\\")\\n} else {\\n\\tconsole.log(\\"Yay it\'s a string!\\")\\n}","codeLanguage":"javascript","explanation":"Kondisi dalam pernyataan `if` memeriksa apakah nilai dari `!typeof randomValue` sama dengan `\\"string\\"`. Operator `!` Mengonversi nilai menjadi nilai boolean. Jika nilainya benar, nilai yang dikembalikan akan menjadi `false`, jika nilainya salah, nilai yang dikembalikan akan menjadi `true`. Dalam kasus ini, nilai yang dikembalikan dari `typeof randomValue` adalah nilai sebenarnya `\\"string\\"`, artinya nilai `!typeof randomValue` adalah nilai boolean `false`.\\n\\n`!typeof randomValue === \\"string\\"` selalu mengembalikan false, karena kita sebenarnya memeriksa `false === \\"string \\"`. Karena kondisi mengembalikan `false`, blok kode dari pernyataan `else` dijalankan, dan `Yay it\'s a string!` Akan dicatat.","id":151,"options":["`It\'s not a string!`","`Yay it\'s a string!`","`TypeError`","`undefined`"],"question":"Apa hasilnya?"}],"locale":"id-ID"},{"isRTL":false,"language":"\ud83c\uddf3\ud83c\uddf1 Nederlands","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"In de functie declareren we eerst de `name` variabele met het keyword `var`. Dit betekent dat de variabele gehoisted wordt (geheugen wordt vrijgemaakt tijdens de Creation Phase) met de waarde `undefined`, tot het niveau waar we de variabele daadwerkelijk defini\xebren. We hebben de variable nog niet gedefinieerd tot op de lijn waar we proberen de `name` variabele te loggen naar het console. De variabele is dus wel al aanwezig, maar de waarde is nog steeds `undefined`.\\n\\nVariabelen die gedeclareerd worden met het keyword `let` (en `const`) worden ook gehoisted, maar worden niet, in tegenstelling tot `var`, <i>ge\xefnitialiseerd</i>. Ze zijn niet toegankelijk totaan de lijn waarop ze gedeclareerd (ge\xefnitialiseerd) worden. Dit wordt de \\"temporal dead zone\\" genoemd. Wanneer we de variabele proberen te benaderen voordat deze gedeclareerd is gooit JavaScript een `ReferenceError`.","id":0,"options":["`Lydia` en `undefined`","`Lydia` en `ReferenceError`","`ReferenceError` en `21`","`undefined` en `ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Vanwege de Event Queue in JavaScript wordt de `setTimeout` callback functie aangeroepen _nadat_ de volledige loop is uitgevoerd. Omndat in de eerste loop de variabele `i` gedeclareerd wordt met het keyword `var`, wordt deze global gemaakt. Tijdens de loop verhogen we de waarde van `i` met `1` door middel van de unary operator `++`. Tegen de tijd dat de `setTimeout` callback functie wordt aangeroepen is de waarde van `i` al `3`, zoals te zien is in het eerste voorbeeld.\\n\\nIn de tweede loop wordt de variabele `i` gedeclareerd met het keyword `let`: variabelen die gedeclareerd worden met het keyword `let` (en `const`) zijn block-scoped (een scope is alles tussen `{ }`). Tijdens elke iteratie zal `i` een nieuwe waarde krijgen, en elke waarde is scoped (te gebruiken tussen `{ }`) in de loop.","id":1,"options":["`0 1 2` en `0 1 2`","`0 1 2` en `3 3 3`","`3 3 3` en `0 1 2`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());","codeLanguage":"javascript","explanation":"Merk op dat de waarde van `diameter` een gewone functie is, waarbij de waarde van `perimeter` een zogenaamde arrow functie is.\\n\\nBij arrow functies refereert het `this` keyword naar z\'n huidige omliggende scope, zo niet bij gewone functie! Dat betekent dat wanneer we `perimeter` aanroepen het niet refereert naar het shape object, maar naar de omliggende scope (window bijvoorbeeld).\\n\\nEr is geen propertie `radius` op dat object, daarom wordt `undefined` teruggegeven.","id":2,"options":["`20` en `62.83185307179586`","`20` en `NaN`","`20` en `63`","`NaN` en `63`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"De unaire plus probeert een operand naar een nummer te converteren. `true` is `1`, en `false` is `0`.\\n\\nDe string `\'Lydia\'` is een truthy waarde. Wat we eigenlijk vragen, is \\"is deze truthy waarde falsy?\\". Dit geeft `false` terug.","id":3,"options":["`1` en `false`","`false` en `NaN`","`false` en `false`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"In JavaScript zijn alle object keys strings (tenzij het een Symbol is). En ook al zijn ze niet van het _type_ string, onder de motorkap worden ze altijd geconverteerd naar een string.\\n\\nJavaScript interpreteert (of unboxed) statements. Wanneer we de bracket notatie gebruiken zal de interpreter de opening bracket `[` zien en net zolang doorgaan tot het een closing bracket `]` vindt. Alleen dan zal het de waarde bepalen van de declaratie.\\n\\n`mouse[bird.size]`: Eerst wordt `bird.size` ge\xebvalueerd, wat `\\"small\\"` teruggeeft. `mouse[\\"small\\"]` geeft `true` terug.\\n\\nEchter, met de dot notatie zal dit niet gebeuren. `mouse` heeft geen propertie genaamd `bird`, wat betekent dat `mouse.bird` `undefined` teruggeeft. Daarna vragen we de waarde op van `size` gebruikmakend van de dot notatie. Omdat `mouse.bird` `undefined` is vragen we eigenlijk de waarde op van `undefined.size`. Dit is ongeldig en zal een error gooien gelijk aan ``.","id":4,"options":["`mouse.bird.size` is ongeldig","`mouse[bird.size]` is ongeldig","`mouse[bird[\\"size\\"]]` is ongeldig","Alle antwoorden zijn geldig"],"question":"Welk antwoord is juist?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"In JavaScript worden alle objecten verwerkt _by reference_, ook wanneer we de waarde van een variabele vullen met een ander object.\\n\\nIn de eerste instantie verwijst de variabele `c` naar een object. Daarna wordt de waarde van de variabele `d` gezet met de waarde van `c`. Daardoor verwijst `d` naar hetzelfde object als `c`.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nWanneer je \xe9\xe9n object veranderd, verander je ze allemaal.","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` is een ingebouwde functie constructor. En ook al lijkt het misschien op een nummer, dat is het niet. Het is een object en bevat ten opzichte van een nummer veel extra opties.\\n\\nWanneer we de `==` operator gebruiken wordt er alleen op de _waarde_ gecheckt. Zowel `a` als `b` bevatten de waarde `3`, dus geeft dit `true` terug. \\n\\nEchter, wanneer we de `===` operator gebruiken wordt er zowel op de _waarde_ als op het _type_ gecheckt. Omdat `new Number()` een **object** is en geen nummer zal dit `false` teruggeven.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nconsole.log(freddie.colorChange(\\"orange\\"));","codeLanguage":"javascript","explanation":"De `colorChange` functie is static. Static methods zijn alleen toegankelijk binnen de class waarin ze gedefinieerd worden, en zijn niet toegankelijk voor instanties van deze class. Omdat `freddie` een instantie is van `Cameleon` zijn static functies niet beschikbaar op deze instantie: een `TypeError` wordt gegooid.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Het object wordt gelogd omdat we een leeg object hebben gedefinieerd op het global object! Wanneer we `greeting` verkeerd spellen als `greetign` ziet de JavaScript interpreter dit als `global.greetign = {}` (of `window.greetign = {}` in een browser).\\n\\nOm dit te voorkomen kunnen we gebruik maken van `\\"use strict\\"`. Dit vangt af dat de variabele gedeclareerd moet zijn voordat het een waarde krijgt.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"Dit is mogelijk in JavaScript, omdat functies objecten zijn! (Alles behalve primitives zijn objecten)\\n\\nEen functie is een speciaal object. De code die je schrijft is niet de uiteindelijke functie. De functie is een object met properties. Deze properties zijn gewoon benaderbaar.","id":9,"options":["Niets, dit is helemaal goed!","`SyntaxError`. Je kunt op deze manier geen properties toevoegen aan een functie.","`\\"Woof\\"` wordt gelogd.","`ReferenceError`"],"question":"What happens when we do this?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Je kunt geen properties toevoegen aan een instantie van een object, zoals je kan met normale objecten. Als je een feature toe wilt voegen aan alle objecten in \xe9\xe9n keer zul je dit middels de prototype van een object moeten doen. In dit geval,\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nZou `member.getFullName()` aanroepbaar maken. Waarom is dit voordelig? Zeg dat we deze methode toe zouden kunnen voegen aan de instantie van een object. Misschien hebben niet alle instanties van `Person` deze methode nodig. Dit zou een hoop plaats innemen in het geheugen omdat alle objecten toch deze propertie krijgen. In plaats daarvan kunnen we het alleen aan de prototype van een object toevoegen, en wordt het maar \xe9\xe9n keer in het geheugen geplaatst, terwijl alle instanties er toch bij kunnen!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"Bij het declareren van `sarah` maakte we geen gebruik van het `new` keyword. Wanneer we `new` gebruiken refereert dit naar een nieuw object dat we aan willen maken. Als je geen gebruik maakt van `new` refereert het naar het **global object**!\\n\\nWe zeiden dat `this.firstName` gelijk is aan `\\"Sarah\\"` en `this.lastName` gelijk is aan `\\"Smith\\"`. Wat we eigenlijk deden is `global.firstName = \'Sarah\'` en `global.lastName = \'Smith\'` defineren. `sarah` zelf blijft `undefined` omdat we geen waarde teruggeven van de `Person` functie.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` en `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` en `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` en `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` en `ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":3,"explanation":"Tijdens de **capturing** fase gaat het event door alle elementen in de boom naar beneden totaan het target element. Het komt dan bij het **target** element, en **bubbling** begint.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Wat zijn de drie fases van event propagation?"},{"answer":1,"explanation":"Alle objecten bevatten een prototype, behalve het **base object**. Het base object is het object aangemaakt door de gebruiker, of een object dat is aangemaakt gebruikmakend van het `new` keyword. Het base object heeft toegang tot sommige methodes en properties, zoals `.toString`. Dit is de reden waarom je gebruik kan maken van ingebouwde JavaScript methodes! Al deze methodes zijn beschikbaar op het prototype. Wanneer JavaScript de methode niet direct kan vinden op het hoofd object zal het door de prototype chain naar beneden zoeken totdat het gevonden worden. Dit maakt het beschikbaar voor jou.","id":13,"options":["true","false"],"question":"Alle objecten bevatten prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript is een **dynamically typed language**: we specificeren niet van welk type variabelen zijn. Waarden kunnen automatisch worden geconverteerd naar andere typen zonder dat je het weet. Dit wordt _implicit type coercion_ genoemd. **Coercion** is converteren van het ene type naar het andere type.\\n\\nIn dit voorbeeld wordt het nummer `1` door JavaScript geconverteerd naar een string, dit om de functie logisch te maken, en de waarde teruggeven. Tijdens het optellen van het numerieke type (`1`) en een string (`\'2\'`) wordt het nummer gezien als een string. We kunnen strings aaneenschakelen zoals `\\"Hello\\" + \\"World\\"`. Wat er dus gebeurt hier is `\\"1\\" + \\"2\\"` wat `\\"12\\"` teruggeeft.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"De **postfix** unary operator `++`:\\n\\n1. Geeft de waarde terug (in dit geval `0`)\\n2. Vermeerderd de waarde (number is nu `1`)\\n\\nDe **prefix** unary operator `++`:\\n\\n1. Vermeerderd de waarde (number is nu `2`)\\n2. Geeft de waarde terug (in dit geval `2`)\\n\\nDit geeft `0 2 2` terug.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"Als je gebruik maakt van taggedd template literals is de waarde van het eerste argument altijd een array van de meegegeven string waarden. De overgebleven argumenten krijgen de waarde van de doorgegeven expressies!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Wanneer we waarden vergelijken worden primitieven vergelijken _by value_, terwijl objecten vergelijken worden _by reference_. JavaScript bekijkt of de objecten een referentie hebben naar dezelfde lokatie in het geheugen.\\n\\nDe twee objecten die we vergelijken hebben dat niet: het object die we doorgeven als een parameter refereert naar een andere lokatie in het geheugen dan het object waarmee we vergelijken.\\n\\nDit is waarom `{ age: 18 } === { age: 18 }` en `{ age: 18 } == { age: 18 }` allebei `false` teruggeven.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"De rest parameter (`...args`.) laat ons alle overgebleven argumenten \\"verzamelen\\" in een array. Een array is een object, dus `typeof args` geeft `\\"object\\"` terug.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Door gebruik te maken van `\\"use strict\\"` kun je er zeker van zijn dat je niet perongeluk globale variabelen declareert. We hebben de variabele `age` nooit gedeclareerd, en omdat we `\\"use strict\\"` gebruiken zal dit een reference error gooien. Als we geen gebruik hadden gemaakt van `\\"use strict\\"` had het wel gewerkt, omdat de propertie `age` dan was toegevoegd aan het globale object.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` voert code uit dat is meegegeven als string. Als het een expressie is, zoals in dit geval, zal het de expressie uitvoeren. De expressie is `10 * 10 + 5`. Dit geeft het getal `105` terug.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"Wat is de waarde van `sum`?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"De data opgeslagen in `sessionStorage` wordt verwijderd na het sluiten van de _tab_.\\n\\nAls je `localStorage` had gebruikt was de data wel voor altijd opgeslagen, zolang bijvoorbeeld `localStorage.clear()` wordt aangeroepen.","id":21,"options":["Voor altijd, de data gaat niet verloren.","Wanneer de gebruiker de tab sluit.","Wanneer de gebruiker de gehele browser sluit, niet alleen de tab.","Wanneer de gebruiker zijn computer afsluit."],"question":"Hoe lang is cool_secret benaderbaar?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Met het `var` keyword kun je meerdere variabelen met dezelfde naam declareren. De variabele zal dan de laatst gezette waarde bevatten.\\n\\nJe kunt dit niet doen met `let` of `const`, omdat deze block-scoped zijn.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"Alle object keys (Symbols uitgesloten) zijn onder de motorkap strings, zelfs als je het zelf niet een string gemaakt hebt. Dat is waarom `obj.hasOwnProperty(\'1\')` ook `true` teruggeeft.\\n\\nDit werkt niet op deze manier voor een set. Er is geen `\'1\'` in onze set: `set.has(\'1\')` geeft `false` terug. Het heeft de numerieke waarde `1`, `set.has(1)` geeft `true` terug.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Als je twee properties met dezelfde naam hebt zal de waarde van de al bestaande propertie overschreven worden. Het zal dan ook in de eerste positie blijven, maar met de laatste waarde.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"Wat is de uitkomst?"},{"answer":0,"explanation":"De base execution context is de global execution context: dit is benaderbaar overal in je code.","id":25,"options":["true","false","het hangt er vanaf"],"question":"De JavaScript global execution context maakt twee dingen aan voor je: het globale object, en het \\"this\\" keyword."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"De `continue` statement slaat een iteratie over als een bepaalde conditie `true` teruggeeft.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` is een built-in constructor waaraan we properties kunnen toevoegen. Primitieve strings worden automatisch geconverteerd naar een string object, gegenereerd door de string prototype functie. Daarom hebben alle strings (string objecten) toegang tot de methode!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Object keys worden automatisch geconverteerd naar strings. We proberen een object aan een propertie toe te wijzen van object `a`, met de waarde `123`.\\n\\nMaar als we een object converteren naar een string krijgen we `\\"[object Object]\\"` terug. Wat we hier dus schrijven is `a[\\"object Object\\"] = 123`. Dan kunnen we hetzelfde nog een keer proberen. `c` is een ander object dat converteren naar een string. En dan, `a[\\"object Object\\"] = 456`.\\n\\nDan loggen we `a[b]`, waar eigenlijk `a[\\"object Object\\"]` staat. We overschrijven dat met `456`, en dit is ook wat gelogd wordt.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"We hebben een `setTimeout` functie en roepen het als eerste aan. Toch wordt het als laatste gelogd.\\n\\nDit komt doordat we in browsers niet alleen een runtime engine hebben, maar ook iets dat een `WebAPI` genoemd wordt. De `WebAPI` geeft ons een `setTimeout` functie, en bijvoorbeeld ook de DOM.\\n\\nNadat de _calback_ naar de WebAPI is gestuurd wordt de `setTimeout` functie zelf (niet de callback functie) van de stack gegooid.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nDan wordt `foo` uitgevoerd en `\\"First\\"` wordt gelogd.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` wordt van de stack gegooid en `baz` wordt uitgevoerd. `\\"Third\\"` wordt gelogd.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nDe WebAPI kan niet zomaar dingen toevoegen aan de stack. In plaats daarvan wordt de callback functie op de zogenaamde _queue_ gezet.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nDit is waar de event loop zijn intrede doet. Een ***event loop* naar de stack en de task queue. Als de stack leeg is pakt het het eerste ding op van de queue en zet het op de stack.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` wordt uitgevoerd, `\\"Second\\"` wordt gelogd, en het verdwijnt van de stack.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"Het diepst geneste element dat het event afvuurt is de target van het event. Je kunt bubbling stoppen met `event.stopPropagation`.","id":30,"options":["Buitenste `div`","Binnenste `div`","`button`","Een array van alle geneste elementen."],"question":"Wat is de event.target wanneer geklikt wordt op de knop?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"Als we op `p` klikken zien we twee logs: `p` en `div`. Tijdens de event propagation zijn er 3 fases: capturing, target, en bubbling. Standaard worden event handlers uitgevoerd in de bubbling fase (tenzij je `useCapture` op `true` zet). Bubbling begint bij het diepst geneste element omhoog.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Wat wordt er gelogd wanneer je op de paragraaf klikt?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  return `${this.name} is ${age}`;\\n}\\n\\nconsole.log(sayHi.call(person, 21));\\nconsole.log(sayHi.bind(person, 21));","codeLanguage":"javascript","explanation":"Op beide manieren kunnen we een object doorgeven waarnaar het `this` keyword verwijst. Echter, `.call` wordt _direct uitgevoerd_!\\n\\n`.bind` geeft een _kopie_ terug van de functie, maar met een bound context! Het wordt niet direct uitgevoerd!","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"De `sayHi` functie geeft de waarde terug van de direct aangeroepen functie (IIFE). Deze functie geeft `0` terug, die het type `number` heeft.\\n\\nFYI: er zijn slechts 7 ingebouwde types: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol` en `bigint`. `\\"function\\"` is geen type omdat functies objecten zijn, en dus van het type `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Er zijn slechts zes falsy waarden:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (lege string)\\n- `false`\\n\\nFunctie constructors, zoals `new Number` en `new Boolean`, zijn truthy.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","Ze zijn allemaal falsy"],"question":"Welke van deze waarden zijn falsy?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` geeft `\\"number\\"` terug.\\n`typeof \\"number\\"` geeft `\\"string\\"` terug.","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Wanneer je een element van een array een waarde geeft die buiten de lengte van de array ligt zal JavaScript voor de tussenliggende elementen zogenaamde \\"empty slots\\" aanmaken. Deze hebben eigenlijk de waarde `undefined`, maar je zult zoiets zien als:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\nafhankelijk van waar je de code uitvoert (het verschilt in alle browsers, node, etc.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"Het `catch` block krijgt het argument `x` mee. Dit is niet dezelfde `x` als de variabele zoals bovenaan gedefinieerd. De meegegeven `x` is block-scoped.\\n\\nLater vullen we deze block-scoped variabele met `1`, en zetten de waarde van de variabele `y`. Dan loggen we de block-scoped variabele `x`, die op dat moment `1` bevat.\\n\\nBuiten het `catch` block is de variable `x` nog steeds `undefined`, `y` is echter `2`. Wanneer we beide variabelen buiten de try...catch statement loggen zal `x` `undefined` teruggeven en `y` `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"Wat is de uitkomst?"},{"answer":0,"explanation":"JavaScript bestaat alleen uit primitieve types en objecten.\\n\\nPrimitieve types zijn `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, en `symbol`.\\n\\nWat primitieven onderscheidt van objecten is dat primitieven geen properties of methodes bevatten. Echter, je zal opmerken dan `\'foo\'.toUpperCase()` resulteert in `\'FOO\'` en geen `TypeError` gooit. Dit komt doordat wanneer je een propertie of een methode benadert van een primitieve zoals een string, JavaScript impliciet het object wrapped gebruikmakend van \xe9\xe9n van de wrapper classen, in dit geval `String`, en daarna direct de wrapper weghaalt als de expressie heeft geresulteerd in een waarde. Alle primitieven vertonen dit gedrag, met uitzondering van `null` en `undefined`.","id":38,"options":["primitieve of een object","functie of een object","lastige vraag! alleen objecten","nummer of een object"],"question":"Alles in JavaScript is of een..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` is onze initi\xeble waarde. Dit is de waarde waarmee we starten, en de waarde van de allereerste `acc`. Tijdens de eerste iteratie, `acc` is `[1, 2]` en `cur` is `[0, 1]`. Deze waarden concateneren we, wat resulteerd in `[1, 2, 0, 1]`.\\n\\nTijdens de volgende iteratie `acc` is `[1, 2, 0, 1]` en `cur` is `[2, 3]`. Deze worden wederom geconcateneerd en resulteerd in `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` is falsy. `!null` geeft `true` terug. `!true` geeft `false` terug.\\n\\n`\\"\\"` is falsy. `!\\"\\"` geeft `true` terug. `!true` geeft `false` terug.\\n\\n`1` is truthy. `!1` geeft `false` terug. `!false` geeft `true` terug.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Het geeft een uniek id terug. Dit id kan gebruikt worden om de interval te stoppen door het mee te geven aan de `clearInterval()` functie.","id":41,"options":["een uniek id","het aantal opgegeven milliseconden","de doorgegeven functie","`undefined`"],"question":"Wat geeft de `setInterval` methode terug in de browser?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"Een string is een iterable. The spread operator arrangeert elk karakter van een iterable naar \xe9\xe9n element.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"Wat geeft dit terug?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Reguliere functies kunnen niet worden gestopt halverwege na de aanroep. Echter, een generator functie kan wel \\"gestopt\\" worden halverwege, en later verder gaan waar ik gestopt is. Elke keer als een generator functie het keyword `yield` aantreft levert de functie de waarde op gespecificeerd achter `yield`. Let op dat een generator functie in dat geval niet de waarde _teruggeeft_, maar de waarde _oplevert_.\\n\\nEerst initialiseren we de generator functie met `i`, dat gelijk is aan `10`. We roepen de generator functie aan met de `next()` methode. De eerste keer dat we de generator functie aanroepen is `i` gelijk aan `10`. De eerste `yield` wordt aangetroffen: het levert de waarde op van `i`. De generator is nu \\"gepauzeerd\\" en `10` wordt gelogd.\\n\\nDan roepen we de functie nog een keer aan met de `next()` methode. Het gaat verder waar het eerder gebleven is, waarbij `i` nog steeds gelijk is aan `10`. Nu wordt de volgende `yield` aangetroffen, en levert `i * 2` op. `i` is gelijk aan `10`, dus het levert `10 * 2` op, wat gelijk is aan `20`. Het resultaat is dus `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 en 10, 20`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"Wanneer we meerdere promises meegeven aan de `Promise.race` methode zal het de _eerste_ promise resolven/rejecten. Aan de `setTimeout` methodes geven we een timer mee: 500ms voor de eerste promise (`firstPromise`) en 100ms voor de tweede promise (`secondPromise`). Dit betekent dat de `secondPromise` als eerste resolved met de waarde `\'two\'`. `res` bevat nu de waarde `\'two\'`, wat dus gelogd wordt.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"Wat geeft dit terug?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"Allereerst declareren we een variabele `person` met de waarde van een object met een propertie `name`.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nDan declareren we een variabele genaamd `members`. We vullen het eerste element van die array met de waarde van de variabele `person`. Objecten interacteren _by reference_. Wanneer je de ene referentie van een variabele toewijst aan een andere variabele, maak je een _kopie_ van die referentie (let op dat ze niet _dezelfde_ referentie hebben!).\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nDan zetten we de variabele `person` gelijk aan `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nWe passaen alleen de waarde aan van de `person` variabele en niet van het eerste element in de array, omdat dat element een andere referentie heeft (gekopieerd) naar dat object. Het eerste element behoudt nog steeds een referentie naar het eerste object. Wanneer we de array `members` loggen heeft het eerste element nog steeds de waarde van het object, wat dus gelogd wordt.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"Met een `for-in` loop kunnen we itereren over object keys, in dit geval `name` en `age`. Onder de motorkap zijn object keys strings (als het geen Symbols zijn). Bij elke iteratie is de waarde van `item` gelijk aan de huidige key waarover wordt ge\xeftereerd. Bj de eerste iteratie is `item` gelijk aan `name` en wordt gelogd. Bij de tweede iteratie is `item` gelijk aan `age` en wordt gelogd.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"Operator associativiteit is de volgorde waarin de compiler de expressies evalueerd, of van links naar recht of van rechts naar links. Dat gebeurt alleen als alle operators _dezelfde_ prioriteit hebben. In dit geval hebben we maar \xe9\xe9n type operator: `+`. In beginsel, de associativiteit is van links naar rechts.\\n\\n`3 + 4` wordt eerst ge\xebvalueerd. Dit levert het getal `7` op.\\n\\n`7 + \'5\'` resulteert in `\\"75\\"` door coersion. JavaScript converteert het getal `7` naar een string, zo ook te zien bij vraag 15. We kunnen twee stringen concateneren door gebruik te maken van de `+` operator. `\\"7\\" + \\"5\\"` resulteert in `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Alleen het eerste getal in de string wordt geretourneerd. Gebaseerd op de _radix_ (het tweede argument om te speciferen naar welk type nummer we het willen parsen: base 10, hexadecimal, octal, binary, etc.), de `parseInt` methode checkt of de karakters in de string geldig zijn. Zodra het een karakter tegenkomt dat niet een geldig getal is in het eerste argument stopt het parsen en worden opvolgende karakters genegeerd.\\n\\n`*` is geen geldig getal. Alleen `\\"7\\"` wordt geparsed naar een decimal `7`. `num` bevat nu de waarde `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"Wat is de waarde van `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Wanneer je iterate over een array gebruik makend van de `map()` methode is de waarde van `num` gelijk aan het huidige element dat verwerkt wordt. In dit geval zijn de elementen getallen en de conditie van de if statement `typeof num === \\"number\\"` geeft `true` terug. De `map()` methode maakt een nieuwe array aan met als inhoud het resultaat van het aanroepen van de meegegeven functie op elk van de elementen uit de originele array.\\n\\nEchter geven wij nooit een waarde terug. Wanneer we geen waarde toevoegen in de functie zal de functie `undefined` teruggeven. De functie wordt voor elk element in de originele array aangeroepen en voor elk element geven we `undefined` terug.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Argumenten worden meegegeven _by value_, tenzij de waarde een object is. Dan worden ze meegegeven _by reference_. `birthYear` is een string en geen object, waardoor het dus doorgegeven wordt _by value_. Wanneer we een argument meegeven _by value_ wordt er een _copy_ aangemaakt van het argument (zie vraag 46).\\n\\nDe variabele `birthYear` heeft een referentie naar de waarde `\\"1997\\"`. Het argument `year` heeft ook een referentie naar de waarde \'\\"1997\\"\', maar het is niet dezelfde waarde als waar `birthYear` een referentie naar heeft. Wanneer we de waarde van `year` veranderen naar `\\"1998\\"`, veranderen we alleen de waarde van `year`. `birthYear` is nog steeds gelijk aan `\\"1997\\"`.\\n\\nDe waarde van `person` is een object. Het argument `member` heeft een (gekopieerde) referentie naar _hetzelfde_ object. Wanneer we een propertie veranderen van het object waar `member` een referentie naartoe heeft zal de waarde van `person` ook veranderen, omdat beide een referentie hebben naar hetzelfde object. De propertie `name` van `person` is nu gelijk aan `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error:\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Met de `throw` statement kunnen we custom errors gooien. Een exceptie kan een <b>string</b>, een <b>number</b>, een <b>boolean</b> of een <b>object</b> zijn. In dit geval onze exceptie is aan string met de waarde `\'Hello world\'`.\\n\\nMet de `catch` statement kunnen we specificeren wat er moet gebeuren als er een exceptie is gegooid in het `try` blok. Een exceptie is gegooid: de string `\'Hello world\'`. `e` is nu gelijk aan deze string en wordt dus gelogd. Dat resulteert in `\'Oh an error: Hello world\'`.","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Wanneer je een propertie teruggeeft zal de waarde van de propertie gelijk zijn aan de _geretourneerde_ waarde, niet de waarde die gezet wordt in de constructor. We geven de string `\\"Maserati\\"` terug, dus `myCar.make` is gelijk aan `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` is een verkorte versie van:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nWanneer we de waarde van `y` vullen met `10` voegen we eigenlijk een propertie `y` toe aan het globale object (`window` in de browser, `global` in Node). In de browser is `window.y` nu gelijk aan `10`.\\n\\nDaarna declareren we de variabele `x` met de waarde van `y`, wat 10 is. Variabelen die gedeclareerd worden met het keyword `let` zijn _block scoped_, ze zijn alleen gedefinieerd binnen het blok waarin ze gedeclareerd zijn. In dit geval de direct aangeroepen functie (IIFE). Wanneer we de operator `typeof` gebruiken is `x` dus niet gedefinieerd; we proberen `x` te benaderen buiten de scope waarin het gedeclareerd is. Dat betekent dat `x` niet gedefinieerd is. variabelen die nog geen waarde toegewezen hebben gekregen zijn van het type `\\"undefined\\"`. `console.log(typeof x)` geeft `\\"undefined\\"` terug.\\n\\nEchter, we hebben een globale variabele `y` aangemaakt toen we \'y\' vulde met `10`. Deze waarde is overal toegankelijk in onze code. `y` is gedefinieerd en bevat de waarde `\\"number\\"`. `console.log(typeof y)` geeft `\\"number\\"` terug.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"We kunnen properties verwijderen van een object als we gebruik maken van het `delete` keyword, en ook op het prototype. Bij het verwijderen van een propertie op de prototype zal het niet meer beschikbaar zijn in de prototype chain. In dit geval is de `bark()` methode niet meer beschikbaar op de protoype na `delete Dog.prototype.bark`. \\n\\nWanneer we iets proberen aan te roepen dat geen functie is zal er een `TypeError` gegooid worden. In dit geval `TypeError: pet.bark is not a function`, omdat `pet.bark` `undefined` is.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"Het `Set` object is een collectie van _unieke_ waarden: een waarde kan maar \xe9\xe9n keer voorkomen in een set.\\n\\nWe geven de array `[1, 1, 2, 3, 4]` mee met de dubbele waarde `1`. Omdat we niet twee keer dezelfde waarde kunnen hebben in een set zal \xe9\xe9n van deze dubbele waarden verwijderd worden. Dit resulteert in `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"Een ge\xefmporteerde module is _readonly_: je kunt de ge\xefmporteerde module niet aanpassen. Alleen de module die de exports doet kan de waarde aanpassen.\\n\\nWanneer we de waarde van `myCounter` aanpassen zal dit een error gooien: `myCounter` is read-only en cannot be modified.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"De `delete` operatot geeft een boolean waarde terug: `true` bij een succesvolle verwijdering, anders zal het `false` teruggeven. Echter, variabelen die gedeclareerd worden met de keywords `var`, `const` en `let` kunnen niet verwijderd worden met de `delete` operator.\\n\\nDe variabele `name` werd gedeclareerd met het keyword `const`, dus het verwijderen is niet succesvol: `false` wordt teruggegeven. Wanneer we `age` de waarde `21` geven voegen we eigenlijk een propertie `age` toe aan het globale object. Properties van objecten kunnen prima verwijderd worden op deze manier, ook van het globale object, dus `delete age` geeft `true` terug.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"We kunnen waarden van arrays en objecten uitpakken door `destructuring`. Voorbeeld:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nDe waarde van `a` is nu `1` en de waarde van `b` is nu `2`. Wat we dus eigenlijk deden in de vraag is:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nDat betekent dat de waarde van `y` gelijk is aan de eerste waarde van de array, het getal `1`. Wanneer we `y` loggen, geeft dit `1` terug.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"Het is mogelijk om objecten samen te voegen door gebruik te maken van de spread operator `...`. Het geeft je de mogelijkheid om key/value pairs van het ene object te kopi\xebren naar een ander object. In dit geval maken we een kopie van het `user` object en voegen het samen met het `admin` object. Het `admin` object bevat nu de gekopieerde key/value pairs, wat resulteert in `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"Met de `defineProperty` methode kunnen we properties toevoegen aan een object, of bestaande properties aanpassen. Wanneer we properties toevoegen aan een object door gebruik te maken van `defineProperty` zijn deze standaard _not enumerable_. De `Object.keys` methode geeft alle _enumerable_ propertie namen terug van een object, in dit geval alleen `\\"name\\"`. \\n\\nProperties toegevoegd met de `defineProperty` methode zijn standaard onveranderbaar. Je kunt dit gedrag aanpassen door, in het derde argument, de `writable`, `configurable` en `enumerable` opties mee te geven. Op die manier geeft de `defineProperties` je veel controle over de properties die je wilt toevoegen aan een object.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Het tweede argument van `JSON.stringify` is de _replacer_. De replacer kan \xf3f een functie zijn \xf3f een array, en geeft je controle over wat en hoe de waarden gestringified worden.\\n\\nAls de replacer een _array_ is zullen alleen de propertie namen die in de array zitten toegevoegd worden aan de JSON string. In dit geval worden alleen de properties `\\"level\\"` en `\\"health\\"` toegevoegd, `\\"username\\"` niet. `data` is nu gelijk aan `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nAls de replacer een _functie_ is zal die functie worden aangeroepen over elke propertie in het object dat je omzet naar een string. De waarde die teruggegeven wordt door die functie zal de waarde zijn van die propertie wanneer het wordt toegevoegd aan de JSON string. Als de waarde `undefined` is zal de property niet worden toegevoegd aan de JSON string.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"De unary operator `++` geeft eerst de waarde van de variabele terug, en pas daarna de waarde verhogen van de variabele. De waarde van `num1` is `10` omdat de `increaseNumber` functie eerst de waarde van `num` teruggeeft, wat `10` is, en pas daarna de waarde van `num` verhogen met 1.\\n\\n`num2` is `10` omdat we `num1` meegeven aan de functie `increasePassedNumber`. `number` is gelijk aan `10` (de waarde van ` num1`). Nogmaals, de unary operator `++` zal _eerst_ de huidige waarde van de variabele teruggeven en pas _daarna_ de waarde verhogen. De waarde van `number` is `10`, dus de waarde van `num2` is ook `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"In ES6 kunnen we parameters initialiseren met een standaard waarde. De waarde van de parameter zal deze standaard waarde behouden zolang er geen andere waarde wordt meegegeven aan de functie, of als de waarde van de parameter `\\"undefined\\"` is. In dit geval kopi\xebren we de properties van het `value` object\\nnaar een nieuw object gebruikmakend van de spread operator, dus `x` heeft de standaard waarde `{ number: 10 }`.\\n\\nDe standaard waarde wordt ge\xebvalueerd tijdens _call time_ (aanroeptijd)! Elke keer wanneer we de functie aanroepen wordt er een nieuw object aangemaakt. We roepen de `multiply` functie de eerste twee keer aan zonder een waarde mee te geven: `x` heeft de standaard waarde van `{ number: 10 }`. We loggen dan de vermenigvuldigde waarde van dat getal, wat `20` is. \\n\\nDe derde keer dat we de functie `multiply` aanroepen geven we wel een waarde mee: het object genaamd `value`. De `*=` operator is eigenlijk een verkorting van `x.number = x.number * 2`: we passen de waarde van `x.number` aan en loggen de vermenigvuldigde waarde `20`.\\n\\nDe vierde keer geven we weer het `value` object mee. `x.number` was al aangepast naar `20`, en `x.number *= 2` logt `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"Het eerste argument van de `reduce` methode is de _accumulator_, in dit geval `x`. Het tweede argument is de _huidige waarde_, `y`. Met de `reduce` methode voeren we een functie uit op elk element in de array, wat uiteindelijk zal resulteren in een enkele waarde.\\n\\nIn dit voorbeeld geven we geen waarde terug. We loggen enkel the waarden van de accumulator en de huidige waarde.\\n\\nDe waarde van de accumulator is gelijk aan de vorige teruggegeven waarde van de callback functie. Als je niet de optionele `initialValue` meegeeft aan de `reduce` methode, de accumulator is gelijk aan het eerste element tijdens de eerste aanroep. \\n\\nTijdens de eerste aanroep is de accumulator (`x`) `1` en de huidige waarde (`y`) `2`. We geven niets terug in de callback function, we loggen de accumulator en de huidige waarde: `1` en `2` worden gelogd.\\n\\nAls je niets teruggeeft in een functie, zal de functie `undefined` teruggeven. Tijdens de volgende aanroep is de accumulator `undefined` en de huidige waarde `3`. `undefined` en `3` worden gelogt. \\n\\nTijdens de vierde aanroep geven we wederom niets terug in de callback functie. De accumulator is wederom `undefined`, en de huidige waarde `4`. `undefined` en `4` worden gelogt.","id":64,"options":["`1` `2` en `3` `3` en `6` `4`","`1` `2` en `2` `3` en `3` `4`","`1` `undefined` en `2` `undefined` en `3` `undefined` en `4` `undefined`","`1` `2` en `undefined` `3` en `undefined` `4`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"In de afgeleide class kun je het `this` keyword niet benaderen totdat je `super` hebt aangeroepen. Als je toch probeert zal dit een _ReferenceError_ gegooid worden: 1 en 4 zouden een reference error gooien.\\n\\nMet het `super` keyword roepen we de parent class zijn contructor aan met het meegegeven argument. De parent class\' contructor verwacht het argument `name`, dus we moeten `name` meegeven aan `super`.\\n\\nDe `Labrador` class verwacht twee argumenten, `name` omdat het een afgeleide is van `Dog`, en `size` als een propertie van de `Labrador` class zelf. Ze zullen allebei meegegeven moeten worden aan de contructor van `Labrador`, wat op de juiste manier gebeurt bij constructor 2.","id":65,"options":["1","2","3","4"],"question":"Met welke constructor kunnen we succesvol de `Dog` class extenden?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"Met het `import` keyword worden alle ge\xefmporteerde modules _pre-parsed_. Dat betekent dat de ge\xefmporteerde modules _als eerste_ uitgevoerd zal worden en de code waarin de module ge\xefmporteerde wordt _als tweede_.\\n\\nDit is een verschil tussen `require()` in CommonJS en `import`! Met `require()` kun je dependencies inladen tijdens dat de code uitgevoerd wordt. Als we `require` gebruikt hadden in plaats van `import` zou er `running index.js`, `running sum.js`, `3` gelogt worden in het console.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"Elk Symbol is volledig uniek. Het doel van het argument dat meegegeven wordt aan de Symbol is om de Symbol een omschrijving te geven. De waarde van de Symbol is niet afhankelijk van het doorgegeven argument. Als we de waarden vergelijken cre\xeberen we compleet nieuwe Symbols: de eerste `Symbol(\'foo\')` en de tweede `Symbol(\'foo\')`. Deze twee waarden zijn uniek en niet gelijk aan elkaar, `Symbol(\'foo\') === Symbol(\'foo\')` geeft `false` terug.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"Met de `padStart` methode kunnen we witruimte toevoegen aan het begin van de string. De waarde die meegegeven wordt aan de methode is de _totale_ lengte van de string, samen met de witruimte. De string `\\"Lydia Hallie\\"` heeft een lengte van `13`. `name.padStart(13)` plaatst 1 spatie toe aan het begin van de string omdat 12 + 1 = 13. \\n\\nAls het argument dat we meegeven aan de `padStart` methode kleiner is dan de lengte van de string zullen er geen spaties worden toegevoegd.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"Met de `+` operator kun je strings concateneren. In dit geval concateneren we de string `\\"\ud83e\udd51\\"` met de string `\\"\ud83d\udcbb\\"`, wat `\\"\ud83e\udd51\ud83d\udcbb\\"` oplevert.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","Een string die hun code points bevat","Error"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"Een generator functie \\"pauzeert\\" tijdens de uitvoering wanneer het het keyword `yield` tegenkomt. Allereerst laten we de functie de string \\"Do you love JavaScript?\\" opleveren. Dat kunnen we doen door `game.next().value` te gebruiken.\\n\\nElke lijn van de functie wordt uitgevoerd totaan het eerste `yield` keyword. Er is een `yield` aanwezig op de eerste lijn van de functie: de uitvoering stopt bij de eerste `yield`! _Dat betekent dat de variabele `answer` nog niet gedefinieerd is!_\\n\\nWanneer we `game.next(\\"Yes\\").value` aanroepen wordt de vorige `yield` vervangen met de waarde van de parameters die zijn meegegeven aan de `next()` functie, `\\"Yes\\"` in dit geval. De waarde van de variabele `answer` is nu gelijk aan `\\"Yes\\"`. De conditie van de if-statement geeft `false` terug en `JavaScript loves you back \u2764\ufe0f` wordt gelogd.","id":70,"options":["`game.next(\\"Yes\\").value` en `game.next().value`","`game.next.value(\\"Yes\\")` en `game.next.value()`","`game.next().value` en `game.next(\\"Yes\\").value`","`game.next.value()` en `game.next.value(\\"Yes\\")`"],"question":"Hoe kunnen we de waarden loggen die uitgecommentarieerd zijn achter de console.log statement?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` geeft een string terug waarbij de escapes (`\\n`, `\\u000b`, `\\t` etc.) genegeerd worden! Backslashes kunnen een probleem zijn omdat je kunt eindigen met zoiets als:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nWat resulteert in:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nMet `String.raw` worden de escapes simpelweg genegeerd:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nIn dit geval wordt `Hello\\nworld` gelogd.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Een asynchrone functie geeft altijd een promise terug. De `await` moet nog steeds wachten op de oplossing van de promise: een wachtende promise wordt teruggegeven wanneer we `getData()` aanroepen om daarmee `data` te vullen.\\n\\nAls we de teruggegeven waarde van de promise `\\"I made it\\"` willen benaderen zouden we de `then()` method kunnen gebruiken op `data`:\\n\\n`data.then(res => console.log(res))`\\n\\nDit zou wel `\\"I made it!\\"` loggen.","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"De `push()` methode geeft de _Lengte_ terug van de nieuwe array! In eerste instantie bevatte de array \xe9\xe9n element (de string `\\"banana\\"`) en had een lengte van `1`. Nadat de string `\\"apple\\"` toegevoegd wordt aan de array bevat de array twee elementen en heeft een lengte van `2`. Dit wordt dan ook teruggegeven door de `addToList` functie.\\n\\nDe `push()` methode past de originele array aan. Als je de _array_ zelf terug zou willen geven in plaats van de _lengte van de array_ zou je de `list` moeten teruggeven nadat de `item` toegevoegd is.","id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` maakt het onmogelijk om properties van een object toe te voegen, te verwijderen of aan te passen (tenzij de waarde van de propertie zelf een object is).\\n\\nWanneer we de variabele `shape` aanmaken en hieraan het bevroren object `box` toewijzen zal de referentie naar het bevroren object blijven bestaan. Je kunt checken of een object bevroren is door `Object.isFrozen` te gebruiken. In dit geval geeft `Object.isFrozen(shape)` true terug omdat de referentie naar het bevroren object `box` is blijven bestaan.\\n\\nOmdat `shape` bevroren is en omdat de waarde van `x` geen object is kunnen we de propertie `x` niet aanpassen. `x` is nog steeds gelijk aan `10` en `{ x: 10, y: 20 }` wordt gelogd.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"Wanneer we de propertie `name` opvragen van het object aan de rechterkant wijzen we de waarde `\\"Lydia\\"` toe aan de variabele met de naam `myName`.\\n\\nMet `{ name: myName }` zeggen we in JavaScript dat we een nieuwe variabele aan willen maken met de naam `myName` met de waarde van de `name` propertie van het object aan de rechterkant.\\n\\nOmdat we proberen `name` te loggen, een variabele die niet gedefinieerd is, wordt er een ReferenceError gegooid.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"Een `pure function` is een functie die _altijd_ dezelfde waarde teruggeeft, zolang hetzelfde argument wordt meegegeven.\\n\\nDe `sum` functie geeft altijd dezelfde waarde terug. Als we `1` en `2` meegeven zal het _altijd_ `3` teruggeven. Als we de waarde `5` en `10` meegeven zal het _altijd_ `15` teruggeven. Dit is de definitie van een `pure function`.","id":76,"options":["Ja","Nee"],"question":"Is dit een pure function?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"De `add` functie is een _memoized_ functie. Met memoization kunnen we het resultaat van een functie cachen om de uitvoering ervan te versnellen. In dit geval maken we een `cache` object aan waarin we de waarde van dat de vorige keer werd teruggegeven opslaan.\\n\\nAls we de functie `addFunction` aanroepen met hetzelfde argument wordt eerst gecheckt of de waarde al in de cache voorkomt. Als dat het geval is wordt de opgeslagen waarde teruggegeven, waardoor de functie niet helemaal hoeft te worden uitgevoerd. Anders, als de waarde nog niet is opgeslagen in de cache, zal het de waarde berekenen en daarna opslaan in de cache.\\n\\nWe roepen de functie `addFunction` drie keer aan met dezelfde waarde: Tijdens de eerste aanroep is de waarde van de functie `num` wanneer het gelijk is aan `10` nog niet opgslagen in de cache. De conditie van de if-statement `num in cache` geeft `false` terug waardoor we in de else-statement komen: `Calculated! 20` wordt gelogd en de waarde van het resultaat wordt opgeslagen in het cache object. `cache` ziet er nu uit als `{ 10: 20 }`.\\n\\nDe tweede keer bevat het object `cache` de waarde dat teruggegeven wordt wanneer `10` wordt meegegeven. De conditie van de if-statement `num in cache` geeft `true` terug en `\'From cache! 20\'` wordt gelogd.\\n\\nDe derde keer geven we `5 * 2` mee aan de functie wat `10` oplevert. Het `cache` object bevat de waarde dat teruggegeven gaat worden voor `10`. De conditie van de if-statement `num in cache` geeft `true` terug en `\'From cache! 20\'` wordt gelogd.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item)\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item)\\n}","codeLanguage":"javascript","explanation":"Met de _for-in_ loop kunnen we itereren over de **enumerable** properties. In een array zijn de \\"keys\\" van de array elementen enumarable, wat eigenlijk hun indexen zijn. Je kunt een array zien als:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\nWaar de keys de enumarable properties zijn. `0` `1` `2` `3` worden gelogd.\\n\\nMet de _for-of_ loop kunnen we itereren over **iterables**. Een array is een iterable. Wanneer we itereren over een array is de waarde van de variabele \\"item\\" gelijk aan het huidige element, `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` wordt gelogd.","id":78,"options":["`0` `1` `2` `3` en `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` en `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` en `0` `1` `2` `3`","`0` `1` `2` `3` en `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"Array elementen kunnen elke waarde bevatten. Nummers, strings, objecten, andere arrays, null, boolean waarden, undefined en andere expressies zoals datums, functies en berekeningen. \\n\\nHet element zal gelijk zijn aan de teruggegeven waarde. `1 + 2` geeft `3` terug, `1 * 2` geeft `2` terug en `1 / 2` geeft `0.5` terug.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"Argumenten hebben standaard de waarde `undefined`, tenzij de waarde wordt meegegeven aan de functie. In dit geval hebben we geen waarde meegegeven voor het argument `name`. `name` is gelijk aan `undefined` wat gelogd wordt.\\n\\nIn ES6 kunnen we argumenten een standaard waarde geven. Als voorbeeld:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nIn dit geval zal de waarde van het argument `name`, als we geen waarde meegeven aan de functie, standaard `Lydia` bevatten.","id":80,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"De waarde van het keyword `this` hangt af van in welke scope je het gebruikt. In een **methode**, zoals de `getStatus` methode, het `this` keyword verwijst naar _het object waartoe de methode behoort_. De methode behoort toe aan het `data` object, dus `this` verwijst naar het `data` object. Wanneer we `this.status` loggen wordt de `status` propertie van het `data` object gelogd, wat `\\"\ud83e\udd51\\"` is.\\n\\nMet de `call` methode kunnen we het object veranderen waarnaar het keyword `this` verwijst. In **functies** refereert het keyword `this` naar _het object waartoe de function behoort_. We declareren de `setTimeout` functie op het _globale object_, dus binnen de `setTimeout` functie refereert het keyword `this` naar het _globale object_. Op het globale object bestaat de variabele genaamd _status_ met de waarde `\\"\ud83d\ude0e\\"`. Wanneer we `this.status` loggen wordt `\\"\ud83d\ude0e\\"` gelogd.","id":81,"options":["`\\"\ud83e\udd51\\"` en `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` en `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` en `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` en `\\"\ud83d\ude0e\\"`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"We vullen de variabele `city` met de waarde van de propertie `city` op het object `person`. Er is echter geen propertie `city` op dit object, dus de variabele `city` krijgt de waarde `undefined`.\\n\\nLet op dat we _niet_ refereren naar het object `person` zelf! We vullen de waarde van de variabele `city` enkel met de waarde van de propertie `city` op het `person` object.\\n\\nDaarna zetten we de waarde van `city` gelijk aan de string `\\"Amsterdam\\"`. Dit verandert niets aan het object `person`: we hebben geen referentie naar dat object.\\n\\nWanneer we het object `person` loggen, wordt het onaangepaste object gelogd.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"Variabelen gedeclareerd met de keywords `const` en `let` zijn _block-scoped_. Een block is alles tussen accolades (`{ }`). In dit geval de accolades van de if/else statements. Je kunt niet refereren naar een variabele buiten het block waarin het gedeclareerd is. Een ReferenceError wordt gegooid.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"De waarde van `res` in de tweede `.then` is gelijk aan de geretourneerde waarde in de vorige `.then`. Je kunt `.then`s zoals dit blijven `chainen`, waarbij de waarde wordt meegegeven aan de volgende `handler`.","id":84,"options":["Het resultaat van de `fetch` methode.","Het resultaat van de tweede aanroep van de `fetch` methode.","Het resultaat van de callback in de vorige `.then()`.","Het zal altijd undefined zijn."],"question":"Welke informatie zal worden gelogd?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"Met `!!name` stellen we vast of de waarde van `name` truthy of falsy is. Als `name` truthy is, dit is wat we willen testen, zal `!name` `false` teruggeven. `!false` (wat `!!name` feitelijk is) geeft `true` terug.\\n\\nWanneer we `hasName` vullen met `name`, vullen we het met dat wat we meegeven aan de `getName` functie, niet de boolean waarde `true`. \\n\\n`new Boolean(true)` geeft een object wrapper terug, niet de boolean waarde zelf.\\n\\n`name.length` geeft de lengte terug van de meegegeven waarde, niet of het `true` is.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"Welke optie is een manier om `hasName` te vullen met de boolean waarde `true`, terwijl je geen `true` mee kan geven als argument?"},{"answer":1,"code":"console.log(\\"I want pizza\\"[0])","codeLanguage":"javascript","explanation":"Om een karakter van een string op een specifieke index te krijgen kun je blokhaken gebruiken. Het eerste karakter in de string heeft de index 0. In dit geval willen we het element hebben met de index 0, het karakter `\\"I\\"`, wat gelogd wordt.\\n\\nLet op dat deze methode niet ondersteund wordt in IE7 en daaronder. In dat geval maak je gebruik van `.charAt()`.","id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"Je kunt een parameters standaard waarde gelijk zetten aan een andere parameter van diezelfde functie, zolang deze definieerd is _voor_ de parameter met een standaard waarde. We geen de waarde `10` mee aan de `sum` functie. Als de `sum` functie maar \xe9\xe9n argument meekrijgt betekent dit dat de waarde van `num2` gevuld wordt met de waarde van `num1`. `10` in dit geval. De standaard waarde van `num2` is de waarde van `num1`, wat `10` is. `num1 + num2` geeft `20` terug.\\n\\nAls je probeert de standaard waarde van een parameter te vullen met de waarde van een parameter welke gedefinieerd is _na_ de standaard parameter, dan is de parameter nog niet ge\xefnitialiseerd  en wordt er een error gegooid.","id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"Met de `import * as name` syntax importeren we _alle exports_ van `module.js` bestand in het bestand `index.js` als een nieuw object met de naam `data`. In het bestand `module.js` zijn er twee exports: de standaard export en de benoemde export. De standaard export is een functie dat de string `\\"Hello world\\"` teruggeeft, en de benoemde export is de variabele `name` wat de waarde van de string `\\"Lydia\\"` bevat.\\n\\nHet object `data` bevat een propertie `default` voor de standaard export. Andere properties hebben de naam van de benoemde exports en hun corresponderende waarden.","id":88,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Globale object of `module.js`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"Classes zijn een syntactisch sausje voor functie constructors. Het equivalent van de class `Person` als een functie constructor zou zijn:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\nHet aanroepen van de functie contructor met `new` resulteert in het cre\xeberen van een instantie van `Person`. Het keyword `typeof` geeft voor een instantie `\\"object\\"` terug. `typeof member` geeft `\\"object\\"` terug.","id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"De `.push` methode retourneert de _nieuwe lengte_ van de array, niet de array zelf! Door `newList` te vullen met `[1, 2, 3].push(4)`, zetten we `newList` gelijk aan de nieuwe lengte van de array: `4`.\\n\\nDan gebruiken we de `.push` methode op `newList`. Omdat `newList` nu de numerieke waarde `4` bevat, kunnen we de `.push` methode niet gebruiker: een TypeError wordt gegooid.","id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"Reguliere functies zoals de `giveLydiaPizza` functie hebben een `prototype` propertie, wat een object is (prototype object) met een `constructor` propertie. Arrow functies zoals de `giveLydiaChocolate` functie hebben geen `prototype` functie. `undefined` wordt geretourneerd wanneer we proberen om de `prototype` propertie te benaderen door gebruik te maken van `giveLydiaChocolate.prototype`.","id":91,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` retourneert een array van geneste arrays, welke de keys en objecten bevat:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]` \\n\\nGebruikmakend van de `for-of` loop kunnen we itereren over elk element in de array, de subarrays in dit geval. We kunnen de subarrays direct destructureren door `const [x, y]` te gebruiken. `x` is gelijk aan het eerste element in de subarray, `y` is gelijk aan het tweede element in de subarray.\\n\\nDe eerste subarray wat wordt gelogd is `[ \\"name\\", \\"Lydia\\" ]`, waarbij `x` gelijk is aan `\\"name\\"` en `y` gelijk is aan `\\"Lydia\\"`. \\nDe tweede subarray wat wordt gelogd is `[ \\"age\\", \\"21\\" ]`, waarbij `x` gelijk is aan `\\"age\\"` en `y` gelijk is aan `\\"21\\"`.","id":92,"options":["`name` `Lydia` en `age` `21`","`[\\"name\\", \\"Lydia\\"]` en `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` en `undefined`","`Error`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` is een rest parameter. De waarde van een rest parameter is een array die alle overgebleven argumenten bevat, en om die reden **alleen de laatste parameter kan zijn**! In dit voorbeeld is de rest parameter niet de laatste parameter, wat niet mogelijk is. Er wordt een syntax error gegooid.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nHet bovenstaande voorbeeld werkt. Dit geeft de array `[ \'banana\', \'apple\', \'orange\', \'pear\' ]` terug.","id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function nums(a, b) {\\n  if\\n  (a > b)\\n  console.log(\'a is bigger\')\\n  else \\n  console.log(\'b is bigger\')\\n  return \\n  a + b\\n}\\n\\nconsole.log(nums(4, 2))\\nconsole.log(nums(1, 2))","codeLanguage":"javascript","explanation":"In JavaScript _hoeven_ we geen puntkomma\'s te schrijven, alhoewel de JavaScript engine ze toch zal toevoegen na statements. Dit wordt **Automatic Semicolon Insertion** genoemd. Een statement kan bijvoorbeeld een variabele zijn of een keyword zoals `throw`, `return`, `break`, etc.\\n\\nHier schreven we een `return` statement en op de _nieuwe regel_ `a + b`. Maar omdat het een nieuwe regel betreft weet de engine niet wat we eigenlijk wilde retourneren. In plaats daarvan wordt er na `return` automatisch een puntkomma toegevoegd. Je kunt dit zien als:\\n\\n```javascript\\n  return;\\n  a + b\\n```\\n\\nDat betekent dat `a + b` nooit bereikt zal worden, omdat de functie stopt na het keyword `return`. Als er geen waarde wordt geretourneerd, zoals nu, zal de functie `undefined` teruggeven. Let op dat er geen automatisch insertion plaatsvindt na `if/else` statements!","id":94,"options":["`a is bigger`, `6` en `b is bigger`, `3`","`a is bigger`, `undefined` en `b is bigger`, `undefined`","`undefined` en `undefined`","`SyntaxError`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"We kunnen classes gelijk zetten tot andere classes/functie constructors. In dit geval zettten we `Person` gelijk aan `AnotherPerson`. De naam op deze constructor is `Sarah`, dus de propertie naam van de nieuwe `Person` instantie `member` is `\\"Sarah\\"`.","id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"Een Symbol is geen _enumerable_. De Object.keys methode retourneert alle _enumerable_ key properties van een object. De Symbol zal niet zichtbaar zijn en een lege array zal geretourneerd worden. Wanneer we het hele object loggen zullen alle properties zichtbaar zijn, zelfs de niet enumarables.\\n\\nDit is \xe9\xe9n van de goeie eigenschappen van een Symbol: naast dat het een compleet unieke waarde representeert (wat voorkomt dat namen op objecten per ongeluk conflecteren, bijvoorbeeld wanneer je werkt met 2 libraries die properties willen toevoegen aan \xe9\xe9n en hetzelfde object) kun je properties op objecten op deze manier ook verbergen (natuurlijk niet compleet verbergen. Je kunt de Symbolen altijd benaderen gebruikmakend van de `Object.getOwnPropertySymbols()` methode).","id":96,"options":["`{Symbol(\'a\'): \'b\'}` en `[\\"{Symbol(\'a\')\\"]`","`{}` en `[]`","`{ a: \\"b\\" }` en `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` en `[]`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"De `getList` functie ontvangt een array als argument. Tussen de haakjes van de `getList` functie destructureren we deze array direct. Je kunt het zien als:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\nMet de rest parameter `...y` stoppen we alle \\"overgebleven\\" argumenten in een array. De overgebleven argumenten zijn in dit geval `2`, `3` en `4`. De waarde van `y` is een array die alle rest parameters bevat. De waarde van `x` is gelijk aan `1` in dit geval, dus wanneer we `[x, y]` loggen wordt `[1, [2, 3, 4]]` gelogd.\\n \\nDe `getUser` functie ontvangt een object. Met arrow functies _hoeven_ we geen accolades te gebruiken als we maar \xe9\xe9n waarde willen retourneren. Echter, als je een _object_ wilt retourneren in een arraow functie zal je het tussen haakjes moeten schrijven. Anders zal er geen waarde geretourneerd worden! De volgende functie zal wel een object geretourneerd hebben:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\nOmdat er geen waarde geretourneerd wordt in dit geval zal de functie `undefined` retourneren.","id":97,"options":["`[1, [2, 3, 4]]` en `undefined`","`[1, [2, 3, 4]]` en `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` en `{ name: \\"Lydia\\", age: 21 }`","`Error` en `{ name: \\"Lydia\\", age: 21 }`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"De variabele `name` bevat de waarde van een string wat geen functie is, en dus niet aangeroepen kan worden.\\n\\nTypeErrors worden gegooid als een waarde niet van het verwachtte type is. JavaScript verwacht dat `name` een functie is omdat we het proberen aan te roepen. Omdat het een string is zal er een TypeError gegooid worden: `name` is geen functie!\\n\\nSyntaxErrors worden gegooid wanneer je iets hebt geschreven wat geen valide JavaScript is. Als je bijvoorbeeld het woord `return` als `retrun` hebt geschreven.\\nReferenceErrors worden gegooid wanneer JavaScript niet in staat is een referentie te vinden naar een waarde die je probeert te beanderen.","id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` is een truthy waarde. Met de `&&` operator wordt de rechter waarde geretourneerd wanneer de linker waarde een truthy waarde bevat. In dit geval is de linker waarde `[]` een truthy waarde, daarom wordt `\\"Im\'` geretourneerd.\\n\\n`\\"\\"` is een falsy waarde. Als de linker waarde falsy is wordt er niets geretourneerd. `n\'t` wordt niet geretourneerd.","id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"Wat is de waarde van output?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"Met de `||` (or) operator kunnen we de eerste truthy waarde retourneren. Als alle waarden falsy zijn wordt de laatste waarde geretourneerd.\\n\\n`(false || {} || null)`: het lege object `{}` is een truthy waarde. Dit is de eerste (en enige) truthy waarde en zal worden geretourneerd. `one` is gelijk aan `{}`.\\n\\n`(null || false || \\"\\")`: alle waarden zijn falsy waarden. Dit betekent dat de laatste waarde, `\\"\\"`, wordt geretourneerd. `two` is gelijk aan `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: de lege array `[]` is een truthy waarde. Dit is de eerste truthy waarde en wordt geretourneerd. `three` is gelijk aan `[]`.","id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"Wat is de waarde van output?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"Met een promise zeggen we eigenlijk _Ik wil deze functie uitvoeren, maar voor nu zet ik hem even weg omdat de uitvoer even kan duren. Alleen wanneer een bepaalde waarde is opgelost (of afgewezen), en wanneer de call stack leeg is, wil ik deze waarde gebruiken._\\n\\nWe kunnen deze waarde verkrijgen met `.then` en het keyword `await` is een `async` function. Ook al kunnen we de teruggegeven waarde verkrijgen met zowel `.then` als `await`, toch werken ze allebei anders.\\n\\nIn de functie `firstFunction` zetten we de myPromise functie (soort van) even aan de kant terwijl het wordt uitgevoerd en voeren we de rest van de code uit, wat `console.log(\'second\')` is in dit geval. Daarna wordt de promise opgelost en zal de string `I have resolved` worden geretourneerd, wat gelogd zal worden nadat het zag dat de callstack leeg was.\\n\\nMet de keyword `await` in de functie `secondFunction` pauzeren we letterlijk de executie van een async functie totdat de promise is opgelost voordat de rest van de functie wordt uitgevoerd.\\n\\nDit betekent dat het wacht tot de `myPromise` is opgelost met de waarde `I have resolved`, en alleen als dat gebeurt gaan we naar de volgende regel: `second` wordt gelogd.","id":101,"options":["`I have resolved!`, `second` en `I have resolved!`, `second`","`second`, `I have resolved!` en `second`, `I have resolved!`","`I have resolved!`, `second` en `second`, `I have resolved!`","`second`, `I have resolved!` en `I have resolved!`, `second`"],"question":"Wat is de waarde van output?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"De `+` operator wordt niet alleen gebruikt voor het optellen van numerieke waarden, maar wordt ook gebruikt om strings te concateneren. Zodra de JavaScript engine ziet dat \xe9\xe9n van de waarden niet een numerieke waarde bevat, wordt het getal omgezet naar een string.\\n\\nDe eerste is een `1`, wat een numerieke waarde is. `1 + 2` retourneert het getal 3.\\n\\nEchter, de tweede is de string `\\"Lydia\\"`. `\\"Lydia\\"` is een string en `2` is een getal: `2` wordt omgezet naar een string. `\\"Lydia\\"` en `\\"2\\"` worden geconcateneerd wat resulteert in de string `\\"Lydia2\\"`.\\n\\n`{ name: \\"Lydia\\" }` is een object. Een getal noch een object is een string, dus beide worden gestringified. Wanneer we een regulier object stringifi\xebn levert dit `\\"[object Object]\\"` op. `\\"[object Object]\\"` geconcateneerd met `\\"2\\"` wordt `\\"[object Object]2\\"`.","id":102,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"Wat is de waarde van output?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"We kunnen elk type of waarde meegeven aan `Promise.resolve`, zowel een promise als een niet-promise. De methode zelf retourneert een promise met een opgeloste waarde (`<fulfilled>`). Als je een reguliere functie meegeeft zal het een opgeloste promise zijn met een reguliere waarde. Als je een promise meegeeft zal het een opgeloste promise zijn met een opgeloste waarde, of de doorgegeven promise.\\n\\nIn dit geval geven we alleen de numerieke waarde `5` mee. Het geeft de opgeloste promise terug met de waarde `5`.","id":103,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"Wat is de waarde?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"Objecten worden doorgegeven _by reference_. Wanneer we objecten vergelijken op type en gelijkenis (`===`), vergelijken we hun referenties.\\n\\nWe zetten de standaard waarde voor `person2` gelijk aan het object `person` en geven het object `person` door als de waarde voor het argument `person1`.\\n\\nDit betekent dat beide waarden een referentie hebben naar dezelfde plek in het geheugen, dus zijn ze gelijk.\\n\\nDe code in de `else` statement wordt uitgevoerd en `They are the same!` wordt gelogd.","id":104,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"Wat is de waarde?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"In JavaScript kunnen we properties van een object op twee manieren benaderen: blokhaken of met een punt notitie. In dit voorbeeld gebruiken we de punt notatie (`colorConfig.colors`) in plaats van blokhaken (`colorConfig[\\"colors\\"]`).\\n\\nMet de punt notatie zal JavaScript proberen om de propertie van een object te vinden met exact dezelfde naam. In dit voorbeeld probeert JavaScript een propertie te vinden met de naam `colors` uit het `colorConfig` object. Er is geen property genaamd `colors` dus wordt `undefined` geretourneerd. Dan proberen we de waarde van het eerste element te benaderen door gebruik te maken van `[1]`. We kunnen dit niet doen op een waarde die `undefined` is, dus wordt er een `TypeError` gegooid: `Cannot read property \'1\' of undefined`.\\n\\nJavaScript interpreteert (of beter gezegd unboxed) statements. Wanneer we blokhaken gebruiken ziet het de eerste blokhaak `[` en blijft doorgaan totdat het de tweede blokhaak `]` vindt. Alleen dan zal het het statement evalueren. Als we `colorConfig[colors[1]]` hadden gebruikt zou het de waarde van de `red` propertie teruggeven van het `colorConfig` object.","id":105,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"Wat is de waarde?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"Onder de motorkap zijn emojis unicodes. De unicodes voor het hart zijn `\\"U+2764 U+FE0F\\"`. Deze zijn altijd hetzelfde voor dezelfde emojis. We vergelijken twee gelijke string met elkaar, wat true retourneert.","id":106,"options":["`true`","`false`"],"question":"Wat is de waarde?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"Met de `splice` methode passen we de originele array aan door elementen te verwijderen, te vervangen of toe te voegen. In dit geval hebben we 2 elementen verwijderd vanaf index 1 (we hebben `\'\ud83e\udd51\'` en `\'\ud83d\ude0d\'` verwijderd) en hebben in plaats daarvan \u2728 toegevoegd.\\n\\n`map`, `filter` en `slice` geven een nieuwe array terug, `find` geeft een element terug en `reduce` geeft een gereduceerde waarde terug.","id":107,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"Welke van onderstaande methoden passen de originele array aan?"},{"answer":0,"code":"const food = [\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']\\nconst info = { favoriteFood: food[0] }\\n\\ninfo.favoriteFood = \'\ud83c\udf5d\'\\n\\nconsole.log(food)","codeLanguage":"javascript","explanation":"We zetten de waarde van de property `favoriteFood` op het object `info` gelijk aan de string met de pizza emoji, `\'\ud83c\udf55\'`. Een string is een primitief data type. In JavaScript zijn primitieve data types _by reference_.\\n\\nIn JavaScript interacteren primitieve data types (alles dat geen object is) _by value_. In dit geval zetten we de waarde van de property `favoriteFood` op het object `info` gelijk aan de waarde van het eerste element in de `food` array, de string met de pizza emoji in dit geval (`\'\ud83c\udf55\'`). Een string is een primitief data type en interacteert _by value_ (neem een kijkje op mijn [blogpost](https://www.theavocoder.com/complete-javascript/2018/12/21/by-value-vs-by-reference) als je ge\xefntereseerd bent om hierover meer te leren).\\n\\nDaarna veranderen we de waarde van de property `favoriteFood` op het object `info`. De `food` array is niet veranderd omdat de waarde van `favoriteFood` een _kopie_ bevat van de waarde van het eerste element van de array, en geen referentie heeft naar dezelfde plek in het geheugen van de element in `food[0]`. Wanneer we food loggen is het nog steeds dezelfde array, `[\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`.","id":108,"options":["`[\'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`[\'\ud83c\udf5d\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`[\'\ud83c\udf5d\', \'\ud83c\udf55\', \'\ud83c\udf6b\', \'\ud83e\udd51\', \'\ud83c\udf54\']`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"Met de `JSON.parse()` methode kunnen we een JSON string parsen naar een JavaScript waarde.\\n\\n```javascript\\n// Stringifying een nummer naar valide JSON, daarna de JSON string parsen naar een JavaScript waarde:\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// Stringifying een array waarde naar een valide JSON, daarna de JSON string parsen naar een JavaScript waarde:\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// Stringifying een object naar valide JSON, daarna de JSON string parsen naar een JavaScript waarde:\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":109,"options":["Ontleedt JSON naar een JavaScript waarde","Ontleedt een JavaScript object naar JSON","Ontleedt elke JavaScript waarde naar JSON","Ontleedt JSON alleen naar een JavaScript object"],"question":"Wat doet onderstaande methode?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"Elke functie heeft zijn eigen _execution context_ (of _scope_). De `getName` functie zoekt eerst binnen zijn eigen context (scope) om te kijken of het de variabele `name` bevat, die we proberen te benaderen. In dit geval bevat de `getName` functie zijn eigen `name` variabele: we declareren de variabele `name` met het keyword `let` en met de waarde `\'Sarah\'`.\\n\\nVariabelen gedeclareerd met het keyword `let` (en `const`) worden gehoisted, maar worden niet, zoals met het keyword `var`, <i>ge\xefnitialiseerd</i>. Ze zijn niet benaderbaar voor de lijn waar we ze declareren (initialiseren). Dit wordt de \\"temporal dead zone\\" genoemd. Wanneer we de variabelen proberen te benaderen voordat ze gedeclareerd zijn zal JavaScript een `ReferenceError` gooien.\\n\\nAls we de variabele `name` **niet** niet hadden gedeclareerd binnen de `getName` functie zou de JavaScript engine doorgezocht hebben door de _scope chain_. De bovenliggende scope heeft een variabele `name` met de waarde `Lydia`. In dat geval zou `Lydia` gelogged worden.\\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":110,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"Met het keyword `yield` , we `yield` waarden in een generator functie. Met het keyword `yield*`, we `yield` waarden van een andere generator functie, of iterabel object (bijvoorbeeld een array).\\n\\nIn `generatorOne` leveren we de volledige array `[\'a\', \'b\', \'c\']` op, gebruikmakend van het keyword `yield`. De waarde van de propertie `value` op het object geretourneerd door de `next` methode op `one` (`one.next().value`) is gelijk aan de volledige array `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\nIn `generatorTwo` gebruiken we het keyword `yield*`. Dit betekent dat de eerste opgeleverde waarde van `two` is gelijk aan de eerste opgeleverde waarde in de iterator. The iterator is de array `[\'a\', \'b\', \'c\']`. De eerste opgeleverde waarde is `a`, dus de eerste keer dat we `two.next().value` aanroepen wordt `a` geretourneerd.\\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":111,"options":["`a` en `a`","`a` en `undefined`","`[\'a\', \'b\', \'c\']` en `a`","`a` en `[\'a\', \'b\', \'c\']`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"Expressies binnen template literals worden eerste ge\xebvalueerd. Dit betekent dat de string de geretourneerde waarde zal bevatten van de expressie, de direct aangeroepen functie `(x => x)(\'I love\')` in dit geval. We geven de waarde `\'I love\'` mee als een argument aan de arrow functie `x => x`. `x` is gelijk aan `\'I love\'`, wat geretourneerd zal worden. Dit resulteert in `I love to program`.","id":112,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\')\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"Normaal als we objecten gelijk maken aan `null` worden deze objecten opgeruimd door de _garbage collector_, omdat er geen referentie meer is naar het object. Echter, omdat de callback functie binnen `setInterval` een arrow functie is (en dus verbonden is aan het `config` object) zal de callback functie nog steeds een referentie behouden naar het `config` object. Zolang er een referentie is zal de _garbage collector_ het object niet opruimen. Omdat het niet opgeruimd wordt door de _garbage collector_ zal de `setInterval` callback functie nog steeds iedere 1000ms (1s) aangeroepen worden.","id":113,"options":["De `setInterval` callback zal niet worden aangeroepen","De `setInterval` callback zal \xe9\xe9n keer aangeroepen worden","De `setInterval` callback zal nog steeds elke seconde aangeroepen worden","We roepen `config.alert()` nooit aan, config is `null`"],"question":"Wat zal er gebeuren?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\')","codeLanguage":"javascript","explanation":"Als een **key/value** paar wordt toegevoegd gebruikmakend van de `set` methode zal de **key** de waarde zijn van het eerste argument dat zal worden meegegeven aan de `set` functie, en de **value** zal het tweede argument zijn die wordt meegegeven aan de `set` functie. De **key** is de _functie_ `() => \'greeting\'` in dit geval, en de waarde `\'Hello world\'`. `myMap` is nu `{ () => \'greeting\' => \'Hello world!\' }`.\\n\\n1 is verkeerd omdat de **key** niet `\'greeting\'` is, maar `() => \'greeting\'`.\\n3 is verkeerd omdat we een nieuwe functie cre\xeberen door het mee te geven als een parameter aan de `get` methode. Object interacteert _by reference_. Een functie is een object, dit is ook waarom twee functies nooit strict gelijk zijn. Zelfs niet als ze identiek zijn: ze hebben een referentie naar een andere plek in het geheugen.","id":114,"options":["1","2","2 en 3","Allemaal"],"question":"Welke methode(n) zal de waarde `\'Hello world!\'` teruggeven?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"De functies `changeAge` en `changeAgeAndName` hebben beiden een standaard parameter, namelijk het _nieuw_ aangemaakte object `{ ...person }`. Dit object bevat kopie\xebn van alle key/value paren in het `person` object.\\n\\nAls eerste roepen we de `changeAge` functie aan en geven het object `person` mee als argument. Deze functie verhoogt de waarde van de propertie `age` met 1. `person` is nu `{ name: \\"Lydia\\", age: 22 }`.\\n\\nDan roepen we de functie `changeAgeAndName` aan, echter geven we geen parameter mee. In plaats daarvan is de waarde van `x` gelijk aan een _nieuw_ object: `{ ...person }`. Omdat het een nieuw object is heeft het geen effect op de waarden van de properties van het object `person`. `person` is nog steeds gelijk aan `{ name: \\"Lydia\\", age: 22 }`.","id":115,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"function sumValues(x, y, z) {\\n\\treturn x + y + z;\\n}","codeLanguage":"javascript","explanation":"Met de spread operator `...` kunnen we iterabelen _ontplooien_ tot individuele elementen. De `sumValues` functie krijgt drie argumenten mee: `x`, `y` en `z`. `...[1, 2, 3]` zal resulteren in `1, 2, 3`, wat we meegeven aan de functie `sumValues`.","id":116,"options":["`sumValues([...1, 2, 3])`","`sumValues([...[1, 2, 3]])`","`sumValues(...[1, 2, 3])`","`sumValues([1, 2, 3])`"],"question":"Welke van onderstaande opties zal `6` teruggeven?"},{"answer":1,"code":"let num = 1;\\nconst list = [\\"\ud83e\udd73\\", \\"\ud83e\udd20\\", \\"\ud83e\udd70\\", \\"\ud83e\udd2a\\"];\\n\\nconsole.log(list[(num += 1)]);","codeLanguage":"javascript","explanation":"Met de `+=` operator verhogen we de waarde van `num` met `1`. `num` heeft een initi\xeble waarde van `1`, dus `1 + 1` is `2`. Het element met de index 2 in de `list` array is \ud83e\udd70, `console.log(list[2])` logt \ud83e\udd70.","id":117,"options":["`\ud83e\udd20`","`\ud83e\udd70`","`SyntaxError`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const person = {\\n\\tfirstName: \\"Lydia\\",\\n\\tlastName: \\"Hallie\\",\\n\\tpet: {\\n\\t\\tname: \\"Mara\\",\\n\\t\\tbreed: \\"Dutch Tulip Hound\\"\\n\\t},\\n\\tgetFullName() {\\n\\t\\treturn `${this.firstName} ${this.lastName}`;\\n\\t}\\n};\\n\\nconsole.log(person.pet?.name);\\nconsole.log(person.pet?.family?.name);\\nconsole.log(person.getFullName?.());\\nconsole.log(member.getLastName?.());","codeLanguage":"javascript","explanation":"Met de _optional chaining operator_ `?.` hoeven we niet langer expliciet te checken of een dieper geneste waarde valide is, of niet. Als we een propertie proberen te benaderen op een `undefined` of `null` waarde (_nullish_) zal de expressie stoppen en `undefined` retourneren.\\n\\n`person.pet?.name`: `person` heeft een propertie genaamd `pet`: `person.pet` is niet _nullish_. Het heeft een propertie genaamd ``name` en retourneerd `Mara`.\\n`person.pet?.family?.name`: `person` heeft een propertie genaamd `pet`: `person.pet` is niet _nullish_. `pet` heeft _geen_ propertie genaamd `family`, `person.pet.family` is _nullish_. De expressie geeft `undefined` terug.\\n`person.getFullName?.()`: `person` heeft een propertie genaamd `getFullName`: `person.getFullName()` is niet __nullish__ en kan worden aangeroepen, wat `Lydia Hallie` retourneerd.\\n`member.getLastName?.()`: `member` is niet gedefinieerd: `member.getLastName()` is _nullish_. The expressie geeft `undefined` terug.","id":118,"options":["`undefined` `undefined` `undefined` `undefined`","`Mara` `undefined` `Lydia Hallie` `undefined`","`Mara` `null` `Lydia Hallie` `null`","`null` `ReferenceError` `null` `ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const groceries = [\\"banana\\", \\"apple\\", \\"peanuts\\"];\\n\\nif (groceries.indexOf(\\"banana\\")) {\\n\\tconsole.log(\\"We have to buy bananas!\\");\\n} else {\\n\\tconsole.log(`We don\'t have to buy bananas!`);\\n}","codeLanguage":"javascript","explanation":"We geven de conditie `groceries.indexOf(\\"banana\\")` mee aan de if-statement. `groceries.indexOf(\\"banana\\")` geeft `0` terug, wat een _falsy_ waarde is.Omdat de conditie in de if-statement _falsy_ is wordt de code in de else-statement uitgevoerd, en `We don\'t have to buy bananas!` wordt gelogd.","id":119,"options":["We have to buy bananas!","We don\'t have to buy bananas","`undefined`","`1`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const config = {\\n\\tlanguages: [],\\n\\tset language(lang) {\\n\\t\\treturn this.languages.push(lang);\\n\\t}\\n};\\n\\nconsole.log(config.language);","codeLanguage":"javascript","explanation":"De `language` methode is een `setter`. Setters hebben geen werkelijke waarde. Hun doel is om properties te _wijzigen_. Wanneer een `setter` methode wordt aangeroepen wordt `undefined` geretourneerd.","id":120,"options":["`function language(lang) { this.languages.push(lang }`","`0`","`[]`","`undefined`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\n\\nconsole.log(!typeof name === \\"object\\");\\nconsole.log(!typeof name === \\"string\\");","codeLanguage":"javascript","explanation":"`typeof name` retourneert `\\"string\\"`. De string `\\"string\\"` is een _truthy_ waarde, dus `!typeof name` retourneert de boolean waarde `false`. `false === \\"object\\"` en `false === \\"string\\"` retourneren beiden `false`.\\n\\n(Als we wilden checken of het type (on)gelijk is aan een bepaald type, zouden we `!==` moeten gebruiken in plaats van `!typeof`)","id":121,"options":["`false` `true`","`true` `false`","`false` `false`","`true` `true`"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const add = x => y => z => {\\n\\tconsole.log(x, y, z);\\n\\treturn x + y + z;\\n};\\n\\nadd(4)(5)(6);","codeLanguage":"javascript","explanation":"De `add` functie retourneert een arrow functie, die een arrow functie retourneert, die ook weer een arrow functie retourneert. De eerste functie krijgt een argument `x` mee met de waarde `4`. We roepen de tweede functie aan, welke een argument `y` meekrijgt met de waarde `5`. Dan roepen we de derde functie aan en die krijgt het argument `z` meet met de waarde `6`. Wanneer we de waarden proberen op te vragen van `x`, `y` en `z` ind e laatste arrow functie de JavaScript engine gaat omhoog in de _scope chain_ om de waarden van `x` en `y` te vinden. Dit retourneert `4` `5` `6`.","id":122,"options":["`4` `5` `6`","`6` `5` `4`","`4` `function` `function`","`undefined` `undefined` `6`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"async function* range(start, end) {\\n\\tfor (let i = start; i <= end; i++) {\\n\\t\\tyield Promise.resolve(i);\\n\\t}\\n}\\n\\n(async () => {\\n\\tconst gen = range(1, 3);\\n\\tfor await (const item of gen) {\\n\\t\\tconsole.log(item);\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"De generator functie `range` retourneert een async object met promises voor elk item in de range die we meegeven: `Promise{1}`, `Promise{2}`, `Promise{3}`. We zetten de variabele `gen` gelijk aan het async object, waarnaar we eroverheen iteraten gebruikmakend van een `for await ... of` loop. We zetten de variabele `item` gelijk aan de promises die geretourneerd worden: eerst `Promise{1}`, dan `Promise{2}` en dan `Promise{3}`. Omdat we de waarde van `item` _awaiten_, de opgeloste promise, worden de opgeloste _waarden_ van de promises geretourneerd: `1`, `2` en `3`.","id":123,"options":["`Promise {1}` `Promise {2}` `Promise {3}`","`Promise {<pending>}` `Promise {<pending>}` `Promise {<pending>}`","`1` `2` `3`","`undefined` `undefined` `undefined`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const myFunc = ({ x, y, z }) => {\\n\\tconsole.log(x, y, z);\\n};\\n\\nmyFunc(1, 2, 3);","codeLanguage":"javascript","explanation":"De functie `myFunc` verwacht een object met de properties `x`, `y` en `z` als haar argument. Omdat we maar drie separate numerieke waarden (1, 2, 3) meegeven in plaats van \xe9\xe9n object met de properties `x`, `y` en `z` ({x: 1, y: 2, z: 3}), hebben `x`, `y` en `z` hun default waarde `undefined`.","id":124,"options":["`1` `2` `3`","`{1: 1}` `{2: 2}` `{3: 3}`","`{ 1: undefined }` `undefined` `undefined`","`undefined` `undefined` `undefined`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"function getFine(speed, amount) {\\n  const formattedSpeed = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'unit\', unit: \'mile-per-hour\' }\\n  }).format(speed)\\n\\n  const formattedAmount = new Intl.NumberFormat({\\n    \'en-US\',\\n    { style: \'currency\', currency: \'USD\' }\\n  }).format(amount)\\n\\n  return `The driver drove ${formattedSpeed} en has to pay ${formattedAmount}`\\n}\\n\\nconsole.log(getFine(130, 300))","codeLanguage":"javascript","explanation":"Met de `Intl.NumberFormat` methode kunnen we numerieke waarden formatteren naar elke lokale format. We formatteren de numerieke waarde `130` naar de lokale waarde van `en-US` als een `unit` in `mile-per-hour`, wat resulteert in `130 mph`. De numerieke waarde `300` naar de lokale waarde van `en-US` als een `currency` in `USD`, wat resulteert in `\u20ac300.00`.","id":125,"options":["The driver drove 130 en has to pay 300","The driver drove 130 mph en has to pay $300.00","The driver drove undefined en has to pay undefined","The driver drove 130.00 en has to pay 300.00"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const spookyItems = [\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"];\\n({ item: spookyItems[3] } = { item: \\"\ud83d\udc80\\" });\\n\\nconsole.log(spookyItems);","codeLanguage":"javascript","explanation":"Door objecten te destructureren (_destructuring_) kunnen we de values van een object uitpakken en een uitgepakte waarde toewijzen aan de key van dezelfde property. In dit geval wijzen we de waarde \\"\ud83d\udc80\\" toe aan `spookyItems[3]`. Dit betekent dat we de array `spookyItems` aanpassen, we voegen namelijk \\"\ud83d\udc80\\" toe. Wanneer we de array `spookyItems` loggen wordt `[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]` gelogd.","id":126,"options":["`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"\ud83d\udc80\\"]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", { item: \\"\ud83d\udc80\\" }]`","`[\\"\ud83d\udc7b\\", \\"\ud83c\udf83\\", \\"\ud83d\udd78\\", \\"[object Object]\\"]`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\";\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));","codeLanguage":"javascript","explanation":"Met de `Number.isNaN` methode kunnen je checken of de waarde die je meegeeft een _numerieke waarde_ is en gelijk is aan `NaN`. `name` is niet een numerieke waarde en `Number.isNaN(name)` zal `false` teruggeven. `age` is een numerieke waarde, maar is niet gelijk aan `NaN`. `Number.isNaN(age)` zal `false` teruggeven.\\n\\nMet de `isNaN` methode kun je checken of een waarde die je meegeeft geen numerieke waarde is. `name` is geen numerieke waarde, dus `isNaN(name)` geeft `true` terug. `age` is wel een numerieke waarde, dus `isNaN(age)` geeft `false` terug.","id":127,"options":["`true` `false` `true` `false`","`true` `false` `false` `false`","`false` `false` `true` `false`","`false` `true` `false` `true`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const randomValue = 21;\\n\\nfunction getInfo() {\\n\\tconsole.log(typeof randomValue);\\n\\tconst randomValue = \\"Lydia Hallie\\";\\n}\\n\\ngetInfo();","codeLanguage":"javascript","explanation":"Variables declared with the `const` keyword are not referencable before their initialization: this is called the _temporal dead zone_. In the `getInfo` function, the variable `randomValue` is scoped in the functional scope of `getInfo`. On the line where we want to log the value of `typeof randomValue`, the variable `randomValue` isn\'t initialized yet: a `ReferenceError` gets thrown! The engine didn\'t go down the scope chain since we declared the variable `randomValue` in the `getInfo` function.","id":128,"options":["`\\"number\\"`","`\\"string\\"`","`undefined`","`ReferenceError`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const myPromise = Promise.resolve(\\"Woah some cool data\\");\\n\\n(async () => {\\n\\ttry {\\n\\t\\tconsole.log(await myPromise);\\n\\t} catch {\\n\\t\\tthrow new Error(`Oops didn\'t work`);\\n\\t} finally {\\n\\t\\tconsole.log(\\"Oh finally!\\");\\n\\t}\\n})();","codeLanguage":"javascript","explanation":"In de `try` statement loggen we de _awaited_ waarde van de `myPromise` variabele: `\\"Woah some cool data\\"`. Omdat er geen errors gegooid worden in de `try` statement komt de code niet in de `catch`. De code in de `finally` statement wordt _altijd_ uitgevoerd, `\\"Oh finally!\\"` wordt gelogd.","id":129,"options":["`Woah some cool data`","`Oh finally!`","`Woah some cool data` `Oh finally!`","`Oops didn\'t work` `Oh finally!`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const emojis = [\\"\ud83e\udd51\\", [\\"\u2728\\", \\"\u2728\\", [\\"\ud83c\udf55\\", \\"\ud83c\udf55\\"]]];\\n\\nconsole.log(emojis.flat(1));","codeLanguage":"javascript","explanation":"Met de `flat` methode kunnen we een nieuwe platgemaakte array maken. De diepte van de platgemaakte array hangt af van de waarde die we meegeven. In dit geval geven we de waarde `1` mee (wat eigenlijk niet had gehoeven omdat dit de standaard waarde is), wat betekent dat alleen de arrays van het eerste niveau geconcateneerd worden. `[\'\ud83e\udd51\']` en `[\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]` in dit geval. Het concateneren van deze twee arrays resulteert in `[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`.","id":130,"options":["`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', [\'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', [\'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']]`","`[\'\ud83e\udd51\', \'\u2728\', \'\u2728\', \'\ud83c\udf55\', \'\ud83c\udf55\']`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"class Counter {\\n\\tconstructor() {\\n\\t\\tthis.count = 0;\\n\\t}\\n\\n\\tincrement() {\\n\\t\\tthis.count++;\\n\\t}\\n}\\n\\nconst counterOne = new Counter();\\ncounterOne.increment();\\ncounterOne.increment();\\n\\nconst counterTwo = counterOne;\\ncounterTwo.increment();\\n\\nconsole.log(counterOne.count);","codeLanguage":"javascript","explanation":"`counterOne` is een instantie van de `Counter` class. De counter class bevat een `count` propertie op de constructor en een `increment` methode.Eerst roepen we de `increment` methode twee keer aan door `counterOne.increment()` aan te roepen. Op dat moment is `counterOne.count` gelijk aan `2`.\\n\\n<img src=\\"https://i.imgur.com/KxLlTm9.png\\" width=\\"400\\">\\n\\nDan maken we de variabele `counterTwo` aan en maken het gelijk aan `counterOne`. Omdat object interacteren _by reference_ cre\xeberen we enkel een referentie naar dezelfde plek in het geheugen waarnaar `counterOne` verwijst. Omdat dit dezelfde plek in het geheugen is worden alle veranderingen op het object `counterTwo` ook doorgevoerd op `counterOne`. Op dat moment is `counterTwo.count` ook `2`.\\n\\nWe roepen `counterTwo.increment()` aan, wat `count` gelijk maakt aan `3`. Als we de `count` op `counterOne` loggen is die `3`.\\n\\n<img src=\\"https://i.imgur.com/BNBHXmc.png\\" width=\\"400\\">","id":131,"options":["`0`","`1`","`2`","`3`"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const myPromise = Promise.resolve(Promise.resolve(\\"Promise!\\"));\\n\\nfunction funcOne() {\\n\\tmyPromise.then(res => res).then(res => console.log(res));\\n\\tsetTimeout(() => console.log(\\"Timeout!\\", 0));\\n\\tconsole.log(\\"Last line!\\");\\n}\\n\\nasync function funcTwo() {\\n\\tconst res = await myPromise;\\n\\tconsole.log(await res);\\n\\tsetTimeout(() => console.log(\\"Timeout!\\", 0));\\n\\tconsole.log(\\"Last line!\\");\\n}\\n\\nfuncOne();\\nfuncTwo();","codeLanguage":"javascript","explanation":"Eerst roepen we `funcOne` aan. Op de eerste regel van `funcOne` roepen we de promise `myPromise` aan, wat een _asynchrone_ operatie is. Zolang de JavaScript engine bezig is met het afmaken van de promise wordt de rest van de functie `funcOne` uitgevoerd. De volgende regel is een _asynchrone_ `setTimeout` functie, waarvan de callback functie naar de Web API wordt gestuurd. \\n\\nZowel de promise als de timeout zijn _asynchrone_ operaties en de functie worden uitgevoerd terwijl de engine bezig is om de promise uit te voeren en de `setTimeout` callback functie af te handelen. Dit betekent dat `Last line!` als eerste wordt gelogd, omdat dit geen _asynchrone_ operatie is. Dit is de laatste regel van `funcOne`. Ondertussen wordt de promise opgelost en `Promise!` wordt gelogd. Echter, omdat we `funcTwo()` aanroepen en de callstack nog niet leeg is kan de callback van de `setTimeout` functie nog niet toegevoegd worden aan de callstack.\\n\\nIn `funcTwo` wachten we eerst op de promise `myPromise`. Met het keyword `await` pauzeren we de executie van de functie totdat de promise iets teruggeeft (of afwijst). Dan loggen we de _awaited_ waarde van `res` (omdat de promise zelf een promise retourneert). Dit logt `Promise!`.\\n\\nDe volgende regel is de _asynchrone_ `setTimeout` functie waarvan de callback functie naar de Web API gestuurd wordt.\\n\\nWe komen op de laatste regel van `funcTwo` wat `Last line!` logt naar het console. Omdat `funcTwo` van de callstack gaat is de callstack leeg. De callback functies die in de wachtrij stonden (`() => console.log(\\"Timeout!\\")` van `funcOne` en `() => console.log(\\"Timeout!\\")` van `funcTwo`) worden nu \xe9\xe9n voor \xe9\xe9n toegevoegd aan de callstack. De eerste callback functie logt `Timeout!` en wordt verwijderd van de callstack. De tweede callback functie logt dan `Timeout!` en wordt verwijderd van de callstack. Dit logt `Last line! Promise! Promise! Last line! Timeout! Timeout!`.","id":132,"options":["`Promise! Last line! Promise! Last line! Last line! Promise!`","`Last line! Timeout! Promise! Last line! Timeout! Promise!`","`Promise! Last line! Last line! Promise! Timeout! Timeout!`","`Last line! Promise! Promise! Last line! Timeout! Timeout!`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"// sum.js\\nexport default function sum(x) {\\n\\treturn x + x;\\n}\\n\\n// index.js\\nimport * as sum from \\"./sum\\";","codeLanguage":"javascript","explanation":"Met het sterretje `*` importeren we alle ge\xebxporteerde waarden van een bestand, zowel de default als de benaamde. Als we het volgende bestand hadden:\\n\\n```javascript\\n// info.js\\nexport const name = \\"Lydia\\";\\nexport const age = 21;\\nexport default \\"I love JavaScript\\";\\n\\n// index.js\\nimport * as info from \\"./info\\";\\nconsole.log(info);\\n```\\n\\nHet volgende zou gelogd worden:\\n\\n```javascript\\n{\\n  default: \\"I love JavaScript\\",\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n```\\n\\nVoor het `sum` voorbeeld betekent dit dat de ge\xefmporteerde waarde `sum` eruit ziet als:\\n\\n```javascript\\n{ default: function sum(x) { return x + x } }\\n```\\n\\nWe kunnen deze functie aanvoeren door `sum.default` aan te roepen.","id":133,"options":["`sum(4)`","`sum.sum(4)`","`sum.default(4)`","Default wordt niet ge\xefmporteerd met `*`, alleen named exports"],"question":"Hoe kunnen we `sum` uit `sum.js` aanroepen  in `index.js`?`"},{"answer":2,"code":"const handler = {\\n\\tset: () => console.log(\\"Added a new property!\\"),\\n\\tget: () => console.log(\\"Accessed a property!\\")\\n};\\n\\nconst person = new Proxy({}, handler);\\n\\nperson.name = \\"Lydia\\";\\nperson.name;","codeLanguage":"javascript","explanation":"Met het Proxy object kunnen we functionaliteit toevoegen aan een object als we dit meegeven als tweede argument. In dit geval geven we het object `handler` mee wat de volgende properties bevat: `set` en `get`. `set` wordt aangeroepen elke keer als we een waarde van een propertie _zetten_. `get` wordt aangeroepen elke keer als we een propertie waarde opvragen.\\n\\nHet eerste argument is een leeg object `{}` wat de waarde is van `person`. Aan dit object wordt de functionaliteit toegevoegd die gespecificeerd is in het object `handler`. Als we een propertie toevoegen aan het object `person` wordt `set` uitgevoerd. Als we een propertie benaderen op het object `person` wordt `get` uitgevoerd.\\n\\nAls eerste voegen we de propertie `name` toe aan het proxy object (`person.name = \\"Lydia\\"`). `set` wordt aangeroepen en `\\"Added a new property!\\"` wordt gelogd.\\n\\nDan vragen we de waarde van een propertie op het proxy object op en `get` van het `handler` object wordt aangeroepen. `\\"Accessed a property!\\"` wordt gelogd.","id":134,"options":["`Added a new property!`","`Accessed a property!`","`Added a new property!` `Accessed a property!`","Niets wordt gelogd"],"question":"Wat is de uitkomst?"},{"answer":0,"code":"const person = { name: \\"Lydia Hallie\\" };\\n\\nObject.seal(person);","codeLanguage":"javascript","explanation":"Met `Object.seal`  kunnen we voorkomen dat nieuwe properties kunnen worden _toegevoegd_ of bestaande properties worden _verwijderd_.\\n\\nEchter kunnen van de bestaande properties nog steeds aanpassen.","id":135,"options":["`person.name = \\"Evan Bacon\\"`","`person.age = 21`","`delete person.name`","`Object.assign(person, { age: 21 })`"],"question":"Welke van onderstaande zal het `person` object aanpassen?"},{"answer":2,"code":"const person = {\\n\\tname: \\"Lydia Hallie\\",\\n\\taddress: {\\n\\t\\tstreet: \\"100 Main St\\"\\n\\t}\\n};\\n\\nObject.freeze(person);","codeLanguage":"javascript","explanation":"De `Object.freeze` methode _bevriest_ een object. Geen enkele propertie van worden toegevoegd, aangepast worden of worden verwijderd.\\n\\nEchter wordt het object enkel _oppervlakkig_ bevroren wat betekent dat alleen _directe_ properties bevroren zijn. Als de propertie een ander object is, zoals `address` in dit geval, zijn de properties van dat object niet bevroren en kunnen wel worden aangepast.","id":136,"options":["`person.name = \\"Evan Bacon\\"`","`delete person.address`","`person.address.street = \\"101 Main St\\"`","`person.pet = { name: \\"Mara\\" }`"],"question":"Welke van onderstaande zal het `person` object aanpassen?"},{"answer":0,"code":"const add = x => x + x;\\n\\nfunction myFunc(num = 2, value = add(num)) {\\n\\tconsole.log(num, value);\\n}\\n\\nmyFunc();\\nmyFunc(3);","codeLanguage":"javascript","explanation":"Eerst roepen we de functie `myFunc()` aan zonder argumenten mee te geven. Omdat we geen argumenten meegeven, `num` en `value` behouden hun standaard waarde: num is `2`, en `value` de geretourneerde waarde van de functie `add`. Aan de functie `add` geven we `num` als argument mee, wat de waarde `2` heeft. `add` retourneert `4` wat de waarde is van `value`.\\n\\nDaarna roepen we de functie `myFunc(3)` aan het geven `3` meet als de waarde voor het argument `num`. We geven het argument `value` niet mee. Omdat we geen waarde meegeven voor het argument `value` krijgt het de standaard waarde: het retourneert de waarde van de `add` functie. Aan de functie `add` geven we `num` mee, wat de waarde `3` bevat. `add` retourneert `6` wat op dat moment de waarde is van `value`.","id":137,"options":["`2` `4` en `3` `6`","`2` `NaN` en `3` `NaN`","`2` `Error` en `3` `6`","`2` `4` en `3` `Error`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"const teams = [\\n\\t{ name: \\"Team 1\\", members: [\\"Paul\\", \\"Lisa\\"] },\\n\\t{ name: \\"Team 2\\", members: [\\"Laura\\", \\"Tim\\"] }\\n];\\n\\nfunction* getMembers(members) {\\n\\tfor (let i = 0; i < members.length; i++) {\\n\\t\\tyield members[i];\\n\\t}\\n}\\n\\nfunction* getTeams(teams) {\\n\\tfor (let i = 0; i < teams.length; i++) {\\n\\t\\t// \u2728 SOMETHING IS MISSING HERE \u2728\\n\\t}\\n}\\n\\nconst obj = getTeams(teams);\\nobj.next(); // { value: \\"Paul\\", done: false }\\nobj.next(); // { value: \\"Lisa\\", done: false }","codeLanguage":"javascript","explanation":"Om te kunnen itereren over de `members` in elk element in de array `teams` moeten we `teams[i].members` meegeven aan de `getMembers` generator functie. De generator functie retourneert een generator object. Om te kunnen itereren over elk element in het generator object moeten we `yield*` gebruiken.\\n\\nAls we `yield`, `return yield`, of `return` hadden geschreven zou de gehele generator functie geretourneerd worden tijdens de eerste keer dat we de `next` methode aanriepen.","id":138,"options":["`yield getMembers(teams[i].members)`","`yield* getMembers(teams[i].members)`","`return getMembers(teams[i].members)`","`return yield getMembers(teams[i].members)`"],"question":"Wat is de uitkomst?"},{"answer":2,"code":"const person = {\\n\\tname: \\"Lydia Hallie\\",\\n\\thobbies: [\\"coding\\"]\\n};\\n\\nfunction addHobby(hobby, hobbies = person.hobbies) {\\n\\thobbies.push(hobby);\\n\\treturn hobbies;\\n}\\n\\naddHobby(\\"running\\", []);\\naddHobby(\\"dancing\\");\\naddHobby(\\"baking\\", person.hobbies);\\n\\nconsole.log(person.hobbies);","codeLanguage":"javascript","explanation":"De functie `addHobby` ontvangt twee arguemnten, `hobby` en `hobbies` met als standaard waarde de waarde van de array `hobbies` op het object `person`.\\n\\nEerst roepen we de functie `addHobby` aan en geven `\\"running\\"` mee als de waarde voor `hobby`, en een lege array als de waarde voor `hobbies`. Omdat we een lege array meegeven als de waarde voor `y` wordt `\\"running\\"` toegevoegd aan deze lege array.\\n\\nDaarna roepen we de functie `addHobby` aan en geven `\\"dancing\\"` mee als de waarde voor `hobby`. We gaven geen waarde mee voor `hobbies` dus krijgt het de standaard waarde, de propertie `hobbies` op het object `person`. We pushen daar de hobby `dancing` naar de array `person.hobbies`.\\n\\nAls laatste roepen we de functie `addHobby` aan en geven `\\"baking\\"` als de waarde voor `hobby` en de array `person.hobbies` als de waarde voor `hobbies`. We pushen de hobby `baking` naar de array `person.hobbies`.\\n\\nNa het pushen van `dancing` en `baking` is de waarde van `person.hobbies` gelijk aan `[\\"coding\\", \\"dancing\\", \\"baking\\"]`.","id":139,"options":["`[\\"coding\\"]`","`[\\"coding\\", \\"dancing\\"]`","`[\\"coding\\", \\"dancing\\", \\"baking\\"]`","`[\\"coding\\", \\"running\\", \\"dancing\\", \\"baking\\"]`"],"question":"Wat is de uitkomst?"},{"answer":1,"code":"class Bird {\\n\\tconstructor() {\\n\\t\\tconsole.log(\\"I\'m a bird. \ud83e\udda2\\");\\n\\t}\\n}\\n\\nclass Flamingo extends Bird {\\n\\tconstructor() {\\n\\t\\tconsole.log(\\"I\'m pink. \ud83c\udf38\\");\\n\\t\\tsuper();\\n\\t}\\n}\\n\\nconst pet = new Flamingo();","codeLanguage":"javascript","explanation":"We declareren de variabele `pet`, wat een instantie is van de class `Flamingo`. Wanneer we deze instantie instanti\xebren wordt de `constructor` op `Flamingo` aangeroepen. Als eerste wordt `\\"I\'m pink. \ud83c\udf38\\"` gelogd, waarna we `super()` aanroepen. `super()` roept de constructor van de bovenliggende class aan, `Bird` in dit geval. De constructor op `Bird` wordt aangeroepen en logt `\\"I\'m a bird. \ud83e\udda2\\"`.","id":140,"options":["`I\'m pink. \ud83c\udf38`","`I\'m pink. \ud83c\udf38` `I\'m a bird. \ud83e\udda2`","`I\'m a bird. \ud83e\udda2` `I\'m pink. \ud83c\udf38`","Niets, we hebben geen methode aangeroepen"],"question":"Wat is de uitkomst?"},{"answer":3,"code":"const emojis = [\\"\ud83c\udf84\\", \\"\ud83c\udf85\ud83c\udffc\\", \\"\ud83c\udf81\\", \\"\u2b50\\"];\\n\\n/* 1 */ emojis.push(\\"\ud83e\udd8c\\");\\n/* 2 */ emojis.splice(0, 2);\\n/* 3 */ emojis = [...emojis, \\"\ud83e\udd42\\"];\\n/* 4 */ emojis.length = 0;","codeLanguage":"javascript","explanation":"Het keyword `const` betekent simpelweg dat we de waarde van de variabele niet opnieuw kunnen _declareren_. Het is _read-only_. Echter, de waarde zelf is niet onaanpasbaar. De properties van de array `emojis` kunnen worden aangepast, bijvoorbeeld door nieuwe waarden te pushen, te splicen of door de lengte van de array op 0 te zetten.","id":141,"options":["1","1 en 2","3 en 4","3"],"question":"Welke van onderstaande opties zal resulteren in een error?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia Hallie\\",\\n  age: 21\\n}\\n\\n[...person] // [\\"Lydia Hallie\\", 21]","codeLanguage":"javascript","explanation":"Objecten zijn standaard niet itereerbaar. Een _iterable_ is een _iterable_ als het _iterator protocol_ aanwezig is. We kunnen dit met de iterator symbol `[Symbol.iterator]` handmatig toevoegen, wat een generator object zal moeten teruggeven. Bijvoorbeeld door het een generator functie te maken: `*[Symbol.iterator]() {}`. Deze generator functie moet de `Object.values` afgeven van het object `person` als we de array `[\\"Lydia Hallie\\", 21]`: `yield* Object.values(this)` terug willen geven.","id":142,"options":["Niets, objecten zijn standaard iterabel","`*[Symbol.iterator]() { for (let x in this) yield* this[x] }`","`*[Symbol.iterator]() { for (let x in this) yield* Object.values(this) }`","`*[Symbol.iterator]() { for (let x in this) yield this }`"],"question":"Wat moeten we aan het `person` object toevoegen om `[\\"Lydia Hallie\\", 21]` als uitkomst te krijgen van `[...person]`?"}],"locale":"nl-NL"},{"isRTL":false,"language":"\ud83c\uddf9\ud83c\uddf7 T\xfcrk\xe7e","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Fonksiyonun i\xe7inde, \xf6nce `var` anahtar kelimesi ile `name` de\u011fi\u015fkenini tan\u0131mlad\u0131k. Bu demektir ki, de\u011fi\u015fken varsay\u0131lan de\u011feri olan `undefined` ile \\"hoisting\\" (haf\u0131zada alan olu\u015fturma a\u015famas\u0131) olur, ta ki ger\xe7ekten de\u011fi\u015fkene de\u011fer atamas\u0131 yapt\u0131\u011f\u0131m\u0131z sat\u0131ra varana dek. `name` de\u011fi\u015fkenini loglayama \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z sat\u0131rda hen\xfcz de\u011fi\u015fkeni tan\u0131mlamad\u0131k, bu y\xfczden hala `undefined` de\u011ferini sakl\u0131yor.\\n \\n`let` (ve `const`) anahtar kelimelerine sahip de\u011fi\u015fkenler de \\"hoisted\\" olur, ama `var`\'\u0131n aksine <i>ilk de\u011fer atamas\u0131</i> yap\u0131lmaz. De\u011fi\u015fkenleri tan\u0131mlad\u0131\u011f\u0131m\u0131z (ilk de\u011fer atamas\u0131 yapt\u0131\u011f\u0131m\u0131z) sat\u0131rdan \xf6nce eri\u015filebilir de\u011fillerdir. Bu, \\"ge\xe7ici \xf6l\xfc alan / ge\xe7ici de\u011fi\u015fmez \xe7\u0131kt\u0131 alan\u0131\\", \\"temporal dead zone\\", olarak adland\u0131r\u0131l\u0131r. De\u011fi\u015fkenlere, tan\u0131mlanmadan \xf6nce eri\u015fmeye \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z zaman, Javascript `ReferenceError` hatas\u0131 f\u0131rlat\u0131r.","id":0,"options":["`Lydia` ve `undefined`","`Lydia` ve `ReferenceError`","`ReferenceError` ve `21`","`undefined` ve `ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 nedir?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Javascript\'deki olay kuyru\u011fundan dolay\u0131, `setTimeout` callback fonksiyonu, d\xf6ng\xfc uyguland\u0131ktan _sonra_ \xe7a\u011fr\u0131l\u0131r. `i` de\u011fi\u015fkeni, ilk d\xf6ng\xfc s\u0131ras\u0131nda `var` anahtar kelimesi ile tan\u0131mland\u0131\u011f\u0131ndan, bu de\u011fi\u015fken globaldir. D\xf6ng\xfc boyunca, `++` unary operat\xf6r\xfcn\xfc kullanarak, `i`\'nin de\u011ferini her seferinde `1` artt\u0131rd\u0131k. \u0130lk \xf6rnekte, `setTimeout` callback fonksiyonu \xe7a\u011fr\u0131ld\u0131\u011f\u0131 zaman, `i`\'nin de\u011feri `3`\'e e\u015fitti.\\n\\n\u0130kinci d\xf6ng\xfcde, `i` de\u011fi\u015fkeni `let` anahtar kelimesi kullan\u0131larak tan\u0131mland\u0131: `let` (ve `const`) ile tan\u0131mlanan de\u011fi\u015fkenler \\"block-scope\\"dur (block `{}` aras\u0131ndaki herhangi bir \u015feydir). Her bir tekrarda, `i` yeni de\u011fere sahip olacak ve her de\u011fer d\xf6ng\xfc i\xe7inde \\"scoped\\" olacak.","id":1,"options":["`0 1 2` ve `0 1 2`","`0 1 2` ve `3 3 3`","`3 3 3` ve `0 1 2`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());","codeLanguage":"javascript","explanation":"`diameter` s\u0131radan bir fonksiyonken, `perimeter`\'in arrow fonksiyon oldu\u011funa dikkat edin.\\n\\nArrow fonksiyonlarda, `this` anahtar kelimesi, s\u0131radan fonksiyonlar\u0131n aksine, kendi sard\u0131\u011f\u0131 mevcut scope\'u referans al\u0131r. Bu demektir ki, `perimeter`\'i \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman, `shape` objesini de\u011fil, kendi sard\u0131\u011f\u0131 scope\'u referans al\u0131yor (\xf6rne\u011fin window).\\n\\nBu objede, `radius` de\u011feri olmad\u0131\u011f\u0131ndan `undefined` d\xf6nd\xfcr\xfcyor.","id":2,"options":["`20` ve `62.83185307179586`","`20` ve `NaN`","`20` ve `63`","`NaN` ve `63`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"Art\u0131 (unary plus), i\u015flemeye \xe7al\u0131\u015ft\u0131\u011f\u0131 de\u011fi\u015fkeni say\u0131ya \xe7evirmeye \xe7al\u0131\u015f\u0131r. `true` `1` ve `false` `0` demektir.\\n\\n`\'Lydia\'` harf dizisi do\u011frusal (\\"truthy\\") bir de\u011ferdir. Asl\u0131nda sordu\u011fumuz \u015fey, \\"bu do\u011frusal de\u011fer yanl\u0131\u015f-\u0131ms\u0131 (\\"falsy\\") m\u0131?\\". Bu da `false` d\xf6nd\xfcr\xfcr.","id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"Javascript\'te, t\xfcm nesne keyleri string\'dir (Symbol olmad\u0131klar\u0131 m\xfcddet\xe7e). Keyleri, string olarak _yazmad\u0131ysak_ bile, arka planda string\'e \xe7evrilirler.\\n\\nJavascript, ifadeleri yorumlar (ya da a\xe7ar (\\"unboxes\\")). K\xf6\u015feli parentez notasyonu kulland\u0131\u011f\u0131m\u0131z zaman, Javascript ilk `[` g\xf6r\xfcr ve `]` bulana kadar devam eder. Ancak ondan sonra ifadeyi hesaplar.\\n\\n`mouse[bird.size]`: \xd6nce `bird.size` \xe7al\u0131\u015ft\u0131r\u0131l\u0131r, o da `\\"small\\"` demektir. `mouse[\\"small\\"]`, `true` d\xf6nd\xfcr\xfcr.\\n\\nAncak, nokta notasyonunda bu ger\xe7ekle\u015fmez. `mouse`, `bird` diye bir keye sahip de\u011fildir ki bu da `mouse.bird`, `undefined` demektir. Sonra, nokta notasyonunu kullanarak `size`\'a ula\u015fmak istiyoruz: `mouse.bird.size`. `mouse.bird`, `undefined` oldu\u011fundan, asl\u0131nda ula\u015fmaya \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z `undefined.size`. Bu ge\xe7erli de\u011fil ve `Cannot read property \\"size\\" of undefined`\'a benzer bir hata f\u0131rlatacakt\u0131r.","id":4,"options":["`mouse.bird.size` ge\xe7erli de\u011fildir","`mouse[bird.size]` ge\xe7erli de\u011fildir","`mouse[bird[\\"size\\"]]` ge\xe7erli de\u011fildir","Hepsi ge\xe7erlidir"],"question":"Hangisi do\u011fru?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"Javascript\'te t\xfcm nesneler, birbirlerine e\u015fitlendikleri zaman _referanslar\u0131_ ile etkile\u015fime girerler.\\n\\n\xd6nce, `c` de\u011fi\u015fkeni bir nesnenin de\u011ferini tutuyor. Sonra, `d`\'ye ayn\u0131 referans\u0131 atad\u0131k ki bu referans da `c`\'nin sahip oldu\u011fu nesnedir.\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nBir nesneyi de\u011fi\u015ftirdi\u011finiz zaman, hepsini de\u011fi\u015ftirirsiniz.","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` yerle\u015fik bir yap\u0131c\u0131 fonksiyondur (\\"function constructor\\"). Say\u0131 (\\"number\\") gibi g\xf6z\xfckse de ger\xe7ekten bir say\u0131 de\u011fil: bir ka\xe7 ekstra \xf6zelli\u011fe sahip ve o bir nesne.\\n\\n`==` operat\xf6r\xfcn\xfc kulland\u0131\u011f\u0131m\u0131z zaman, sadece ayn\u0131 _de\u011fer_\'e sahip olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. \u0130kisi de `3` de\u011ferine sahip, yani `true` d\xf6nd\xfcr\xfcr.\\n\\nAncak, `===` kulland\u0131\u011f\u0131m\u0131z zaman de\u011fer _ve_ tip ayn\u0131 olmal\u0131d\u0131r. \xd6yle de\u011fil: `new Number()`, say\u0131 (\\"number\\") de\u011fildir, **nesne**dir. \u0130kisi de `false` d\xf6nd\xfcr\xfcr.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nconsole.log(freddie.colorChange(\\"orange\\"));","codeLanguage":"javascript","explanation":"`colorChange` fonksiyonu statiktir. Statik methodlar, sadece olu\u015fturulduklar\u0131 kurucuda var olmak i\xe7in tasarlanm\u0131\u015ft\u0131r ve herhangi bir \\"children\\"a aktar\u0131lamaz. `freddie`, \\"child\\" oldu\u011fundan, fonksiyon aktar\u0131lmad\u0131 ve `freddie` \xfczerinden eri\u015filebilir de\u011fil: `TypeError` hatas\u0131 f\u0131rlat\u0131l\u0131r.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Yaz\u0131m hatas\u0131!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Nesneyi loglar \xe7\xfcnk\xfc global nesne \xfczerinde bo\u015f bir nesne olu\u015fturduk. `greeting`\'i `greetign` olarak yanl\u0131\u015f yazd\u0131\u011f\u0131m\u0131z zaman, JS yorumlay\u0131c\u0131s\u0131 bunu `global.greetign = {}` olarak g\xf6rd\xfc (ya da taray\u0131c\u0131 i\xe7inde `window.greetign = {}`).\\n\\nBundan ka\xe7\u0131nmak i\xe7in, `\\"use strict\\"` kullanabiliriz. Bu, bir de\u011fi\u015fkene herhangi bir atama yapmadan \xf6nce tan\u0131mlad\u0131\u011f\u0131n\u0131zdan emin olman\u0131z\u0131 sa\u011flar.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"Javascript\'te bu m\xfcmk\xfcn, \xe7\xfcnk\xfc fonksiyonlar nesnedir! (Primitive tiplere nazaran her \u015fey nesnedir)\\n\\nFonksiyon \xf6zel bir nesne tipidir. Yazd\u0131\u011f\u0131n\u0131z kod as\u0131l fonksiyon de\u011fil. Fonksiyon, \xf6zelliklere sahip bir nesnedir. Bu \xf6zellik \xe7al\u0131\u015ft\u0131rabilme kapasitesine sahiptir (\\"invocable\\").","id":9,"options":["Hi\xe7 bir \u015fey, tamamen iyi!","`SyntaxError`. Fonksiyonlara bu \u015fekilde \xf6zellik atayamazs\u0131n.","`\\"Woof\\"` \u015feklinde loglan\u0131r.","`ReferenceError`"],"question":"Bunu yapt\u0131\u011f\u0131m\u0131z zaman ne ger\xe7ekle\u015fir?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"S\u0131radan fonksiyonlarla yapt\u0131\u011f\u0131n\u0131z gibi bir yap\u0131c\u0131ya (\\"constructor\\") \xf6zellik ekleyemezsiniz. E\u011fer, tek seferde t\xfcm nesnelere \xf6zellik eklemek isterseniz, bunun yerine prototype kullanmal\u0131s\u0131n\u0131z. Yani bu durumda,\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\n`member.getFullName()` \xe7al\u0131\u015fm\u0131\u015f olacak. Bu neden faydal\u0131? Diyelim ki, yap\u0131c\u0131n\u0131n kendisine bu methodu ekledik. Belki de t\xfcm `Person` instance\'leri bu methoda ihtiya\xe7 duymuyor. Bu \xf6zelli\u011fe sahip olduklar\u0131ndan dolay\u0131, her bir instance haf\u0131zadan yer al\u0131r, bu da bir s\xfcr\xfc haf\u0131za israf\u0131 demek. Bunun yerine, e\u011fer sadece prototype\'a eklersek, haf\u0131zadan sadece bir tek yer al\u0131r\u0131z ve yine de t\xfcm instanceler bu \xf6zelli\u011fe eri\u015febilir!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"`sarah` i\xe7in `new` anahtar kelimesi kullanmad\u0131k. `new` kulland\u0131\u011f\u0131n\u0131z zaman, olu\u015fturdu\u011fumuz yeni bo\u015f nesneyi referans g\xf6sterir. Lakin, `new`\'i eklemezseniz, **global nesne**\'yi referans g\xf6sterir!\\n\\n`this.firstName`, `\\"Sarah\\"`\'a e\u015fittir ve `this.lastName`, `\\"Smith\\"`\'e e\u015fittir dedik. Asl\u0131nda yapt\u0131\u011f\u0131m\u0131z, `global.firstName = \'Sarah\'` ve `global.lastName = \'Smith\'` diye tan\u0131mlamayd\u0131. `sarah`\'\u0131n kendisi `undefined` olarak kal\u0131r.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` ve `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` ve `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` ve `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` ve `ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":"**capturing** a\u015famas\u0131 s\xfcresince, olay ata (\\"ancestor) elemanlardan hedef elemana do\u011fru gider. Daha sonra **target** elemana ula\u015f\u0131r ve **bubbling** ba\u015flar. \\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Olay silsilesinin (event propagation) \xfc\xe7 a\u015famas\u0131 nedir?"},{"answer":1,"explanation":"B\xfct\xfcn nesneler prototiplere (\\"prototypes\\") sahiptir, **temel nesne**, **base object**, hari\xe7. Temel nesne, kullan\u0131c\u0131 taraf\u0131ndan olu\u015fturulmu\u015f nesnedir, ya da `new` anahtar kelimesi kullanarak olu\u015fturulmu\u015f bir nesnedir. Temel nesne baz\u0131 method ve \xf6zelliklere eri\u015febilir, `.toString` gibi. Yerle\u015fik gelen Javascript methodlar\u0131n\u0131 kullanabilme sebebi budur! Buna benzer t\xfcm methodlar prototip \xfczerinden eri\u015febilir. Her ne kadar Javascript, methodu direkt olarak nesneniz \xfczerinden bulamasa da, prototip zinciri \xfczerinden a\u015fa\u011f\u0131ya do\u011fru gider ve orada bulur, b\xf6ylece sizin i\xe7in eri\u015febilir yapar.","id":13,"options":["do\u011fru","yanl\u0131\u015f"],"question":"B\xfct\xfcn nesneler prototiplere sahiptir."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"Javascript **dinamik tipli dil**dir: de\u011fi\u015fkenlerin hangi tip oldu\u011funu belirtmeyiz. De\u011ferler otomatik olarak di\u011fer tipi bilmeden d\xf6n\xfc\u015ft\xfcrebilir, bu _implicit type coercion_, _\xf6rt\xfck tip d\xf6n\xfc\u015f\xfcm\xfc_, olarak adland\u0131r\u0131l\u0131r. **Coercion** bir tipi di\u011fer bir tipe d\xf6n\xfc\u015ft\xfcrmektir.\\n\\nBu \xf6rnekte, JavaScript say\u0131 olan `1`\'i string\'e d\xf6n\xfc\u015ft\xfcr\xfcyor, fonksiyonun mant\u0131kl\u0131 olmas\u0131 ve de\u011fer d\xf6nd\xfcrmesi i\xe7in. Say\u0131sal tip (`1`) ve string tip (`2`)\'nin toplanmas\u0131 s\u0131ras\u0131nda, say\u0131ya string olarak muamele edilir. Stringleri `\\"Hello\\" + \\"World\\"` \u015feklinde birle\u015ftirebiliriz, yani burada olan `\\"1\\" + \\"2\\"` ki bu da `\\"12\\"` d\xf6nd\xfcr\xfcr.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"**son ek**, **postfix**, `++` unary operat\xf6r\xfc:\\n\\n\\n1. De\u011fer d\xf6nd\xfcr\xfcr (`0` d\xf6nd\xfcr\xfcr)\\n2. De\u011feri artt\u0131r\u0131r (say\u0131 \u015fimdi `1`)\\n\\n**\xf6n ek**, **prefix**, `++` unary operat\xf6r\xfc:\\n\\n1. De\u011feri artt\u0131r\u0131r (say\u0131 \u015fimdi `2`)\\n2. De\u011feri d\xf6nd\xfcr\xfcr (`2` d\xf6nd\xfcr\xfcr)\\n\\nBurada `0 2 2` d\xf6ner.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"E\u011fer \\"tagged template literals\\" kullan\u0131rsanoz, ilk arguman\u0131n de\u011feri her zaman string de\u011ferler dizisidir. Geriye kalan argumanlar, ifadeye ge\xe7ilen de\u011ferleri al\u0131r.","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"E\u015fitli\u011fi test ederken, nesneler _referanslar\u0131na_ g\xf6re k\u0131yaslan\u0131rken primitifler _de\u011ferlerine_ g\xf6re k\u0131yaslan\u0131r. Javascript, nesnelerin referanslar\u0131n\u0131n haf\u0131zada ayn\u0131 konumda olup olmad\u0131\u011f\u0131n\u0131 kontrol eder.\\n\\nK\u0131yaslad\u0131\u011f\u0131m\u0131z iki nesne bu \u015fekilde de\u011filse: parametre olarak ge\xe7ti\u011fimiz nesne, haf\u0131zada e\u015fitli\u011fini kontrol etti\u011fimiz nesneden farkl\u0131 bir konumu referans g\xf6sterir.\\n\\nBu sebepten, `{ age: 18 } === { age: 18 }` ve `{ age: 18 } == { age: 18 }`, ikisi de `false` d\xf6nd\xfcr\xfcr.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"Yayma operator\xfc, \\"spread operator\\", (`...args`) argumanlar\u0131n dahil oldu\u011fu bir dizi d\xf6nd\xfcr\xfcr. Dizi bir nesnedir, bu y\xfczden `typeof args` `\\"object\\"` d\xf6nd\xfcr\xfcr.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"`\\"use strict\\"` ile, yanl\u0131\u015fl\u0131kla global de\u011fi\u015fkenler tan\u0131mlamad\u0131\u011f\u0131n\u0131zdan emin olabilirsiniz. `age` de\u011fi\u015fkenini hi\xe7 tan\u0131mlamad\u0131k ve `\\"use strict\\"` kulland\u0131\u011f\u0131m\u0131zdan, referans hatas\u0131 f\u0131rlatacakt\u0131r. E\u011fer `\\"use strict\\"` kullanmasayd\u0131k, `age` \xf6zelli\u011fi global nesneye eklenmi\u015f olaca\u011f\u0131ndan, \xe7al\u0131\u015fm\u0131\u015f olacakt\u0131.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval`, string olarak ge\xe7ilen kodu \xe7al\u0131\u015ft\u0131r\u0131r. E\u011fer bir ifadeyse, bu durumdaki gibi, ifadeyi \xe7al\u0131\u015ft\u0131r\u0131r. \u0130fade `10 * 10 + 5`. Bu `105` say\u0131s\u0131n\u0131 d\xf6nd\xfcr\xfcr.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"`sum`\'\u0131n de\u011feri nedir?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"`sessionStorage` i\xe7inde saklanan veri _sekme_ kapat\u0131ld\u0131ktan sonra kald\u0131r\u0131l\u0131r.\\n\\nE\u011fer `localStorage` kulland\u0131ysan\u0131z, veri sonsuza kadar orada olacakt\u0131r, \xf6rnek olarak `localStorage.clear()` \xe7al\u0131\u015ft\u0131r\u0131lmad\u0131\u011f\u0131 s\xfcrece.","id":21,"options":["Sonsuza kadar, veri kaybolmaz.","Kullan\u0131c\u0131 sekmeyi kapat\u0131nca.","Kullan\u0131c\u0131 tamamen taray\u0131c\u0131y\u0131 kapatt\u0131\u011f\u0131 zaman, sadece sekmeyi de\u011fil.","Kullan\u0131c\u0131 bilgisayar\u0131n\u0131 kapatt\u0131\u011f\u0131 zaman."],"question":"cool_secret ne kadar s\xfcre boyunca eri\u015febilinir?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"`var` anahtar kelimesi ile ayn\u0131 isme sahip birden \xe7ok de\u011fi\u015fken tan\u0131mlayabilirsiniz. O halde de\u011fi\u015fken son de\u011feri tutacak.\\n\\nBunu `let` ya da `const` ile yapamazs\u0131n\u0131z, \\"block-scoped\\" olduklar\u0131ndan dolay\u0131.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"T\xfcm nesne anahtarlar\u0131 (Symbol\'ler hari\xe7) arka planda string\'dir, kendiniz string olarak yazmasan\u0131z bile. Bu sebepten `obj.hasOwnProperty(\'1\')` da `true` d\xf6nd\xfcr\xfcr.\\n\\nSet i\xe7in bu \u015fekilde \xe7al\u0131\u015fmaz. Setimizde `\'1\'` yok: `set.has(\'1\')` `false` d\xf6nd\xfcr\xfcr. Setimiz say\u0131sal tip `1`\'e sahip, `set.has(1)` `true` d\xf6nd\xfcr\xfcr.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"E\u011fer ayn\u0131 ada sahip iki tane anahtar\u0131n\u0131z, \\"key\\", varsa, anahtar de\u011fi\u015ftirilecektir. Hala ilk konumunda olacakt\u0131r ama son belirtilen de\u011ferle birlikte.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":"Temel y\xfcr\xfctme konteksti, global y\xfcr\xfctme kontekstidir: kodunuzda her yerde eri\u015filebilir olan \u015feydir.","id":25,"options":["do\u011fru","yanl\u0131\u015f","de\u011fi\u015fir"],"question":"JavaScript global y\xfcr\xfctme konteksti, \\"global execution context\\", sizin i\xe7in iki \u015fey olu\u015fturur: global nesne, ve \\"this\\" anahtar kelimesi."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"E\u011fer belirli \u015fart `true` d\xf6nd\xfcr\xfcrse, `continue` ifadesi yinelemeyi, \\"iteration\\", atlar.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String`, \xf6zellikler de ekleyebilece\u011fimiz t\xfcmle\u015fik bir yap\u0131c\u0131d\u0131r. Prototipine bir method ekledim sadece. Primitif stringler, string prototip fonksiyonu taraf\u0131ndan \xfcretilen string nesnesine otomatik olarak d\xf6n\xfc\u015ft\xfcr\xfcl\xfcr. Bu y\xfczden, t\xfcm stringler (string nesneleri) bu methoda eri\u015febilir!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Nesne keyleri otomatik olarak stringe d\xf6n\xfc\u015ft\xfcr\xfcl\xfcr. `a` nesnesine de\u011feri `123` olacak \u015fekilde, bir nesneyi key olarak atamaya \xe7al\u0131\u015f\u0131yoruz.\\n\\nAncak, bir nesnesi string hale getirince, `\\"[object Object]\\"` olur. Dolay\u0131s\u0131yla burada s\xf6yledi\u011fimiz, `a[\\"object Object\\"] = 123`. Sonra, ayn\u0131 \u015feyi tekrar yapmay\u0131 deniyoruz. `c`, dolayl\u0131 olarak string hale getirdi\u011fimiz ba\u015fka bir nesne. O halde, `a[\\"object Object\\"] = 456`.\\n\\nSonra, `a[b]`\'yi logluyoruz, ki asl\u0131nda o da `a[\\"object Object\\"]`. Onu da `456` olarak atam\u0131\u015ft\u0131k, o y\xfczden `456` d\xf6nd\xfcr\xfcr.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Bir `setTimeout` fonksiyonumuz var ve ilk onu \xe7al\u0131\u015ft\u0131rd\u0131k. Yine de en son logland\u0131.\\n\\nBunun nedeni taray\u0131c\u0131larda, \\"runtime engine\\"\'a sahip olmamam\u0131zdan, `WebAPI` denilen bir \u015feye sahibiz. `WebAPI`, \xf6rne\u011fin DOM ile \xe7al\u0131\u015fmas\u0131 i\xe7in bize, `setTimeout` fonksiyonunu verir.\\n\\n_callback_ WebAPI\'a eklendikten sonra, `setTimeout` fonksiyonun kendisi (callback hari\xe7!) haf\u0131za blo\u011fundan at\u0131l\u0131r, \\"popped off the stack\\".\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\u015eimdi, `foo` \xe7al\u0131\u015ft\u0131 ve `\\"First\\"` logland\u0131.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` haf\u0131za blo\u011fundan at\u0131ld\u0131 ve `baz` \xe7al\u0131\u015ft\u0131. `\\"Third\\"` logland\u0131.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI, her ne zaman bir \u015feyler haz\u0131rsa haf\u0131za blo\u011funa \xf6ylece ekleyemez. Onun yerine callback fonksiyonunu, _queue_ diye adland\u0131ralan bir \u015feye ekler.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nBuras\u0131 olay d\xf6ng\xfcs\xfcn\xfcn \xe7al\u0131\u015fmaya ba\u015flayacap\u0131 yerdir. **olay d\xf6ng\xfcs\xfc**, **event loop**, haf\u0131za blo\u011funa ve i\u015f kuyru\u011funa, \\"task queue\\", bakar. E\u011fer haf\u0131za blo\u011fu bo\u015fsa, kuyruktaki ilk \u015feyi al\u0131r ve haf\u0131za blo\u011funa ekler.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` \xe7al\u0131\u015ft\u0131, `\\"Second\\"` logland\u0131 ve haf\u0131za blo\u011fundan at\u0131ld\u0131.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"Olaya sebep olan en derindeki i\xe7 eleman, olay\u0131n hedefidir (\\"event.target\\"). `event.stopPropagation` kullanarak \\"bubbling\\"\'i durdurabilirsiniz.","id":30,"options":["D\u0131\u015ftaki `div`","\u0130\xe7teki `div`","`button`","\u0130\xe7 i\xe7e olan t\xfcm elemanlar listesi."],"question":"Butona t\u0131kland\u0131\u011f\u0131nda, event.target nedir?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"E\u011fer `p`\'ye t\u0131klarsak, iki log g\xf6r\xfcr\xfcz: `p` ve `div`. Olay silsilesi, \\"event propagation\\", s\u0131ras\u0131nda, 3 a\u015fama vard\u0131r: \\"capturing\\", \\"target\\", ve \\"bubbling\\". Varsay\u0131lan olarak, olay i\u015fleyiciler, \\"event handlers\\", \\"bubbling\\" a\u015famas\u0131nda (`useCapture`\'\u0131 `true` olarak ayarlanmad\u0131\u011f\u0131 m\xfcddet\xe7e) \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. En derin elemandan d\u0131\u015fa do\u011fru gider.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Paragrafa t\u0131klad\u0131\u011f\u0131n\u0131z zaman, \xe7\u0131kt\u0131 olarak ne loglan\u0131r?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"\u0130kisinde de, `this` anahtar kelimesinin referans olmas\u0131n\u0131 istedi\u011fimiz nesneyi ge\xe7ebiliriz. Ancak, `.call` _an\u0131nda \xe7al\u0131\u015ft\u0131r\u0131l\u0131r_!\\n\\n`.bind.` fonksiyonun _kopyas\u0131n\u0131_ d\xf6nd\xfcr\xfcr, ama konteksle ba\u011fl\u0131 \u015fekilde. An\u0131nda \xe7al\u0131\u015ft\u0131r\u0131lmaz.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"`sayHi` fonksiyonu, an\u0131nda \xe7al\u0131\u015ft\u0131r\u0131lan fonksiyonun, \\"immediately invoked function (IIFE)\\", d\xf6nd\xfcrd\xfc\u011f\xfc de\u011feri d\xf6nd\xfcr\xfcr. Bu fonksiyon `0` d\xf6nd\xfcrd\xfc, k, tipi `\\"number\\"`\'d\u0131r.\\n\\nBilginize; 7 tane t\xfcmle\u015fik tip vard\u0131r: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, ve `bigint`. Fonksiyonlar nesne olduklar\u0131ndan, `\\"function\\"` tip de\u011fildir. Fonksiyonun tipi `\\"object\\"`\'dir.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Sadece 6 tane yanl\u0131\u015f-\u0131ms\u0131, \\"falsy\\", de\u011fer vard\u0131r:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (empty string)\\n- `false`\\n\\nFonksiyon yap\u0131c\u0131lar\u0131, `new Number` ve `new Boolean` gibi, do\u011frusald\u0131r.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"Bu de\u011ferlerden hangileri yanl\u0131\u015f-\u0131ms\u0131d\u0131r (falsy)?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` `\\"number\\"` d\xf6nd\xfcr\xfcr.\\n`typeof \\"number\\"` `\\"string\\"` d\xf6nd\xfcr\xfcr.","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Dizi i\xe7inde, dizinin uzunlu\u011funu a\u015fan bir elemana de\u011fer atad\u0131\u011f\u0131n\u0131zda, JavaScript \\"bo\u015f alanlar, \\"empty slots\\", denilen bir \u015fey olu\u015fturur. Bunlar\u0131n de\u011feri asl\u0131nda `undefined` olsa da \u015f\xf6yle bir \u015fey g\xf6r\xfcrs\xfcn\xfcz:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\nnerede \xe7al\u0131\u015ft\u0131rd\u0131\u011f\u0131n\u0131za ba\u011fl\u0131 olarak (her taray\u0131c\u0131, node, vb... i\xe7in farkl\u0131d\u0131r.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"`catch` blo\u011fu `x` arguman\u0131n\u0131 al\u0131yor. Argumanlar\u0131 ge\xe7ti\u011fimiz zaman, bu de\u011fi\u015fken olan `x` ile ayn\u0131 de\u011fildir. Bu `x` de\u011fi\u015fkeni block-scoped\'dur.\\n\\nSonra, bu block-scoped de\u011fi\u015fkeni `1`\'e e\u015fit olarak ayarlad\u0131k ve `y` de\u011fi\u015fkeninin de\u011ferini ayarlad\u0131k. Block-scoped `x` de\u011fi\u015fkenini loglad\u0131k, ki de\u011feri `1`\'e e\u015fitti.\\n\\n`catch` blo\u011funun d\u0131\u015f\u0131nda, `x` hala `undefined`, ve `y` `2`\'dir. `catch` blo\u011funun d\u0131\u015f\u0131nda, `console.log(x)` \xe7al\u0131\u015ft\u0131rmak istedi\u011fimizde `undefined` d\xf6nd\xfcr\xfcr ve `y` `2` d\xf6nd\xfcr\xfcr.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":"JavaScript sadece primitif ve nesne tiplerine sahiptir.\\n\\nPrimitif tipler, `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, ve `symbol`.\\n\\nPrimitif ve nesneyi birbirinden ay\u0131ran, primitif tiplerin herhangi bir \xf6zelli\u011fe ya da metoda sahip olmamas\u0131d\u0131r; ancak, fark edece\u011finiz \xfczere `\'foo\'.toUpperCase()` `\'FOO\'` olarak de\u011fer d\xf6nd\xfcr\xfcr ve `TypeError` ile sonu\xe7lanmaz. Bunun sebebi, string gibi primitif bir tip \xfczerinde \xf6zelli\u011fe ya da methoda eri\u015fmeye \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131zda, JavaScript sar\u0131c\u0131 s\u0131n\u0131flardan, \\"wrapper classes\\", birini kullanarak nesneyi dolayl\u0131 \u015fekilde sarar, \xf6rne\u011fin `String`, ve sonras\u0131nda ifade \xe7al\u0131\u015ft\u0131ktan sonra an\u0131nda sar\u0131c\u0131y\u0131 ay\u0131r\u0131r. `null` ve `undefined` d\u0131\u015f\u0131ndaki t\xfcm primitifler bu \u015fekilde davran\u0131r.","id":38,"options":["primitifdir ya da nesnedir","fonksiyondur or nesnedir","tuzak soru! sadece nesnedir","say\u0131d\u0131r (number) ya da nesnedir"],"question":"JavaScript\'teki her \u015fey ya bir..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` ba\u015flang\u0131\xe7 de\u011ferimizdir. Ba\u015flad\u0131\u011f\u0131m\u0131z de\u011fer budur ve `acc`\'nin en ilk de\u011feridir. \u0130lk tur s\xfcresince, `acc` `[1,2]`\'dir ve `cur` `[0, 1]`\'dir. Onlar\u0131 birle\u015ftiririz ve `[1, 2, 0, 1]` olarak sonu\xe7lan\u0131r.\\n\\nSonra, `acc` `[1, 2, 0, 1]`\'dir ve `cur` `[2, 3]`\'d\xfcr. Onlar\u0131 birle\u015ftiririz ve `[1, 2, 0, 1, 2, 3]` elde ederiz.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` yanl\u0131\u015f-\u0131ms\u0131d\u0131r, \\"falsy\\". `!null` `true` d\xf6nd\xfcr\xfcr. `!true` `false` d\xf6nd\xfcr\xfcr.\\n\\n`\\"\\"` yanl\u0131\u015f-\u0131ms\u0131d\u0131r. `!\\"\\"` `true` d\xf6nd\xfcr\xfcr. `!true` `false` d\xf6nd\xfcr\xfcr.\\n\\n`1` do\u011frusald\u0131r. `!1` `false` d\xf6nd\xfcr\xfcr. `!false` `true` d\xf6nd\xfcr\xfcr.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Benzersiz bir id d\xf6nd\xfcr\xfcr. Bu id, s\xfcre aral\u0131\u011f\u0131n\u0131, \\"interval\\", `clearInterval()` fonksiyonu ile temizlemek i\xe7in kullan\u0131labilinir.","id":41,"options":["benzersiz bir id","belirtilen milisayine tutar\u0131","g\xf6nderilen fonksiyon","`undefined`"],"question":"`setInterval` methodu taray\u0131c\u0131da ne d\xf6nd\xfcr\xfcr?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"String, yinelenebilirdir, \\"iterable\\". Yayma operat\xf6r\xfc, yenilenebilirin her bir karakterini bir elemana e\u015fler.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"Ne d\xf6nd\xfcr\xfcr?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"S\u0131radan fonksiyonlar y\xfcr\xfctmenin ba\u015flamas\u0131n\u0131n ard\u0131ndan yar\u0131 yolda durdurulamaz. Ancak, bir generator fonksiyon yar\u0131 yolda \\"durdurabilir\\" ve sonra nerede kald\u0131ysa devam edebilir. Bir generator fonksiyon ne zaman `yield` anahtar kelimesiyle kar\u015f\u0131la\u015fsa, yield\'de belirtilen de\u011feri verir. Dikkat edin, generator fonksiyon de\u011feri _d\xf6nd\xfcrmez_ (_return_), de\u011feri _verir_ (_yield_). \\n\\n\xd6nce, generator fonksiyonu `i`\'yi `10`\'a e\u015fitleyerek ba\u015flat\u0131yoruz. `next()` metodunu kullanarak generator fonksiyonu \xe7al\u0131\u015ft\u0131r\u0131yoruz. \u0130lk kez generator fonksiyonu \xe7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda, `i` `10`\'a e\u015fit. Fonksiyon ilk `yield` anahtar kelimesi ile kar\u015f\u0131la\u015f\u0131yor: `i`\'nin de\u011ferini veriyor. Generat\u0131r \u015fimdi \\"durdu\\", ve `10` logland\u0131.\\n\\nSonra, `next()` metodunu kullanarak fonksiyonu tekrar \xe7al\u0131\u015ft\u0131r\u0131yoruz. Fonksiyon \xf6nceki kald\u0131\u011f\u0131 yerden \xe7al\u0131\u015fmaya devam ediyor, `i` hala `10`\'a e\u015fit. \u015eimdi, fonksiyon s\u0131raki `yield` anahtar kelimesi ile kar\u015f\u0131la\u015f\u0131yor, ve `i * 2`\'yi veriyor, yani fonksiyon `10 * 2` veriyor, ki o da `20`\'dir. `10, 20` \u015feklinde sonu\xe7lan\u0131yor.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"`Promise.race` methoduna bir\xe7ok promise ge\xe7ti\u011fimiz zaman, _ilk_ \xe7\xf6z\xfcmlenen/reddedilen, \\"resolves/rejects\\", promise\'i \xe7\xf6z\xfcmler/reddeder . `setTimeout` methoduna, zamanlay\u0131c\u0131, \\"timer\\", ge\xe7tik: ilk promise (`firstPromise`) i\xe7in 500ms, ve ikinci promise (`secondPromise`) i\xe7in 100ms. Bu demektir ki `secondPromise` `\'two\'` de\u011feriyle birlikte \xf6nce \xe7\xf6z\xfcmlenir. `res` saklad\u0131\u011f\u0131 `\'two\'` de\u011feriyle loglan\u0131r.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"Ne d\xf6nd\xfcr\xfcr?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\xd6nce, `person` de\u011fi\u015fkenini, `name` \xf6zelli\u011fine sahip bir nesne de\u011feriyle birlikte tan\u0131mlar\u0131z.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nSonra, `members` olarak adland\u0131rd\u0131\u011f\u0131m\u0131z de\u011fi\u015fkeni tan\u0131mlar\u0131z. Bu dizinin ilk eleman\u0131n\u0131, `person` de\u011fi\u015fkeninin de\u011ferine e\u015fit olarak ayarlar\u0131z. Nesneler, birbirlerine e\u015fitlendiklerinde, _referans_ \xfczerinden etkile\u015fime girer. Bir referans\u0131, bir de\u011fi\u015fkenden di\u011ferine atad\u0131\u011f\u0131n\u0131z zaman, o referans\u0131n _kopyas\u0131n\u0131_ olu\u015fturursunuz. (de\u011fi\u015fkenlerin _ayn\u0131_ referansa sahip olmad\u0131\u011f\u0131na dikkat edin!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nSonra, `person` de\u011fi\u015fkenini `null`\'a e\u015fit olarak ayarlar\u0131z.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nSadece `person` de\u011fi\u015fkeninin de\u011ferini de\u011fi\u015ftiriyoruz, dizideki ilk eleman\u0131 de\u011fil, ilk eleman nesneyi g\xf6steren farkl\u0131 (kopyalanm\u0131\u015f) bir referansa sahip. `members` i\xe7indeki ilk eleman hala orijinal nesneyi g\xf6steren referans\u0131n\u0131 sakl\u0131yor. `members` dizisini loglad\u0131\u011f\u0131m\u0131z zaman, ilk eleman\u0131n hala saklad\u0131\u011f\u0131 nesnenin de\u011feri loglan\u0131r.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"`for-in` d\xf6ng\xfcs\xfcyle, nesne keyleri boyunca ileryebiliriz, bu durumda `name` ve `age`. Temelde, nesne keyleri stringdir (e\u011fer Symbol de\u011filse). Her d\xf6ng\xfcde, `item`\'in de\u011ferini, d\xf6ng\xfc s\u0131ras\u0131ndaki ge\xe7erli key olarak e\u015fitleriz. \xd6nce, `item` `name`\'e e\u015fittir, ve loglan\u0131r. Sonra loglanan `item`, `age`\'e e\u015fittir.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"Operat\xf6r birle\u015fme \xf6zelli\u011fi, \\"operator associativity, derleyicinin ifadeleri \xe7al\u0131\u015ft\u0131rd\u0131\u011f\u0131 s\u0131rad\u0131r, ya soldan sa\u011fa ya da sa\u011fdan solad\u0131r. Bu sadece, e\u011fer t\xfcm operat\xf6rler _ayn\u0131_ \xf6nceli\u011fe sahipse ger\xe7ekle\u015fir. Sadece tek tip operat\xf6r\xfcm\xfcz var: `+`. Toplama i\xe7in birle\u015fme \xf6zelli\u011fi soldan sa\u011fad\u0131r.\\n\\n`3 + 4` \xf6nce \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. `7` say\u0131s\u0131 olarak sonu\xe7lan\u0131r.\\n\\nTip bask\u0131s\u0131ndan, \\"coercion\\", dolay\u0131 `7 + \'5\'`, `\\"75\\"` olarak sonu\xe7lan\u0131r. JavaScript `7` say\u0131s\u0131n\u0131 string\'e \xe7evirir, 15. soruya bakabilirsiniz. \u0130ki string\'i `+` operat\xf6r\xfcn\xfc kullanarak birle\u015ftirebiliriz. `\\"7\\" + \\"5\\"` `\\"75\\"` olarak sonu\xe7lan\u0131r.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Sadece string i\xe7indeki ilk say\u0131lar d\xf6nd\xfcr\xfcl\xfcr. _Say\u0131 taban\u0131na_ (hangi tipte say\u0131ya \xe7\xf6z\xfcmlemek istedi\u011fimizi belirtmek i\xe7in ge\xe7ilen ikinci arg\xfcman: 10\'lu, onalt\u0131l\u0131, sekizli, ikili tabanda vb...) ba\u011fl\u0131 olarak, `parseInt` string i\xe7indeki hangi karakterlerin ge\xe7erli oldu\u011funu kontrol eder. Say\u0131 taban\u0131nda, ge\xe7erli olmayan bir karaktere denk geldi\u011finde, \xe7\xf6z\xfcmleyi durdurur ve sonraki gelen karakterleri g\xf6rmezden gelir.\\n\\n`*` ge\xe7erli bir say\u0131 de\u011fil. `parseInt` sadece `\\"7\\"`\'yi ondal\u0131k sistemde `7`\'ye \xe7\xf6z\xfcmler. `num`, `7` de\u011ferini sakl\u0131yor art\u0131k.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"`num` \u0131n de\u011feri nedir?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Dizi \xfczerinde e\u015fleme yaparken, `num`\'\u0131n de\u011feri, o anda d\xf6ng\xfcye giren eleman\u0131n de\u011ferine e\u015fittir. Bu durumda, elemanlar say\u0131, yani `typeof num === \\"number\\"` ko\u015ful ifadesi `true` durdurur. map fonksiyonu yeni bir dizi olu\u015fturur ve fonksiyondan d\xf6nen de\u011ferleri yerle\u015ftirir. \\n\\nAncak, biz de\u011fer d\xf6nd\xfcrm\xfcyoruz. Bir fonksiyondan de\u011fer d\xf6nd\xfcrmedi\u011fimiz zaman, fonksiyon `undefined` d\xf6nd\xfcr\xfcr. Dizideki her eleman i\xe7in, fonksiyon blo\u011fu \xe7a\u011fr\u0131l\u0131r, yani her bir eleman i\xe7in `undefined` d\xf6nd\xfcr\xfcr\xfcz.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir`?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Arg\xfcmanlar _de\u011fer_ olarak ge\xe7ilir, de\u011ferleri nesne olmad\u0131klar\u0131 m\xfcddet\xe7e, e\u011fer \xf6yleyse _referans_ olarak ge\xe7ilir. `birthYear` nesne de\u011fil string oldu\u011fundan de\u011fer olarak ge\xe7ilir. Arg\xfcmanlar\u0131 de\u011fer olarak ge\xe7ti\u011fimizde, o de\u011ferin bir _kopyas\u0131_ olu\u015fturulur (46. soruya g\xf6z at\u0131n).\\n\\n`birthYear` de\u011fi\u015fkeni `\\"1997\\"` de\u011feri i\xe7in referansa sahip. `year` arg\xfcman\u0131 da ayr\u0131ca `\\"1997\\"` de\u011feri i\xe7in referansa sahip, ama `birthYear`\'\u0131n sahip oldu\u011fu referans\u0131n de\u011feri ile ayn\u0131 de\u011fer de\u011fil. `year`\'\u0131n de\u011ferini `\\"1998\\"`\'e e\u015fit olarak ayarlay\u0131p g\xfcncelledi\u011fimizde, sadece `year`\'\u0131n de\u011ferini g\xfcncelleriz. `birthYear` hala `\\"1997\\"`\'e e\u015fittir.\\n\\n`person`\'\u0131n de\u011feri bir nesnedir. `member` arg\xfcman\u0131 _ayn\u0131_ nesne i\xe7in (kopyalanm\u0131\u015f) referansa sahip. `member` nesnesinin \xf6zelli\u011fini de\u011fi\u015ftirdi\u011fimizde, `person`\'\u0131n de\u011feri de ayr\u0131ca de\u011fi\u015fmi\u015f olacakt\u0131r, ikisi de ayn\u0131 nesne i\xe7in referansa sahip olduklar\u0131ndan. `person`\'\u0131n `name` \xf6zelli\u011fi \u015fimdi `\\"Lydia\\"` de\u011ferine e\u015fittir.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"`throw` ifadesi ile, \xf6zelle\u015ftirilmi\u015f hatalar olu\u015fturabiliriz. Bu ifade ile, hatalar f\u0131rlatabilirsiniz. Hata durumu, \\"exception\\", bir <b>string</b>, <b>say\u0131</b>, <b>do\u011fru/yanl\u0131\u015f</b> ya da <b>nesne</b> olabilir. Bu durumda, bizim hata durumumuz string olan `\'Hello world\'`.\\n\\n`catch` ifadesi ile, e\u011fer `try` blo\u011funda bir hata durumu f\u0131rlat\u0131lm\u0131\u015fsa ne yapaca\u011f\u0131m\u0131z\u0131 belirtebiliriz. Bir hata durumu f\u0131rlat\u0131ld\u0131: `\'Hello world\'` string\'i. `e` art\u0131k bu string\'e e\u015fit, ki onu logluyoruz. `\'Oh an error: Hello world\'` olarak sonu\xe7 veriyor.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error: Hello world!`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Bir \xf6zellik d\xf6nd\xfcrd\xfc\u011f\xfcn\xfcz zaman, \xf6zelli\u011fin de\u011feri _d\xf6nd\xfcr\xfclen_ de\u011fere e\u015fittir, yap\u0131c\u0131 fonksiyon i\xe7inde atanm\u0131\u015f de\u011fere de\u011fil. `\\"Maserati\\"` string\'ini d\xf6nd\xfcr\xfcyoruz, yani `myCar.make` `\\"Maserati\\"`\'ye e\u015fittir.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` asl\u0131nda \u015funun i\xe7in k\u0131sa yaz\u0131md\u0131r:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\n`y`\'yi `10`\'a e\u015fit olarak ayarlad\u0131\u011f\u0131m\u0131zda, asl\u0131nda global nesneye `y` \xf6zelli\u011fini ekliyoruz (taray\u0131c\u0131da `window`, Node i\xe7inde `global`). Taray\u0131c\u0131da, `window.y` art\u0131k `10`\'a e\u015fit.\\n\\nSonra, `x` de\u011fi\u015fkenini `y`\'nin de\u011feri ile birlkte tan\u0131ml\u0131yoruz ki o da `10`. `let` anahtar kelimesi ile tan\u0131mlanan de\u011fi\u015fkenler _block scope_\'dur, onlar sadece tan\u0131mland\u0131klar\u0131 blok i\xe7inde s\u0131n\u0131rl\u0131d\u0131r; bu durumda an\u0131nda \xe7al\u0131\u015ft\u0131r\u0131lan fonksiyon, \\"immediately-invoked function (IIFE)\\", ile s\u0131n\u0131rl\u0131. `typeof` operat\xf6r\xfcn\xfc kulland\u0131\u011f\u0131m\u0131z zaman, `x` operand\u0131 tan\u0131ml\u0131 de\u011fil: `x`\'e tan\u0131mland\u0131\u011f\u0131 blo\u011fun d\u0131\u015f\u0131ndan eri\u015fmeye \xe7al\u0131\u015f\u0131yoruz. Bu, `x` tan\u0131mlanmad\u0131 demektir. Bir de\u011fer atamas\u0131 yap\u0131lmam\u0131\u015f ya da tan\u0131mlanmam\u0131\u015f de\u011ferlerin tipi `\\"undefined\\"`\'d\u0131r. `console.log(typeof x)` `\\"undefined\\"` d\xf6nd\xfcr\xfcr.\\n\\nAncak, `y`\'yi `10`\'a e\u015fitlerken global de\u011fi\u015fken `y`\'yi olu\u015fturduk. Bu de\u011fer kodunuzun herhangi bir yerinden eri\u015filebilinir. `y` tan\u0131ml\u0131 ve `\\"number\\"` tipinde de\u011feri sakl\u0131yor. `console.log(typeof y)` `\\"number\\"` d\xf6nd\xfcr\xfcr.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"`Set` nesnesi _benzersiz_ de\u011ferlerin koleksiyonudur: bir de\u011fer, set i\xe7inde sadece bir kez bulunabilir.\\n\\nYinelenebilir `[1, 1, 2, 3, 4]`\'i \xe7ift `1` de\u011feriyle birlikte ge\xe7tik. Set i\xe7inde ayn\u0131 de\u011fere iki kere sahip olamayaca\u011f\u0131m\u0131zdan, bir tanesi kald\u0131r\u0131ld\u0131. Sonu\xe7, `{1, 2, 3, 4}`.","id":54,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"\u0130\xe7e aktar\u0131lan, \\"imported\\", modul _salt okur_\'dur: i\xe7e aktar\u0131lan modul\xfc de\u011fi\u015ftiremezsiniz. Sadece, d\u0131\u015fa aktar\u0131m yapan modul de\u011ferini de\u011fi\u015ftirebilir.\\n\\n`myCounter`\'\u0131n de\u011ferini artt\u0131rmaya \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z zaman, hata f\u0131rlat\u0131r: `myCounter` salt okurdur ve de\u011fi\u015ftirilemez.","id":55,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"`delete` operat\xf6r\xfc do\u011fru/yanl\u0131\u015f, \\"boolean\\", de\u011fer d\xf6nd\xfcr\xfcr: silme ba\u015far\u0131l\u0131ysa `true`, de\u011filse `false` d\xf6nd\xfcrecektir. Ancak, `var`, `const` ya da `let` anahtar kelimeleri ile tan\u0131mlanan de\u011fi\u015fkenler, `delete` kullan\u0131larak silinemez.\\n\\n`name` de\u011fi\u015fkeni `const` anahtar kelimesi ile tan\u0131mland\u0131, yani silinme i\u015flemi ba\u015far\u0131l\u0131 de\u011fil: `false` d\xf6nd\xfc. `age`\'i `21`\'e e\u015fitledi\u011fimizde, global nesneye `age` diye \xf6zellik ekledik asl\u0131nda. Bu y\xf6ntemle, sorunsuz \u015fekilde nesnelerden \xf6zellikleri silebilirsiniz, b\xf6ylelikle `delete age` `true` d\xf6nd\xfcr\xfcr.","id":56,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"Listelerden de\u011ferleri ya da nesnelerden \xf6zellikleri, y\u0131k\u0131m yoluyla, \\"destructuring\\", \xe7\u0131karabiliriz. \xd6rne\u011fin:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\n`a`\'n\u0131n de\u011feri `1` ve `b`\'nin de\u011feri `2`\'dir. Bu soruda asl\u0131nda yapt\u0131\u011f\u0131m\u0131z \u015fuydu:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nBu demektir ki, `y`\'nin de\u011feri dizideki ilk de\u011fere e\u015fit, o da `1` say\u0131s\u0131d\u0131r. `y`\'yi loglad\u0131\u011f\u0131m\u0131z zaman, `1` d\xf6nd\xfcr\xfcl\xfcr.","id":57,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"Nesneleri `...` yayma operat\xf6r\xfc kullanarak birle\u015ftirmek, kombine etmek, m\xfcmk\xfcnd\xfcr. Bir nesnenin key/de\u011fer kopyas\u0131n\u0131 olu\u015fturman\u0131za olanak sunar, ve key/de\u011ferleri di\u011fer nesneye ekler. Bu durumda, `user` nesnesinin kopyas\u0131n\u0131 olu\u015fturuyoruz, ve onlar\u0131 `admin` nesnesine ekliyoruz. `admin` nesnesi \u015fimdi kopyalanan key/de\u011ferleri de i\xe7eriyor, ki bu da `{ admin: true, name: \\"Lydia\\", age: 21 }` olarak sonu\xe7 verir.","id":58,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"`defineProperty` methodu ile, nesnelere yeni \xf6zellikler ekleyebiliriz, ya da var olanlar\u0131 de\u011fi\u015ftirebiliriz. `defineProperty` methodu kullanarak bir nesneye \xf6zellik ekledi\u011fimiz zaman, varsay\u0131lan olarak _s\u0131ralanabilir de\u011fildir_, \\"_not enumerable_\\". `Object.keys` methodu, bir nesneden t\xfcm _s\u0131ralanabilir_ \xf6zelliklerin ad\u0131n\u0131 d\xf6nd\xfcr\xfcr, bu durumda sadece `\\"name\\"`.\\n\\n`defineProperty` methodu kullan\u0131larak eklenen \xf6zellikler, varsay\u0131lan olarak de\u011fi\u015fmezdir. Bu davran\u0131\u015f\u0131 `writable`, `configurable` ve `enumerable` kullaranak ezebilirsiniz. Bu y\xf6ntemle, `defineProperty` methodu nesnelere ekledi\u011finiz \xf6zellikler \xfczerinde size \xe7ok daha fazla kontrol verir.","id":59,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"`JSON.stringify`\'\u0131n ikinci arguman\u0131 _de\u011fi\u015ftiricidir_, _\\"replacer\\"_. De\u011fi\u015ftirici bir fonksiyon ya da bir dizi olabilir, ve de\u011ferlerin hangilerinin ve nas\u0131l string\'e d\xf6n\xfc\u015fece\u011fini kontrol etmenize izin verir.\\n\\nE\u011fer de\u011fi\u015ftirici _dizi_ ise, sadece dizi i\xe7inde ismi ge\xe7em \xf6zellikler JSON string\'e dahil edilmi\u015f olur. Bu durumda, sadece  `\\"level\\"` ve `\\"health\\"` isimli \xf6zellikler dahil edildi, `\\"username\\"` d\u0131\u015far\u0131da b\u0131rak\u0131ld\u0131. `data`, `\\"{\\"level\\":19, \\"health\\":90}\\"` e\u015fittir.\\n\\nE\u011fer de\u011fi\u015ftirici _fonksiyon_ ise, stringe d\xf6n\xfc\u015ft\xfcr\xfclen her \xf6zellik i\xe7in bu fonksiyon \xe7a\u011fr\u0131l\u0131r. Bu fonksiyondan d\xf6nen de\u011fer, JSON stringe eklenmi\u015f olacak \xf6zelli\u011fin de\u011feri olacakt\u0131r. E\u011fer de\u011fer `undefined`\'sa, bu \xf6zellik JSON stringe dahil edilmez.","id":60,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"`++` unary operat\xf6r\xfc _\xf6nce_ operand\u0131n de\u011ferini d\xf6nd\xfcr\xfcr, _sonra_ operand\u0131n de\u011ferini artt\u0131r\u0131r. `increaseNumber` fonksiyonu \xf6nce de\u011feri `10` olan `num`\'\u0131n de\u011ferini d\xf6nd\xfcrd\xfc\u011f\xfcnden, `num1`\'\u0131n de\u011feri `10`\'dur, ve `num`\'\u0131n de\u011feri ancak bundan sonra artar.\\n\\n`increasePassedNumber`\'a `num1`\'i ge\xe7ti\u011fimizden, `num2`\'nin de\u011feri `10`\'dur. `number` `10`\'a e\u015fittir (`num1`\'\u0131n de\u011feri. Bir kez daha, `++` operat\xf6r\xfc _\xf6nce_ operand\u0131n de\u011ferini d\xf6nd\xfcr\xfcr, _sonra_ operand\u0131n de\u011ferini artt\u0131r\u0131r. `number`\'\u0131n de\u011feri `10`, yani `num2` `10`\'a e\u015fittir.)","id":61,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"`reduce` methodunun ald\u0131\u011f\u0131 ilk arg\xfcman _biriktiricidir_, \\"_accumulator_\\", bu \xf6rnekte `x`. \u0130kinci arg\xfcman _o anki de\u011ferdir_, `y`. reduce methodu ile, dizideki her eleman \xfczerinde callback fonksiyonunu \xe7al\u0131\u015ft\u0131r\u0131r\u0131z, bu da en sonunda tek bir de\u011fer sonu\xe7lanabilir.\\n\\nBu \xf6rnekte, geriye bir de\u011fer d\xf6nd\xfcrm\xfcyoruz, sadece biriktiricinin de\u011ferini ve o anki de\u011feri logluyoruz.\\n\\nBiriktiricinin de\u011feri, bir \xf6nceki callback fonksiyonunun d\xf6nen de\u011ferine e\u015fittir. E\u011fer, opsiyonel olan `initialValue` ag\xfcman\u0131n\u0131 `reduce` methoduna ge\xe7mezseniz, biriktiricinin de\u011feri, ilk \xe7a\u011fr\u0131l\u0131\u015fta gelen elemana e\u015fit olur.\\n\\n\u0130lk \xe7a\u011fr\u0131l\u0131\u015fta, biriktirici (`x`) `1`\'dir, ve `y`\'nin o anki de\u011feri `2`\'dir. callback fonksiyonundan bir \u015fey d\xf6nd\xfcrm\xfcyoruz, biriktiriciyi ve o anki de\u011feri logluyoruz: `1`  ve `2` loglan\u0131r.\\n\\nE\u011fer bir fonksiyondan de\u011fer d\xf6nd\xfcrmezseniz, fonksiyon `undefined` d\xf6nd\xfcr\xfcr. Sonraki \xe7a\u011fr\u0131l\u0131\u015fta, biriktirici `undefined`, ve o anki ge\xe7erli de\u011fer `3`\'t\xfcr. `undefined` ve `3` loglan\u0131r.\\n\\nD\xf6rd\xfcnd\xfc \xe7a\u011fr\u0131da, tekrar callback fonksiyonundan de\u011fer d\xf6nd\xfcrm\xfcyoruz. Biriktirici tekrar `undefined`, ve o anki ge\xe7erli de\u011fer `4`. `undefined` ve `4` loglan\u0131r.","id":62,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"T\xfcretilmi\u015f bir s\u0131n\u0131fta, `super`\'i \xe7a\u011f\u0131rmadan \xf6nce `this` anahtar kelimesine eri\u015femezsiniz. E\u011fer eri\u015fmeyi denerseniz, ReferenceError f\u0131rlat\u0131r: 1 ve 4 referans hatas\u0131 f\u0131rlat\u0131r.\\n\\n`super` anahtar kelimesiyle, parent s\u0131n\u0131f\u0131n yap\u0131c\u0131 methodunu verilen arg\xfcmanlarla beraber \xe7a\u011f\u0131r\u0131r\u0131z. Parent s\u0131n\u0131f\u0131n yap\u0131c\u0131s\u0131 `name` arg\xfcman\u0131n\u0131 al\u0131yor, bu y\xfczden `super`\'e `name`\'i vermemiz gerek.\\n\\n`Dog` s\u0131n\u0131f\u0131 iki arg\xfcman al\u0131yor, `name` `Animal` s\u0131n\u0131f\u0131ndan t\xfcredi\u011finden, ve `size` `Dog` s\u0131n\u0131f\u0131 \xfczerinde ekstra \xf6zellik olarak. \u0130kisinin de `Dog` yap\u0131c\u0131 methoduna  ge\xe7ilmesi gerek, bu da 2. yap\u0131c\u0131 methodda do\u011fru \u015fekilde kullan\u0131larak yap\u0131lm\u0131\u015ft\u0131r.","id":63,"options":["1","2","3","4"],"question":"Hangi yap\u0131c\u0131 method (constructor) ile `Dog` s\u0131n\u0131f\u0131ndan ba\u015far\u0131l\u0131 \u015fekilde kal\u0131t\u0131m yapabiliriz?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"`import` anahtar kelimesiyle, t\xfcm i\xe7e aktar\u0131lan mod\xfcller _ilk \xe7\xf6z\xfcmlenir_, \\"_pre-parsed_\\". Bu \u015fu demektir, i\xe7e aktar\u0131lan mod\xfcller _\xf6nce_ \xe7al\u0131\u015f\u0131r, i\xe7e aktar\u0131m yapan dosyadaki kodlar _sonra_ \xe7al\u0131\u015ft\u0131r\u0131l\u0131r.\\n\\nCommonJS\'deki `require()` ve `import` aras\u0131ndaki fark budur! `require()` ile, ba\u011f\u0131ml\u0131l\u0131klar\u0131 kod \xe7al\u0131\u015fmaya ba\u015flad\u0131\u011f\u0131nda y\xfckleyebilirsiniz. `import` yerine `require` kullanm\u0131\u015f olsayd\u0131k, `running index.js`, `running sum.js`, `3` konsolda loglanm\u0131\u015f olacakt\u0131.","id":64,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"Her Symbol tamamen benzersizdir. Symbol\'e ge\xe7ilen arg\xfcman\u0131n amac\u0131, Symbol\'e bir a\xe7\u0131klama vermektir. Symbol\'\xfcn de\u011feri ge\xe7ilen arg\xfcmana ba\u011fl\u0131 de\u011fildir. E\u015fitli\u011fi test ederken, tamamen yeni iki symbol olu\u015fturuyoruz: ilki `Symbol(\'foo\')` ve ikincisi `Symbol(\'foo\')`. Bu iki de\u011fer benzersiz ve birbirlerine e\u015fit de\u011fil, `Symbol(\'foo\') === Symbol(\'foo\')` `false` d\xf6nd\xfcr\xfcr.","id":65,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"`padStart` methoduyla, bir string\'in ba\u015flang\u0131c\u0131na dolgu yapabiliriz. Bu methoda ge\xe7ilen de\u011fer, dolguyla beraber string\'in _toplam_ uzunlu\u011fudur. `\\"Lydia Hallie\\"`\'in uzunlu\u011fu `12`, `name.padStart(13)` string\'in ba\u015flang\u0131c\u0131na 1 bo\u015fluk eker, \xe7\xfcnk\xfc 12 + 1 = 13.\\n\\nE\u011fer `padStart` methoduna ge\xe7ilen arg\xfcman, string\'in uzunlu\u011fundan daha azsa, dolgu yap\u0131lmaz.","id":66,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"Generator fonksiyon `yield` anahtar kelimesini g\xf6rd\xfc\u011f\xfcnde \xe7al\u0131\u015fmas\u0131n\u0131 \\"durdurur\\". \xd6ncelikle, fonksiyonun \\"Do you love JavaScript?\\" stringini vermesini sa\u011flamam\u0131z gerek ki bu `game.next().value` \xe7a\u011fr\u0131larak yap\u0131labilir.\\n\\n\u0130lk `yield` anahtar kelimesi bulunana dek her sat\u0131r \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. Fonksiyonun i\xe7inde, ilk sat\u0131rda `yield` anahtar kelimesi var: \xe7al\u0131\u015fma ilk yield ile durur. _Bu demektir ki `answer` de\u011fi\u015fkeni hen\xfcz tan\u0131mlanmad\u0131!_\\n\\n`game.next(\\"Yes\\").value` \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman, \xf6nceki `yield` `next()` fonksiyonuna ge\xe7ilen parametlerin de\u011feri ile de\u011fi\u015ftirilir, bu durumda `\\"Yes\\"`. `answer` de\u011fi\u015fkeninin de\u011feri art\u0131k `\\"Yes\\"`\'e e\u015fit. if ifadesi `false` d\xf6nd\xfcr\xfcr, ve `JavaScript loves you back \u2764\ufe0f` loglan\u0131r.","id":67,"options":["`game.next(\\"Yes\\").value` ve `game.next().value`","`game.next.value(\\"Yes\\")` ve `game.next.value()`","`game.next().value` ve `game.next(\\"Yes\\").value`","`game.next.value()` ve `game.next.value(\\"Yes\\")`"],"question":"console.log ifadesinden sonra yorum sat\u0131r\u0131 olarak gelen de\u011ferleri nas\u0131l loglayabiliriz?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` ka\xe7\u0131\u015f karakterlerinin (`\\n`, `\\u000b`, `\\t` vb.) g\xf6z ard\u0131 edildi\u011fi bir string d\xf6nd\xfcr\xfcr. Ters b\xf6l\xfc i\u015fareti \u015f\xf6yle bir \u015fey gibi sonu\xe7lanabilece\u011finden sorun olabilir:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\n\u015e\xf6yle sonu\xe7lan\u0131r:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\n`String.raw` ile, ka\xe7\u0131\u015f karakteri basit\xe7e g\xf6z ard\u0131 edilir ve yazd\u0131r\u0131l\u0131r:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nBu \xf6rnekte, string `Hello\\nworld`, dolay\u0131s\u0131yla `Hello\\nworld` olarak loglan\u0131r.","id":68,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Asenkron bir fonksiyon her zaman promise d\xf6nd\xfcr\xfcr. `await` promise\'\u0131 \xe7\xf6zmek i\xe7in beklemeli: `getData()`\'y\u0131 `data`\'ya e\u015fitlemek i\xe7in \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman bekleyen promise d\xf6nd\xfcr\xfcl\xfcr.\\n\\n\xc7\xf6z\xfclm\xfc\u015f de\u011fer olan `\\"I made it\\"`\'e eri\u015fmek isteseydik, `data` \xfczerinde `.then()` methodunu kullanabilirdik:\\n\\n`data.then(res => console.log(res))`\\n\\nBu `\\"I made it!\\"` loglard\u0131.","id":69,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"`push()` methodu yeni dizinin _uzunlu\u011funu_ d\xf6nd\xfcr\xfcr. \xd6nceden, dizi bir eleman i\xe7eriyordu (`\\"banana\\"`) ve uzunlu\u011fu 1\'di. Diziye `\\"apple\\"`\'\u0131 ekledikten sonra, dizi iki eleman i\xe7erir ve uzunlu\u011fu `2`\'dir. `addToList` fonksiyonundan d\xf6nd\xfcr\xfclen budur.\\n\\n`push` methodu orijinal diziyi de\u011fi\u015ftirir. E\u011fer _dizinin uzunlu\u011funu_ de\u011fil de _diziyi_ d\xf6nd\xfcrmek isterseniz, `item`\'i ekledikten sonra `list`\'i d\xf6nd\xfcrmelisiniz.","id":70,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;","codeLanguage":"javascript","explanation":"`Object.freeze` bir nesneye \xf6zellik eklemeyi, silmeyi ya da de\u011fi\u015ftirmeyi olanaks\u0131z k\u0131lar (\xf6zelli\u011fin de\u011feri ba\u015fka bir nesneye ait olmad\u0131k\xe7a)\\n\\n`shape` de\u011fi\u015fkenini olu\u015fturup, donmu\u015f `box` nesnesine e\u015fitledi\u011fimiz zaman, `shape` de ayr\u0131ca donmu\u015f nesneyi referans eder. `Object.isFrozen` kullanarak bir nesnenin dondurulmu\u015f olup olmad\u0131\u011f\u0131n\u0131 kontrol edebilirsiniz. Bu \xf6rnekte, `shape` de\u011fi\u015fkeni donmu\u015f bir nesneyi referans g\xf6sterdi\u011finden, `Object.isFrozen(shape)` `true` d\xf6nd\xfcr\xfcr.\\n\\n`shape` donmu\u015f oldu\u011fundan, ve `x`\'in de\u011feri bir nesne olmad\u0131\u011f\u0131ndan, `x` \xf6zelli\u011fini de\u011fi\u015ftiremeyiz. `x` hala `10`\'a e\u015fit, ve `{ x: 10, y: 20 }` loglan\u0131r.","id":71,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"E\u015fitli\u011fin sa\u011f taraf\u0131ndaki nesneden `name` \xf6zelli\u011fini \xe7\u0131kartt\u0131\u011f\u0131m\u0131z zaman, `myName` isimli de\u011fi\u015fkene, o \xf6zelli\u011fin de\u011feri olan `\\"Lydia\\"`\'y\u0131 at\u0131yoruz.\\n\\n`{ name: myName }` ile, JavaScript\'e diyoruz ki; e\u015fitli\u011fin sa\u011f taraf\u0131ndaki `name` \xf6zelli\u011finin de\u011feriyle birlikte `myName` diye bir de\u011fi\u015fken tan\u0131mlamak istiyoruz.\\n\\n`name`\'i loglamay\u0131 denedi\u011fimizden dolay\u0131, ki bu de\u011fi\u015fken tan\u0131mlanmam\u0131\u015f, ReferenceError f\u0131rlat\u0131l\u0131r.","id":72,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"Saf fonksiyon, ayn\u0131 arg\xfcmanlar ge\xe7ildi\u011fi zaman, _her zaman_ ayn\u0131 sonucu d\xf6nd\xfcren fonksiyondur.\\n\\n`sum` fonksiyonu her zaman ayn\u0131 sonucu d\xf6nd\xfcr\xfcr. E\u011fer `1` ve `2` ge\xe7ersek, _her zaman_ `3` d\xf6nd\xfcrecektir. E\u011fer `5` ve `10` ge\xe7ersek, _her zaman_ `15` d\xf6nd\xfcr\xfcr, bunun gibi devam eder... Saf fonksiyonun tan\u0131mlamas\u0131 budur.","id":73,"options":["Evet","Hay\u0131r"],"question":"Bu bir saf (pure) fonksiyon mu?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"`add` fonksiyonu _ezberlenmi\u015f_, \\"_memoized_\\", bir fonksiyondur. Ezberleme ile, fonksiyonun sonu\xe7lar\u0131n\u0131, fonksiyonun daha h\u0131zl\u0131 \xe7al\u0131\u015fmas\u0131 i\xe7in cache\'leyebiliriz. Bu \xf6rnekte, \xf6nceki d\xf6nen de\u011ferleri saklayan bir `cache` nesnesi olu\u015fturuyoruz.\\n\\nE\u011fer `addFunction` fonksiyonunu ayn\u0131 arg\xfcman ile tekrar \xe7a\u011f\u0131r\u0131rsak, \xf6nce cache i\xe7inde o de\u011ferin hali haz\u0131rda olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. E\u011fer varsa, cache de\u011feri d\xf6nd\xfcr\xfclecektir ki b\xf6ylece \xe7al\u0131\u015fma zaman\u0131ndan tasarruf sa\u011flan\u0131r. E\u011fer yoksa, cache\'lenmemi\u015fse, de\u011feri hesaplay\u0131p ard\u0131ndan saklayacakt\u0131r.\\n\\n`addFunction` fonksiyonunu \xfc\xe7 kez ayn\u0131 de\u011fer ile \xe7a\u011f\u0131r\u0131yoruz: ilk \xe7a\u011f\u0131rmada, `num` `10`\'a e\u015fit oldu\u011fu zaman fonksiyonun de\u011feri hen\xfcz cache\'lenmemi\u015f. `num in cache` if ifadesi `false` d\xf6nd\xfcr\xfcr\\n ve else blo\u011fu \xe7al\u0131\u015ft\u0131r\u0131l\u0131r: `Calculated! 20` loglan\u0131r, ve sonu\xe7 cache nesnesine eklenir. `cache` \u015fimdi \u015funa benziyor; `{ 10: 20 }`\\n\\n\u0130kincide, `cache` nesnesi `10` i\xe7in d\xf6nd\xfcr\xfclen de\u011feri i\xe7eriyor. `num in cache` if ifadesi `true` d\xf6nd\xfcr\xfcr, ve `\'From cache! 20\'` loglan\u0131r. \\n\\n\xdc\xe7\xfcnc\xfc sefer de, fonksiyona `5 * 2` ge\xe7iyoruz ki bu da `10` olarak de\u011ferlendirilir. `cache` nesnesi `10` i\xe7in d\xf6nd\xfcr\xfclen de\u011feri i\xe7eriyor. `num in cache` if ifadesi `true` d\xf6nd\xfcr\xfcr, ve `\'From cache! 20\'` loglan\u0131r.","id":74,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\xc7\u0131kt\u0131s\u0131 nedir?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"Dizi elemanlar\u0131 herhangi bir de\u011feri tutabilir. Say\u0131lar, stringler, nesneler, ba\u015fka diziler, null, do\u011fru/yanl\u0131\u015f de\u011ferler, undefined, ve date, fonksiyonlar, hesaplamalar gibi ba\u015fka ifadeler.\\n\\nEleman d\xf6nen de\u011fere e\u015fit olacakt\u0131r. `1 + 2` `3` d\xf6nd\xfcr\xfcr, `1 * 2` `2` d\xf6nd\xfcr\xfcr, ve `1 / 2` `0.5` d\xf6nd\xfcr\xfcr.","id":75,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"Varsay\u0131lan olarak, fonksiyona bir de\u011fer ge\xe7ilmedik\xe7e, arg\xfcmanlar `undefined` de\u011ferine sahiptir. Bu \xf6rnekte, `name` arg\xfcman\u0131 i\xe7in bir de\u011fer ge\xe7medik.\\n\\nES6\'da, bu varsay\u0131lan `undefined` de\u011ferini varsay\u0131lan parametreler ile ezebiliriz. \xd6rne\u011fin;\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nBu \xf6rnekte, e\u011fer bir de\u011fer ge\xe7meseydik ya da `undefined` ge\xe7seydik, `name` her zaman `Lydia`\'a e\u015fit olacakt\u0131.","id":76,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"`this` anahtar kelimesinin de\u011feri, onu nerede kulland\u0131\u011f\u0131n\u0131za ba\u011fl\u0131d\u0131r. **method** i\xe7inde, `getStatus` methodu gibi, `this` anahtar kelimesi _methodun ba\u011fl\u0131 oldu\u011fu nesneyi_ referans g\xf6sterir. Method `data` nesnesine ait, bu y\xfczden `this` `data` nesnesini referans g\xf6sterir. `this.status`\'\xfc loglad\u0131\u011f\u0131m\u0131z zaman, `data` nesnesindeki `status` \xf6zelli\u011fi loglan\u0131r, ki o da `\\"\ud83e\udd51\\"`.\\n\\n`call` methodu ile, `this` anahtar kelimesinin referans g\xf6sterdi\u011fi nesneyi de\u011fi\u015ftirebiliriz. **fonksiyon** i\xe7inde, `this` anahtar kelimesi _fonksiyonun ait oldu\u011fu nesneyi_ referans g\xf6sterir. _global nesne_ \xfczerinde `setTimeout` fonksiyonu tan\u0131mlad\u0131k, yani `setTimeout` fonksiyonu i\xe7inde, `this` anahtar kelimesi _global nesneyi_ referans g\xf6sterir. Global nesnede, de\u011feri `\\"\ud83d\ude0e\\"` olan _status_ olarak adland\u0131r\u0131lm\u0131\u015f bir de\u011fi\u015fken var. `this.status`\'\xfc loglad\u0131\u011f\u0131m\u0131z zaman, `\\"\ud83d\ude0e\\"` loglan\u0131r.","id":77,"options":["`\\"\ud83e\udd51\\"` ve `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` ve `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` ve `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` ve `\\"\ud83d\ude0e\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"`city` de\u011fi\u015fkenini, `person` nesnesindeki `city` \xf6zelli\u011finin de\u011ferine e\u015fitledik. `person` nesnesinde `city` diye isimlendirilmi\u015f bir \xf6zellik yok, bu y\xfczden `city` de\u011fi\u015fkeni `undefined` de\u011ferine sahip olur.\\n\\n`person` nesnesinin kendisini referans _g\xf6stermedi\u011fimize_ dikkat edin! Sadece `city` de\u011fi\u015fkenini, `person` nesnesindeki `city` \xf6zelli\u011finin o andaki de\u011ferine e\u015fitledik.\\n\\nSonra, `city`\'i `\\"Amsterdam\\"` string\'ine e\u015fitledik. Bu `person` nesnesini de\u011fi\u015ftirmez: bu nesneye referans yok.\\n  \\n`person` nesnesini loglad\u0131\u011f\u0131m\u0131z zaman, de\u011fi\u015fikli\u011fe u\u011framam\u0131\u015f nesne d\xf6nd\xfcr\xfcl\xfcr.","id":78,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"`const` ve `let` anahtar kelimesine sahip de\u011fi\u015fkenler _block-scoped_\'dur. Blok s\xfcsl\xfc parantezler (`{}`) aras\u0131ndaki herhangi bir \u015feydir. Bu \xf6rnekte, if/else ifadesindeki s\xfcsl\xfc parantezlerdir. Bir de\u011fi\u015fkene, tan\u0131mland\u0131\u011f\u0131 blok d\u0131\u015f\u0131ndan eri\u015femezsiniz, ReferenceError f\u0131rlat\u0131l\u0131r.","id":79,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"\u0130kinci `.then` i\xe7indeki `res`\'in de\u011feri bir \xf6nceki `.then`\'den d\xf6nen de\u011fere e\u015fittir. Bunun gibi, de\u011ferlerin bir sonraki y\xf6neticiye (handler) ge\xe7ilece\u011fi \u015fekilde, `.then`\'leri birbirlerine ba\u011flayabilirsiniz,","id":80,"options":["`fetch` methodunun sonucu.","`fetch` methodunun ikinci kez \xe7a\u011fr\u0131lmas\u0131ndan d\xf6nen sonu\xe7.","Bir \xf6nceki `.then()`\'in sonucu.","Her zaman `undefined` olacakt\u0131r."],"question":"Loglanacak de\u011fer ne t\xfcr olur?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"`!!name` ile, `name`\'in de\u011ferinin do\u011frusal ya da yanl\u0131\u015f-\u0131ms\u0131 olup olmad\u0131\u011f\u0131n\u0131 belirleriz. E\u011fer `name` do\u011frusalsa, ki test etmek istedi\u011fimiz bu, `!name` `false` d\xf6nd\xfcr\xfcr. `!false` (bu da `!!name` ne demekse o demektir ger\xe7ekte) `true` d\xf6nd\xfcr\xfcr.\\n\\n`hasName`\'i `name`\'e e\u015fitleyerek, `hasName`\'i `getName` fonksiyonuna hangi de\u011feri ge\xe7tiyseniz ona e\u015fitlersiniz, `true` de\u011ferine de\u011fil.\\n\\n`new Boolean(true)` nesne (object wrapper) d\xf6nd\xfcr\xfcr, do\u011fru/yanl\u0131\u015f (boolean) de\u011ferinin kendisini de\u011fil.\\n\\n`name.length` ge\xe7ilen arg\xfcman\u0131n uzunlu\u011funu d\xf6nd\xfcr\xfcr, `true` olup olmad\u0131\u011f\u0131n\u0131 de\u011fil.","id":81,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"`true`\'yu arg\xfcman olarak ge\xe7emedi\u011finiz durumda, hangi se\xe7enek `hasName`\'i `true`\'ya e\u015fitlemenin yoludur?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"Varsay\u0131lan parametrenin de\u011ferini fonksiyonun ba\u015fka parametresine e\u015fitleyebilirsiniz, varsay\u0131lan parametreden _\xf6nce_ tan\u0131mlad\u0131klar\u0131 m\xfcddet\xe7e. `sum` fonksiyonuna `10` de\u011ferini ge\xe7tik. E\u011fer `sum` fonksiyonu sadece 1 arg\xfcman al\u0131rsa, `num2` de\u011feri ge\xe7ilmedi demektir, ve `num1`\'\u0131n de\u011feri ge\xe7ti\u011fimiz `10` de\u011ferine e\u015fittir bu durumda. `num2`\'nun varsay\u0131lan de\u011feri `num1`\'d\u0131r ki o da `10`\'dur. `num1 + num2` `20` d\xf6nd\xfcr\xfcr.\\n \\nE\u011fer varsay\u0131lan parametrenin de\u011ferini, _sonras\u0131nda_ (sa\u011f\u0131nda) tan\u0131mlanm\u0131\u015f bir parametreye e\u015fitlemeye \xe7al\u0131\u015f\u0131yorsan\u0131z, parametrenin de\u011feri hen\xfcz olu\u015fturulmam\u0131\u015ft\u0131r, hata f\u0131rlatacakt\u0131r.","id":82,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"`import * as name` yaz\u0131m\u0131 ile, `module.js` dosyas\u0131 i\xe7indeki _t\xfcm `export`\'lar\u0131_ `index.js` dosyas\u0131 i\xe7inde `data` olarak adland\u0131rd\u0131\u011f\u0131m\u0131z yeni bir nesneye aktar\u0131yoruz. `module.js` dosyas\u0131 i\xe7inde, iki `export` var: varsay\u0131lan export ve isimlendirilmi\u015f export. Varsay\u0131lan export `\\"Hello World\\"` string\'i d\xf6nd\xfcren bir fonksiyon ve isimlendirilmi\u015f export `\\"Lydia\\"` de\u011ferine sahip `name` olarak isimlendirilmi\u015f de\u011fi\u015fken.\\n\\n`data` nesnesi varsay\u0131lan exportlar i\xe7in `default` \xf6zelli\u011fine, isilendirilmi\u015f exportlar i\xe7in isimlendirilmi\u015f export\'un ismi olan ve de\u011feri isimlendirilmi\u015f export\'un de\u011feri olan \xf6zelliklere sahiptir.","id":83,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","`module.js`\'e ait global nesne"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"S\u0131n\u0131flar fonksiyon yap\u0131c\u0131lar\u0131 i\xe7in \\"syntactical sugar\\"d\u0131r. `Person` s\u0131n\u0131f\u0131na denk olan s\u0131n\u0131f yap\u0131c\u0131s\u0131 \u015f\xf6yle olabilirdi:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\nBir fonksiyon yap\u0131c\u0131s\u0131n\u0131 `new` ile \xe7a\u011f\u0131rmak `Person` \\"instance\\" olu\u015fturur, `typeof` anahtar kelimesi instance i\xe7in `\\"object\\"` d\xf6nd\xfcr\xfcr. `typeof member` `\\"object\\"` d\xf6nd\xfcr\xfcr.","id":84,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"`.push` methodu dizinin _yeni uzunlu\u011funu_ d\xf6nd\xfcr\xfcr, dizinin kendisini de\u011fil! `newList`\'i  `[1, 2, 3].push(4)`\'a e\u015fitleyerek, `newList`\'i dizinin yeni uzunlu\u011funa e\u015fitledik: `4`.\\n\\nSonra, `.push` methodunu `newList` \xfczerinde kullanmay\u0131 denedik. `newList` say\u0131sal de\u011fer `4` oldu\u011fundan, `.push` methodunu kullanamay\u0131z: TypeError f\u0131rlat\u0131l\u0131r.","id":85,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"S\u0131radan fonksiyonlar, `giveLydiaPizza` gibi, `constructor` \xf6zelli\u011fi olan `prototype` nesnesi \xf6zelli\u011fine sahiptir. Ancak ok fonksiyonlar (arrow functions), `giveLydiaChocolate` gibi, bu `prototype` \xf6zelli\u011fine sahip de\u011fildir. `giveLydiaChocolate.prototype` ile `prototype` \xf6zelli\u011fine eri\u015fmeye \xe7al\u0131\u015f\u0131ld\u0131\u011f\u0131nda `undefined` d\xf6nd\xfcr\xfcl\xfcr.","id":86,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` key ve nesneleri i\xe7eren dizilerden olu\u015fan dizi d\xf6nd\xfcr\xfcr:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]` \\n\\n`for-of` d\xf6ng\xfcs\xfcn\xfc kullanarak, dizi i\xe7indeki her bir eleman\u0131 gezebiliriz, alt dizileri bu \xf6rnekte. for-of d\xf6ng\xfcs\xfc i\xe7inde alt dizileri `const [x, y]` kullanarak par\xe7alayabiliriz. `x` alt dizideki ilk elemana, `y` alt dizideki ikinci elemana e\u015fittir.\\n\\n\u0130lk alt dizi `[ \\"name\\", \\"Lydia\\" ]`, `x` `\\"name\\"`\'e ve `y` `\\"Lydia\\"`\'ya e\u015fittir.\\n\u0130kinci alt dizi `[ \\"age\\", 21 ]`, `x` `\\"age\\"`\'e ve `y` `21`\'a e\u015fittir.","id":87,"options":["`name` `Lydia` ve `age` `21`","`[\\"name\\", \\"Lydia\\"]` ve `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` ve `undefined`","`Error`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` bir \\"rest\\" parametredir. \\"Rest\\" parametresinin de\u011feri geriye kalan t\xfcm arg\xfcmanlar\u0131 i\xe7eren bir dizidir, ve **sadece son parametre olabilir.** Bu \xf6rnekte, rest parametresi ikindi parametreydi. Bu m\xfcmk\xfcn de\u011fildir ve syntax hatas\u0131 f\u0131rlat\u0131lacakt\u0131r.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nYukar\u0131daki \xf6rnek \xe7al\u0131\u015f\u0131r. `[ \'banana\', \'apple\', \'orange\', \'pear\' ]` dizisini d\xf6nd\xfcr\xfcr.","id":88,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"S\u0131n\u0131flar\u0131 di\u011fer s\u0131n\u0131f/fonksiyon yap\u0131c\u0131lara e\u015fitleyebiliriz. Bu \xf6rnekte, `Person`\'\u0131 `AnotherPerson`\'a e\u015fitliyoruz. Bu yap\u0131c\u0131daki `name` `Sarah`\'d\u0131r, yani `Person` instance\'\u0131 olan `member` \xfczerindeki `name` \xf6zelli\u011fi `\\"Sarah\\"`\'t\u0131r.","id":89,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"Symbol _say\u0131labilir_, \\"_enumerable_\\" de\u011fildir. Object.keys methodu nesne \xfczerindeki t\xfcm _say\u0131labilir_ \xf6zellikleri d\xf6nd\xfcr\xfcr. Symbol gizli kal\u0131r ve bo\u015f bir dizi d\xf6nd\xfcr\xfcl\xfcr. T\xfcm nesne logland\u0131\u011f\u0131 zaman, b\xfct\xfcn \xf6zellikler g\xf6r\xfclebilir, say\u0131labilir olmayanlar bile.\\n\\nBu symbol\'\xfcn bir\xe7ok  \xf6zelli\u011finden birisidir: tamamen benzersiz bir de\u011fer temsil etmenin yan\u0131nda (ki nesneler \xfczerindeki kazara isim \xe7ak\u0131\u015fmas\u0131n\u0131 \xf6nler, \xf6rne\u011fin ayn\u0131 nesneye \xf6zellikler eklemek isteyen 2 k\xfct\xfcphaneyle \xe7al\u0131\u015f\u0131rken), ayr\u0131ca bu yolla nesne \xfczerindeki \xf6zellikleri \\"saklayabilirsiniz\\" (ger\xe7i tamamen de\u011fil. `Object.getOwnPropertySymbols()` methodunu kullanarak symbol\'lere hala eri\u015febilirsiniz).","id":90,"options":["`{Symbol(\'a\'): \'b\'}` ve `[\\"{Symbol(\'a\')\\"]`","`{}` ve `[]`","`{ a: \\"b\\" }` ve `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` ve `[]`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"`getList` fonksiyonu arg\xfcman olarak bir dizi al\u0131r. `getList` fonksiyonunun parentezleri aras\u0131nda, bu diziyi an\u0131nda par\xe7al\u0131yoruz. \u015eu \u015fekilde g\xf6rebilirsiniz:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\n `...y` rest parametresi ile, dizi i\xe7inde \\"geriye kalan\\" t\xfcm arg\xfcmanlar\u0131 topluyoruz. Geriye kalan arg\xfcmanlar `2`, `3`, ve `4` bu durumda. `y`\'nin de\u011feri t\xfcm rest parametleri i\xe7eren bir dizi. `x`\'in de\u011feri `1`\'a e\u015fit, yani `[x, y]` loglad\u0131\u011f\u0131m\u0131z zaman, `[1, [2, 3, 4]]` loglan\u0131r.\\n\\n `getUser` fonksiyonu bir nesne al\u0131yor. Ok fonksiyonlar ile, e\u011fer sadece bir de\u011fer d\xf6nd\xfcrmek istiyorsak s\xfcsl\xfc parentezleri yazmak _zorunda de\u011filiz._ Ancak, bir ok fonksiyondan bir _nesne_ d\xf6nd\xfcrmek istiyorsan\u0131z, parentezler aras\u0131nda yazmak zorundas\u0131n\u0131z, aksi halde de\u011fer d\xf6nd\xfcr\xfclmez! A\u015fa\u011f\u0131daki fonksiyon bir nesne d\xf6nd\xfcrecektir:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\nBu \xf6rnekte de\u011fer d\xf6nd\xfcr\xfclmedi\u011fi i\xe7in, fonksiyon `undefined` d\xf6nd\xfcr\xfcr.","id":91,"options":["`[1, [2, 3, 4]]` ve `undefined`","`[1, [2, 3, 4]]` ve `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` ve `{ name: \\"Lydia\\", age: 21 }`","`Error` ve `{ name: \\"Lydia\\", age: 21 }`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"`name` de\u011fi\u015fkeni string bir de\u011fer sakl\u0131yor, ki bu bir fonksiyon de\u011fil, bu y\xfczden \xe7a\u011fr\u0131lamaz.\\n\\nTypeError\'lar bir de\u011fer beklenilen tipte olmad\u0131\u011f\u0131 zaman f\u0131rlat\u0131l\u0131r. `name`\'i \xe7a\u011f\u0131rmaya \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131zdan, JavaScript `name`\'in bir fonksiyon olmas\u0131n\u0131 bekliyor. Ancak o bir string, bu y\xfczden TypeError f\u0131rlat\u0131l\u0131r: name is not a function! \\n\\nSyntaxError\'lar JavaScript\'in ge\xe7erli olmad\u0131\u011f\u0131 bir \u015feyler yazd\u0131\u011f\u0131z zaman f\u0131rlat\u0131l\u0131r, \xf6rne\u011fin `return`\'\xfc `retrun` olarak yazd\u0131\u011f\u0131n\u0131z zaman.  \\n\\nReferenceError\'lar eri\u015fmeye \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131z de\u011fer i\xe7in JavaScript referans bulamad\u0131\u011f\u0131 zaman f\u0131rlat\u0131l\u0131r.","id":92,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"code":"// \ud83c\udf89\u2728 100. soru! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` do\u011frusal bir de\u011ferdir. `&&` operat\xf6r\xfc ile, e\u011fer soldaki de\u011fer do\u011frusal bir de\u011ferse sa\u011fdaki de\u011fer d\xf6nd\xfcr\xfcl\xfcr. Bu \xf6rnekte, soldaki de\u011fer `[]` do\u011frusal bir de\u011ferdir, b\xf6ylece `\\"Im\\"` d\xf6nd\xfcr\xfcl\xfcr.\\n\\n`\\"\\"` yanl\u0131\u015f-\u0131ms\u0131 bir de\u011ferdir. E\u011fer soldaki de\u011fer yanl\u0131\u015f-\u0131ms\u0131 ise, bir \u015fey d\xf6nd\xfcr\xfclmez. `n\'t` d\xf6nd\xfcr\xfclmedi.","id":93,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"`||` operat\xf6r\xfc ile, ile do\u011frusal operand\'\u0131 d\xf6nd\xfcrebiliriz. E\u011fer t\xfcm de\u011ferler yanl\u0131\u015f-\u0131ms\u0131 ise, son operand d\xf6nd\xfcr\xfcl\xfcr.\\n\\n`(false || {} || null)`: bo\u015f nesne `{}` do\u011frusal bir de\u011ferdir. \u0130lk (ve tek) do\u011frusal de\u011fer, d\xf6nd\xfcr\xfcl\xfcr. `one` `{}` e\u015fittir.\\n\\n`(null || false || \\"\\")`: t\xfcm operand\'lar yanl\u0131\u015f-\u0131ms\u0131. Bu demektir ki son operand, `\\"\\"` d\xf6nd\xfcr\xfcl\xfcr. `two` `\\"\\"` e\u015fittir.\\n\\n`([] || 0 || \\"\\")`: bo\u015f dizi `[]` do\u011frusal bir de\u011ferdir. Bu ilk do\u011frusal de\u011fer, d\xf6nd\xfcr\xfcl\xfcr. `three` `[]` e\u015fittir.","id":94,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"\xc7\u0131kt\u0131s\u0131 Nedir?"}],"locale":"tr-TR"},{"isRTL":false,"language":"\ud83c\uddf9\ud83c\uddfc \u7e41\u9ad4\u4e2d\u6587","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name)\\n  console.log(age)\\n  var name = \'Lydia\'\\n  let age = 21\\n}\\n\\nsayHi()","codeLanguage":"javascript","explanation":"","id":0,"options":["`Lydia` \u548c `undefined`","`Lydia` \u548c `ReferenceError`","`ReferenceError` \u548c `21`","`undefined` \u548c `ReferenceError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1)\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1)\\n}","codeLanguage":"javascript","explanation":"","id":1,"options":["`0 1 2` \u548c `0 1 2`","`0 1 2` \u548c `3 3 3`","`3 3 3` \u548c `0 1 2`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n}\\n\\nshape.diameter()\\nshape.perimeter()","codeLanguage":"javascript","explanation":"","id":2,"options":["`20` and `62.83185307179586`","`20` and `NaN`","`20` and `63`","`NaN` and `63`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"","id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const bird = {\\n  size: \'small\'\\n}\\n\\nconst mouse = {\\n  name: \'Mickey\',\\n  small: true\\n}","codeLanguage":"javascript","explanation":"","id":4,"options":["`mouse.bird.size`\u662f\u7121\u6548\u7684","`mouse[bird.size]`\u662f\u7121\u6548\u7684","`mouse[bird[\\"size\\"]]`\u662f\u7121\u6548\u7684","\u4ee5\u4e0a\u4e09\u500b\u9078\u9805\u90fd\u662f\u6709\u6548\u7684"],"question":"\u54ea\u4e00\u500b\u662f\u6b63\u78ba\u7684\u63cf\u8ff0\uff1f"},{"answer":1,"code":"let c = { greeting: \'Hey!\' }\\nlet d\\n\\nd = c\\nc.greeting = \'Hello\'\\nconsole.log(d.greeting)","codeLanguage":"javascript","explanation":"","id":5,"options":["`Hello`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"let a = 3\\nlet b = new Number(3)\\nlet c = 3\\n\\nconsole.log(a == b)\\nconsole.log(a === b)\\nconsole.log(b === c)","codeLanguage":"javascript","explanation":"","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor\\n    return this.newColor\\n  }\\n\\n  constructor({ newColor = \'green\' } = {}) {\\n    this.newColor = newColor\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \'purple\' })\\nfreddie.colorChange(\'orange\')","codeLanguage":"javascript","explanation":"","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"let greeting\\ngreetign = {} // \u624b\u6b98\u6253\u932f\u8b8a\u6578\u540d\u7a31!\\nconsole.log(greetign)","codeLanguage":"javascript","explanation":"","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"function bark() {\\n  console.log(\'Woof!\')\\n}\\n\\nbark.animal = \'dog\'","codeLanguage":"javascript","explanation":"","id":9,"options":["\u6b63\u5e38\u904b\u4f5c\uff01","`SyntaxError`. \u4f60\u4e0d\u80fd\u900f\u904e\u9019\u7a2e\u65b9\u5f0f\u5728\u51fd\u5f0f\u4e2d\u65b0\u589e\u5c6c\u6027\u3002","`undefined`","`ReferenceError`"],"question":"\u7576\u6211\u5011\u9019\u9ebc\u505a\u6642\uff0c\u6703\u767c\u751f\u4ec0\u9ebc\u4e8b\uff1f"},{"answer":3,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function () {\\n  return `${this.firstName} ${this.lastName}`;\\n}\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName\\n  this.lastName = lastName\\n}\\n\\nconst lydia = new Person(\'Lydia\', \'Hallie\')\\nconst sarah = Person(\'Sarah\', \'Smith\')\\n\\nconsole.log(lydia)\\nconsole.log(sarah)","codeLanguage":"javascript","explanation":"","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `ReferenceError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"explanation":"","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\u4e8b\u4ef6\u50b3\u64ad\u7684\u4e09\u500b\u968e\u6bb5\u5206\u5225\u662f\uff1f"},{"answer":0,"explanation":"","id":13,"options":["true","false"],"question":"\u6240\u6709\u7269\u4ef6\u90fd\u6709\u539f\u578b\u3002"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b\\n}\\n\\nsum(1, \'2\')","codeLanguage":"javascript","explanation":"","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \'Lydia\';\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\'You are an adult!\');\\n  } else if (data == { age: 18 }) {\\n    console.log(\'You are still an adult.\');\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"function getAge() {\\n  \'use strict\';\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const sum = eval(\'10*10+5\');","codeLanguage":"javascript","explanation":"","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"`sum` \u7684\u503c\u6703\u662f\uff1f"},{"answer":0,"code":"sessionStorage.setItem(\'cool_secret\', 123);","codeLanguage":"javascript","explanation":"","id":21,"options":["\u6c38\u9060\u90fd\u53ef\u4ee5\uff0c\u8cc7\u6599\u4e0d\u6703\u4e0d\u898b\u3002","\u4f7f\u7528\u8005\u95dc\u9589\u9801\u7c64\u5f8c\uff0c\u8cc7\u6599\u624d\u6703\u5931\u6548\u3002","\u4f7f\u7528\u8005\u8981\u95dc\u9589\u4e00\u6574\u500b\u700f\u89bd\u5668\uff0c\u8cc7\u6599\u624d\u6703\u5931\u6548\uff0c\u55ae\u7d14\u95dc\u9589\u8cc7\u6599\u4e0d\u6703\u9020\u6210\u8cc7\u6599\u6d88\u5931\u3002","\u4f7f\u7528\u8005\u95dc\u9589\u96fb\u8166\u5f8c\u3002"],"question":"cool_secret \u9019\u500b\u8cc7\u6599\u5132\u5b58\u5728\u700f\u89bd\u5668\uff0c\u5b58\u6d3b\u6642\u9593\u6709\u591a\u4e45\uff1f"},{"answer":0,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const obj = { 1: \'a\', 2: \'b\', 3: \'c\' };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\'1\');\\nobj.hasOwnProperty(1);\\nset.has(\'1\');\\nset.has(1);","codeLanguage":"javascript","explanation":"","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const obj = { a: \'one\', b: \'two\', a: \'three\' };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"explanation":"\u57fa\u672c\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\uff1a\u5b83\u662f\u4ee3\u7801\u4e2d\u968f\u5904\u53ef\u8bbf\u95ee\u7684\u5185\u5bb9\u3002\\n\u57fa\u5e95\u7684\u57f7\u884c\u74b0\u5883\u662f\u5168\u57df\u7684\uff1a\u4ee3\u8868\u5b83\u5728\u7a0b\u5f0f\u78bc\u4e2d\uff0c\u53ef\u88ab\u96a8\u8655\u4f7f\u7528\u3002","id":25,"options":["true","false","it depends"],"question":"JavaScript \u5728\u5168\u57df\u57f7\u884c\u74b0\u5883\u70ba\u4f60\u505a\u4e86\u5169\u4ef6\u4e8b\uff1a\u5168\u57df\u7269\u4ef6\u548c this \u95dc\u9375\u5b57\u3002"},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"\u7576 `if` \u689d\u4ef6\u6210\u7acb\u6642\u6703\u56de\u50b3 `true`\uff0c\u57f7\u884c `continue` \u8a9e\u53e5\uff0c\u4ee3\u8868\u5ffd\u7565\u672c\u6b21\u8fed\u4ee3\uff08`console.log(i)`\uff09\u3002","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \'Just give Lydia pizza already!\';\\n};\\n\\nconst name = \'Lydia\';\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` \u662f\u5167\u5efa\u7684\u5efa\u69cb\u51fd\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u5411\u5b83\u65b0\u589e\u5c5e\u6027\u3002\u6211\u53ea\u662f\u5728\u5b83\u7684\u539f\u578b\u4e2d\u52a0\u4e0a\u4e00\u500b\u65b9\u6cd5\u3002\u57fa\u672c\u578b\u5225\u5b57\u4e32\u88ab\u81ea\u52d5\u8f49\u63db\u6210\u5b57\u4e32\u7269\u4ef6\uff0c\u7531\u5b57\u4e32\u539f\u578b\u51fd\u5f0f\u751f\u6210\u3002\u56e0\u6b64\uff0c\u6240\u6709 string\uff08string \u7269\u4ef6\uff09\u90fd\u53ef\u4ee5\u4f7f\u7528 `giveLydiaPizza` \u65b9\u6cd5\uff01","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"const a = {};\\nconst b = { key: \'b\' };\\nconst c = { key: \'c\' };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"\u7269\u4ef6\u7684 key \u81ea\u52d5\u8f49\u70ba\u5b57\u4e32\u578b\u5225\u3002\u6211\u5011\u6b63\u5617\u8a66\u5c07\u7269\u4ef6 `b` \u7684 key \u8a2d\u70ba\u7269\u4ef6 `a` \u7684 key\uff0c\u5176\u503c\u7232 `123`\u3002\\n\\n\u7136\u800c\uff0c\u7576\u7269\u4ef6\u300c\u5b57\u4e32\u5316\u300d\uff0c\u5b83\u6703\u8b8a\u6210 `\\"[object Object]\\"`\u3002\u6240\u4ee5\u9019\u88e1\u7684\u610f\u601d\u662f\uff0c`a[\\"[object Object]\\"] = 123`\u3002\u7136\u5f8c\uff0c\u6211\u5011\u53c8\u518d\u505a\u4e86\u4e00\u6b21\u4e00\u6a23\u7684\u4e8b\u60c5\uff0c`c` \u4e5f\u662f\u96b1\u5f0f\u7684\u7269\u4ef6\u5b57\u4e32\u5316\uff0c\u6240\u4ee5\uff0c`a[\\"[object Object]\\"] = 456`\u3002\\n\\n\u6700\u5f8c\uff0c\u6211\u5011\u8f38\u51fa `a[b]`\uff0c\u4e5f\u5c31\u662f `a[\\"[object Object]\\"]`\u3002\u4e4b\u524d\u525b\u8ce6\u503c\u7232 `456`\uff0c\u5c07\u56de\u50b3 `456`\u3002","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"const foo = () => console.log(\'First\');\\nconst bar = () => setTimeout(() => console.log(\'Second\'));\\nconst baz = () => console.log(\'Third\');\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"\u6211\u5011\u6709\u4e00\u500b `setTimeout` \u51fd\u5f0f\uff0c\u9996\u5148\u547c\u53eb\u5b83\u3002\u7136\u800c\uff0c\u5b83\u7684\u57f7\u884c\u9806\u5e8f\u662f\u6700\u5f8c\u57f7\u884c\u7684\u3002\\n\\n\u56e0\u70ba\u5728\u700f\u89bd\u5668\u4e2d\uff0c\u6211\u5011\u9664\u4e86\u6709\u57f7\u884c\u5f15\u64ce\uff0c\u9084\u6709\u4e00\u500b `WebAPI`\u3002`WebAPI` \u63d0\u4f9b\u4e86 `setTimeout` \u51fd\u5f0f\uff0c\u4e5f\u5305\u542b\u5176\u4ed6\u7684\uff0c\u4f8b\u5982 DOM\u3002\\n\\n\u5728\u300ecallback\u300f\u63a8\u9001\u5230 `WebAPI` \u5f8c\uff0c`setTimeout` \u51fd\u5f0f\u672c\u8eab\uff08\u4e0d\u662f\u56de\u547c\u51fd\u5f0f\uff09\u5c07\u5f9e\u5806\u758a\uff08`stack`\uff09\u4e2d\u5f48\u51fa\u3002\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\n\u73fe\u5728\uff0c`foo` \u88ab\u547c\u53eb\uff0c\u5370\u51fa `\\"First\\"`\u3002\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` \u5f9e\u5806\u758a\u4e2d\u5f48\u51fa\uff0c`baz` \u88ab\u547c\u53eb\uff0c\u5370\u51fa `\\"Third\\"`\u3002\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nWebAPI \u4e0d\u80fd\u96a8\u6642\u5411\u5806\u758a\u5185\u65b0\u589e\u5185\u5bb9\u3002\u76f8\u53cd\uff0c\u5b83\u6703\u5c07\u56de\u547c\u51fd\u5f0f\u5f48\u5230\u540d\u7232\u300e`queue`\u300f\u7684\u5730\u65b9\u3002\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\u9019\u5c31\u662f\u4e8b\u4ef6\u8ff4\u5708\uff08`Event Loop`\uff09\u7684\u6d41\u7a0b\uff0c\u4e86\u89e3**\u4e8b\u4ef6\u8ff4\u5708**\u5806\u758a\u8207\u4efb\u52d9\u4f47\u5217\u7684\u904b\u4f5c\u6a21\u5f0f\u3002\u5982\u679c\u5806\u758a\u662f\u7a7a\u7684\uff0c\u5b83\u63a5\u53d7\u4efb\u52d9\u4f47\u5217\u4e0a\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u63a8\u5165\u5806\u758a\u4e2d\u3002\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` \u88ab\u547c\u53eb\uff0c\u5370\u51fa `\\"Second\\"`\uff0c\u7136\u5f8c\u5b83\u88ab\u5f48\u51fa\u5806\u758a\u3002","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"\u7522\u751f\u4e8b\u4ef6(event)\u7684\u5143\u4ef6\u5373\u70ba\u6b64\u4e8b\u4ef6\u7684 target\uff0c\u60a8\u53ef\u4ee5\u900f\u904e `event.stopPropagation` \u4f86\u505c\u6b62\u4e8b\u4ef6\u7684\u5192\u6ce1(bubbling)","id":30,"options":["\u7b2c\u4e00\u5c64\u7684 `div`","\u7b2c\u4e8c\u5c64\u7684 `div`","`button` \u672c\u8eab","\u4e00\u500b\u5305\u542b\u6b64\u5de2\u72c0\u5143\u4ef6\u7684\u9663\u5217."],"question":"\u9ede\u64ca\u6309\u9215\u6642\uff0cevent.target \u6307\u7684\u662f\u54ea\u500b\u5143\u4ef6\uff1f"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"\u8f38\u51fa\u5167\u5bb9\u662f `p` \u53ca `div`\u3002\u5728\u4e8b\u4ef6\u50b3\u64ad(event propagation) \u671f\u9593\uff0c\u5206\u70ba\u4e09\u500b\u968e\u6bb5\uff1a\u6355\u7372(capturing)\uff0c\u76ee\u6a19(target) \u548c\u5192\u6ce1(bubbling)\u3002\\n\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u4e8b\u4ef6\u8655\u7406(event handlers) \u5728\u5192\u6ce1\u968e\u6bb5\u57f7\u884c\uff08\u9664\u975e\u60a8\u5c07useCapture\u8a2d\u7f6e\u70batrue)\u3002 \u5b83\u5f9e\u5de2\u72c0\u5143\u7d20\u7684\u6700\u6df1\u5c64\u5411\u5916\u5c64\u3002","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"\u9ede\u64ca\u6a19\u7c64 p(paragraph)\u6642\uff0c \u5c07\u6703\u8f38\u51fa\u4ec0\u9ebc\u5167\u5bb9\uff1f"},{"answer":3,"code":"const person = { name: \'Lydia\' };\\n\\nfunction sayHi(age) {\\n  return `${this.name} is ${age}`;\\n}\\n\\nconsole.log(sayHi.call(person, 21));\\nconsole.log(sayHi.bind(person, 21));","codeLanguage":"javascript","explanation":"\u901a\u904e `.call` \u53ca `.bind`\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u60f3\u8981 `this` \u95dc\u9375\u5b57\u5f15\u7528\u7684\u7269\u4ef6\u50b3\u905e\u7d66\u5b83\u3002\\n\u7136\u800c\uff0c`.call` \u6703 _\u7acb\u5373\u57f7\u884c_! `.bind.` \u5247\u662f\u6703\u56de\u50b3\u4e00\u4efd\u51fd\u5f0f(function)\u7684 _\u8907\u88fd_ \u4e14\u4e0d\u6703\u7acb\u5373\u57f7\u884c\u3002","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"`sayHi` \u51fd\u6578\u6703\u8fd4\u56de\u7acb\u5373\u57f7\u884c\u51fd\u5f0f\u8868\u793a\u5f0f(IIFE\uff09\u7684\u8fd4\u56de\u503c\u3002 \u8a72\u51fd\u6578\u8fd4\u56de\u985e\u578b\u70ba `\\"number\\"` \u7684 `0`\u3002\\nFYI: JS\u53ea\u67097\u7a2e\u539f\u751f\u985e\u578b(type) : `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, \u548c `bigint`. `\\"function\\"` \u4e0d\u662f\u4e00\u7a2e\u985e\u578b\u800c\u662f\u7269\u4ef6\u3002","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\'\');\\n(\' \');\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"\u53ea\u6709\u516d\u500b\u503c\u662f falsy\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (\u7a7a\u5b57\u4e32)\\n- `false`\\n\\n\u51fd\u5f0f\u5efa\u69cb\u5f0f(Function constructors) \u5982 `new Number` \u548c `new Boolean` \u90fd\u70ba truthy\u3002","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"\u4e0b\u5217\u9805\u76ee\u54ea\u4e9b\u662f falsy\uff1f"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` \u8fd4\u56de `\\"number\\"`\\n`typeof \\"number\\"` \u8fd4\u56de `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"\u7576\u60a8\u8a2d\u7f6e\u7684\u5143\u7d20\u5176\u4f4d\u7f6e\u5927\u904e\u9663\u5217\u9577\u5ea6\u6642\uff0cJavaScript \u6703\u5efa\u7acb\u4e00\u500b\u53eb\u505a \\"empty slots\\" \u7684\u7269\u4ef6\uff0c \u5b83\u5011\u7684\u503c\u5be6\u969b\u4e0a\u70ba `undefined`\u3002\\n\\n\u4f46\u60a8\u6703\u770b\u5230\u985e\u4f3c\u7684\u8f38\u51fa\u5167\u5bb9 : `[1, 2, 3, 7 x empty, 11]`\u3002\u5be6\u969b\u57f7\u884c\u74b0\u5883\u6703\u4f7f\u5176\u8f38\u51fa\u5167\u5bb9\u7565\u5fae\u4e0d\u540c (\u700f\u89bd\u5668, node... \u7b49)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"\u7a0b\u5f0f\u4e2d\u7684 `catch` \u5340\u584a\u6355\u7372\u4e86\u4e00\u500b\u4f8b\u5916\u60c5\u6cc1\u4e14\u8ce6\u6b96\u4e88 argument `x`\u3002\u9019\u500b `x` \u662f\u5728\u5340\u584a\u5167\u7522\u751f\u7684\uff0c\u5176\u6709\u6548\u7bc4\u570d\u53ea\u5728\u5340\u584a\u5167(block-scoped)\uff0c\u5b83\u8ddf `console.log` \u4e2d\u6240\u50b3\u5165\u7684 `x` \u4e26\u4e0d\u662f\u540c\u4e00\u500b\u3002\\n\\n\u63a5\u8457\u6211\u5011\u5c07\u6b64\u5340\u584a\u8b8a\u6578 `x` \u8a2d\u7f6e\u70ba\u7b49\u65bc `1`\uff0c\u4e26\u8a2d\u7f6e\u8b8a\u91cf `y` \u7684\u503c\uff0c \u73fe\u5728\u6211\u5011 console.log \u5340\u584a\u8b8a\u6578 `x`\uff0c\u7121\u610f\u5916\u5730\u5b83\u8f38\u51fa `1`\u3002\\n\\n\u800c\u5728 `catch` \u5340\u584a\u4e4b\u5916\u7684 `x` \u4ecd\u7136\u662f `undefined` \u4e14 `y` \u662f `2`\u3002 \u56e0\u6b64\u7576\u6211\u5011\u60f3\u5728 `catch` \u5340\u584a\u4e4b\u5916\u4f7f\u7528 `console.log\uff08x)` \u6642\uff0c\u5b83\u8fd4\u56de `undefined`\uff0c\u800c `y` \u8fd4\u56de `2`\u3002","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"explanation":"JavaScript \u53ea\u6709 primitive types \u548c objects.\\n\\n\u800c Primitive types \u5305\u542b `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, \u548c `symbol`.\\n\\nPrimitive \u4e0d\u540c\u65bc object \u7684\u662f\u5b83\u6c92\u6709\u4efb\u4f55\u7684\u5c6c\u6027(properties) \u548c\u65b9\u6cd5(methods); \u6c92\u6709\u65b9\u6cd5\u7684\u60c5\u6cc1\u4e0b\u70ba\u4f55 `\'foo\'.toUpperCase()` (string) \u662f\u8f38\u51fa `\'FOO\'` \u800c\u4e0d\u662f `TypeError` ?\\n\u9019\u662f\u56e0\u70ba\u7576\u60a8\u5617\u8a66\u8a2a\u554f primitive types (\u4f8b\u5982\u5b57\u4e32) \u7684\u5c6c\u6027\u6216\u65b9\u6cd5\u6642\uff0cJavaScript\u6703\u4f7f\u7528\u5176\u4e2d\u4e00\u500b wrapper classes \u5305\u88dd\u8a72 primitive type\u3002\\n\\n\u4f8b\u5982\u4f7f\u7528\u4e86 `String` \u5305\u88dd primitive type `string`\uff0c \u63a5\u8457\u5728 expression \u88ab evaluates \u5f8c\u62cb\u68c4\u8a72\u5305\u88dd\u3002 \u6240\u6709 primitives \u9664\u4e86 `null` \u548c `undefined` \u5916\u90fd\u662f\u9075\u5faa\u6b64\u884c\u70ba\u3002","id":38,"options":["JavaScript \u7684\u4e16\u754c\u4e2d\u4e0d\u662f primitive \u5c31\u662f object","JavaScript \u7684\u4e16\u754c\u4e2d\u4e0d\u662f function \u5c31\u662f object","JavaScript \u7684\u4e16\u754c\u4e2d\u53ea\u6709 object","JavaScript \u7684\u4e16\u754c\u4e2d\u4e0d\u662f number \u5c31\u662f object"],"question":"\u95dc\u65bc JavaScript \u7684\u6558\u8ff0\u4f55\u8005\u6b63\u78ba\uff1f"},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2],\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` \u70ba\u521d\u59cb\u503c\uff0c\u540c\u6642\u4e5f\u662f\u7b2c\u4e00\u500b `acc`\u3002 \u5728\u7b2c\u4e00\u8f2a\u4e2d\uff0c `acc` \u662f `[1,2]` \u4e14 `cur` \u662f `[0, 1]`\uff0c\u5169\u9663\u5217\u9023\u63a5\u5f8c\u7684\u7d50\u679c\u662f `[1, 2, 0, 1]`\u3002\\n\\n\u63a5\u8457 `[1, 2, 0, 1]` \u662f `acc` \u4e14 `[2, 3]` \u662f `cur`\uff0c\u5169\u9663\u5217\u9023\u63a5\u5f8c\u7684\u7d50\u679c\u662f `[1, 2, 0, 1, 2, 3]`\u3002","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"!!null;\\n!!\'\';\\n!!1;","codeLanguage":"javascript","explanation":"`null` \u662f falsy. `!null` \u8fd4\u56de `true`. `!true` \u8fd4\u56de `false`.\\n\\n`\\"\\"` \u662f falsy. `!\\"\\"` \u8fd4\u56de `true`. `!true` \u8fd4\u56de `false`.\\n\\n`1` \u662f truthy. `!1` \u8fd4\u56de `false`. `!false` \u8fd4\u56de `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"setInterval(() => console.log(\'Hi\'), 1000);","codeLanguage":"javascript","explanation":"\u6703\u8fd4\u56de\u4e00\u500b\u552f\u4e00\u7684 id\uff0c\u4e26\u53ef\u7528\u65bc `clearInterval()` \u4ee5\u6e05\u9664\u8a72 interval\u3002","id":41,"options":["\u4e00\u500b\u552f\u4e00\u7684 id","\u6307\u5b9a\u7684\u6beb\u79d2\u6578","\u88ab\u50b3\u905e\u7684\u51fd\u5f0f","`undefined`"],"question":"\u5728\u700f\u89bd\u5668\u4e2d `setInterval` \u65b9\u6cd5\u6703\u8fd4\u56de\u4ec0\u9ebc\uff1f"},{"answer":0,"code":"[...\'Lydia\'];","codeLanguage":"javascript","explanation":"\u5b57\u4e32(string) \u985e\u5225\u662f\u53ef\u4ee5\u88ab\u8fed\u4ee3\u7684(iterable)\uff0c \u5c55\u958b\u904b\u7b97\u5b50(spread operator) \u5c07\u53ef\u8fed\u4ee3\u7684\u5b57\u5143(character) \u6620\u5c04(map) \u7f6e\u4e00\u500b\u5143\u7d20(element) \u4e0a\u3002","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\u5c07\u6703\u8fd4\u56de\u4f55\u7a2e\u7d50\u679c\uff1f"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"\u4e00\u822c\u51fd\u5f0f\u4e0d\u80fd\u5728\u88ab\u8abf\u7528\u5f8c\u4e2d\u9014\u505c\u6b62\u3002\u4f46\u662f\uff0c generator \u53ef\u4ee5\u5728\u4e2d\u9014 \\"\u505c\u6b62\\" \u4e14\u4e4b\u5f8c\u53ef\u4ee5\u5f9e\u505c\u6b62\u7684\u4f4d\u7f6e\u7e7c\u7e8c\u904b\u884c\u3002\\n\u6bcf\u7576\u4e00\u500b generator \u51fd\u5f0f\u9047\u5230\u4e00\u500b `yield` \u95dc\u9375\u5b57\u6642\uff0c\u8a72\u51fd\u5f0f\u5c31\u6703\u7522\u751f\u5176\u5f8c\u6307\u5b9a\u7684\u503c\u3002 \u8acb\u6ce8\u610f\uff0c\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0cgenerator \u51fd\u5f0f\u4e0d\u662f _return_ \u503c\uff0c\u800c\u662f _yields_ \u503c\u3002\\n\\n\u9996\u5148\uff0c\u6211\u5011\u4f7f\u7528\u7b49\u65bc \\"10\\" \u7684 \\"i\\" \u521d\u59cb\u5316 generator \u51fd\u5f0f\u3002 \u6211\u5011\u4f7f\u7528 \\"next\uff08)\\" \u65b9\u6cd5\u8abf\u7528 generator \u51fd\u5f0f\u3002 \u7b2c\u4e00\u6b21\u8abf\u7528 generator \u51fd\u5f0f\u6642\uff0c \\"i\\" \u7b49\u65bc \\"10\\"\u3002\\n\u5b83\u9047\u5230\u7b2c\u4e00\u500b `yield` \u95dc\u9375\u5b57\uff1a\u5b83\u7522\u751f `i` \u7684\u503c\u3002 \u73fe\u5728\uff0cgenerator \u5df2 \\"\u66ab\u505c\\"\uff0c \u4e26\u4e14\u8a18\u9304\u4e86 \\"10\\"\u3002\\n\\n\u7136\u5f8c\uff0c\u6211\u5011\u4f7f\u7528 `next\uff08\uff09` \u65b9\u6cd5\u518d\u6b21\u8abf\u7528\u8a72\u51fd\u5f0f\u3002 \u5b83\u5c07\u5f9e\u5148\u524d\u505c\u6b62\u7684\u5730\u65b9\u7e7c\u7e8c\uff0c\u4ecd\u7136\u662f \\"i\\" \u7b49\u65bc \\"10\\"\u3002 \u73fe\u5728\uff0c\u5b83\u9047\u5230\u4e0b\u4e00\u500b `yield` \u95dc\u9375\u5b57\uff0c\u4e26\u7522\u751f `i * 2` \u3002 \\n\\"i\\" \u7b49\u65bc \\"10\\"\uff0c\u56e0\u6b64\u8fd4\u56de \\"10 * 2\\"\uff0c\u5373 \\"20\\"\u3002 \u6545\u7d50\u679c\u70ba10\u300120\u3002","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \'one\');\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \'two\');\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"\u7576\u6211\u5011\u5411 Promise.race \u65b9\u6cd5\u50b3\u905e\u591a\u500b promise \u6642\uff0c\u5b83\u5c07 resolves / rejects _\u6700\u5148\u7684_ promise\u3002\\n\u5728 setTimeout \u65b9\u6cd5\u4e2d\uff0c\u6211\u5011\u50b3\u905e\u4e86\u4e00\u500b\u8a08\u6642\u5668\uff1a\u7b2c\u4e00\u500b promise\uff08firstPromise\uff09\u70ba500\u6beb\u79d2\uff0c\u7b2c\u4e8c\u500b promise\uff08secondPromise\uff09\u70ba100\u6beb\u79d2\u3002 \u9019\u610f\u5473\u8457 \\"secondPromise\\" \u5c07\u5148\u7528 \\"two\\" \u7684\u503c\u9032\u884cresolves\u3002 \u73fe\u5728\uff0c `res` \u64c1\u6709 \'two\' \u7684\u503c\u4e14\u8a72\u503c\u88ab console.log\u3002","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"\u5c07\u6703\u8fd4\u56de\u4f55\u7a2e\u7d50\u679c\uff1f"},{"answer":3,"code":"let person = { name: \'Lydia\' };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"\u9996\u5148\uff0c\u6211\u5011\u5ba3\u544a\u4e00\u500b\u7269\u4ef6\u8b8a\u6578 `person` \u5305\u542b `name` \u5c6c\u6027\u4ee5\u53ca\u503c `Lydia`\u3002\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\n\u63a5\u8457\u6211\u5011\u5ba3\u544a\u53e6\u4e00\u500b\u9663\u5217\u8b8a\u6578 `members`\u3002\u6211\u5011\u5c07\u8a72\u9663\u5217\u7684\u7b2c\u4e00\u500b\u5143\u7d20\u8a2d\u7f6e\u7b49\u65bc `person` \u8b8a\u6578\u7684\u503c\u3002\\n\u7576\u6211\u5011\u5c07\u5b83\u5011\u8a2d\u7f6e\u70ba\u76f8\u7b49\u6642\uff0c\u7269\u4ef6\u900f\u904e _reference_ \u4e92\u76f8\u95dc\u806f\u3002\u7576\u6211\u5011\u5c07\u4e00\u500b\u7269\u4ef6\u8b8a\u6578\u7684 reference \u8ce6\u503c\u7d66\u53e6\u4e00\u500b\u8b8a\u6578\u6642\uff0c\u5be6\u969b\u4e0a\u6211\u5011\u662f _\u8907\u88fd_ \u8a72 reference (\u5b83\u5011\u6c92\u6709 _\u76f8\u540c_ \u7684 reference !)  \\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\n\u63a5\u8457\u6211\u5011\u5c07\u8b8a\u6578 `person` \u8ce6\u4e88 `null`\u3002\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\n\u6211\u5011\u50c5\u4fee\u6539\u8b8a\u6578 `person` \u7684\u503c\uff0c\u4e26\u7121\u4fee\u6539\u9663\u5217\u4e2d\u7684\u7b2c\u4e00\u500b\u5143\u7d20\u3002\\n\u57fa\u65bc\u8a72\u5143\u7d20\u6709\u4efd\u4e0d\u540c\u7684 reference (\u4e00\u4efd\u8907\u88fd\u7684)\uff0c\u6545 `members` \u9663\u5217\u4e2d\u7b2c\u4e00\u4f4d\u5143\u7d20\u4ecd\u4fdd\u6709\u5c0d\u7269\u4ef6\u7684\u6307\u5411\uff0c\u65bc\u662f\u7576\u6211\u5011 console.log `members` \u9663\u5217\u6642\uff0c\u8f38\u51fa\u5167\u5bb9\u70ba\u7269\u4ef6\u3002","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"const person = {\\n  name: \'Lydia\',\\n  age: 21,\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"\u901a\u904e `for-in` \u5faa\u74b0\uff0c\u6211\u5011\u53ef\u4ee5\u904d\u6b77\u5c0d\u8c61\u7684\u9375\uff0c\u5728\u9019\u500b\u984c\u76ee\u4e2d\u7684\u9375\u662f `name` \u548c `age`\u3002 \u5728\u5167\u90e8\uff0c\u5c0d\u8c61\u9375\u662f\u5b57\u4e32(strings)\uff08\u5982\u679c\u5b83\u5011\u4e0d\u662f Symbol\uff09\u3002\\n\u5728\u6bcf\u6b21\u5faa\u74b0\u4e2d\uff0c\u6211\u5011\u5c07 `item` \u7684\u503c\u8a2d\u7f6e\u70ba\u7b49\u65bc\u5176\u8fed\u4ee3\u7684\u7576\u524d\u9375\u3002 \u7b2c\u4e00\u8f2a\u5faa\u74b0\u4e2d\uff0c`item` \u7b49\u65bc `name`\uff0c\u4e26\u8f38\u51fa\u5167\u5bb9\u3002 \u63a5\u8457\uff0c `item` \u7b49\u65bc `age`\uff0c\u4e26\u8f38\u51fa\u5167\u5bb9\u3002","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"console.log(3 + 4 + \'5\');","codeLanguage":"javascript","explanation":"\u904b\u7b97\u5b50\u95dc\u806f\u6027\u662f\u7de8\u8b6f\u5668\u8a08\u7b97\u8868\u9054\u5f0f\u7684\u9806\u5e8f\uff0c\u5f9e\u5de6\u5230\u53f3\u6216\u5f9e\u53f3\u5230\u5de6\u3002\u50c5\u9069\u7528\u65bc\u6240\u6709\u904b\u7b97\u5b50\u5177\u6709 _\u76f8\u540c_ \u512a\u5148\u7d1a\u6642\uff0c\u624d\u6703\u767c\u751f\u9019\u7a2e\u60c5\u6cc1\u3002\\n\u5728\u9019\u88e1\u6211\u5011\u53ea\u6709\u4e00\u7a2e\u985e\u578b\u7684\u904b\u7b97\u5b50\uff1a+\u3002 \u800c\u5176\u95dc\u806f\u6027\u662f\u5f9e\u5de6\u5230\u53f3\u3002\\n\\n\u9996\u5148\u8a08\u7b97 `3 + 4`\u3002 \u7d50\u679c\u70ba\u6578\u5b577\u3002\\n\\n\u7531\u65bc\u5f37\u5236(coercion) \uff0c`7 +\'5\'` \u6703\u5c0e\u81f4\u7d50\u679c\u70ba `75`\u3002JavaScript\u5c07\u6578\u5b57 `7` \u8f49\u63db\u578b\u614b\u6210\u5b57\u4e32\uff0c\u8acb\u53c3\u95b1\u554f\u984c15\u3002\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 `+` \u904b\u7b97\u5b50\u5c07\u5169\u500b\u5b57\u4e32\u9023\u63a5\u8d77\u4f86\u3002 `7` + `5` \u7522\u751f `75`\u3002","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"const num = parseInt(\'7*6\', 10);","codeLanguage":"javascript","explanation":"\u50c5\u6703\u8fd4\u56de\u5b57\u4e32\u4e2d\u7684\u7b2c\u4e00\u500b\u6578\u5b57\u3002 \u57fa\u65bc _radix_ (\u7b2c\u4e8c\u500b\u53c3\u6578\uff0c\u7528\u65bc\u6307\u5b9a\u6211\u5011\u8981\u5c07\u5176\u89e3\u6790\u70ba\u54ea\u7a2e\u985e\u578b\u7684\u6578\u5b57\uff1a\u4ee510\u70ba\u57fa\u6578\uff0c\u5341\u516d\u9032\u5236\uff0c\u516b\u9032\u5236\uff0c\u4e8c\u9032\u5236\u7b49\uff09\uff0c`parseInt` \u6aa2\u67e5\u5b57\u4e32\u4e2d\u7684\u5b57\u5143\u662f\u5426\u6709\u6548\u3002\\n\u4e00\u65e6\u9047\u5230\u57fa\u6578\u4e2d\u7121\u6548\u6578\u5b57\u7684\u5b57\u5143\uff0c\u5b83\u5c07\u505c\u6b62\u89e3\u6790\u4e26\u5ffd\u7565\u4ee5\u4e0b\u5b57\u5143\u3002\\n\\n`*` \u4e0d\u662f\u5408\u6cd5\u7684 `number`\uff0c\u6240\u4ee5\u7a0b\u5f0f\u50c5\u5c07\u5b57\u4e32\u5f62\u614b\u7684 `\\"7\\"` \u8f49\u63db\u81f3 decimal \u5f62\u614b\u7684 `7`\uff0c\u6545 `num` \u73fe\u5728\u7684\u503c\u70ba `7`\u3002","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"`num` \u7684\u503c\u6703\u662f\u4ec0\u9ebc?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \'number\') return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"\u7576\u5c0d\u9663\u5217\u505a\u6620\u5c04(map) \u6642\uff0c`num` \u7684\u503c\u7b49\u540c\u65bc\u5b83\u7576\u524d\u6b63\u5728\u5faa\u74b0\u7684\u5143\u7d20\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e2d\u5143\u7d20\u5747\u70ba numbers\uff0c\u6240\u4ee5\u689d\u4ef6\u5f0f `typeof num === \\"number\\"` \u6703\u8fd4\u56de `true` \u7684\u503c\u3002\\nmap \u51fd\u5f0f\u6703\u5efa\u7acb\u4e00\u500b\u65b0\u9663\u5217\uff0c\u4e26\u63d2\u5165\u8a72\u51fd\u5f0f\u8fd4\u56de\u7684\u503c\u3002\\n\\n\u4f46\u662f\u6211\u5011\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u7576\u6211\u5011\u4e0d\u5f9e\u51fd\u5f0f\u8fd4\u56de\u503c\u6642\uff0c\u51fd\u5f0f\u5c07\u8fd4\u56de `undefined`\u3002\u7531\u65bc\u9663\u5217\u4e2d\u7684\u6bcf\u500b\u5143\u7d20\u90fd\u6703\u547c\u53eb\u8a72\u51fd\u5f0f\uff0c\u56e0\u6b64\u5c0d\u65bc\u6bcf\u500b\u5143\u7d20\uff0c\u6211\u5011\u90fd\u8fd4\u56de `undefined`\u3002","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \'Lydia\';\\n  year = \'1998\';\\n}\\n\\nconst person = { name: \'Sarah\' };\\nconst birthYear = \'1997\';\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"\u53c3\u6578\u662f\u900f\u904e _value_ \u50b3\u905e\uff0c\u9664\u975e\u5b83\u5011\u662f\u4e00\u500b\u7269\u4ef6(object)\uff0c\u7269\u4ef6\u5247\u7531\u900f\u904e _reference_ \u50b3\u905e\u3002 `birthYear` \u662f\u900f\u904e\u503c\u50b3\u905e\u7684\uff0c\u56e0\u70ba\u5b83\u662f\u5b57\u4e32\u4e0d\u662f\u7269\u4ef6\u3002 \u7576\u6211\u5011\u6309\u503c\u50b3\u905e\u53c3\u6578\u6642\uff0c\u5c07\u5efa\u7acb\u8a72\u503c\u7684 _copy_ (\u8acb\u53c3\u95b1\u554f\u984c46\uff09\u3002\\n\\n\u8b8a\u6578 `birthYear` \u5177\u6709\u5c0d\u503c `1997` \u7684 reference\u3002\u53c3\u6578 `year` \u4e5f\u6709\u5c0d\u503c `1997` \u7684 reference\uff0c\u4f46\u8207\u8b8a\u6578 `birthYear` \u6240 reference \u7684\u4e0d\u540c\u3002\\n\u56e0\u6b64\u7576\u6211\u5011\u901a\u904e\u5c07 `year` \u8a2d\u7f6e\u70ba\u7b49\u65bc `1998` \u4f86\u66f4\u65b0 `year` \u7684\u503c\u6642\uff0c\u6211\u5011\u50c5\u66f4\u65b0\u4e86 `year` \u7684\u503c\u3002 `birthYear` \u4ecd\u7136\u7b49\u65bc `\\"1997\\"`\u3002\\n\\n`person` \u7684\u503c\u662f\u4e00\u500b\u7269\u4ef6\u3002 \u53c3\u6578 `member` \u5177\u6709\uff08\u8907\u88fd\u7684\uff09reference \u6307\u5411 _\u76f8\u540c_ \u7269\u4ef6\u3002\\n\u56e0\u6b64\u7576\u6211\u5011\u4fee\u6539\u7269\u4ef6 `member` \u7684\u5c6c\u6027\u6642\uff0c `person` \u7684\u503c\u4e5f\u6703\u88ab\u4fee\u6539\uff0c\u56e0\u70ba\u5b83\u5011\u90fd reference \u4e86\u76f8\u540c\u7684\u7269\u4ef6\u3002 `person` \u7684 `name` \u5c6c\u6027\u73fe\u5728\u7b49\u65bc\u503c `\\"Lydia\\"`\u3002","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":3,"code":"function greeting() {\\n  throw \'Hello world!\';\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\'It worked!\', data);\\n  } catch (e) {\\n    console.log(\'Oh no an error:\', e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u4f7f\u7528 `throw` \u8a9e\u53e5\uff0c\u6211\u5011\u53ef\u4ee5\u5efa\u7acb\u81ea\u5b9a\u7fa9\u7684\u932f\u8aa4\u3002 \u4f7f\u7528\u6b64\u8a9e\u53e5\uff0c\u60a8\u53ef\u4ee5\u89f8\u767c\u4f8b\u5916(exception)\u3002\u4f8b\u5916\u53ef\u4ee5\u662f `<b>string</ b>`\uff0c`<b>number</ b>`\uff0c`<b>boolean</ b>` \u6216 `<b>object</ b>`\u3002 \\n\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u7684\u4f8b\u5916\u662f\u5b57\u7b26\u4e32 `Hello world`\u3002\\n\\n\u901a\u904e `catch` \u8a9e\u53e5\uff0c\u6211\u5011\u53ef\u4ee5\u6307\u5b9a\u5982\u679c\u5728 `try` \u7684\u7a0b\u5f0f\u5340\u584a\u4e2d\u62cb\u51fa\u4f8b\u5916\u6642\u8a72\u600e\u9ebc\u8fa6\u3002 \u4f8b\u5982\u62cb\u51fa\u4f8b\u5916\uff1a\u5b57\u4e32 `\'Hello world\'`\u3002 \\n\u73fe\u5728\uff0c `e` \u7b49\u65bc\u6211\u5011\u8a18\u9304\u7684\u5b57\u4e32\u3002 \u56e0\u6b64\u8f38\u51fa\u7d50\u679c\u5c07\u6703\u662f `\'Oh an error: Hello world\'`\u3002","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"function Car() {\\n  this.make = \'Lamborghini\';\\n  return { make: \'Maserati\' };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"\u7576\u60a8\u8fd4\u56de\u5c6c\u6027(property) \u6642\uff0c\u8a72\u5c6c\u6027\u7684\u503c\u7b49\u65bc _returned_ \u7684\u503c\uff0c\u800c\u4e0d\u662f\u5728\u51fd\u5f0f\u5efa\u69cb\u5f0f(constructor function)\u4e2d\u8a2d\u7f6e\u7684\u503c\u3002 \u6211\u5011\u8fd4\u56de\u5b57\u4e32 `Maserati`\uff0c\u56e0\u6b64 `mycar.make` \u7b49\u65bc `Maserati`\u3002","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` \u5be6\u969b\u4e0a\u662f shorthand for:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\n\u7576\u6211\u5011\u5c07 `y `\u8a2d\u7f6e\u70ba\u7b49\u65bc `10` \u6642\uff0c\u6211\u5011\u5be6\u969b\u4e0a\u5c07\u5c6c\u6027 `y` \u52a0\u5165\u5230 global object \u4e2d\uff08\u700f\u89bd\u5668\u4e2d\u7684 `window`\uff0cNode\u4e2d\u7684 `global`\uff09\u3002 \u73fe\u5728\uff0c\u700f\u89bd\u5668\u4e2d `window.y` \u73fe\u5728\u7b49\u65bc `10`\u3002\\n\\n\u63a5\u8457\u6211\u5011\u5ba3\u544a\u4e00\u500b\u8b8a\u6578 `x`\uff0c\u4e26\u5c07\u5176\u503c\u8ce6\u4e88\u70ba `y`\uff0c\u5373 `10`\u3002 \u7528` let` \u95dc\u9375\u5b57\u5ba3\u544a\u7684\u8b8a\u6578\u662f _block scoped_ \uff0c\u5b83\u5011\u50c5\u5728\u5ba3\u544a\u5b83\u5011\u7684\u5340\u584a\u4e2d\u5b9a\u7fa9\uff1b \u53e6\u5916\u6b64\u6848\u4f8b\u7684\u51fd\u793a\u662f\uff0c\u7acb\u5373\u51fd\u793a\u8868\u9054\u5f0f\uff08IIFE\uff09\u3002\\n\u7576\u6211\u5011\u4f7f\u7528 `typeof` \u904b\u7b97\u5b50\u6642\uff0c `x` \u4e26\u672a\u88ab\u5b9a\u7fa9\uff1a\u6211\u5011\u8a66\u5716\u5728\u5ba3\u544a\u5b83\u7684\u5340\u584a\u5916\u8a2a\u554f `x`\u3002\u9019\u5c07\u7372\u5f97 `x` \u4e26\u672a\u88ab\u5b9a\u7fa9\u7684\u7d50\u679c\u3002 \u672a\u5206\u914d\u503c\u6216\u672a\u5ba3\u544a\u7684\u503c\u7684\u985e\u578b\u70ba `\\"undefined\\"`\u3002 `console.log(typeof x)` \u8fd4\u56de `\\"undefined\\"`\u3002\\n\\n\u4f46\u662f\uff0c\u7576\u5c07 `y` \u8a2d\u7f6e\u70ba `10` \u6642\uff0c\u6211\u5011\u5275\u5efa\u4e86global variable `y`\u3002 \u5728\u6211\u5011\u7a0b\u5f0f\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u5747\u53ef\u8a2a\u554f\u6b64\u503c\u3002\\n`y` \u88ab\u5b9a\u7fa9\uff0c\u4e26\u4e14\u70ba\u985e\u578b `number` \u7684\u503c\u3002 \u56e0\u6b64 `console.log\uff08typeof y` \u8fd4\u56de `\\"number\\"`\u3002","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\'Mara\');\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"\u900f\u904e `delete` \u95dc\u9375\u5b57\uff0c\u6211\u5011\u53ef\u4ee5\u5f9e\u7269\u4ef6\u4e2d\u522a\u9664\u5b83\u7684\u5c6c\u6027\u3002\u540c\u6a23\u9069\u7528\u5728\u539f\u578b(prototype)\u3002\u901a\u904e\u522a\u9664\u539f\u578b\u4e0a\u7684\u5c6c\u6027\uff0c\u8a72\u5c6c\u6027\u5728\u539f\u578b\u93c8\u4e2d\u5c07\u4e0d\u53ef\u518d\u88ab\u4f7f\u7528\u3002\\n\u5728\u9019\u500b\u6848\u4f8b\u4e2d\uff0c `bark` \u51fd\u5f0f\u5728 `delete Dog.prototype.bark` \u4e4b\u5f8c\u7684\u539f\u578b\u4e0a\u4e0d\u518d\u53ef\u7528\uff0c\u4f46\u662f\u6211\u5011\u4ecd\u7136\u5617\u8a66\u8a2a\u554f\u5b83\u3002\\n\\n\u56e0\u6b64\u7576\u6211\u5011\u5617\u8a66\u8abf\u7528\u4e0d\u662f\u51fd\u5f0f\u7684\u6771\u897f\u6642\uff0c\u7a0b\u5f0f\u5c07\u62cb\u51fa `TypeError`\u3002 \u5728\u9019\u500b\u6848\u4f8b\u4e2d\uff0c\u5c07\u70ba `TypeError: pet.bark is not a function` \uff0c\u56e0\u70ba `pet.bark` \u662f `undefined`\u3002","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"`Set` \u7269\u4ef6\u662f _\u552f\u4e00_ \u503c\u7684\u96c6\u5408: \u4efb\u4f55\u5b58\u5728\u65bc `Set` \u7684\u503c\u5747\u70ba\u552f\u4e00\u7684\uff0c\u4e0d\u6703\u5b58\u5728\u76f8\u540c\u7684\u503c(\u91cd\u8907\u7684\u503c\u5c07\u6703\u7531\u5f8c\u51fa\u73fe\u7684\u8986\u84cb\u5df2\u51fa\u73fe\u7684)\u3002\\n\\n\u9663\u5217 `[1, 1, 2, 3, 4]` \u4e2d\u6709\u91cd\u8907\u7684\u503c `1`\uff0c\u56e0\u6b64\u7d50\u679c\u6703\u662f `{1, 2, 3, 4}`\u3002","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"\u88ab\u5f15\u7528(imported) \u7684\u6a21\u7d44(module) \u662f _\u552f\u8b80_ \u7684: \u60a8\u7121\u6cd5\u4fee\u6539\u88ab\u5f15\u7528\u6a21\u7d44\u4e2d\u9805\u76ee\uff0c\u53ea\u6709\u8f38\u51fa(export) \u8a72\u9805\u76ee\u7684\u6a21\u7d44\u53ef\u4ee5\u66f4\u6539\u5b83\u7684\u503c\u3002\\n\\n\u56e0\u6b64\u7576\u6211\u5011\u5617\u8a66\u589e\u52a0 `myCounter` \u7684\u503c\u6642\uff0c\u4ed6\u5c07\u62cb\u51fa\u932f\u8aa4: `myCounter` is read-only and cannot be modified\u3002","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const name = \'Lydia\';\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"`delete` \u904b\u7b97\u5b50\u6703\u8fd4\u56de\u4e00\u500b\u5e03\u6797\u503c: \u6210\u529f\u522a\u9664\u7269\u4ef6\u7684\u60c5\u6cc1\u4e0b\u6703\u8fd4\u56de `true`\uff0c\u53cd\u4e4b\u5247\u70ba `false`\u3002 \u4f46\u662f\u7d93\u7531 `var`\uff0c`const` \u6216\u662f `let` \u95dc\u9375\u5b57\u6240\u5ba3\u544a\u7684\u8b8a\u6578\u662f\u7121\u6cd5\u4f7f\u7528 `delete` \u904b\u7b97\u5b50\u522a\u9664\u7684\u3002\\n\\n\u6b64\u8655\uff0c `name` \u7121\u6cd5\u6210\u529f\u522a\u9664\u4e14\u6703\u8fd4\u56de `fasle`\uff0c\u56e0\u70ba\u5b83\u662f\u7d93\u7531 `const` \u6240\u5ba3\u544a\u3002\u7576\u6211\u5011\u5ba3\u544a `age` \u7684\u503c\u70ba `21` \u6642\uff0c\u5be6\u969b\u4e0a\u6211\u5011\u505a\u7684\u662f\u5c07\u4e00\u500b\u540d\u70ba `age` \u7684\u5c6c\u6027\u70ba\u6dfb\u52a0\u5230\u4e86\u5168\u7403\u7269\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u900f\u904e `delete` \u4f86\u522a\u9664\u7269\u4ef6\u4e2d\u7684\u5c6c\u6027\uff0c\u56e0\u6b64\u60a8\u4e5f\u80fd\u522a\u9664\u5168\u7403\u7269\u4ef6\u4e2d\u7684\u5c6c\u6027\uff0c\u6545\u5c07\u8fd4\u56de `true`\u3002","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"\u6211\u5011\u53ef\u4ee5\u901a\u904e\u89e3\u69cb(destructuring) \u5f9e\u9663\u5217\u6216\u7269\u4ef6\u7684\u5c6c\u6027\u4e2d\u7372\u5f97\u503c\u3002\u4f8b\u5982:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\na \u7684\u503c\u73fe\u5728\u70ba `1` \u4e14b \u7684\u503c\u73fe\u5728\u70ba`2`\u3002\u6211\u5011\u91dd\u5c0d\u6b64\u554f\u984c\u6240\u505a\u7684\u52d5\u4f5c\u70ba:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\n\u9019\u4ee3\u8868\u8457 `y` \u7684\u503c\u7b49\u540c\u65bc\u9663\u5217\u4e2d\u7b2c\u4e00\u500b\u5143\u7d20\u7684\u503c\uff0c\u5373\u70ba `1`\u3002\u56e0\u6b64\u6211\u5011\u57f7\u884c `console.log(y)` \u6642\uff0c `1` \u5c07\u88ab\u8f38\u51fa\u3002","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"const user = { name: \'Lydia\', age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"\u4f7f\u7528 spread \u904b\u7b97\u5b50\u53ef\u4ee5\u5408\u4f75\u7269\u4ef6(`...`)\u3002\u5b83\u4f7f\u60a8\u53ef\u4ee5\u5efa\u7acb\u4e00\u500b\u7269\u4ef6\u7684\u9375/\u503c\u7684\u8907\u88fd\uff0c\u4e26\u5c07\u5176\u6dfb\u52a0\u5230\u53e6\u4e00\u7269\u4ef6\u4e2d\u3002\\n\u5728\u9019\u88e1\u6211\u5011\u5275\u5efa\u4e86 `user` \u7269\u4ef6\u7684\u8907\u88fd\u4e26\u5c07\u5176\u6dfb\u52a0\u81f3 `admin` \u7269\u4ef6\u3002\u56e0\u6b64\u5c07\u8f38\u51fa `{ admin: true, name: \\"Lydia\\", age: 21 }`\u3002","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":1,"code":"const person = { name: \'Lydia\' };\\n\\nObject.defineProperty(person, \'age\', { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"\u900f\u904e `defineProperty`\uff0c\u6211\u5011\u53ef\u4ee5\u5c0d\u7269\u4ef6\u589e\u52a0\u65b0\u7684\u5c6c\u6027\u6216\u662f\u4fee\u6539\u5df2\u7d93\u5b58\u5728\u7684\u5c6c\u6027\u3002\u7576\u6211\u5011\u4f7f\u7528 `defineProperty` \u589e\u52a0\u7269\u4ef6\u7684\u5c6c\u6027\u6642\uff0c\u5b83\u5011\u88ab\u9810\u8a2d\u70ba _\u4e0d\u53ef enumerable_ \u3002\\n `Object.keys` \u65b9\u6cd5\u50c5\u56de\u50b3\u7269\u4ef6\u4e2d\u6240\u6709 _\u53ef enumerable_ \u7684\u5c6c\u6027\u540d\u7a31\uff0c\u9019\u500b\u6848\u4f8b\u4e2d\u53ea\u6709 `\\"name\\"`\u3002\\n\\n\u9810\u8a2d\u4e0b\uff0c\u4f7f\u7528 `defineProperty `\u65b9\u6cd5\u589e\u52a0\u7684\u5c6c\u6027\u662f\u4e0d\u53ef\u8b8a\u7684\u3002\u4f46\u60a8\u53ef\u4ee5\u8986\u84cb\u9019\u500b\u884c\u70ba\u900f\u904e `writable`\uff0c`configurable` \u53ca `enumerable` \u5c6c\u6027\u3002\\n\u65bc\u662f\uff0c`defineProperty` \u65b9\u6cd5\u53ef\u4ee5\u4f7f\u60a8\u5c0d\u8981\u589e\u52a0\u5230\u7269\u4ef6\u7684\u5c6c\u6027\u9032\u884c\u66f4\u591a\u7684\u63a7\u5236\u3002","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"const settings = {\\n  username: \'lydiahallie\',\\n  level: 19,\\n  health: 90,\\n};\\n\\nconst data = JSON.stringify(settings, [\'level\', \'health\']);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"`JSON.stringify` \u7684\u7b2c\u4e8c\u500b\u53c3\u6578\u662f _\u66ff\u63db\u8005 (replacer)_ \uff0c\u66ff\u63db\u8005\u53ef\u4ee5\u662f\u51fd\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u9663\u5217\uff0c\u4e26\u5141\u8a31\u60a8\u63a7\u5236\u503c\u8981\u5982\u4f55\u7372\u600e\u9ebc\u4e32\u5316(stringified)\u3002\\n\\n\u5982\u679c\u66ff\u63db\u8005\u662f _\u9663\u5217_ \uff0c\u50c5\u5c07\u9663\u5217\u4e2d\u5305\u542b\u7684\u5c6c\u6027\u540d\u7a31\u52a0\u5230 JSON \u5b57\u4e32\u4e2d\u3002\\n\u6b64\u6848\u4f8b\u4e2d\uff0c\u50c5\u6709 `\\"level\\"` and `\\"health\\"` \u88ab\u5305\u542b\uff0c`\\"username\\"` \u6c92\u6709\u88ab\u5305\u542b\u5728\u5167\uff0c\u56e0\u6b64 `data` \u7684\u503c\u5c07\u70ba `\\"{\\"level\\":19, \\"health\\":90}\\"`\u3002\\n\\n\u5982\u679c\u66ff\u63db\u8005\u662f _\u51fd\u5f0f_ \uff0c\u5728\u8981\u5b57\u4e32\u5316\u7684\u6bcf\u500b\u7269\u4ef6\u5c6c\u6027\u4e0a\u5c07\u6703\u547c\u53eb\u6b64\u51fd\u5f0f\u3002\u5f9e\u6b64\u51fd\u5f0f\u8fd4\u56de\u7684\u503c\u5c07\u662f\u52a0\u5230 JSON \u5b57\u4e32\u4e2d\u7684\u5c6c\u6027\u7684\u503c\u3002\u5982\u679c\u503c\u70ba `undefined`\uff0c\u5247\u6b64\u5c6c\u6027\u5f9e JSON \u5b57\u4e32\u4e2d\u6392\u9664\u3002","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"\u55ae\u5143\u904b\u7b97\u5b50 `++` \u9996\u5148 _\u8fd4\u56de_ \u64cd\u4f5c\u6578\u7684\u503c\uff0c\u7136\u5f8c _\u905e\u589e_ \u64cd\u4f5c\u6578\u7684\u503c\u3002 `num1` \u7684\u503c\u662f `10`\uff0c\u56e0\u70ba `increaseNumber`  \u51fd\u5f0f\u9996\u5148\u8fd4\u56de `num` \u7684\u503c\uff0c\u5373 `10`\uff0c\u4e4b\u5f8c\u624d\u905e\u589e `num` \u7684\u503c\u3002\\n\\n`num2` \u662f `10`\uff0c \u56e0\u70ba\u6211\u5011\u5c07 `num1` \u50b3\u905e\u7d66\u4e86 `increasePassedNumber`\u3002 `number` \u7b49\u65bc `10`\uff08 `num1` \u7684\u503c\u3002\u540c\u6a23\uff0c\u55ae\u5143\u904b\u7b97\u5b50 `++` \u9996\u5148 _\u8fd4\u56de_ \u64cd\u4f5c\u6578\u7684\u503c\uff0c\u7136\u5f8c _\u905e\u589e_ \u64cd\u4f5c\u6578\u7684\u503c\u3002\\n`number` \u7684\u503c\u662f `10`\uff0c\u56e0\u6b64 `num2` \u7b49\u65bc `10`\u3002","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"\u5728ES6\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\u9810\u8a2d\u503c\u521d\u59cb\u5316\u53c3\u6578\u3002\u5982\u679c\u6c92\u6709\u5176\u4ed6\u503c\u50b3\u905e\u7d66\u8a72\u51fd\u5f0f\u6216\u662f\u50b3\u5165\u7684\u53c3\u6578\u662f `undefined`\uff0c\u5247\u8a72\u53c3\u6578\u7684\u503c\u70ba\u9810\u8a2d\u503c\u3002\u6b64\u6848\u4f8b\u4e2d\uff0c\u6211\u5011\u5c07 `value` \u7269\u4ef6\u7684\u5c6c\u6027\u64f4\u5c55\u5230\u4e00\u500b\u65b0\u7269\u4ef6\u4e2d\uff0c\u56e0\u6b64 `x` \u5177\u6709\u9810\u8a2d\u503c `{number\uff1a10}`\u3002\\n\\n\u9810\u8a2d\u503c\u662f\u5728 _\u547c\u53eb_ \u6642\u88ab evaluated\u3002\u6bcf\u6b21\u8abf\u7528\u8a72\u51fd\u5f0f\u6642\uff0c\u90fd\u6703\u5275\u5efa\u4e00\u500b _\u65b0_ \u7269\u4ef6\u3002\u6211\u5011\u5728\u6c92\u6709\u50b3\u905e\u503c\u7684\u60c5\u6cc1\u4e0b\u547c\u53eb\u4e86 `multiply` \u51fd\u5f0f\u5169\u6b21\uff1a`x` \u7684\u9810\u8a2d\u503c\u662f `{{number\uff1a10}`\u3002\u56e0\u6b64\uff0c\u6211\u5011\u8f38\u51fa\u8a72\u6578\u5b57\u7684\u76f8\u4e58\u503c\uff0c\u5373 `20`\u3002\\n\\n\u7b2c\u4e09\u6b21\u547c\u53eb\u6642\uff0c\u6211\u5011\u78ba\u5be6\u50b3\u905e\u4e86\u4e00\u500b\u53c3\u6578\uff1a\u540d\u70ba `value` \u7684\u7269\u4ef6\u3002 `*=` \u904b\u7b97\u5b50\u5be6\u969b\u4e0a\u662f `x.number = x.number * 2` \u7684\u7c21\u5beb\uff1a\u56e0\u6b64\u6211\u5011\u4fee\u6539\u4e86 `x.number` \u7684\u503c\uff0c\u4e26\u8a18\u9304\u76f8\u4e58\u5f8c\u7684\u503c `20`\u3002\\n\\n\u7b2c\u56db\u6b21\uff0c\u6211\u5011\u518d\u6b21\u50b3\u905e\u540d\u70ba `value` \u7684\u7269\u4ef6\u3002 `x.number` \u5148\u524d\u5df2\u4fee\u6539\u70ba `20`\uff0c\u56e0\u6b64 `x.number * = 2` \u70ba `40`\u3002","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"`reduce` \u65b9\u6cd5\u63a5\u6536\u7684\u7b2c\u4e00\u500b\u53c3\u6578\u662f _\u7d2f\u52a0\u5668(accumulator)_ \uff0c\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\u662f `x`\u3002 \u7b2c\u4e8c\u500b\u53c3\u6578\u662f _current value_ `y`\u3002 \u4f7f\u7528 `reduce` \u65b9\u6cd5\uff0c\u6211\u5011\u5c0d\u9663\u5217\u4e2d\u7684\u6bcf\u500b\u5143\u7d20\u57f7\u884c\u4e00\u500b callback \u51fd\u5f0f\uff0c\u4e26\u5728\u6700\u7d42\u56de\u4e00\u500b\u503c\u3002\\n\\n\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u5011\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u50c5\u8a18\u9304\u4e86\u7d2f\u52a0\u5668\u7684\u503c\u548c\u7576\u524d\u503c\u3002\\n\\n\u7d2f\u52a0\u5668\u7684\u503c\u7b49\u65bc callback \u51fd\u5f0f\u5148\u524d\u8fd4\u56de\u7684\u503c\u3002 \u5982\u679c\u6c92\u6709 `initialValue` \u53c3\u6578\u50b3\u905e\u7d66 `reduce` \u65b9\u6cd5\uff0c\u5247\u7d2f\u52a0\u5668\u7684\u521d\u59cb\u503c\u5c07\u6703\u7b49\u65bc\u7b2c\u4e00\u500b\u5143\u7d20\u3002\\n\\n\u5728\u7b2c\u4e00\u500b\u547c\u53eb\u4e2d\uff0c\u7d2f\u52a0\u5668\uff08`x`\uff09\u70ba`1`\uff0c\u7576\u524d\u503c\uff08`y`\uff09\u70ba`2`\u3002 \u6211\u5011\u4e0d\u5f9e callback \u51fd\u5f0f\u8fd4\u56de\uff0c\u800c\u662f\u8f38\u51fa\u7d2f\u52a0\u5668\u548c\u7576\u524d\u503c\uff1a`1` \u548c `2`\u3002\\n\\n\u5982\u679c\u60a8\u4e0d\u5f9e callback \u51fd\u5f0f\u8fd4\u56de\u503c\uff0c\u5247\u5b83\u5c07\u8fd4\u56de `undefined`\u3002 \u5728\u4e0b\u4e00\u6b21\u547c\u53eb\u6642\uff0c\u7d2f\u52a0\u5668\u70ba `undefined`\uff0c\u7576\u524d\u503c\u70ba `3`\u3002 \u65bc\u662f `undefined` \u548c `3` \u88ab\u8f38\u51fa\u3002\\n\\n\u5728\u7b2c\u56db\u6b21\u547c\u53eb\u4e2d\uff0c\u6211\u5011\u518d\u6b21\u4e0d\u5f9e callback \u51fd\u5f0f\u8fd4\u56de\u3002 \u7d2f\u52a0\u5668\u518d\u6b21\u70ba `undefined`\uff0c\u7576\u524d\u503c\u70ba `4`\u3002\u65bc\u662f `undefined` \u548c `4` \u88ab\u8f38\u51fa\u3002","id":64,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"\u5c07\u6703\u8f38\u51fa\u4ec0\u9ebd\u5167\u5bb9\uff1f"}],"locale":"zh-TW"},{"isRTL":false,"language":"\ud83c\udde7\ud83c\uddf7 Portugu\xeas Brasil","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Dentro da fun\xe7\xe3o, n\xf3s primeiro declaramos a vari\xe1vel `name` usando a palavra-chave `var`. Isso significa que a variavel \xe9 elevada(hoisted) (O espa\xe7o na mem\xf3ria \xe9 separado durante a fase de cria\xe7\xe3o) com o valor padr\xe3o `undefined`, at\xe9 que chegue na linha onde definimos a vari\xe1vel. Ainda n\xe3o definimos a vari\xe1vel na linha onde tentamos usar colocar no log o valor da vari\xe1vel `name`, portanto ela ainda tem o valor `undefined`.\\n\\nVari\xe1veis com a palavra-chave `let` (e `const`) s\xe3o elevadas, mas diferente de `var`, n\xe3o s\xe3o <i>inicializadas</i>. Elas n\xe3o est\xe3o acess\xedveis antes da linha em que as declaramos (ou inicializamos). Esse \xe9 um conceito chamado de \\"temporal dead zone\\". Quando tentamos acessar essas vari\xe1veis antes de serem declaradas, o JavaScript lan\xe7a um `ReferenceError`.","id":0,"options":["`Lydia` e `undefined`","`Lydia` e `ReferenceError`","`ReferenceError` e `21`","`undefined` e `ReferenceError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Por causa da fila de eventos em JavaScript, a callback de `setTimeout` \xe9 chamada <i>depois</i> do la\xe7o ter sido executado. J\xe1 que a vari\xe1vel `i` no primeiro la\xe7o foi declarada usando a palavra-chave `var`, seu valor era global. Durante o la\xe7o, incrementamos o valor de `i` por `1` em cada repeti\xe7\xe3o, usando o operador un\xe1rio `++`. Quando a callback de `setTimeout` foi chamada, `i` valia `3`.\\n\\nNo segundo la\xe7o, a vari\xe1vel `i` foi declarada usando a palavra-chave `let`: Vari\xe1veis declaradas com `let` (e `const`) s\xf3 s\xe3o acess\xedveis nos escopos de seus blocos (um bloco \xe9 qualquer c\xf3digo entre `{ }`). Durante cada repeti\xe7\xe3o do la\xe7o, `i` vai ter um novo valor, e cada valor tem seu escopo dentro do la\xe7o.","id":1,"options":["`0 1 2` e `0 1 2`","`0 1 2` e `3 3 3`","`3 3 3` e `0 1 2`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"Perceba que o valor de `diameter` \xe9 uma fun\xe7\xe3o normal, enquanto que o valor de `perimeter` \xe9 uma arrow function.\\n\\nCom arrow functions, a palavra-chave `this` faz refer\xeancia ao escopo atual em que est\xe1 inserida, diferente de fun\xe7\xf5es normais! Isso significa que quando n\xf3s chamamos `perimeter`, ela n\xe3o faz refer\xeancia ao objeto <i>shape</i>, mas ao seu escopo atual (por exemplo, <i>window</i>).\\n\\nN\xe3o h\xe1 `radius` fora de <i>shape</i>, ent\xe3o retorna `undefined`.","id":2,"options":["`20` e `62.83185307179586`","`20` e `NaN`","`20` e `63`","`NaN` e `63`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"O operador un\xe1rio `+` tenta converter um operando para um n\xfamero. `true` \xe9 `1`, e `false` \xe9 `0`.\\n\\nA string `\'Lydia\'` tem valor truthy*. O que estamos realmente perguntando \xe9 \\"Esse valor truthy \xe9 falsy?\\". Isso retorna `false`.","id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"No JavaScript, todas chaves dos objetos s\xe3o strings (a n\xe3o ser que sejam um s\xedmbolo). Ainda que n\xe3o possamos <i>digit\xe1-las</i> como strings, elas s\xe3o sempre convertidas para string sob o cap\xf4.\\n\\nJavaScript interpreta afirma\xe7\xf5es. Quando usamos a nota\xe7\xe3o de colchetes, ele v\xea o colchete de abertura `[` e continua lendo at\xe9 encontrar o colchete que o fecha `]`. S\xf3 ent\xe3o vai avaliar e rodar as afirma\xe7\xf5es.\\n\\n`mouse[bird.size]`: Primeiro avalia `bird.size`, que \xe9 `\\"small\\"`. `mouse[\\"small\\"]` retorna `true`\\n\\nPor outro lado, com a nota\xe7\xe3o de ponto `.`, isso n\xe3o acontece. `mouse` n\xe3o tem uma chave chamada `bird`, o que significa que `mouse.bird` \xe9 `undefined`. Ent\xe3o, pedimos pelo `size` usando a nota\xe7\xe3o de ponto: `mouse.bird.size`. Uma vez que `mouse.bird` \xe9 `undefined`, estamos realmente pedindo `undefined.size`. Isso n\xe3o \xe9 v\xe1lido, e ir\xe1 gerar um erro similar a `Cannot read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size` n\xe3o \xe9 v\xe1lido","`mouse[bird.size]` n\xe3o \xe9 v\xe1lido","`mouse[bird[\\"size\\"]]` n\xe3o \xe9 v\xe1lido","Todos s\xe3o v\xe1lidos"],"question":"Qual \xe9 a alternativa correta?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"Em JavaScript, todos objetos interagem por <i>refer\xeancia</i> quando os colocamos um igual ao outro.\\n\\nPrimeiro, a vari\xe1vel `c` guarda o valor de um objeto. Depois, declaramos `d` com a mesma referencia que `c` tem para o objeto.\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\nQuando voc\xea muda um objeto, voc\xea muda todos eles.","id":5,"options":["`Hello`","`Hey`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` \xe9 uma func\xe7\xe3o construtura padr\xe3o do JavaScript. Ainda que parece com um n\xfamero, n\xe3o \xe9 realmente um n\xfamero: Tem um monte de fun\xe7\xf5es extras e \xe9 um objeto.\\n\\nQuando usamos o operador `==`, s\xf3 conferimos se ambas tem o mesmo <i>valor</i>. Ambas tem o valor de `3`, ent\xe3o retorna `true`. \\n\\nContudo, quando usamos o operador `===`, ambos valor <i>e</i> tipo tem de ser o mesmo. E n\xe3o s\xe3o: `new Number()` n\xe3o \xe9 um n\xfamero, \xe9 um **objeto**. Ambos retornam `false`.","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"A fun\xe7\xe3o `colorChange` \xe9 est\xe1tica. M\xe9todos est\xe1ticos s\xe3o designados para viver somente nos construtores em que s\xe3o criados, e filhos n\xe3o herdam esses m\xe9todos.\\nJ\xe1 que `freddie` \xe9 filho de `Chameleon`, a fun\xe7\xe3o n\xe3o \xe9 herdada, e n\xe3o est\xe1 dispon\xedvel para `freddie`: Um erro `TypeError` \xe9 gerado.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Erro de digita\xe7\xe3o!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Cria o log do objeto, pois criamos um objeto vazio no objeto global! Quando erramos a digita\xe7\xe3o de `greeting` como `greetign`, o interpretador do JavaScript viu isso como `global.greetign = {}` (ou `window.greetign = {}` em um navegador).\\n\\nPara evitar esse comportamento, podemos usar `\\"use strict\\"`. Isso garante que voc\xea  tenha declarado uma vari\xe1vel antes de poder inicializ\xe1-la com algum valor.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"Isso \xe9 poss\xedvel em JavaScript, pois fun\xe7\xf5es s\xe3o objetos! (Tudo menos tipos primitivos s\xe3o objetos)\\n\\nUma fun\xe7\xe3o \xe9 um tipo especial de objeto. O c\xf3digo que voc\xea escreve n\xe3o \xe9 a verdadeira fun\xe7\xe3o. A fun\xe7\xe3o \xe9 um objeto com propriedades. E essa propriedade \xe9 invoc\xe1vel.","id":9,"options":["Nada, isso \xe9 ok!","`SyntaxError`. N\xe3o se pode adicionar propriedades em uma fun\xe7\xe3o dessa maneira.","`undefined`","`ReferenceError`"],"question":"O que acontece quando fazemos isso?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"Voc\xea n\xe3o pode adicionar propriedades para um construtor igual aos objetos normais. Se voc\xea quer adicionar uma funcionalidade para todos objetos ao mesmo tempo, voc\xea deve usar o prototype.\\n\\nEnt\xe3o nesse caso\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nfaria `member.getFullName()` funcionar. Por qu\xea isso \xe9 beneficial? Digamos que tiv\xe9ssemos esse m\xe9todo no pr\xf3prio construtor. Talvez nem toda inst\xe2ncia de `Person` precisasse desse m\xe9todo. Isso gastaria muita mem\xf3ria, uma vez que cada inst\xe2ncia teria esse propriedade e teria seu espa\xe7o alocado. Ao inv\xe9s disso, se adicionarmos somente ao prot\xf3tipo, alocamos somente um \xfanico espa\xe7o na mem\xf3ria, e todas inst\xe2ncias de `Person` ainda tem acesso ao m\xe9todo.","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"Na `sarah`, n\xe3o usamos a palavra-chave `new`. Quando usamos `new`, se refere ao novo objeto vazio que criamos. Contudo, se n\xe3o usarmos `new`, nos referimos ao **objeto global**!\\n\\nAfirmamos que `this.firstName` vale `\\"Sarah\\"` e `this.lastName` vale `\\"Smith\\"`. O que realmente fizemos foi definir `global.firstName = \'Sarah\'` e `global.lastName = \'Smith\'`. A `sarah` ainda \xe9 `undefined`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` e `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` e `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` e `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` e `ReferenceError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":3,"explanation":"Durate a fase do **capturing**, o evento percorre os elementos pais at\xe9 chegar no elemento algo. Isso alcan\xe7a o elemento **target**, e o **bubbling** come\xe7a.","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"Quais s\xe3o as tr\xeas fases na propaga\xe7\xe3o de eventos?"},{"answer":1,"explanation":"Todos objetos tem prot\xf3tipos, exceto pelo **base object**. O base object tem acesso \xe0 alguns m\xe9todos e propriedades, como `.toString`. \xc9 o motivo de podermos usar m\xe9todos j\xe1 embutidos no JavaScript! Todos m\xe9todos desse tipo j\xe1 est\xe3o embutidos no prot\xf3tipo. Apesar do JavaScript n\xe3o encontrar algum m\xe9todo diretamente no seu objeto, ele percorre a cadeia de prot\xf3tipos at\xe9 encontrar no base, o que torna acess\xedvel para todo objeto.","id":13,"options":["Verdadeiro","Falso"],"question":"Todos objetos tem prot\xf3tipos."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript \xe9 uma **linguagem dinamicamente tipada**: N\xe3o especificamos quais tipos nossas vari\xe1veis s\xe3o. Valores pode ser automaticamente convertidos em outro tipo sem voc\xea saber, o que \xe9 chamado de <i>coer\xe7\xe3o implicita de tipo</i>. **Coer\xe7\xe3o** \xe9 converter de um tipo em outro.\\n\\nNesse exemplo, JavaScript converte o n\xfamero `1` em uma string, para que a fun\xe7\xe3o fa\xe7a sentido e retorne um valor. Durante a adi\xe7\xe3o de um tipo num\xe9rico (`1`) e uma string (`\'2\'`), o n\xfamero \xe9 tratado como uma string. Podemos concatenar strings como `\\"Hello\\" + \\"World\\"`, ent\xe3o o que est\xe1 acontecendo aqui \xe9 `\\"1\\" + \\"2\\"` que retorna `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"O operador un\xe1rio no **sufixo**  `++`:\\n\\n1. Retorna o valor (retorna o valor `0`)\\n2. Incrementa o valor (numero agora \xe9 `1`)\\n\\nO operador un\xe1rio **prefixo** `++`:\\n\\n1. Incrementa o valor (numero agora \xe9 `2`)\\n2. Retorna o valor (Retorna o valor `2`)\\n\\nIsso retorna `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"Se usamos template literals marcadas, ou tagged template literals, o valor do primeiro argumento \xe9 sempre um array com a string, separada pelos tagged template liberals. Os argumentos restantes recebem os valores das express\xf5es passadas!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Quando testamos igualdade, primitivos s\xe3o comparados por seus _valores_, enquanto objetos s\xe3o comparados por suas  _refer\xeancias_. O JavaScript confere se os objetos tem a refer\xeancia para o mesmo local na mem\xf3ria.\\n\\nOs dois objetos que estamos comparando n\xe3o s\xe3o assim: O objeto que passamos como par\xe2metro faz refer\xeancia a uma posi\xe7\xe3o na mem\xf3ria diferente daquela que o objeto que usamos para conferir a igualdade.\\n\\n\xc9 por isso que ambos `{ age: 18 } === { age: 18 }` E `{ age: 18 } == { age: 18 }` retornam `false`.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"O operador _spread_ (`...args`.) retorna um array com os argumentos. Um array \xe9 um objeto, ent\xe3o `typeof args` retorna `\\"object\\"`.","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Com `\\"use strict\\"`, voc\xea pode ter certeza que n\xe3o declarou vari\xe1veis globais. Nunca declaramos a vari\xe1vel `age`, e j\xe1 que usamos `\\"use strict\\"`, ira gerar um erro de refer\xeancia. Se n\xe3o tiv\xe9ssemos usado `\\"use strict\\"`, teria funcionado, uma vez que a propriedade `age` teria sido adicionada ao objeto global.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` executa o c\xf3digo mesmo se passado como string. Se \xe9 uma express\xe3o, como nesse caso, ele calcula a express\xe3o. A express\xe3o \xe9 `10 * 10 + 5`. Isso retorna o n\xfamero `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"Qual o valor de `sum`?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"Dados guardados em `sessionStorage` s\xe3o removidos depois de fechar a _guia_.\\n\\nSe us\xe1ssemos `localStorage`, o dado seria guardado para sempre, exceto se `localStorage.clear()` fosse chamado.","id":21,"options":["Sempre, o dado n\xe3o \xe9 perdido.","Quando o usu\xe1rio fechar a guia.","Quando o usu\xe1rio fechar o navegador inteiro.","Quando o usu\xe1rio desligar o computador."],"question":"Por quanto tempo cool_secret \xe9 acess\xedvel?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Coma a palavra-chave `var`, voc\xea pode declarar v\xe1rias vari\xe1veis com o mesmo nome. A vari\xe1vel vai guardar o \xfaltimo valor.\\n\\nVoc\xea n\xe3o pode fazer isso com `let` ou `const` uma vez que eles conferem o bloco de escopo em que est\xe3o inseridos.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"Todas as chaves de objetos (exceto s\xedmbolos) s\xe3o strings debaixo do cap\xf4, mesmo que voc\xea n\xe3o digite como uma string. \xc9 por isso que `obj.hasOwnProperty(\'1\')` tamb\xe9m retorna `true`.\\n\\nN\xe3o funciona assim para `Set`. N\xe3o tem um `\'1\'` no nosso set: `set.has(\'1\')` retorna `false`. Temos o tipo n\xfamero `1`, ent\xe3o `set.has(1)` retorna `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Se temos duas chaves com o mesmo nome, a \xfaltima ir\xe1 substituir a primeira. Ainda vai estar na primeira posi\xe7\xe3o, mas com o \xfaltimo valor espec\xedficado.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"explanation":"O contexto base de execu\xe7\xe3o \xe9 o contexto global: \xc9 aquilo que est\xe1 acess\xedvel em qualquer lugar do c\xf3digo.","id":25,"options":["Verdadeiro","Falso","Depende"],"question":"O contexto global de execu\xe7\xe3o do JavaScript cria duas coisas para voc\xea: O objeto global, e a palavra-chave `this`."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"A palavra-chave `continue` pula uma itera\xe7\xe3o se a condi\xe7\xe3o retorna `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` \xe9 um construtor embutido, no qual podemos adicionar propriedades. Nesse caso adicionamos um m\xe9todo ao seu prot\xf3tipo. Tipos primitivos `string` s\xe3o automaticamente convertidos em um objeto string, gerado pelo construtor `String`. Assim, todas as strings (que s\xe3o objetos string) tem acesso ao m\xe9todo.","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Chaves de objeto s\xe3o automaticamente convertidas em strings. Estamos tentando usar um objeto como chave do objeto `a`, com o valor de `123`.\\n\\nContudo, quando transformamos um objeto em string, ele vira um `\\"[object Object]\\"`. Ent\xe3o, o que estamos afirmando \xe9 `a[\\"object Object\\"] = 123`. Ap\xf3s, tentamos a mesma coisa. `c` \xe9 outro objeto que (implicitamente) convertemos para string. Ent\xe3o, temos `a[\\"object Object\\"] = 456`.\\n\\nEnt\xe3o, fazemos o log de `a[b]`, o que na verdade \xe9 `a[\\"object Object\\"]`. Acabmos de definir esse valor, como `456`, e \xe9 isso que ele retorna.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Temos a fun\xe7\xe3o `setTimeout` e a invocamos por primeiro. Ainda assim, apareceu no log por \xfaltimo.\\n\\nIsso acontece pois nos navegadores, n\xe3o temos apenas o nosso mecanismo de execu\xe7\xe3o (runtime engine), temos tamb\xe9m algo chamado `WebAPI`. A `WebAPI` nos da coisas como a `setTimeout` e o DOM.\\n\\nDepois que a fun\xe7\xe3o de retorno (callback) \xe9 enviada para a `WebAPI`, a fun\xe7\xe3o `setTimeout` (mas n\xe3o seu retorno ou callback) s\xe3o enviadas para fora do stack.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nAgora, `foo` \xe9 chamada, e `\\"First\\"` \xe9 adicionado ao log.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` \xe9 evniada para fora do stack, e `baz` \xe9 chamada. `\\"Third\\"` \xe9 adicionado ao log.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nA `WebAPI` n\xe3o pode simplesmente adicionar coisas ao stack sempre que ficam prontas. Ao inv\xe9s, disso, todo retorno que fica pronto \xe9 enviado para algo chamado _queue_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\n\xc9 aqui que um la\xe7o de evento come\xe7a a ocorrer. Um **la\xe7o de evento** confere o stack e o _queue_. Se o stack est\xe1 livre, pega a primeira coisa que estiver na queue e coloca no stack.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` \xe9 chamada, `\\"Second\\"` \xe9 adicionado ao log, e \xe9 enviado para fora do stack.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"O elemento mais interno no aninhamento que causou o evento \xe9 o alvo do evento. Voc\xea pode parar o _bubbling_ com `event.stopPropagation`.","id":30,"options":["A `div` mais externa","A `div` mais interna","`button`","Um array dos elementos aninhandos."],"question":"qual \xe9 o event.target quando clicamos no bot\xe3o?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"Se clicarmos em `p`, veremos dois itens adicionaos ao log: `p` e `div`. Durante a propaga\xe7\xe3o de eventos, existem 3 fases: capturar, adquirir o _target_, e o bubbling. Por padr\xe3o, manipuladores de eventos s\xe3o executados junto a fase de bubbling (a n\xe3o ser que voc\xea marque `useCapture` como `true`). Percorre do elemento aninhando mais interno, propagando para fora.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Quando voc\xea clica no par\xe1grafo, O que \xe9 adicionado ao log?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"Com ambos, podemos passar o objeto que queremos que o `this` fa\xe7a refer\xeancia. Contudo, `.call` \xe9 _executado imediatamente_!\\n\\n`.bind.` retorna uma _c\xf3pia_ da fun\xe7\xe3o, mas com seu contexto vinculado \xe0 c\xf3pia. E n\xe3o \xe9 executado imediatamente.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"A fun\xe7\xe3o `sayHi` retorna o valor retornado pela arrow function pois ela \xe9 uma IIFE (Immediately Invoked Function Expression ou Express\xe3o de Fun\xe7\xe3o Invocada Imediatamente). Essa IIFE retornou `0`, que \xe9 do tipo `\\"number\\"`.\\n\\nPara saber mais: S\xf3 existem 7 tipos j\xe1 definidos: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, e `bigint`. `\\"function\\"` n\xe3o \xe9 um tipo, uma vez que  fun\xe7\xf5es s\xe3o objetos, elas s\xe3o do tipo `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Existem somente seis valores falsy:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (string vazia)\\n- `false`\\n\\nFun\xe7\xf5es construtoras, como `new Number` e `new Boolean` s\xe3o truthy.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","Todos s\xe3o falsy"],"question":"Qual desses tem valor falsy?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` retorna `\\"number\\"`.\\n`typeof \\"number\\"` retorna `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"Qual \xe9 a s\xe1ida?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Quando voc\xea define um valor para um elemento em um array que excede o tamanho do pr\xf3prio array, o JavaScript cria algo chamado \\"empty slots\\" (espa\xe7os vazios). Na verdade, esses espa\xe7os vazios tem o valor de `undefined`, mas voc\xea ver\xe1 algo como:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\ndependendo de onde voc\xea o executa, pois \xe9 diferente para cada navegador, node etc.","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"O bloco do `catch` recebe o argumento `x`. Esse n\xe3o \xe9 o mesmo `x` da vari\xe1vel de quando estamos passando os argumentos. A vari\xe1vel `x` \xe9 de escopo do seu bloco.\\n\\nDepois, definimos essa vari\xe1vel, dentro do seu bloco, para valor `1`, e definimos o valor de `y`, que pertence a um bloco maior. Agora, nos adicionamos ao log o valor de `x`, que dentro desse bloco tem valor `1`.\\n\\nFora do bloco do `catch`. `x` ainda \xe9 `undefined`, e `y` ainda \xe9 `2`. Quando tentamos usar `console.log(x)` fora do bloco do `catch`, isso retorna `undefined`, e `y` retorna `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"explanation":"JavaScript tem somente tipos primitivos e objetos.\\n\\nTipos primitivos s\xe3o `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, e `symbol`.\\n\\nO que diferencia um primitivo de um objeto \xe9 que primitivos n\xe3o m\xe9todos ou propriedades. Contudo, se voc\xea est\xe1 atento vai lembrar que `\'foo\'.toUpperCase()` retorna `\'FOO\'` e n\xe3o resulta em um `TypeError`. Isso acontece pois quando voc\xea tenta acessar uma propriedade ou m\xe9todo em um primitivo como, por exemplo, uma string, JavaScript vai transformar esse primitivo em objeto usando um _wrapper_, nesse caso o `String`, e discarta o wrapper imediatamente ap\xf3s executar o m\xe9todo ou propriedade. Todos os primitivos, com exce\xe7\xe3o de `null` e `undefined` exibem esse comportamento.","id":38,"options":["primitivo ou um objeto","fun\xe7\xe3o ou um object","Pegadinha! Somente objetos","n\xfamero ou um objeto"],"question":"Tudo em JavaScript ou \xe9 um..."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` \xe9 nosso valor inicial. \xc9 o valor que come\xe7amos, e portanto o valor do primeiro `acc`. Durante a primeira itera\xe7\xe3o, `acc` \xe9 `[1,2]`, e `cur` \xe9 `[0, 1]`. N\xf3s concatemos ambos, o que resulta em `[1, 2, 0, 1]`.\\n\\nEnt\xe3o, `[1, 2, 0, 1]` \xe9 `acc` e `[2, 3]` \xe9 o `cur`. Concatenamos novamente, e chegamos em `[1, 2, 0, 1, 2, 3]`.","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` \xe9 falsy. `!null` retorna `true`. `!true` retorna `false`.\\n\\n`\\"\\"` \xe9 falsy. `!\\"\\"` retorna `true`. `!true` retorna `false`.\\n\\n`1` \xe9 truthy. `!1` retorna `false`. `!false` retorna `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Retorna um id \xfanico. Esse id pode ser usado para limpar o intervalo com a fun\xe7\xe3o `clearInterval()`.","id":41,"options":["um id \xfanico","a quantidade de  millisegundos especificada","a fun\xe7\xe3o passada","`undefined`"],"question":"O que o m\xe9todo `setInterval` retorna no navegador?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"Strings s\xe3o iter\xe1veis. O operador do spread `...` mapeia todo caract\xe9re de um iter\xe1vel para um elemento.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"Qual \xe9 o retorno?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Fun\xe7\xf5es regulares n\xe3o podem ser interrompidas durante execu\xe7\xe3o ap\xf3s sua invoca\xe7\xe3o. Entretanto, uma fun\xe7\xe3o generator pode ser interrompida, e depois continuar de onde parou. Uma fun\xe7\xe3o generator sempre possue a palavra chave `yield`, a fun\xe7\xe3o gera o valor espec\xedficado logo ap\xf3s. Note que a fun\xe7\xe3o generator, neste caso n\xe3o retorna o valor, ele utiliza _yields_ no valor.\\n\\nPrimeiro, n\xf3s inicializamos a fun\xe7\xe3o generator com `i` igual a `10`. N\xf3s chamamos a fun\xe7\xe3o generator utilizando o `next()` para pr\xf3xima fun\xe7\xe3o. A primeira vez que executamos a fun\xe7\xe3o generator o `i` \xe9 igual a `10`. que possue a palavra chave `yield`: que atribue o yields ao valor de `i`. O generator \xe9 pausado e `10` \xe9 logado.\\n\\nEnt\xe3o, chamamos a pr\xf3xima fun\xe7\xe3o novamente com o `next()`. Que continua de onde foi interrompido anteirormente, ainda com `i` igual a `10`. Agora, ele encontra o pr\xf3ximo `yield`, e yields `i * 2`. `i` \xe9 igual a `10`, que ent\xe3o retorna `10 * 2`, que \xe9 `20`. Seu resultado \xe9 `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 e 10, 20`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"Quando passamos m\xfaltiplas \\"promises\\" para a fun\xe7\xe3o `Promise.race`, ele resolve ou rejeita a primeira \\"promise\\". Para a fun\xe7\xe3o de `setTimeout`, n\xf3s passamos um tempo de 500ms para a primeira promise (`firstPromise`), e 100ms para a segunda promise (`secondPromise`). Isso significa que o `secondPromise` resolve primeiro com o valor de `\'two\'`. `res` que agora possui o valor `\'two\'`, que foi logado.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"Qual o retorno?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"Primeiro, declaramos a vari\xe1vel `person` com o valor de um objeto que possui o propriedade `name`.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nEnt\xe3o, declaramos a vari\xe1vel chamada `members`. Setamos o valor do primeiro elemento do array igual ao valor da vari\xe1vel `person`. Objetos interados por _refer\xeancia_ quando ao defini-los iguais entre si. Quando voc\xea atribui uma refer\xeancia de uma vari\xe1vel para outra, voc\xea faz uma _c\xf3pia_ de sua refer\xeancia. (note que eles n\xe3o possuem a _mesma_ refer\xeancia!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nEnt\xe3o, setamos a vari\xe1vel `person` igual a `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nEstamos apenas modificando o valor da vari\xe1vel `person`, e n\xe3o o primeiro elemento do array, desde que o elemento tem uma diferente refer\xeancia (copiada) de um objeto. O primeiro elemento de `members` ainda mant\xe9m sua refer\xeancia com o objeto original. Quando logamos o array de `members`, o primeiro elemento ainda mant\xe9m o valor do objeto, que \xe9 logado.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"Utilizando o loop `for-in`, podemos interar atrav\xe9s das chaves do objeto, neste caso o `name` e `age`. Por baixo dos panos, chaves de objetos s\xe3o strings (eles n\xe3o s\xe3o um s\xedmbolo). Em cada loop, setamos ao valor do `item` igual ao da chave atual, que se intera. Primeiro, `item` \xe9 igual ao `name`, e \xe9 logado. Ent\xe3o, `item` \xe9 igual a idade `age`, que \xe9 logado.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"Associatividade do operador \xe9 a ordem na qual o compilador avalia as express\xf5es, ou esquerda-para-direita ou direita-para-esquerda. Isso apenas acontece se todos os operatores possuem a _mesma_ preced\xeancia. Apenas temos um tipo de operador: `+`. Para adi\xe7\xe3o, a associatividade \xe9 esquerda-para-direita.\\n\\n`3 + 4` \xe9 avaliado primeiro. Seu resultado \xe9 o n\xfamero `7`.\\n\\n`7 + \'5\'` resulta em `\\"75\\"` por causa da coer\xe7\xe3o. JavaScript converte o n\xfamero `7` em string, veja a quest\xe3o 15. Podemos concatenar duas strings com o operador de `+`. `\\"7\\" + \\"5\\"` resulta em `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Apenas os primeiros n\xfameros da string \xe9 retornado. Baseado no _radix_ (o segundo parametro na ordem especifica qual o tipo de n\xfamero queremos atribuir o parse: base 10, hexadecimal, octal, binary, etc.), o `parseInt` checa se os caracteres na string s\xe3o v\xe1lidos. Depois de encontrar um caracter que n\xe3o \xe9 um n\xfamero v\xe1lido no radix, ele interrompe o parse e ignora os seguintes caracteres.\\n\\n`*` n\xe3o \xe9 um n\xfamero v\xe1lido. Ele apenas usa o parse no `\\"7\\"` em decimal `7`. `num` possui o valor `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"Qual o retorno de `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Quando mapeamos um array (map), o valor de `num` \xe9 igual ao elemento que est\xe1 percorrendo. Neste caso, os elementos s\xe3o n\xfameros, ent\xe3o a condi\xe7\xe3o do se (if) `typeof num === \\"number\\"` retorna `true`. A fun\xe7\xe3o map cria um novo array e insere os valores retornados da fun\xe7\xe3o.\\n\\nEntretanto, n\xe3o se retorna o valor. Quando n\xe3o se retorna um valor para a fun\xe7\xe3o, a fun\xe7\xe3o retorna `undefined`. Para cada elemento do array, o bloco de fun\xe7\xe3o \xe9 chamado, ent\xe3o para cada elemento \xe9 retornado `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\ngetInfo(person, birthYear);\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Os argumentos s\xe3o passados \u200b\u200bpor _valor_. Por\xe9m, se seu valor for um objeto, eles s\xe3o passados \u200b\u200bpor _refer\xeancia_. `birthYear` \xe9 passado por valor, j\xe1 que \xe9 uma string, n\xe3o um objeto. Quando passamos argumentos por valor, uma _c\xf3pia_ desse valor \xe9 criada (consulte a pergunta 46).\\n\\nA vari\xe1vel `birthYear` tem uma refer\xeancia ao valor `\\"1997\\"`. O argumento `year` tamb\xe9m tem uma refer\xeancia ao valor `\\"1997\\"`, mas n\xe3o \xe9 o mesmo valor de refer\xeancia de `birthYear`. Quando atualizamos o valor de `year`, definindo ` year` igual a `\\"1998\\"`, estamos apenas atualizando o valor de `year`. `birthYear` ainda \xe9 igual a `\\"1997\\"`.\\n\\nO valor de `person` \xe9 um objeto. O argumento `member` possui uma refer\xeancia (copiada) do _mesmo_ objeto . Quando modificamos uma propriedade do objeto que `member` tem refer\xeancia, o valor de `person` tamb\xe9m ser\xe1 modificado, pois ambos tem refer\xeancia ao mesmo objeto. A propriedade `name` de `person` agora \xe9 igual ao valor `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error:\\", e);\\n  }\\n}\\nsayHi();","codeLanguage":"javascript","explanation":"Com a declara\xe7\xe3o `throw`, podemos criar erros personalizados. Com esta declara\xe7\xe3o, voc\xea pode lan\xe7ar exce\xe7\xf5es. Uma exce\xe7\xe3o pode ser uma <b>string</b>, um <b>n\xfamero</b>, um <b>booleano</b> ou um <b>objeto</b>. Nesse caso, nossa exce\xe7\xe3o \xe9 a string `\'Hello world!\'`.\\n\\nCom a declara\xe7\xe3o `catch`, podemos especificar o que fazer se uma exce\xe7\xe3o for lan\xe7ada no bloco `try`. Uma exce\xe7\xe3o foi lan\xe7ada: a string `\'Hello world\'`. `e` agora \xe9 igual a essa string que registramos. Isso resulta em `\'Oh no an error: Hello world!\'`.","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Quando voc\xea retorna uma propriedade, o valor da propriedade \xe9 igual ao valor _retornado_, n\xe3o ao valor _definido_ na fun\xe7\xe3o do construtor. Retornamos a string `\\"Maserati\\"`, ent\xe3o `myCar.make` \xe9 igual a `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` \xe9 na realidade uma abrevia\xe7\xe3o de:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nQuando definimos `y` igual a `10`, adicionamos na verdade uma propriedade `y` ao objeto global (`window` no navegador, `global` no Node). Em um navegador, `window.y` agora \xe9 igual a `10`.\\n\\nEnt\xe3o, declaramos uma vari\xe1vel `x` com o valor de `y`, que \xe9 `10`. As vari\xe1veis \u200b\u200bdeclaradas com `let` tem _escopo definido no bloco_ ou seja, s\xe3o definidas apenas dentro do bloco em que s\xe3o declaradas, neste caso, _immediately-invoked function_ (IIFE). Quando usamos o operador `typeof`, o operando `x` n\xe3o est\xe1 definido: estamos tentando acessar `x` fora do bloco em que est\xe1 declarado. Isso significa que `x` n\xe3o est\xe1 definido. Os valores que n\xe3o foram atribu\xeddos ou declarados a um valor s\xe3o do tipo `\\"undefined\\"`. `console.log(typeof x)` retorna `\\"undefined\\"`.\\n\\nNo entanto, criamos uma vari\xe1vel global `y` ao definir `y` igual a `10`. Este valor est\xe1 acess\xedvel em qualquer lugar do nosso c\xf3digo. `y` \xe9 definido e mant\xe9m um valor do tipo `\\"number\\"`. `console.log(typeof y)` retorna `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\nconst pet = new Dog(\\"Mara\\");\\npet.bark();\\ndelete Dog.prototype.bark;\\npet.bark();","codeLanguage":"javascript","explanation":"Podemos excluir propriedades de objetos usando `delete`, tamb\xe9m no prototype. Ao excluir uma propriedade no prototype, ela n\xe3o est\xe1 mais dispon\xedvel na cadeia de prototypes. Nesse caso, a fun\xe7\xe3o `bark` n\xe3o est\xe1 mais dispon\xedvel no prototype depois de `delete Dog.prototype.bark`, mas ainda tentamos acess\xe1-lo.\\n\\nQuando tentamos invocar algo que n\xe3o \xe9 uma fun\xe7\xe3o, um `TypeError` \xe9 lan\xe7ado. Neste caso, `TypeError: pet.bark is not a function`, uma vez que `pet.bark` \xe9 `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\nconsole.log(set);","codeLanguage":"javascript","explanation":"O objeto `Set` \xe9 uma cole\xe7\xe3o de valores _exclusivos_ : um valor pode ocorrer apenas uma vez.\\n\\nPassamos o iter\xe1vel `[1, 1, 2, 3, 4]` com um valor `1` duplicado. Como n\xe3o podemos ter dois dos mesmos valores em um conjunto, um deles \xe9 removido. Isso resulta em `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"Um m\xf3dulo importado \xe9 _somente leitura_: voc\xea n\xe3o pode modificar o m\xf3dulo importado. Somente o m\xf3dulo que os exporta pode alterar seu valor.\\n\\nQuando tentamos aumentar o valor de `myCounter`, recebemos um erro: `myCounter` \xe9 somente leitura e n\xe3o pode ser modificado.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"O operador `delete` retorna um valor booleano: `true` em uma exclus\xe3o bem-sucedida, caso contr\xe1rio, ele retorna `false`. No entanto, vari\xe1veis declaradas com `var`, `const` ou `let` n\xe3o podem ser exclu\xeddas usando o operador `delete`.\\n\\nA vari\xe1vel `name` foi declarada com `const`, portanto sua exclus\xe3o n\xe3o \xe9 bem-sucedida: `false` \xe9 retornado. Quando definimos `age` igual a `21`, na verdade adicionamos uma propriedade chamada `age` para o objeto global. Dessa forma, voc\xea pode excluir propriedades dos objetos, portanto `delete age` returns `true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\nconsole.log(y);","codeLanguage":"javascript","explanation":"Podemos descompactar valores de matrizes ou propriedades de objetos atrav\xe9s da desestrutura\xe7\xe3o. Por exemplo:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nO valor de `a` agora \xe9 `1` e o valor de `b` agora \xe9 `2`. O que realmente fizemos na pergunta \xe9:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nIsso significa que o valor de `y` \xe9 igual ao primeiro valor no array, que \xe9 o n\xfamero `1`. Quando registramos no console `y`, `1` \xe9 retornado.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"\xc9 poss\xedvel combinar objetos usando o operador o spread operator `...`. Ele permite criar c\xf3pias dos pares de um objeto e adicion\xe1-las a outro objeto. Nesse caso, criamos c\xf3pias do objeto `user` e as adicionamos ao objeto `admin`. O objeto `admin` agora cont\xe9m os pares de chave/valor copiados, o que resulta em `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"Com o m\xe9todo `defineProperty`, podemos adicionar novas propriedades a um objeto ou modificar propriedades j\xe1 existentes. Quando adicionamos uma propriedade a um objeto usando o m\xe9todo `defineProperty`, ela \xe9, por padr\xe3o, _n\xe3o enumer\xe1vel_. O m\xe9todo`Object.keys` retorna todos os nomes de uma propriedade _enumer\xe1vel_  de um objeto. Nesse caso, apenas `\\"name\\"`.\\n\\nPropriedades adicionadas usando o m\xe9todo `defineProperty` s\xe3o imut\xe1veis por padr\xe3o. Voc\xea pode sobrepor esse comportamento usando as propriedade `writable`, `configurable` e `enumerable`. \\nAssim, o m\xe9todo `defineProperty` d\xe1 a voc\xea muito mais controle sobre as propriedades que voc\xea est\xe1 adicionando a um objeto.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"Qual \xe9 sa\xedda?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"O segundo argumento de `JSON.stringify` \xe9 o _substituo_. O substituto pode ser uma fun\xe7\xe3o ou um array, e deixa voc\xea controlar o que deve ser \\"stringfied\\", isto \xe9, ser usado pelo m\xe9todo `JSON.stringfy`.\\n\\nSe o substituto (replacer) for um _array_, apenas os nomes de propriedades inclu\xeddos no array ser\xe3o adicionados \xe0 string JSON. Nesse caso, apenas as propriedades com os nomes `\\"level\\"` ed `\\"health\\"` s\xe3o inclu\xedda, `\\"username\\"` \xe9 exclu\xedda. `data` agora \xe9 igual a `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nSe o substituto (replacer) for uma _fun\xe7\xe3o_, essa fun\xe7\xe3o \xe9 chamada em c ada propriedade no objeto que est\xe1 sendo \\"Stringfied\\". O valor retornado dessa fun\xe7\xe3o ser\xe1 o valor da propriedade quanto adicionado \xe0 string JSON. Se o valor for `undefined`, essa propriedade \xe9 exclu\xedda da string JSON.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"O operador un\xe1rio `++` primeiro _retorna_ o valor do operando, depois _incrementa_ esse valor. O valor de `num1` \xe9 `10`, pois a fun\xe7\xe3o `increaseNumber` retorna primeiro o valor de` num`, que \xe9 `10`, e apenas incrementa o valor de `num` posteriormente.\\n\\n`num2` \xe9 `10`, j\xe1 que passamos `num1` para o `increasePassedNumber`. `number` \xe9 igual a` 10` (o valor de `num1`. Novamente, o operador un\xe1rio `++` primeiro _retorna_ o valor do operando, depois _aumenta_ esse valor. O valor de` number` \xe9 `10`, ent\xe3o `num2` \xe9 igual a `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"No ES6, podemos inicializar par\xe2metros com um valor padr\xe3o. O valor do par\xe2metro ser\xe1 o valor padr\xe3o, se nenhum outro valor tiver sido passado para a fun\xe7\xe3o ou se o valor do par\xe2metro for `\\"undefined\\"`. Nesse caso, espalhamos (spread) as propriedades do objeto `value` para um novo objeto, para que `x` tenha o valor padr\xe3o de `{number: 10}`.\\n\\nO argumento padr\xe3o \xe9 executado _a cada chamada_! Toda vez que chamamos a fun\xe7\xe3o, um _novo_ objeto \xe9 criado. Invocamos a fun\xe7\xe3o `multiply` as duas primeiras vezes sem passar um valor: `x` tem o valor padr\xe3o de `{number: 10}`. Em seguida, registramos (log) o valor multiplicado desse n\xfamero, que \xe9 `20`.\\n\\nNa terceira vez que invocamos multiply, passamos um argumento: o objeto chamado `value`. O operador `*=` \xe9 na verdade uma abrevia\xe7\xe3o de `x.number = x.number * 2`: modificamos o valor de `x.number` e registramos (log) o valor multiplicado `20`.\\n\\nNa quarta vez, passamos o objeto `value` novamente. `x.number` foi modificado anteriormente para `20`, ent\xe3o `x.number *= 2` registra `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"O primeiro argumento que o m\xe9todo `reduce` recebe \xe9 o _acumulador_, `x` neste caso. O segundo argumento \xe9 o _valor atual_, `y`. Com o m\xe9todo `reduce`, executamos uma fun\xe7\xe3o de retorno de chamada (callback function) em todos os elementos da matriz, o que pode resultar em um \xfanico valor.\\n\\nNeste exemplo, n\xe3o estamos retornando nenhum valor, estamos simplesmente registrando os valores do acumulador e o valor atual.\\n\\nO valor do acumulador \xe9 igual ao valor retornado anteriormente da fun\xe7\xe3o de retorno de chamada (callback function). Se voc\xea n\xe3o passar o argumento opcional `initialValue` para o m\xe9todo `reduce`, o acumulador ser\xe1 igual ao primeiro elemento na primeira chamada.\\n\\nNa primeira chamada, o acumulador (`x`) \xe9 `1` e o valor atual (`y`) \xe9 `2`. N\xe3o retornamos da fun\xe7\xe3o de retorno de chamada, registramos o acumulador e o valor atual: `1` e` 2` s\xe3o registrados.\\n\\nSe voc\xea n\xe3o retornar um valor de uma fun\xe7\xe3o, ele retornar\xe1 `undefined`. Na pr\xf3xima chamada, o acumulador \xe9 \\"undefined\\" e o valor atual \xe9 \\"3\\". `undefined` e `3` s\xe3o registrados.\\n\\nNa quarta chamada, novamente n\xe3o retornamos nada da fun\xe7\xe3o de retorno de chamada. O acumulador \xe9 novamente `undefined` e o valor atual \xe9 `4`. `undefined` e `4` s\xe3o registrados.","id":64,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1\\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4\\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"Em uma classe derivada, voc\xea n\xe3o pode acessar a palavra-chave `this` antes de chamar `super`. Se voc\xea tentar fazer isso, ele lan\xe7ar\xe1 um erro de refer\xeancia (ReferenceError): 1 e 4 lan\xe7ar\xe1 um erro de refer\xeancia.\\n\\nCom a palavra-chave `super`, chamamos o construtor dessa classe pai com os argumentos fornecidos. O construtor do pai recebe o argumento `name`, portanto, precisamos passar `name` para `super`.\\n\\nA classe `Labrador` recebe dois argumentos, `name`, pois estende `Dog`, e `size` como uma propriedade extra na classe `Labrador`. Ambos precisam ser passados para a fun\xe7\xe3o construtora no `Labrador`, que \xe9 feita corretamente usando o construtor 2.","id":65,"options":["1","2","3","4"],"question":"Com qual construtor podemos estender com sucesso a classe `Dog`?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"Com a palavra-chave `import`, todos os m\xf3dulos importados s\xe3o _pre-parsed_. Isso significa que os m\xf3dulos importados s\xe3o executados _primeiro_, o c\xf3digo no arquivo que importa o m\xf3dulo \xe9 executado _depois_.\\n\\nEsta \xe9 uma diferen\xe7a entre `require()` no CommonJS e `import`! Com `require()`, voc\xea pode carregar depend\xeancias sob demanda enquanto o c\xf3digo est\xe1 sendo executado. Se tiv\xe9ssemos usado `require` em vez de `import`, `running index.js`,` running sum.js`, `3` teriam sido registrados no console.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":0,"code":"console.log(Number(2) === Number(2));\\nconsole.log(Boolean(false) === Boolean(false));\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'));","codeLanguage":"javascript","explanation":"Todo s\xedmbolo (Symbol) \xe9 totalmente \xfanico. O objetivo do argumento passado ao s\xedmbolo \xe9 fornecer uma descri\xe7\xe3o ao s\xedmbolo. O valor do s\xedmbolo n\xe3o depende do argumento passado. Ao testarmos a igualdade, estamos criando dois s\xedmbolos totalmente novos: o primeiro `Symbol(\'foo\')` e o segundo `Symbol(\'foo\')`. Esses dois valores s\xe3o \xfanicos e n\xe3o s\xe3o iguais entre si, `Symbol(\'foo\') === Symbol(\'foo\')` retorna `false`.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"const name = \'Lydia Hallie\';\\nconsole.log(name.padStart(13));\\nconsole.log(name.padStart(2));","codeLanguage":"javascript","explanation":"Com o m\xe9todo `padStart`, podemos adicionar preenchimento (padding) ao in\xedcio de uma string. O valor passado para esse m\xe9todo \xe9 o comprimento _total_ da string junto com o preenchimento. A string `\\"Lydia Hallie\\"` tem um comprimento de `12`. `name.padStart(13)` insere 1 espa\xe7o no in\xedcio da string, porque 12 + 1 \xe9 13.\\n\\nSe o argumento passado para o m\xe9todo `padStart` for menor que o comprimento da matriz, nenhum preenchimento ser\xe1 adicionado.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\" Lydia Hallie\\"`, `\\" Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"console.log(\'\ud83e\udd51\' + \'\ud83d\udcbb\');","codeLanguage":"javascript","explanation":"Com o operador `+`, voc\xea pode concatenar seq\xfc\xeancias de caracteres (strings). Neste caso, estamos concatenando a string `\\"\ud83e\udd51\\"` com a string `\\"\ud83d\udcbb\\"`, resultando em `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","A string containing their code points","Error"],"question":"Qual \xe9 a sa\xedda?"},{"answer":2,"code":"function* iniciarJogo() {\\n  const resposta = yield \'Voc\xea ama JavaScript?\';\\n  if (resposta !== \'Sim\') {\\n    return \\"Uau... Acho que entramos aqui\\";\\n  }\\n  return \'O JavaScript tamb\xe9m ama voc\xea \u2764\ufe0f\';\\n}\\n\\nconst jogo = iniciarJogo();\\nconsole.log(/* 1 */); // Voc\xea ama JavaScript?\\nconsole.log(/* 2 */); // O JavaScript tamb\xe9m ama voc\xea \u2764\ufe0f","codeLanguage":"javascript","explanation":"Uma fun\xe7\xe3o geradora \\"pausa\\" a sua execu\xe7\xe3o quando encontra a palavra-chave `yield`. Primeiro, temos que deixar a fun\xe7\xe3o produzir a string \\"Voc\xea ama JavaScript?\\", o que pode ser feito chamando `game.next().value`.\\n\\nCada linha \xe9 executada, at\xe9 encontrar a primeira palavra-chave `yield`. H\xe1 uma palavra-chave `yield` na primeira linha da fun\xe7\xe3o: a execu\xe7\xe3o para com o primeiro retorno! _Isso significa que a vari\xe1vel `resposta` ainda n\xe3o foi definida!_\\n\\nQuando chamamos `game.next(\\"Sim\\").value`, o `yield` anterior \xe9 substitu\xeddo pelo valor dos par\xe2metros passados para a fun\xe7\xe3o `next()`, `\\"Sim\\"` neste caso. O valor da vari\xe1vel `\\"resposta\\"` agora \xe9 igual a `\\"Sim\\"`. A condi\xe7\xe3o da instru\xe7\xe3o if retorna `false` e `JavaScript tamb\xe9m ama voc\xea \u2764\ufe0f` \xe9 registrada.","id":70,"options":["`jogo.next(\\"Sim\\").value` and `jogo.next().value`","`jogo.next.value(\\"Sim\\")` and `jogo.next.value()`","`jogo.next().value` and `jogo.next(\\"Sim\\").value`","`jogo.next.value()` and `jogo.next.value(\\"Sim\\")`"],"question":"Como podemos registrar os valores comentados ap\xf3s a instru\xe7\xe3o console.log?"}],"locale":"pt-BR"},{"isRTL":false,"language":"\ud83c\uddea\ud83c\uddf8 Espa\xf1ol","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Dentro de la funci\xf3n, primero declaramos la variable `name` con la palabra reservada ` var`. Esto significa que la variable se _eleva_ (el espacio de memoria se configura durante la fase de creaci\xf3n. Hace referencia al termino [hoisting](https://developer.mozilla.org/es/docs/Glossary/Hoisting)) con el valor predeterminado de `indefinido`, hasta que realmente llegamos a la l\xednea donde definimos la variable. A\xfan no hemos definido la variable en la l\xednea donde intentamos registrar la variable `name`, por lo que a\xfan mantiene el valor de` undefined`.\\n\\nLas variables con la palabra clave `let` (y` const`) se _elevan_, pero a diferencia de `var`, no se inicializa <i> </i>. No son accesibles antes de la l\xednea que los declaramos (inicializamos). Esto se llama la [\\"zona muerta temporal\\"](https://wesbos.com/temporal-dead-zone/). Cuando intentamos acceder a las variables antes de que se declaren, JavaScript lanza un `ReferenceError`","id":0,"options":["`Lydia` y `undefined`","`Lydia` y `ReferenceError`","`ReferenceError` y `21`","`undefined` y `ReferenceError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"Debido a la cola de eventos en JavaScript, la funci\xf3n `setTimeout` se llama una vez el ciclo se ha ejecutado. Dado que la variable `i` en el primer bucle se declar\xf3 utilizando la palabra reservada ` var`, este valor es global. Durante el bucle, incrementamos el valor de `i` en` 1` cada vez, utilizando el operador unario `++`. Cuando se invoc\xf3 la funci\xf3n `setTimeout`,` i` era igual a `3` en el primer ejemplo.\\n\\nEn el segundo bucle, la variable `i` se declar\xf3 utilizando la palabra reservada` let`: las variables declaradas con la palabra reservada `let` (y` const`) tienen un \xe1mbito de bloque (un bloque es lo que se encuentra entre `{}`). Durante cada iteraci\xf3n, `i` tendr\xe1 un nuevo valor, y cada valor se encuentra dentro del bucle.","id":1,"options":["`0 1 2` y `0 1 2`","`0 1 2` y `3 3 3`","`3 3 3` y `0 1 2`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nshape.diameter();\\nshape.perimeter();","codeLanguage":"javascript","explanation":"Hay que tener en cuenta aqui que el valor de `di\xe1metro` es una funci\xf3n regular o _normal_, mientras que el valor de `per\xedmetro` es una funci\xf3n de flecha.\\n\\nCon las funciones de flecha, la palabra clave `this` se refiere a su \xe1mbito actual, a diferencia de las funciones regulares. Esto significa que cuando llamamos \\"per\xedmetro\\", no se refiere al objeto en s\xed mismo, sino a su \xe1mbito circundante (ventana por ejemplo).\\n\\nNo hay valor `radius` en ese objeto, que devuelve` undefined`.","id":2,"options":["`20` y `62.83185307179586`","`20` y `NaN`","`20` y `63`","`NaN` y `63`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"En el primera caso se intenta convertir un operando en un n\xfamero. `true` es` 1`, y `false` es` 0`.\\n\\nEn el segundo caso la cadena `\'Lydia\'` es un valor verdadero. Lo que realmente estamos preguntando es \\"\xbfes este verdadero valor falso?\\". Esto devuelve `false`.","id":3,"options":["`1` y `false`","`false` y `NaN`","`false` y `false`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"En JavaScript, todas las _keys_ son cadenas (a menos que sea un s\xedmbolo). A pesar de que no podr\xedamos escribirlos como cadenas, siempre funcionan como cadenas de manera interna.\\n\\nJavaScript interpreta declaraciones. Cuando usamos la notaci\xf3n de corchetes, ve el corchete de apertura `[` y contin\xfaa hasta que encuentra el corchete de cierre `]`. Solo de esta manera se evaluar\xe1 la afirmaci\xf3n.\\n\\n`mouse [bird.size]`: Primero eval\xfaa `bird.size`, que es` \\"small\\" `. `mouse [\\"small\\"]` devuelve `true`\\n\\nSin embargo, con la notaci\xf3n de puntos, esto no sucede. `mouse` no tiene una clave llamada` bird`, lo que significa que `mouse.bird` es` undefined`. Luego, pedimos el `tama\xf1o` usando la notaci\xf3n de puntos:` mouse.bird.size`. Como `mouse.bird` es` undefined`, en realidad estamos preguntando `undefined.size`. Esto no es v\xe1lido y generar\xe1 un error similar `al Cannot read property \\"size\\" of undefined`","id":4,"options":["`mouse.bird.size`","`mouse[bird.size]`","`mouse[bird[\\"size\\"]]`","Todas son correctas"],"question":"\xbfCu\xe1l NO es v\xe1lida?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"En JavaScript, TODOS los objetos interact\xfaan por referencia, de modo que cuando se establecen iguales o pasan a una funci\xf3n, todos apuntan a la misma ubicaci\xf3n. De esta manera cuando cambia un objeto, los cambia a todos.\\n\\nPrimero, la variable `c` tiene un valor para un objeto. M\xe1s tarde, asignamos `d` con la misma referencia que` c` tiene al objeto.\\n\\n<img src = \\"https://i.imgur.com/ko5k0fs.png\\" width = \\"200\\">\\n\\nCuando cambias un objeto, cambias todos ellos.","id":5,"options":["`Hello`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number ()` es un constructor de funciones incorporado. Aunque parece un n\xfamero, no es realmente un n\xfamero: tiene muchas caracter\xedsticas adicionales y es un objeto.\\n\\nCuando usamos el operador `==`, solo verifica si tiene el mismo _valor_. Ambos tienen el valor de `3`, por lo que devuelve` true`.\\n\\nSin embargo, cuando usamos el operador `===`, tanto el **valor** como el **tipo** deben ser iguales. Entonces: `new Number ()` no es un n\xfamero, es un **objeto**. Ambos devuelven \\"false\\".","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nfreddie.colorChange(\\"orange\\");","codeLanguage":"javascript","explanation":"La funci\xf3n `colorChange` es est\xe1tica. Los m\xe9todos est\xe1ticos est\xe1n dise\xf1ados para _vivir_ solo en el constructor en el que se crean y no se pueden transmitir a ning\xfan elemento secundario. Como `freddie` es un ni\xf1o, la funci\xf3n no se transmite y no est\xe1 disponible en la instancia de `freddie`: por lo tanto se lanza un `TypeError`.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"Lo que hace JS aqu\xed es registrar el objeto debido a que acabamos de crear un objeto vac\xedo en el objeto global. Cuando escribimos err\xf3neamente `greeting` como `greetign`, el int\xe9rprete de JS ve esto como `global.greetign = {}` (o `window.greetign = {}` en un navegador).\\n\\nPara evitar esto, podemos usar el [\\"uso estricto\\"](https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Modo_estricto). Esto asegura que se haya declarado una variable antes de establecerla igual a cualquier cosa.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"Esto es perfectamente posible en JavaScript, porque las funciones son objetos (Recuerda: **todo** aparte de los tipos primitivos son objetos en JS)\\n\\nUna funci\xf3n es un tipo especial de objeto. El c\xf3digo que escribes t\xfa mismo no es la funci\xf3n real. La funci\xf3n es un objeto con propiedades. Esta propiedad es invocable.","id":9,"options":["No pasa nada, es totalmente correcto.","`SyntaxError`. No es posible agregar propiedades a una funci\xf3n de esta manera.","`undefined`","`ReferenceError`"],"question":"\xbfQu\xe9 ocurre cuando hacemos esto?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function () {\\n  return `${this.firstName} ${this.lastName}`;\\n}\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"En JS no se pueden a\xf1adir propiedades a un constructor como se puede hacer con los objetos. Si se desea a\xf1adir una caracter\xedstica a todos los objetos a la vez, se debe utilizar el [prototipo](https://www.w3schools.com/js/js_object_prototypes.asp) en su lugar. As\xed que en este caso,\\n\\n```js\\nPersona.prototipo.getFullName = funci\xf3n () {)\\n  devuelve `${este.nombre} ${este.apellido}`;\\n}\\n```\\n\\nhabr\xeda hecho que `member.getFullName()` funcionara. \xbfPor qu\xe9 es bueno? Imaginemos que a\xf1adimos este m\xe9todo al constructor. Quiz\xe1s no todas las \\"personas\\" necesitaban este m\xe9todo. Esto desperdiciar\xeda mucho espacio de memoria, ya que todav\xeda tendr\xedan esa propiedad, que ocupa espacio de memoria para cada caso. En cambio, si s\xf3lo lo a\xf1adimos al prototipo, s\xf3lo lo tenemos en un lugar en la memoria, \xa1pero todos ellos tienen acceso a \xe9l!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"Para `sarah`, no usamos la palabra reservada `new`. Cuando se usa `new`, se refiere al nuevo objeto vac\xedo que creamos. Sin embargo, si no se agrega `new\', se refiere al **objeto global**!\\n\\nEn el ejemplo `this.firstName` equivale a `\\"Sarah\\"` y `this.lastName` equivale a `\\"Smith\\"`. Lo que realmente hicimos fue definir `global.firstName = `Sarah\'` y `global.lastName = `Smith\'`. La misma `sarah` se deja `indefinida`.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` and `ReferenceError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":3,"explanation":"Durante la fase de **Capturing**, el evento pasa a trav\xe9s de los elementos ancestrales hasta el elemento objetivo. A continuaci\xf3n, alcanza el elemento **Target** y comienza el **bubbling**. M\xe1s informaci\xf3n [aqu\xed](https://www.sitepoint.com/event-bubbling-javascript/).\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\xbfCu\xe1les son las tres fases de la propagaci\xf3n de eventos?"},{"answer":1,"explanation":"Todos los objetos tienen prototipos, excepto el **objeto base** (M\xe1s info [aqu\xed](https://stackoverflow.com/questions/56659303/what-is-base-object-in-javascript)). El componente tiene acceso a algunos m\xe9todos y propiedades, como `.toString`. Esta es la raz\xf3n principal por la que se puede utilizar los m\xe9todos JavaScript incorporados. Todos estos m\xe9todos est\xe1n disponibles en el prototipo. Aunque JavaScript no puede encontrar de manera directa en su objeto, baja por la cadena de prototipos y lo encuentra all\xed, lo que lo hace accesible para poder usarse posteriormente.","id":13,"options":["true","false"],"question":"All object have prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript es un **lenguaje din\xe1micamente tipado** o de tipado d\xe9bil, esto significa que no es necesario declarar el tipo de variable antes de usarla pues ser\xe1 determinado autom\xe1ticamente cuando el programa comience a ser procesado. Los valores se pueden convertir autom\xe1ticamente en otro tipo sin que se sepa, esto se llama denomina _implicit type coercion_ (M\xe1s info [aqu\xed](https://medium.com/@ManuCastrillonM/entendiendo-la-coerci%C3%B3n-en-javascript-bc202d22d23f)). **La coerci\xf3n es la conversi\xf3n de un tipo a otro.**\\n\\nEn este ejemplo, JavaScript convierte el n\xfamero `1` en una cadena, para que la funci\xf3n tenga sentido y devuelva un valor. Durante la suma de un tipo num\xe9rico (`1`) y un tipo de cadena (`\'2\'`), el n\xfamero se trata como una cadena. Podemos concatenar cadenas como `\\"Hello\\" + \\"World\\"``, as\xed que lo que est\xe1 pasando aqu\xed es `\\"1\\" + \\"2\\"` que devuelve `\\"12\\"`","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"El operador **postfix** unario `++`:\\n\\n1. Devuelve el valor (esto devuelve `0`)\\n2. Incrementa el valor (el n\xfamero es ahora `1`)\\n\\nEl operador unario **prefix** `++`:\\n\\n1. Incrementa el valor (el n\xfamero es ahora `2`)\\n2. Devuelve el valor (esto devuelve `2`)\\n\\nPor lo tanto, devuelve `0 2 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"_Tagged templates_ es un caso de uso de [template literals](https://codeburst.io/javascript-template-literals-tag-functions-for-beginners-758a041160e1). Una _plantilla etiquetada_ es una llamada de funci\xf3n que utiliza una plantilla literal de la que obtener sus argumentos. Si se usan literales de plantillas etiquetadas, el valor del primer argumento es siempre una matriz de los valores de las cadenas. El resto de los argumentos obtienen los valores de las expresiones pasadas.","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"Al probar la igualdad, las primitivas se comparan por su _valor_, mientras que los objetos se comparan por su _referencia_. JavaScript comprueba si los objetos tienen una referencia a la misma ubicaci\xf3n en la memoria.\\n\\nLos dos objetos que estamos comparando no tienen eso: el objeto que pasamos como par\xe1metro se refiere a una ubicaci\xf3n diferente en la memoria que el objeto que usamos para comprobar la igualdad.\\n\\nEsta es la raz\xf3n por la que ambos `{ edad: 18 } === { edad: 18 }` y `{ edad: 18 }} == { edad: 18 }` devuelven `false`","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"El operador spread (`...args`.) devuelve un array con argumentos. Una matriz es un objeto, as\xed que `typeof args` devuelve `\\"object\\"`","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"Con `\\"use strict\\"`, es posible asegurarse de que no se declara accidentalmente variables globales. Nunca declaramos la variable `age`, y como usamos `\\"use strict\\"`, nos dar\xe1 un error de referencia. Si no hubi\xe9ramos usado `\\"use strict\\"`, habr\xeda funcionado, ya que la propiedad `age` se habr\xeda a\xf1adido al objeto global.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` eval\xfaa los c\xf3digos que se pasan como una cadena. Si es una expresi\xf3n, como en este caso, eval\xfaa la expresi\xf3n. La expresi\xf3n es `10 * 10 + 5`. Esto devuelve el n\xfamero `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"\xbfCu\xe1l es el valor de `sum`?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"Los datos almacenados en `sessionStorage` se eliminan despu\xe9s de cerrar la pesta\xf1a.\\n\\nSi se us\xf3 `localStorage`, los datos habr\xedan estado all\xed siempre, a menos que por ejemplo `localStorage.clear()` sea invocado.","id":21,"options":["Para siempre, los datos no se pierden.","Cuando el usuario cierra la pesta\xf1a.","Cuando el usuario cierra todo el navegador, no s\xf3lo la pesta\xf1a.","Cuando el usuario apaga su ordenador."],"question":"\xbfCu\xe1nto tiempo es accesible cool_secret?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"Con la palabra reservada `var`, se pueden declarar m\xfaltiples variables con el mismo nombre. La variable tendr\xe1 entonces el \xfaltimo valor.\\n\\nNo es posible hacer esto con `let` o `const` ya que tienen un alcance de bloque.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"Todas las claves de un objeto (excepto los s\xedmbolos) act\xfaan como cadenas, incluso si no son escritas como una cadena. Es por eso que `obj.hasOwnProperty(\'1\')` tambi\xe9n devuelve verdadero.\\n\\nNo funciona as\xed para un conjunto. No hay un \\"1\\" en nuestro set: `set.has(\'1\')` devuelve `falso`. Tiene el tipo num\xe9rico `1`, `set.has(1)` devuelve `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"Si tiene dos claves con el mismo nombre, la clave ser\xe1 reemplazada. Seguir\xe1 estando en su primera posici\xf3n, pero con el \xfaltimo valor especificado","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"explanation":"El contexto de ejecuci\xf3n base es el contexto de ejecuci\xf3n global: es accesible en todo el c\xf3digo.","id":25,"options":["true","false","it depends"],"question":"El contexto de ejecuci\xf3n de JS crea dos cosas: el objecto global y la palabra reservada \\"this\\"."},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"La sentencia `continue` omite una iteraci\xf3n si una cierta condici\xf3n, en este caso `(i === 3)`,  devuelve `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` es un constructor incorporado, al que podemos a\xf1adir propiedades. En este caso concreto, a\xf1adimos un m\xe9todo a su prototipo. Las cadenas primitivas se convierten autom\xe1ticamente en un objeto de cadena, generado por la funci\xf3n de prototipo de cadena. Por lo tanto, todas las cadenas (objetos de cadena) tienen acceso a ese m\xe9todo.","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Las claves se convierten autom\xe1ticamente en strings. Estamos tratando en este pregunta de establecer un objeto como clave para el objeto `a`, con el valor de `123`.\\n\\nSin embargo, cuando se _stringfy_ (compleja traducci\xf3n) un objeto, se convierte en `\\"[object Object]\\"`. As\xed que lo que estamos diciendo aqu\xed, es que `a[\\"object Object\\"] = 123`. Entonces, podemos intentar hacer lo mismo de nuevo. `c` es otro objeto que estamos impl\xedcitamente encadenando. Entonces, `a[\\"object Object\\"] = 456`.\\n\\nPara finalizar, registramos `a[b]`, que en realidad es `a[\\"Object\\"]`. Acabamos de ponerlo en `456`, as\xed que devuelve `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"Tenemos una funci\xf3n `setTimeout` y la invocamos primero. Sin embargo, fue el \xfaltimo en ser registrado.\\n\\nEsto se debe a que en los navegadores, no s\xf3lo tenemos el motor de tiempo de ejecuci\xf3n, tambi\xe9n tenemos algo llamado `WebAPI`. El `WebAPI` nos da la funci\xf3n `setTimeout` para empezar, y por ejemplo el DOM.\\n\\nDespu\xe9s de que la _callback_ es empujada a la WebAPI, la funci\xf3n `setTimeout` en s\xed misma (\xa1pero no la callback!) es removida de la pila.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nAhora, `foo` es invocado, y ``\\"First\\"`` est\xe1 siendo registrado.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`Foo` se quita de la pila, y `Baz` es invocado. `Third` se registra.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nLa WebAPI no puede simplemente a\xf1adir cosas a la pila cuando est\xe1 lista. En su lugar, empuja la funci\xf3n de devoluci\xf3n de llamada a algo llamado la _queue_ (cola en espa\xf1ol).\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nAqu\xed es donde un bucle de eventos comienza a funcionar. Un **lazo de evento** mira la pila y la cola de tareas. Si la pila est\xe1 vac\xeda, toma lo primero que encuentra en la cola y la empuja sobre la pila.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\nSe invoca el `bar`, se registra el `\\"Second\\"` y se quita de la pila.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"El elemento anidado m\xe1s profundo que causa el evento es el destino de ese evento.","id":30,"options":["Outer `div`","Inner `div`","`button`","An array of all nested elements."],"question":"\xbfCu\xe1l es la referencia al objeto que lanza el evento cuando se hace click en el bot\xf3n?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"Si hacemos clic en `p`, vemos dos _outputs_: `p` y `div`. Durante la propagaci\xf3n del evento, hay 3 [fases](https://www.sitepoint.com/event-bubbling-javascript/): _capturing_, _target_ y _bubbling_. De forma predeterminada, los controladores de eventos se ejecutan en la fase uno (a menos que se establezca `useCapture` en `true`). Va desde el elemento anidado m\xe1s profundo hacia el exterior.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"Al hacer click en el p\xe1rrafo, \xbfqu\xe9 se muestra por pantalla?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"En ambos  podemos pasar el objeto al que queremos que se refiera la palabra reservada `this`. Sin embargo, la diferencia es que `.call` es *ejecutado inmediatamente*!\\n\\n`.bind` devuelve una copia de la funci\xf3n, pero con un contexto enlazado. Es decir, no se ejecuta de inmediato.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\ntypeof sayHi();","codeLanguage":"javascript","explanation":"La funci\xf3n `sayHi` devuelve el valor devuelto de la funci\xf3n invocada inmediatamente ([IIFE](https://developer.mozilla.org/es/docs/Glossary/IIFE)). Esta funci\xf3n devuelve `0`, que es el tipo `\\"number\\"`.\\n\\nEn JS solo hay 7 tipos incorporados (En ingl\xe9s se llaman _built-in types_, y pueden identificarse con el operador `typeof`. M\xe1s informaci\xf3n [aqu\xed](https://www.oreilly.com/library/view/you-dont-know/9781491905159/ch01.html)): `null`,` undefined`, `boolean`,` number`, `string`,` object`, `symbol` y `bigint`. `\\"function\\"` no es un tipo, ya que las funciones son objetos, es de tipo `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"Solo hay seis valores falsos:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (cadena vac\xeda)\\n- `false`\\n\\n\\nLos constructores de funciones, como `new Number` y `new Boolean` son correctos.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"\xbfCu\xe1les de estos valores son falsos?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` devuelve `\\"number\\" `.\\n`typeof \\"number\\"` devuelve `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"Cuando se establece un valor en un elemento de una matriz que excede la longitud de la matriz, JS crea algo llamado \\"ranuras vac\xedas\\". Estos realmente tienen el valor de `undefined`, pero se podr\xe1 ver algo como:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\ndependiendo de d\xf3nde lo ejecute (es diferente para cada navegador, nodo, etc.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"El bloque `catch` recibe el argumento` x`. Este no es el mismo `x` que la variable cuando pasamos los argumentos. Esta variable `x` tiene un \xe1mbito de bloque.\\n\\nM\xe1s adelante, establecemos esta variable de \xe1mbito de bloque igual a `1`, y establecemos el valor de la variable `y`. Ahora, registramos la variable de \xe1mbito de bloque `x`, que es igual a `1`.\\n\\nFuera del bloque `catch`,` x` sigue siendo `undefined`, e `y` es `2`. Cuando queremos `console.log (x)` fuera del bloque `catch`, devuelve `undefined`, y `y` devuelve` 2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"explanation":"JavaScript solo tiene tipos y objetos primitivos.\\n\\nLos tipos primitivos son `boolean`, `null`, `undefined`, `bigint`, `number`, `string` y `symbol`.\\n\\nLo que diferencia a un tipo primitivo de un objeto es que los primeros no tienen propiedades o m\xe9todos; sin embargo, se puede ver que `\'foo\'.toUpperCase ()` se eval\xfaa como `\'FOO\'` y no da como resultado un `TypeError`. Esto se debe a que cuando se intenta acceder a una propiedad o m\xe9todo en un tipo primitivo, como una cadena, JavaScript envolver\xe1 impl\xedcitamente el objeto utilizando una de las clases de envoltura, por ejemplo `string`, y luego descartar\xe1 la envoltura inmediatamente despu\xe9s de evaluar la expresi\xf3n. Todas los tipos primitivos excepto `null` y `undefined` poseen este comportamiento.","id":38,"options":["tipo primitivo o un objeto","funci\xf3n u objeto","\xa1pregunta trampa! solo objetos","n\xfamero u objeto"],"question":"Todo en Javascript es o bien un(a).."},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` es nuestro valor inicial. Este es el valor con el que empezamos y el valor del primer `acc`. Durante la primera ronda, `acc` es` [1,2] `, y `cur` es `[0, 1]`. Los concatenamos, lo que resulta en `[1, 2, 0, 1]`.\\n\\nEntonces, `[1, 2, 0, 1]` es `acc` y` [2, 3]` es `cur`. Los concatenamos, y obtenemos `[1, 2, 0, 1, 2, 3]`","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` es falso. `! null` devuelve `true`. `! true` devuelve `false`.\\n\\n`\\" \\"` es falso. `!\\" \\"` devuelve `true`. `! true` devuelve `false`.\\n\\n\'1\' es verdadero. `! 1` devuelve `false`. `! false` devuelve `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"Devuelve una identificaci\xf3n \xfanica, un id \xfanico. Este id se puede usar para borrar ese intervalo con la funci\xf3n `clearInterval ()`.","id":41,"options":["una id \xfanico","la cantidad de milisegundos especificada","la funci\xf3n pasada","`undefined`"],"question":"\xbfQu\xe9 devuelveel m\xe9todo `setInterval`?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"Una cadena es un iterable. El [operador de propagaci\xf3n](https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Operadores/Spread_operator) asigna todos los caracteres de un iterable a un elemento.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\xbfQu\xe9 devuelve la siguiente funci\xf3n?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Las funciones regulares no pueden pararse a mitad de ejecuci\xf3n despu\xe9s de invocarse. Sin embargo, una funci\xf3n generadora s\xed puede ser parada, y m\xe1s adelante continuar desde donde fue detenida. Cada vez que una funci\xf3n generadora encuentra un `yield`, la funci\xf3n cede el valor especificado despu\xe9s de \xe9l. Observa que la funci\xf3n generadora en este caso no _devuelve_ el valor, _cede_ el valor.\\n\\nPrimero, iniciamos la funci\xf3n generadora con `i` igual a `10`. Invocamos la funci\xf3n generadora usando el m\xe9todo `next()`. La primera vez que invocamos la funci\xf3n generadora, `i` es igual a `10`. Encuentra el primer `yield`: cede el valor de `i`. El generador est\xe1 ahora \\"pausado\\", y `10` es mostrado por consola.\\n\\nDespu\xe9s, invocamos la funci\xf3n otra vez con el m\xe9todo `next()`. Contin\xfaa donde fue detenida previamente, todav\xeda con `i` igual a `10`. Ahora, encuentra el siguiente `yield`, y cede `i * 2`. `i` es igual a `10`, as\xed que devuelve `10 * 2`, que es `20`. Esto da como resultado `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 y 10, 20`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"Cuando pasamos m\xfaltiples promesas al m\xe9todo `Promise.race`, resuelve/rechaza la _primera_ promesa que sea resuelta/rechazada. Para el m\xe9todo `setTimeout`, pasamos un cron\xf3metro: 500ms para la primera promesa (`firstPromise`), y 100ms para la segunda promesa (`secondPromise`). Esto significa que `secondPromise` se resuelve primero con el valor de `\'two\'`. `res` ahora guarda el valor `\'two\'`, el cual se muestra por consola.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"\xbfQu\xe9 devuelve esto?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"Primero, declaramos la variable `person` con el valor de un objeto que tiene una propiedad `name`.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nDespu\xe9s, declaramos una variable llamada `members`. Asignamos el primer elemento de ese array igual al valor de la variable `person`. Un objeto interact\xfaa por _referencia_ cuando es asignado igual a otro objeto. Cuando asignas una referencia de una variable a otra, haces una _copia_ de esa referencia. (\xa1observa que no tienen la _misma_ referencia!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nDespu\xe9s, asignamos que la variable `person` es igual a `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nSolo estamos modificando el valor de la variable `person`, y no el primer elemento del array, ya que este elemento tiene una referencia diferente (copiada) al objeto. El primer elemento en `members` todav\xeda mantiene su referencia hacia el objeto original. Cuando mostramos por consola el array `members`, el primer elemento todav\xeda mantiene el valor del objeto, el cual se muestra por consola.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"Con un bucle `for-in`, podemos iterar sobre claves de objetos, en este caso `name` y `age`. Internamente, las claves de objetos son strings (si no son Symbol). En cada bucle, asignamos `item` igual a la clave actual que se est\xe1 iterando. Primero, `item` es igual a `name`, y se muestra por consola. Despu\xe9s, `item` es igual a `age`, que se muestra por consola.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"La asociatividad de operadores es el orden en el que el compilador eval\xfaa las expresiones, ya sea de izquierda a derecha o de derecha a izquierda. Esto solo pasa si todos los operadores tienen la _misma_ precedencia. Solo tenemos un tipo de operador: `+`. Para la suma, la asociatividad es de izquierda a derecha.\\n\\n`3 + 4` se eval\xfaa primero. Esto da como resultado el n\xfamero `7`.\\n\\n`7 + \'5\'` da `\\"75\\"` por la coerci\xf3n. JavaScript convierte el n\xfamero `7` a string, mira la pregunta 15. Podemos concatenar dos strings usando el operador `+`. `7 + \'5\'` da como resultado `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Solo el primer n\xfamero en el string es devuelto. Seg\xfan en la _base_ seleccionada (el segundo argumento para especificar a qu\xe9 tipo de n\xfamero queremos transformarlo: base 10, hexadecimal, octal, binario, etc.), el `parseInt` comprueba si los caracteres del string son v\xe1lidos. Una vez encuentra un caracter que no es un n\xfamero v\xe1lido en la base seleccionada, deja de recorrer el string e ignora los siguientes caracteres.\\n\\n`*` no es un n\xfamero v\xe1lido. Solo convierte `\\"7\\"` al decimal `7`. `num` tiene el valor `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"\xbfCu\xe1l es el valor de `num`?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"Cuando se mapea sobre un array, el valor de `num` es igual al elemento que se est\xe1 iterando. En este caso, los elementos son n\xfameros, por lo que la condici\xf3n del if `typeof num === \\"number\\"` devuelve `true`. La funci\xf3n de mapeo crea un nuevo array e inserta los valores devueltos por la funci\xf3n.\\n\\nSin embargo, no devolvemos un valor. Cuando no devolvemos un valor desde la funci\xf3n, la funci\xf3n devuelve `undefined`. Para cada elemento en el array, la funci\xf3n de bloque es llamada, as\xed que por cada elemento devolvemos `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 huecos vac\xedos ]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Los argumentos son pasados por _valor_, a no ser que su valor sea un objeto, en cuyo caso con pasados por _referencia_. `birthYear` es pasado por valor, ya que es un string, no un objeto. Cuando pasamos argumentos por valor, una _copia_ de ese valor es creada (ver pregunta 46).\\n\\nLa variable `birthYear` tiene una referencia al valor `\\"1997\\"`. El argumento `year` tambi\xe9n tiene una referencia al valor `\\"1997\\"`, pero no es el mismo valor al que `birthYear` referencia. Cuando actualizamos el valor de `year` igual\xe1ndolo a `\\"1998\\"`, solo estamos actualizando el valor de `year`. `birthYear` todav\xeda es igual a `\\"1997\\"`.\\n\\nEl valor de `person` es un objeto. El argumento `member` tiene una referencia (copiada) al _mismo_ objeto. Cuando modificamos la propiedad a la que el objeto `member` referencia, el valor de `person` tambi\xe9n ser\xe1 modificado, ya que ambos tienen una referencia al mismo objeto. La propiedad `name` de `person` es ahora igual al valor `\\"Lydia\\"`.","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"Con la sentencia `throw`, podemos crear errores personalizados. Con esta sentencia, puedes lanzar excepciones. Una excepci\xf3n puede ser un <b>string</b>, un <b>n\xfamero</b>, un <b>boolean</b> o un <b>objeto</b>. En este caso, nuestra excepci\xf3n es el string `\'Hello world\'`.\\n\\nCon la sentencia `catch`, podemos especificar qu\xe9 queremos hacer si una excepci\xf3n es lanzada en el bloque `try`. Se lanza una excepci\xf3n: el string `\'Hello world\'`. `e` es ahora igual a ese string, el cual se muestra por consola. Esto da como resultado `\'Oh an error: Hello world\'`.","id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an error! undefined`","`SyntaxError: can only throw Error objects`","`\\"Oh no an error! Hello world!`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"Cuando devuelves una propiedad, el valor de la propiedad es igual al valor _retornado_, no el valor indicado en el constructor de la funci\xf3n. Devolvemos el string `\\"Maserati\\"`, por lo que `myCar.make` es igual a `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` es en realidad una forma m\xe1s corta de escribir:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nCuando asignamos `y` igual a `10`, en realidad a\xf1adimos una propiedad `y` al objeto global (`window` en navegador, `global` en Node). En un navegador, `window.y` es ahora igual a `10`.\\n\\nDespu\xe9s, declaramos una variable `x` con el valor de `y`, el cual es `10`. Las variables declaradas con `let` tienen _alcance de bloque_, solo son definidas dentro del bloque en el que son declaradas; las expresiones de funci\xf3n ejecutadas inmediatamente (IIFE por sus siglas en ingl\xe9s) en este caso. Cuando usamos el operador `typeof`, el operando `x` no est\xe1 definido: estamos intentando acceder a `x` fuera del bloque en el que es declarado. Esto significa que `x` no est\xe1 definido. Los valores a los que no se les ha asignado un valor o que no han sido declarados son de tipo `\\"undefined\\"`. `console.log(typeof x)` devuelve `\\"undefined\\"`.\\n\\nSin embargo, hemos creado una variable global `y` cuando la hemos igualado a `10`. Este valor es accesible desde cualquier parte en nuestro c\xf3digo. `y` es definida, y tiene un valor de tipo `\\"number\\"`. `console.log(typeof y)` devuelve `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"Podemos borrar propiedades de objetos usando `delete`, tambi\xe9n en el prototipo (prototype). Borrando una propiedad en el prototipo, hace que no vuelva a estar disponible en la cadena de prototipo. En este caso, la funci\xf3n `bark` deja de estar disponible en el prototipo despu\xe9s de `delete Dog.prototype.bark`, pero a\xfan intentamos acceder a ella.\\n\\nCuando intentamos invocar algo que no es una funci\xf3n, un `TypeError` es lanzado. En este caso `TypeError: pet.bark is not a function`, ya que `pet.bark` es `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"El objeto `Set` es una colecci\xf3n de valores _\xfanicos_: un valor solo puede aparecer una vez en un set.\\n\\nPasamos el iterable `[1, 1, 2, 3, 4]` con el valor `1` duplicado. Como no podemos tener dos valores iguales en el set, uno de ellos es eliminado. Esto da como resultado `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"Un m\xf3dulo importado es de _solo lectura_: no puedes modificar el m\xf3dulo importado. Solo el m\xf3dulo que los exporta puede cambiar su valor.\\n\\nCuando intentamos incrementar el valor de `myCounter`, lanza un error: `myCounter` es de solo lectura y no puede ser modificado.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"El operador `delete` devuelve un valor booleano: `true` en una eliminaci\xf3n exitosa, sino devolver\xe1 `false`. Sin embargo, las variables declaradas con `var`, `const` o `let` no pueden ser borradas usando el operador `delete`.\\n\\nLa variable `name` se declara con `const`, por lo que su eliminaci\xf3n no es exitosa: se devuelve `false`. Cuando asignamos `age` igual a `21`, en realidad hemos a\xf1adido una propiedad llamada `age` al objeto global. Puedes borrar exitosamente propiedades de objetos de esta forma, tambi\xe9n del objeto global, as\xed que `delete age` devuelve `true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"Podemos desempaquetar valores de arrays o propiedades de objetos con desestructuraci\xf3n. Por ejemplo:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nEl valor de `a` es ahora `1`, y el valor de `b` es ahora `2`. Lo que realmente se hizo en la pregunta es:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nEsto significa que el valor de `y` es igual al primer valor del array, el cual es el n\xfamero `1`. Cuando mostramos por consola `y`, `1` es devuelto.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"Se pueden combinar objetos usando el operador de propagaci\xf3n `...`. Te permite crear copias de los pares clave/valor de un objeto, y a\xf1adirlos a otro objeto. En este caso, creamos copias del objeto `user`, y las a\xf1adimos al objeto `admin`. El objeto `admin` ahora contiene los pares clave/valor copiados, lo cual da como resultado `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"Con el m\xe9todo `defineProperty`, podemos a\xf1adir nuevas propiedades a un objeto, o modificar las existentes. Cuando a\xf1adimos una propiedad a un objeto usando el m\xe9todo `defineProperty`, es por defecto _no enumerable_. El m\xe9todo `Object.keys` devuelve todos los nombres de propiedades _enumerables_ de un objeto, en este caso solo `\\"name\\"`.\\n\\nLas propiedades a\xf1adidas usando el m\xe9todo `defineProperty` son inmutables por defecto. Puedes sobrescribir este comportamiento usando las propiedades `writable`, `configurable` y `enumerable`. De esta forma, el m\xe9todo `defineProperty` te da mucho m\xe1s control sobre las propiedades que est\xe1s a\xf1adiendo a un objeto.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"El segundo argumento de `JSON.stringify` es el _replacer_ (reemplazador). El reemplazador puede ser una funci\xf3n o un array, y te permite controlar qu\xe9 y c\xf3mo deber\xedan convertirse los valores a string.\\n\\nSi el reemplazador es un _array_, solo los nombres de las propiedades incluidos en el array ser\xe1n agregados al string JSON. En este caso, solo las propiedades con nombres `\\"level\\"` y `\\"health\\"` son incluidas, `\\"username\\"` es excluido. `data` es ahora igual a `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nSi el reemplazador es una _funci\xf3n_, esta funci\xf3n es llamada en cada propiedad en el objeto que est\xe1s convirtiendo a string. El valor retornado por esta funci\xf3n ser\xe1 el valor de la propiedad cuando es a\xf1adida al string JSON. Si el valor es `undefined`, esta propiedad es excluida del string JSON.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"El operador unario `++` _devuelve primero_ el valor del operando, _y despu\xe9s incrementa_ el valor del operando. El valor de `num1` es `10`, ya que la funci\xf3n `increaseNumber` primero devuelve el valor de `num`, que es `10`, y solo incrementa el valor de `num` despu\xe9s.\\n\\n`num2` es `10`, ya que pasamos `num1` a `increasePassedNumber`. `number` es igual a `10` (el valor de `num1`. Una vez m\xe1s, el operador unario `++` _primero devuelve_ el valor del operando, _y despu\xe9s incrementa_ el valor del operando. El valor de `number` es `10`, as\xed que `num2` es igual a `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"En ES6, podemos inicializar par\xe1metros con un valor por defecto. El valor del par\xe1metro ser\xe1 el valor por defecto si no se pasa otro valor a la funci\xf3n, o si el valor del par\xe1metro es `\\"undefined\\"`. En este caso, propagamos las propiedades del objeto `value` en un nuevo objeto, por lo que `x` tiene el valor por defecto de `{ number: 10 }`.\\n\\n\xa1El argumento por defecto es evaluado _cuando es llamado_! Cada vez que llamamos a la funci\xf3n, un _nuevo_ objeto es creado. Invocamos la funci\xf3n `multiply` las dos primeras veces sin pasar un valor: `x` tiene el valor por defecto de `{ number: 10 }`. Despu\xe9s mostramos por consola el valor multiplicado de ese n\xfamero, que es `20`.\\n\\nLa tercera vez que invocamos `multiply`, pasamos un argumento: el objeto llamado `value`. El operador `*=` es en realidad una forma corta de escribir `x.number = x.number * 2`: modificamos el valor de `x.number` y mostramos por consola el valor multiplicado de `20`.\\n\\nLa cuarta vez, pasamos el objeto `value` otra vez. `x.number` fue previamente modificado a `20`, por lo que `x.number *= 2` devuelve `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"El primer argumento que el m\xe9todo `reduce` recibe es el _acumulador_, `x` en este caso. El segundo argumento es el _valor actual_, `y`. Con el m\xe9todo `reduce`, podemos ejecutar una funci\xf3n de callback en cada elemento en el array, lo cual puede resultar en un \xfanico valor al final.\\n\\nEn este ejemplo, no estamos devolviendo ning\xfan valor, simplemente estamos mostrando por consola los valores del acumulador y del valor actual.\\n\\nEl valor del acumulador es igual al valor previamente devuelto por la funci\xf3n de callback. Si no pasas el argumento opcional `initialValue` al m\xe9todo `reduce`, el acumulador es igual al primer elemento de la primera llamada.\\n\\nEn la primera llamada, el acumulador (`x`) es `1`, y el valor actual (`y`) es `2`. No devolvemos desde la funci\xf3n de callback, mostramos por consola el acumulador y el valor actual: se muestra `1` y `2`.\\n\\nSi no devuelves un valor de una funci\xf3n, se devuelve `undefined`. En la siguiente llamada, el acumulador es `undefined`, y el valor actual es `3`. Se muestra por consola `undefined` y `3`.  \\n\\nEn la cuarta llamada, otra vez no devolvemos desde la funci\xf3n de callback. El acumulador es una vez m\xe1s `undefined`, y el valor actual es `4`. Se muestra por consola `undefined` y `4`.","id":64,"options":["`1` `2` y `3` `3` y `6` `4`","`1` `2` y `2` `3` y `3` `4`","`1` `undefined` y `2` `undefined` y `3` `undefined` y `4` `undefined`","`1` `2` y `undefined` `3` y `undefined` `4`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"En una clase derivada, no puedes acceder a `this` antes de llamar a `super`. Si intentas hacerlo, se lanzar\xe1 un `ReferenceError`: 1 y 4 lanzar\xedan este error.\\n\\nCon `super`, llamamos al constructor del padre con unos argumentos. El constructor del padre recibe el argumento `name`, por lo que necesitamos pasar `name` a `super`.\\n\\nLa clase `Labrador` recibe dos argumentos, `name` porque extiende de `Dog`, y `size` como una propiedad adicional en la clase `Labrador`. Ambos necesitan ser pasados al constructor de `Labrador`, lo cual se realiza correctamente usando el constructor 2.","id":65,"options":["1","2","3","4"],"question":"\xbfCon qu\xe9 constructor podemos extender correctamente la clase `Dog`?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"Con `import`, todos los m\xf3dulos importados son _pre-convertidos_. Esto significa que los m\xf3dulos importados son ejecutados _primero_, y el c\xf3digo en el fichero que importa el m\xf3dulo se ejecuta _despu\xe9s_.\\n\\n\xa1Esto es una diferencia existente entre `require()` en CommonJS e `import`! Con `require()`, puedes cargar dependencias bajo demanda mientras el c\xf3digo est\xe1 siendo ejecutado. Si hubi\xe9ramos usado `require` en lugar de `import`, se habr\xeda mostrado por consola `running index.js`, `running sum.js`, `3`.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"Cada Symbol es completamente \xfanico. El prop\xf3sito del argumento pasado a Symbol es para darle una descripci\xf3n. El valor de Symbol no depende del argumento pasado. Como se comprueba igualdad, estamos creando dos Symbol completamente nuevos: el primer `Symbol(\'foo\')`, y el segundo `Symbol(\'foo\')`. Estos dos valores son \xfanicos y no iguales, `Symbol(\'foo\') === Symbol(\'foo\')` devuelve `false`.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"Con el m\xe9todo `padStart`, podemos a\xf1adir relleno al principio de un string. El valor pasado a este m\xe9todo es la longitud _total_ del string incluyendo el relleno. El string `\\"Lydia Hallie\\"` tiene una longitud de `12`. `name.padStart(13)` inserta 1 espacio al principio del string, porque 12 + 1 es 13.\\n\\nSi el argumento pasado al m\xe9todo `padStart` es m\xe1s peque\xf1o que la longitud del string, no se a\xf1ade relleno.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13 espacios en blanco]Lydia Hallie\\"`, `\\"[2 espacios en blanco]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1 espacio en blanco]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"Con el operador `+` puedes concatenar strings. En este caso, estamos concatenando el string `\\"\ud83e\udd51\\"` con el string `\\"\ud83d\udcbb\\"`, lo que da como resultado `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","Un string con una secuencia de puntos de c\xf3digo","Error"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"Una funci\xf3n generadora \\"pausa\\" su ejecuci\xf3n cuando ve un `yield`. Primero, tenemos que dejar a la funci\xf3n ceder el string \\"Do you love JavaScript?\\", lo cual se puede hacer llamando a `game.next().value`.\\n\\nTodas las l\xedneas son ejecutadas, hasta que encuentra el primer `yield`. Hay un `yield` en la primera l\xednea dentro de la funci\xf3n: \xa1la ejecuci\xf3n se para en el primer yield! _\xa1Esto significa que la variable `answer` todav\xeda no est\xe1 definida!_\\n\\nCuando llamamos a `game.next(\\"Yes\\").value`, el `yield` anterior se reemplaza con el valor de los par\xe1metros pasados en la funci\xf3n `next()`, `\\"Yes\\"` en este caso. El valor de la variable `answer` es ahora igual a `\\"Yes\\"`. La condici\xf3n del if devuelve `false`, y `JavaScript loves you back \u2764\ufe0f` se muestra por consola.","id":70,"options":["`game.next(\\"Yes\\").value` y `game.next().value`","`game.next.value(\\"Yes\\")` y `game.next.value()`","`game.next().value` y `game.next(\\"Yes\\").value`","`game.next.value()` y `game.next.value(\\"Yes\\")`"],"question":"\xbfC\xf3mo puedes mostrar por consola los valores comentados junto a las sentencias console.log?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` devuelve un string donde las secuencias de escape (`\\n`, `\\u000b`, `\\t` etc.) son ignoradas. Las contrabarras pueden ser un problema ya que puedes acabar con algo como:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nQue resultar\xeda en:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nCon `String.raw`, simplemente ignorar\xeda las secuencias de escape e imprimir\xeda:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nEn este caso, el string es `Hello\\nworld`, que es lo que se muestra por consola.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"Una funci\xf3n as\xedncrona siempre devuelve una promesa. El `await` todav\xeda tiene que esperar a que la promesa se resuelva: cuando llamamos a `getData()` para asignarle que es igual a `data`, se devuelve una promesa pendiente.\\n\\nSi quisi\xe9ramos tener acceso al valor resuelto `\\"I made it\\"`, tendr\xedamos que haber usado el m\xe9todo `.then()` en `data`:\\n\\n`data.then(res => console.log(res))`\\n\\nEsto habr\xeda mostrado por consola `\\"I made it!\\"`","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"\xa1El m\xe9todo `.push()` devuelve la _longitud_ del nuevo array! Al principio, el array conten\xeda un elemento (el string `\\"banana\\"`) y ten\xeda una longitud de `1`. Despu\xe9s de a\xf1adir el string `\\"apple\\"` al array, el array contiene dos elementos, y tiene una longitud de `2`. Esto es lo que devuelve la funci\xf3n `addToList`.\\n\\nEl m\xe9todo `push` modifica el array original. Si quisieras devolver el _array_ de la funci\xf3n en lugar de la _longitud del array_ deber\xedas haber devuelto `list` despu\xe9s de introducir `item` en \xe9l.","id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` congela e imposibilita la adici\xf3n, eliminaci\xf3n o modificaci\xf3n de las propiedades de un objeto (a no ser que el valor de la propiedad sea otro objeto).\\n\\nCuando creamos la variable `shape` y la igualamos al objeto congelado `box`, `shape` tambi\xe9n referencia al objeto congelado. Puedes comprobar si un objeto est\xe1 congelado usando `Object.isFrozen`. En este caso, `Object.isFrozen(shape)` devuelve `true`, ya que la variable `shape` tiene una referencia a un objeto congelado.\\n\\nComo `shape` est\xe1 congelado, y como el valor de `x` no es un objeto, no podemos modificar la propiedad `x`. `x` es todav\xeda igual a `10`, y `{ x: 10, y: 20 }` se muestra por consola.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"Cuando desempaquetamos la propiedad `name` del objeto de la parte derecha, asignamos su valor `\\"Lydia\\"` a una variable con el nombre `myName`.\\n\\nCon `{ name: myName }`, le decimos a JavaScript que queremos crear una nueva variable llamada `myName` con el valor de la propiedad `name` de la parte derecha.\\n\\nComo intentamos mostrar por consola `name`, una variable que no est\xe1 definida, se lanza un `ReferenceError`.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"Una funci\xf3n pura es una funci\xf3n que _siempre_ devuelve el mismo resultado, si se le pasan los mismos argumentos.\\n\\nLa funci\xf3n `sum` siempre devuelve el mismo resultado. Si pasamos `1` y `2`, _siempre_ devuelve `3` sin efectos secundarios. Si pasamos `5` y `10`, _siempre_ devuelve `15`, etc\xe9tera. Esta es la definici\xf3n de una funci\xf3n pura.","id":76,"options":["S\xed","No"],"question":"\xbfEsta es una funci\xf3n pura?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"La funci\xf3n `add` es una funci\xf3n _memoizada_. Con la memoizaci\xf3n, podemos guardar en cach\xe9 los resultados de una funci\xf3n para acelerar su ejecuci\xf3n. En este caso, creamos el objeto `cache` que guarda los valores previamente retornados.\\n\\nSi llamamos a la funci\xf3n `addFunction` otra vez con el mismo argumento, primero comprueba si ya tiene ese valor en su cach\xe9. Si es el caso, se devuelve el valor de la cach\xe9. Si no est\xe1 en la cach\xe9, calcular\xe1 el valor y lo almacenar\xe1 justo despu\xe9s.\\n\\nLlamamos a la funci\xf3n `addFunction` tres veces con el mismo valor: en la primera invocaci\xf3n, el valor de la funci\xf3n cuando `num` es igual a `10` no est\xe1 en cach\xe9 todav\xeda. La condici\xf3n del if `num in cache` devuelve `false`, y se ejecuta el bloque `else`: `Calculated! 20` se muestra por consola, y el valor del resultado se a\xf1ade al objeto `cache`. `cache` ahora contiene `{ 10: 20 }`.\\n\\nLa segunda vez, el objeto `cache` contiene el valor que se devuelve para `10`. La condici\xf3n del if `num in cache` devuelve `true`, y se muestra por consola `\'From cache! 20\'`.\\n\\nLa tercera vez, pasamos `5 * 2` a la funci\xf3n, que se eval\xfaa como `10`. El objeto `cache` contiene el valor que se devuelve para `10`. La condici\xf3n del if `num in cache` devuelve `true`, y se muestra por consola `\'From cache! 20\'`.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item)\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item)\\n}","codeLanguage":"javascript","explanation":"Con el bucle _for-in_, podemos iterar sobre propiedades **enumerables**. En un array, las propiedades enumerables son las \\"claves\\" de los elementos del array, las cuales son sus \xedndices. Puedes ver el array como:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\nDonde las claves son las propiedades enumerables. `0` `1` `2` `3` se muestran por consola.\\n\\nCon un bucle _for-of_, podemos iterar sobre **iterables**. Un array es un iterable. Cuando iteramos sobre un array, la variable \\"item\\" es igual al elemento sobre el que se est\xe1 iterando en ese momento, `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` se muestra por consola.","id":78,"options":["`0` `1` `2` `3` y `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` y `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` y `0` `1` `2` `3`","`0` `1` `2` `3` y `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"Los elementos de un array pueden contener cualquier valor. N\xfameros, strings,objetos, otros arrays, null, valores booleanos, undefined, y otras expresiones como fechas, funciones o c\xe1lculos.\\n\\nEl elemento ser\xe1 igual al valor retornado. `1 + 2` devuelve `3`, `1 * 2` devuelve `2`, y `1 / 2` devuelve `0.5`.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"Por defecto, los argumentos tienen el valor `undefined`, a no ser que un valor haya sido pasado a la funci\xf3n. En este caso, no pasamos ning\xfan valor para el argumento `name`. `name` es igual a `undefined`, que es mostrado por consola.\\n\\nEn ES6, podemos sobrescribir este valor `undefined` por defecto con par\xe1metros por defecto. Por ejemplo:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nEn ese caso, si no pas\xe1ramos un valor o si pas\xe1ramos `undefined`, `name` siempre ser\xeda igual al string `Lydia`.","id":80,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"El valor de `this` depende de d\xf3nde lo uses. En un m\xe9todo, como el m\xe9todo `getStatus`, `this` referencia al _objeto al que el m\xe9todo pertenece_. El m\xe9todo pertenece al objeto `data`, por lo que `this` referencia al objeto `data`. Cuando mostramos por consola `this.status`, la propiedad `status` en el objeto `data` es mostrada por consola, la cual es `\\"\ud83e\udd51\\"`.\\n\\nCon el m\xe9todo `call`, podemos cambiar el objeto al cual `this` referencia. En **funciones**, el `this` referencia al _objeto al que la funci\xf3n pertenece_, por lo que dentro de la funci\xf3n `setTimeout`, el `this` referencia al _objeto global_. En el objeto global, hay una variable llamada _status_ con el valor `\\"\ud83d\ude0e\\"`. Cuando se muestra `this.status` por consola, `\\"\ud83d\ude0e\\"` aparece por pantalla.","id":81,"options":["`\\"\ud83e\udd51\\"` y `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` y `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` y `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` y `\\"\ud83d\ude0e\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"Asignamos a la variable `city` el valor de la propiedad `city` del objeto `person`. No existe ninguna propiedad en este objeto llamada `city`, por lo que la variable `city` tiene el valor `undefined`.\\n\\n\xa1Observa que _no_ estamos referenciando al objeto `person` en s\xed mismo! Solo asignamos a la variable `city` el valor actual de la propiedad `city` del objeto `person`.\\n\\nDespu\xe9s, asignamos a la variable `city` el string `\\"Amsterdam\\"`. Esto no cambia el objeto `person`: no hay ninguna referencia a ese objeto.\\n\\nCuando se muestra por consola el objeto `person`, se devuelve el objeto sin modificar.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"Las variables con `const` y `let` tienen _alcance de bloque_. Un bloque es cualquier cosa entre llaves (`{ }`). En este caso, las llaves del if/else. No puedes referenciar a una variable fuera del bloque en el que es declarada, se lanza un `ReferenceError`.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"El valor de `res` en el segundo `.then` es igual al valor retornado por el `.then` anterior. Puedes seguir encadenando `.then` como este, pasando el valor al siguiente manejador.","id":84,"options":["El resultado del m\xe9todo `fetch`.","El resultado de la segunda invocaci\xf3n del m\xe9todo `fetch`.","El resultado de callback en el `.then()` anterior.","Ser\xeda siempre `undefined`."],"question":"\xbfQu\xe9 tipo de informaci\xf3n se mostrar\xe1 por consola?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"Con `!!name`, determinamos si el valor de `name` es convertible a verdadero o convertible a falso. Si `name` es convertible a verdadero, `!name` devuelve `false`. `!false` (el cual es pr\xe1cticamente lo mismo que `!!name`) devuelve `true`.\\n\\nAsign\xe1ndole a `hasName` el valor de `name`, asignas a `hasName` cualquier valor que se haya pasado a la funci\xf3n `getName`, no el valor booleano `true`.\\n\\n`new Boolean(true)` devuelve un envoltorio (wrapper), no el valor booleano en s\xed.\\n\\n`name.length` devuelve la longitud del argumento pasado, no si es `true`.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"\xbfQu\xe9 opci\xf3n es una forma de igualar `hasName` a `true`, teniendo en cuenta que no se puede pasar `true` como argumento?"},{"answer":1,"code":"console.log(\\"I want pizza\\"[0])","codeLanguage":"javascript","explanation":"Para obtener un caracter en un \xedndice espec\xedfico en un string, puedes usar corchetes. El primer caracter en el string tiene \xedndice 0, y as\xed sucesivamente. En este caso queremos obtener el elemento cuyo \xedndice es 0, el caracter `\\"I\\"`, el cual se muestra por consola.\\n\\nObserva que este m\xe9todo no est\xe1 soportado en IE7 y versiones anteriores. En ese caso, usamos `.charAt()`.","id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"Puedes asignar un valor por defecto para un par\xe1metro que sea igual a otro par\xe1metro de la funci\xf3n, siempre y cuando haya sido definido _antes_ del par\xe1metro por defecto. Pasamos el valor `10` a la funci\xf3n `sum`. Si la funci\xf3n `sum` solamente recibe 1 argumento, significa que el valor para `num2` no ha sido pasado, y el valor de `num1` es igual al valor `10` que hemos pasado en este caso. El valor por defecto de `num2` es el valor de `num1`, el cual es `10`. `num1 + num2` devuelve `20`.\\n\\nSi estuvieras intentando asignar un valor por defecto a un par\xe1metro igual a otro par\xe1metro que es definido _despu\xe9s_ (a la derecha), el valor del par\xe1metro no habr\xeda sido inicializado todav\xeda, lo cual lanzar\xeda un error.","id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"Con la sintaxis `import * as name`, importamos _todas las exportaciones_ del fichero `module.js` al fichero `index.js` creando un nuevo objeto llamado `data`. En el fichero `module.js` hay dos exportaciones: la exportaci\xf3n por defecto y una exportaci\xf3n con nombre. La exportaci\xf3n por defecto es una funci\xf3n que devuelve el string `\\"Hello World\\"`, y la exportaci\xf3n con nombre es una variable llamada `name` que tiene el valor del string `\\"Lydia\\"`.\\n\\nEl objeto `data` tiene una propiedad `default` para la exportaci\xf3n por defecto, el resto de propiedades tienen los nombres de las exportaciones con nombre y sus respectivos valores.","id":88,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Objeto global de `module.js`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"Las clases son az\xfacar sint\xe1ctico para los constructores de funciones. El equivalente a la clase `Person` como constructor de funci\xf3n ser\xeda:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\nLlamar a un constructor de funciones con `new` crea una instancia de `Person`, `typeof` devuelve `\\"object\\"` con una instancia. `typeof member` devuelve `\\"object\\"`.","id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"El m\xe9todo `.push` devuelve la _nueva longitud_ del array, \xa1no el array en s\xed mismo! Asignando `newList` igual a `[1, 2, 3].push(4)`, estamos asignando `newList` igual a la nueva longitud del array: `4`.\\n\\nDespu\xe9s, intentamos usar el m\xe9todo `.push` en `newList`. Como `newList` es el valor num\xe9rico `4`, no podemos usar el m\xe9todo `.push`: se lanza un `TypeError`.","id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"Las funciones regulares, como la funci\xf3n `giveLydiaPizza`, tienen la propiedad `prototype`, la cual es un objeto (objeto de prototipo) con una propiedad `constructor`. Sin embargo las funciones flecha, como la funci\xf3n `giveLydiaChocolate`, no tienen esta propiedad `prototype`. Se devuelve `undefined` cuando se intenta acceder a la propiedad `prototype` usando `giveLydiaChocolate.prototype`.","id":91,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` devuelve un array de arrays anidados, conteniendo claves y objetos:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]` \\n\\nUsando el bucle `for-of`, podemos iterar sobre cada elemento en el array, los subarrays en este caso. Podemos desestructurar los subarrays instant\xe1neamente en el bucle for-of, usando `const [x, y]`. `x` es igual al primer elemento del subarray, `y` es igual al segundo elemento en el subarray.\\n\\nEl primer subarray es `[ \\"name\\", \\"Lydia\\" ]`, con `x` igual a `\\"name\\"` e `y` igual a `\\"Lydia\\"`, lo cual es mostrado por consola.\\n\\nEl segundo subarray es `[ \\"age\\", 21 ]`, con `x` igual a `\\"age\\"` e `y` igual a `21`, lo cual es mostrado por consola.","id":92,"options":["`name` `Lydia` y `age` `21`","`[\\"name\\", \\"Lydia\\"]` y `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` y `undefined`","`Error`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` es un par\xe1metro rest. El valor del par\xe1metro rest es un array que contiene el resto de argumentos, \xa1**y solo puede ser el \xfaltimo par\xe1metro**! En este ejemplo, el par\xe1metro rest es el segundo par\xe1metro. Esto no es correcto y lanzar\xe1 un error de sintaxis.\\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nEl ejemplo de arriba s\xed que funciona. Devuelve el array `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"function nums(a, b) {\\n  if\\n  (a > b)\\n  console.log(\'a is bigger\')\\n  else \\n  console.log(\'b is bigger\')\\n  return \\n  a + b\\n}\\n\\nconsole.log(nums(4, 2))\\nconsole.log(nums(1, 2))","codeLanguage":"javascript","explanation":"En JavaScript, no _tenemos_ que escribir el punto y coma (`;`) de forma explicita, sin embargo el motor de JavaScript todav\xeda las a\xf1ade al final de cada sentencia. Esto se denomina **Insercci\xf3n autom\xe1tica de punto y coma**. Una sentencia puede ser, por ejemplo, variables, o palabras clave como `throw`, `return`, `break`, etc. \\n\\nAqui, escribimos una sentencia `return`, y otra sentencia de valor `a + b` en una _nueva l\xednea_. Sin embargo, como es una l\xednea nueva, el motor no sabe que en realidad es el valor que quer\xedamos devolver. En cambio, a\xf1adi\xf3 autom\xe1ticamente un punto y coma despu\xe9s de `return`. Puedes ver esto como:\\n\\n```javascript\\n  return;\\n  a + b\\n```\\n\\nEsto significa que nunca se alcanza `a + b`, ya que una funci\xf3n deja de ejecutarse despu\xe9s de la palabra clave` return`. Si no se devuelve ning\xfan valor, como aqu\xed, la funci\xf3n devuelve `undefined`. \xa1Ten en cuenta que no hay inserci\xf3n autom\xe1tica despu\xe9s de las sentencias `if/else`!","id":94,"options":["`a is bigger`, `6` y `b is bigger`, `3`","`a is bigger`, `undefined` y `b is bigger`, `undefined`","`undefined` y `undefined`","`SyntaxError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"Podemos establecer clases iguales a otros constructures de clases/funciones. En este caso, establecemos `Person` igual a `AnotherPerson`. El nombre en este constructor es `Sarah`, por lo que la propiedad nombre en la nueva instancia de `Person` de `member` es `\\"Sarah\\"`.","id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"Un s\xedmbolo no es _enumerable_. El m\xe9todo Object.keys devuelve todas las propiedades _enumerables_ de un objeto. El s\xedmbolo no ser\xe1 visible, y un array vac\xedo ser\xe1 devuelto. Cuando se imprime el objeto completo, se mostrar\xe1n todas las propiedades, incluidas las no-enumerables.\\n\\nEsta es una de las muchas cualidades de un s\xedmbolo: adem\xe1s de representar un valor completamente \xfanico (que evita la colisi\xf3n accidental de nombres en los objetos, por ejemplo, cuando se utilizan 2 bibliotecas que desean agregar propiedades al mismo objeto), tambi\xe9n puedes \\"ocultar\\" propiedades en los objetos de esta manera (aunque no del todo. Todav\xeda puedes acceder a los s\xedmbolos utilizando el m\xe9todo `Object.getOwnPropertySymbols()`).","id":96,"options":["`{Symbol(\'a\'): \'b\'}` y `[\\"{Symbol(\'a\')\\"]`","`{}` y `[]`","`{ a: \\"b\\" }` y `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` y `[]`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"La funci\xf3n `getList` recibe un array argumento. Entre los par\xe9ntesis de la funci\xf3n `getList`, desestructuramos este array de inmediato. Podr\xedas ver esto como:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\nCon el par\xe1metro rest `...y`, ponemos todos los argumentos \\"restantes\\" en un array. Los argumentos restantes son `2`, `3` and `4` en este caso. El valor de `y` es un array, conteniendo todos los par\xe1metros restantes. El valor de `x` es igual a `1` en este caso, por la tanto cuando registramos `[x, y]`, se imprime `[1, [2, 3, 4]]`.\\n\\n La funci\xf3n `getUser` recibe un objeto. Con las funciones flecha, no _tenemos_ que escribir llaves cuando simplemente devolvemos un valor. Sin embargo, si quieres devolver un _objeto_ desde una funci\xf3n llave, tienes que escribir el objeto entre par\xe9ntesis, \xa1de otra manera no se devuelve ning\xfan valor! La siguiente funci\xf3n habr\xeda devuelto un objeto:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\nComo no se devuelve ning\xfan valor en este caso, la funci\xf3n devuelve `undefined`.","id":97,"options":["`[1, [2, 3, 4]]` y `undefined`","`[1, [2, 3, 4]]` y `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` y `{ name: \\"Lydia\\", age: 21 }`","`Error` y `{ name: \\"Lydia\\", age: 21 }`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"La variable `name` contiene el valor de una cadena, que no es una funci\xf3n, por lo tanto no puede invocar. \\n\\nSe genera una excepci\xf3n de tipo TypeError cuando un valor no es del tipo esperado. JavaScript esperaba que `name` fuera una funci\xf3n ya que estamos intentando invocarla. Era una cadena sin embargo, por lo tanto se lanza una excepci\xf3n del tipo TypeError: name is not a function!\\n\\nSe lanzan errores del tipo SyntaxError cuando has escrito algo que no es v\xe1lido JavaScript, pro ejemplo cuando has escrito `return` como `retrun`. \\nSe lanzan errores del tipo ReferenceError cuando JavaScript no puede encontrar una referencia a un valor al que est\xe1s intentando acceder.","id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` es un valor verdadero (se convierte a un valor verdadero en un contexto booleano). Con el operador `&&`, se devolver\xe1 el valor de la derecha si el valor de la izquierda es un valor verdadero. En este caso, el valor de la izquierda `[]` es un valor verdadero, por lo tanto se devuelve `\\"Im\'`.\\n\\n`\\"\\"` es un valor falso (se convierte a un valor falso en un contexto booleano). Si el valor de la izquierda es falso, no se devuelve nada. `n\'t` no se devuelve.","id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"\xbfCu\xe1l es el valor de la salida?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"Con el operador `||`, podemos devolver el primer operando verdadero. Si todos los valores son falsos, se devuelve el \xfaltimo operando.\\n\\n`(false || {} || null)`: el objecto vac\xedo `{}` es un valor verdadero. Este es el primero (y \xfanico) valor verdadero, que se devuelve. `one` es igual a `{}`.\\n\\n`(null || false || \\"\\")`: todos los operandos son valores falsos. Esto significa que el \xfaltimo operando, `\\"\\"` es devuelto. `two` es igual a `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: el array vac\xedo `[]` es un valor verdadero. Este es el primer valor verdadero, que se devuelve. `three` es igual a `[]`.","id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"\xbfCu\xe1l es el valor de la salida?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"Con una promesa, b\xe1sicamente decimos _Quiero ejecutar esta funci\xf3n, pero la dejar\xe9 a un lado por ahora mientras se est\xe1 ejecutando, ya que esto puede llevar un tiempo. Solo cuando se resuelve (o se rechaza) un cierto valor, y cuando la pila de llamadas est\xe1 vac\xeda, quiero usar este valor._\\n\\nPodemos obtener este valor con las palabras clave `.then` y `await` en una funci\xf3n `async`. Aunque podemos obtener el valor de una promesa tanto con `.then` como con` wait \', funcionan de manera un poco diferente. \\n\\nEn la funci\xf3n `firstFunction`, dejamos (de alg\xfan modo) a un lado la funci\xf3n myPromise mientras se estaba ejecutando, y seguimos ejecutando el otro c\xf3digo, que es `console.log(\'second\')` en este caso. Luego, la funci\xf3n se resolvi\xf3 con la cadena `I have resolved`, que luego se imprimi\xf3 una vez que pila de llamadas qued\xf3 vac\xeda. \\n\\nCon la palabra clave await en `secondFunction`, literalmente hacemos una pausa en la ejecuci\xf3n de una funci\xf3n as\xedncrona hasta que el valor se haya resuelto antes de pasar a la siguiente l\xednea de c\xf3digo.\\n\\nEsto significa que se esper\xf3 a que `myPromise` resolviera con el valor `I have resolved`, y solo una vez que eso sucedi\xf3, pasamos a la siguiente l\xednea: `second` que se imprime.","id":101,"options":["`I have resolved!`, `second` y `I have resolved!`, `second`","`second`, `I have resolved!` y `second`, `I have resolved!`","`I have resolved!`, `second` y `second`, `I have resolved!`","`second`, `I have resolved!` y `I have resolved!`, `second`"],"question":"\xbfCu\xe1l es el valor de la salida?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"El operador `+` no solo se usa para sumar valores num\xe9ricos, sino que tambi\xe9n podemos usarlo para concatenar cadenas. Cada vez que el motor de JavaScript ve que uno o m\xe1s valores no son un n\xfamero, coerce el n\xfamero en una cadena. \\n\\nEl primero es `1`, que es un valor num\xe9rico. `1 + 2` devuelve el n\xfamero 3.\\n\\nSin embargo, el segundo es la cadena `\\"Lydia\\"`. `\\"Lydia\\"` es una cadena y `2` es un n\xfamero: `2` coerce a una cadena. `\\"Lydia\\"` y `\\"2\\"` son concatenados, cuyo resultado es la cadena `\\"Lydia2\\"`. \\n\\n`{ name: \\"Lydia\\" }` es un objeto. Ni un n\xfamero ni un objeto son una cadena, as\xed que se convierten a cadena ambos. Cada vez que convertimos un objeto estandar, se convierte en `\\"[Object object]\\"`. `\\"[Object object]\\"` concatenado con `\\"2\\"` resulta en `\\"[Object object]2\\"`.","id":102,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[Object object]2`","`\\"12\\"`, `Lydia2`, `[Object object]2`"],"question":"\xbfCu\xe1l es el valor de la salida?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"Podemos pasar cualquier tipo de valor que queramos a `Promise.resolve`, ya sea una promesa o no promesa. El m\xe9todo en s\xed mismo devuelve una promesa con el valor resuelto (`<fulfilled>`). Si pasas una funci\xf3n estandar, ser\xe1 una promesa resuelta con un valor normal. Si pasas una promesa, ser\xe1 una promesa resuelta con el valor resuelto de esa promesa pasada.\\n\\nEn este caso, acabamos de pasar el valor num\xe9rico `5`. Devuelve una promesa resuelta con el valor `5`.","id":103,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"\xbfCu\xe1l es el valor?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"Los objetos se pasan por referencia. Cuando verificamos la igualdad estricta de los objetos (`===`), estamos comparando sus referencias. \\n\\nEstablecemos el valor por defecto para `person2` igual al objeto `person`, y pasamos el objeto `person` como el valor de `person1`.\\n\\nEsto significa que ambos valores tienen una referencia al mismo punto en la memoria, por lo tanto, son iguales.\\n\\nEl bloque de c\xf3digo en la instrucci\xf3n `else` se ejecuta, y se imprime `They are the same!`.","id":104,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"\xbfCu\xe1l es el valor?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"En JavaScript, tenemos dos formas de acceder a las propiedades de un objeto: notaci\xf3n por corchetes o notaci\xf3n por punto. En este ejemplo, usamos la notaci\xf3n por punto (`colorConfig.colors`) en lugar de la notaci\xf3n por corchetes (`colorConfig[\\"colors\\"]`). \\n\\nCon la notaci\xf3n por punto, JavaScript intenta encontrar la propiedad en el objeto con ese nombre exacto. En este ejemplo, JavaScript intenta encontrar una propiedad llamada `colors` en el objeto `colorConfig`. No hay propiedad llamada `colors`, por lo que devuelve `undefined`. Luego, intentamos acceder al valor del primer elemento usando `[1]`. No podemos hacer esto en un valor que sea `undefined`, por lo que lanza una expeci\xf3n `TypeError`: `Cannot read property \'1\' of undefined`.\\n\\nJavaScript interpreta (o descompone) las sentencias. Cuando usamos la notaci\xf3n por corchetes, ve el primer corchete de apertura `[` y contin\xfaa hasta que encuentra el corchete de cierre `]`. Solo entonces, evaluar\xe1 la declaraci\xf3n. Si hubi\xe9ramos utilizado `colorConfig[colors[1]]`, habr\xeda devuelto el valor de la propiedad `red` del objeto `colorConfig`.","id":105,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"\xbfCu\xe1l es el valor?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"Bajo el cap\xf3, los emojis son caracteres unicode. Los valores unicode para el emoji del coraz\xf3n son `\\"U+2764 U+FE0F\\"`. Estos son siempre los mismos para los mismos emojis, por lo que estamos comparando dos cadenas iguales entre s\xed, lo que devuelve verdadero.","id":106,"options":["`true`","`false`"],"question":"\xbfCu\xe1l es el valor?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"Con el m\xe9todo `splice`, modificamos el array original eliminando, reemplazando o agregando elementos. En este caso, eliminamos 2 elementos desde el \xedndice 1 (eliminamos `\'\ud83e\udd51\'` y `\'\ud83d\ude0d\'`) y agregamos el emoji \u2728 en su lugar. \\n\\n`map`, `filter` y `slice` devuelven un nuevo array, `find` devuelve un elemento, y `reduce` devuelve un valor reducido.","id":107,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"\xbfCu\xe1l de estos m\xe9todos modifica el array original?"},{"answer":0,"code":"JSON.parse()","codeLanguage":"javascript","explanation":"Con el m\xe9todo `JSON.parse()`, podemos convertir la cadena de texto en formato JSON a un valor en JavaScript. \\n\\n```javascript\\n// Stringifying a number into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonNumber = JSON.stringify(4) // \'4\'\\nJSON.parse(jsonNumber) // 4\\n\\n// Stringifying an array value into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify([1, 2, 3]) // \'[1, 2, 3]\'\\nJSON.parse(jsonArray) // [1, 2, 3]\\n\\n// Stringifying an object  into valid JSON, then parsing the JSON string to a JavaScript value:\\nconst jsonArray = JSON.stringify({ name: \\"Lydia\\" }) // \'{\\"name\\":\\"Lydia\\"}\'\\nJSON.parse(jsonArray) // { name: \'Lydia\' }\\n```","id":108,"options":["Parses JSON to a JavaScript value","Parses a JavaScript object to JSON","Parses any JavaScript value to JSON","Parses JSON to a JavaScript object only"],"question":"\xbfQu\xe9 hace este m\xe9todo?"},{"answer":3,"code":"let name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n  let name = \'Sarah\'\\n}\\n\\ngetName()","codeLanguage":"javascript","explanation":"Cada funci\xf3n tiene su propio _contexto de ejecuci\xf3n_ (o _\xe1mbito_). La funci\xf3n `getName` primero mira dentro de su propio contexto (\xe1mbito) para ver si contiene la variable `name` a la que estamos intentando acceder. En este caso, la funci\xf3n `getName` contiene su propia variable `name`: declaramos la variable `name` con la palabra clave` let`, y con el valor de `\'Sarah\'`. \\n\\nLas variables con la palabra clave `let` (y `const`) se mueven al comienzo (hoisting), pero a diferencia de `var`, no se <i>inicializan</i>. No son accesibles antes de la l\xednea en la que las declaramos (inicializamos). Esto se llama la \\"zona muerta temporal\\". Cuando intentamos acceder a las variables antes de que se declaren, JavaScript genera una excepci\xf3n del tipo `ReferenceError`. \\n\\nSi no hubi\xe9ramos declarado la variable `name` dentro de la funci\xf3n `getName`, el motor de JavaScript habr\xeda mirado hacia abajo _\xe1mbito encadenado_. El alcance externo tiene una variable llamada `name` con el valor de `Lydia`. En ese caso, habr\xeda imprimido `Lydia`. \\n\\n```javascript\\nlet name = \'Lydia\'\\n\\nfunction getName() {\\n  console.log(name)\\n}\\n\\ngetName() // Lydia\\n```","id":109,"options":["Lydia","Sarah","`undefined`","`ReferenceError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"function* generatorOne() {\\n  yield [\'a\', \'b\', \'c\'];\\n}\\n\\nfunction* generatorTwo() {\\n  yield* [\'a\', \'b\', \'c\'];\\n}\\n\\nconst one = generatorOne()\\nconst two = generatorTwo()\\n\\nconsole.log(one.next().value)\\nconsole.log(two.next().value)","codeLanguage":"javascript","explanation":"Con la palabra clave `yield`, cedemos valores en una funci\xf3n generadora. Con la palabra clave `yield*`, podemos obtener valores de otra funci\xf3n generadora u objeto iterable (por ejemplo, un array).\\n\\nEn la funci\xf3n `generatorOne`, cedemos todo el array `[\'a\', \'b\', \'c\']` usando la palabra clave `yield`. El valor de la propiedad `value` en el objeto devuelto por el m\xe9todo `next` en `one` (`one.next().value`) es igual a todo el array `[\'a\', \'b\', \'c\']`.\\n\\n```javascript\\nconsole.log(one.next().value) // [\'a\', \'b\', \'c\']\\nconsole.log(one.next().value) // undefined\\n```\\n\\nEn la funci\xf3n `generatorTwo`, usamos la palabra clave `yield*`. Esto significa que el primer valor cedido de `two` es igual al primer valor cedido en el iterador. El iterador es el array `[\'a\', \'b\', \'c\']`. El primer valor producido es `a`, por lo que la primera vez que llamamos a `two.next().value`, se devuelve `a`. \\n\\n```javascript\\nconsole.log(two.next().value) // \'a\'\\nconsole.log(two.next().value) // \'b\'\\nconsole.log(two.next().value) // \'c\'\\nconsole.log(two.next().value) // undefined\\n```","id":110,"options":["`a` y `a`","`a` y `undefined`","`[\'a\', \'b\', \'c\']` y `a`","`a` y `[\'a\', \'b\', \'c\']`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":0,"code":"console.log(`${(x => x)(\'I love\')} to program`)","codeLanguage":"javascript","explanation":"Las expresiones dentro de las plantillas de cadena de texto se eval\xfaan primero. Esto significa que la cadena contendr\xe1 el valor devuelto de la expresi\xf3n, la funci\xf3n invocada inmediatamente `(x => x)(\'I love\')` en este caso. Pasamos el valor `\'I love\'` como argumento para la funci\xf3n de flecha `x => x`. `x` es igual a `\'I love\'`, que se devuelve tal cual. Esto da como resultado `I love to program`.","id":111,"options":["`I love to program`","`undefined to program`","`${(x => x)(\'I love\') to program`","`TypeError`"],"question":"\xbfCu\xe1l es el resultado?"},{"answer":2,"code":"let config = {\\n  alert: setInterval(() => {\\n    console.log(\'Alert!\')\\n  }, 1000)\\n}\\n\\nconfig = null","codeLanguage":"javascript","explanation":"Normalmente, cuando establecemos objetos iguales a `null`, esos objetos se recogen por el _recolector de basura_ ya que ya no hay ninguna referencia a ese objeto. Sin embargo, dado que la funci\xf3n de devoluci\xf3n de llamada dentro de `setInterval` es una funci\xf3n flecha (por lo tanto vinculada al objeto` config`), la funci\xf3n de devoluci\xf3n de llamada todav\xeda tiene una referencia al objeto `config`. Mientras haya una referencia, el objeto no ser\xe1 recolectado. Como no es recolectado, la funci\xf3n de devoluci\xf3n de llamada `setInterval` a\xfan se invocar\xe1 cada 1000ms (1s).","id":112,"options":["The `setInterval` callback won\'t be invoked","The `setInterval` callback gets invoked once","The `setInterval` callback will still be called every second","We never invoked `config.alert()`, config is `null`"],"question":"\xbfQu\xe9 ocurrir\xe1?"},{"answer":1,"code":"const myMap = new Map()\\nconst myFunc = () => \'greeting\'\\n\\nmyMap.set(myFunc, \'Hello world!\')\\n\\n//1\\nmyMap.get(\'greeting\')\\n//2\\nmyMap.get(myFunc)\\n//3\\nmyMap.get(() => \'greeting\')","codeLanguage":"javascript","explanation":"Al agregar un par clave/valor utilizando el m\xe9todo `set`, la clave ser\xe1 el valor del primer argumento pasado a la funci\xf3n `set`, y el valor ser\xe1 el segundo argumento pasado a la funci\xf3n `set`. La clave es la _funci\xf3n_ `() => \'greeting\'` en este caso, y el valor `\'Hello world\'`. `myMap` ahora es `{ () => \'greeting\' => \'Hello world!\' }`. \\n\\n1 es incorrecto, ya que la clave no es `\'greeting\'` sino `() => \'greeting\'`.\\n3 es incorrecto, ya que estamos creando una nueva funci\xf3n pas\xe1ndola como par\xe1metro al m\xe9todo `get`. El objeto interact\xfaa por _referencia_. Las funciones son objetos, por eso dos funciones nunca son estrictamente iguales, aunque sean id\xe9nticas: tienen una referencia a un punto diferente en la memoria.","id":113,"options":["1","2","2 and 3","All of them"],"question":"\xbfQu\xe9 m\xe9todo(s) devolver\xe1 el valor `\'Hello world!\'`?"},{"answer":2,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nconst changeAge = (x = { ...person }) => x.age += 1\\nconst changeAgeAndName = (x = { ...person }) => {\\n  x.age += 1\\n  x.name = \\"Sarah\\"\\n}\\n\\nchangeAge(person)\\nchangeAgeAndName()\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"Tanto las funciones `changeAge` como `changeAgeAndName` tienen un par\xe1metro por defecto, a saber, un objeto _nuevo_ creado `{ ...person }`. Este objeto tiene copias de todos los pares clave/valor en el objeto `person`. \\n\\nPrimero, invocamos la funci\xf3n `changeAge` y le pasamos el objeto `person` como argumento. Esta funci\xf3n aumenta el valor de la propiedad `age` en 1. `person` ahora es `{name: \\"Lydia\\", age: 22}`.\\n\\nLuego, invocamos la funci\xf3n `changeAgeAndName`, sin embargo, no pasamos un par\xe1metro. En cambio, el valor de `x` es igual a un _nuevo_ objeto: `{ ...person }`. Dado que es un objeto nuevo, no afecta los valores de las propiedades en el objeto `person`. `person` sigue siendo igual a `{ name: \\"Lydia\\",age: 22 }`.","id":114,"options":["`{name: \\"Sarah\\", age: 22}`","`{name: \\"Sarah\\", age: 23}`","`{name: \\"Lydia\\", age: 22}`","`{name: \\"Lydia\\", age: 23}`"],"question":"\xbfCu\xe1l es el resultado?"}],"locale":"es-ES"},{"isRTL":false,"language":"\ud83c\uddf9\ud83c\udded \u0e44\u0e17\u0e22","list":[{"answer":3,"code":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"\u0e43\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e14\u0e31\u0e07\u0e01\u0e25\u0e48\u0e32\u0e27\u0e44\u0e14\u0e49\u0e17\u0e33\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 `name` \u0e14\u0e49\u0e27\u0e22 `var` \u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 \u0e2b\u0e21\u0e32\u0e22\u0e04\u0e27\u0e32\u0e21\u0e27\u0e48\u0e32\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23 Hoisted (\u0e04\u0e37\u0e2d\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e2b\u0e19\u0e48\u0e27\u0e22\u0e04\u0e27\u0e32\u0e21\u0e08\u0e33\u0e08\u0e30\u0e16\u0e39\u0e01\u0e08\u0e2d\u0e07\u0e44\u0e27\u0e49\u0e43\u0e19\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19 creation phase) \u0e14\u0e49\u0e27\u0e22\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 `undefined` \u0e08\u0e19\u0e01\u0e27\u0e48\u0e32\u0e08\u0e30\u0e16\u0e36\u0e07\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e43\u0e19\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 `name` \u0e08\u0e36\u0e07\u0e40\u0e1b\u0e47\u0e19 `undefined`\\n\\n\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 `let` (\u0e41\u0e25\u0e30 `const`) \u0e16\u0e39\u0e01 Hoisted \u0e40\u0e0a\u0e48\u0e19\u0e01\u0e31\u0e19 \u0e41\u0e15\u0e48\u0e21\u0e31\u0e19\u0e08\u0e30\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 (initialize) \u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a\u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 `var` \u0e1e\u0e27\u0e01\u0e21\u0e31\u0e19\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e44\u0e14\u0e49\u0e2b\u0e32\u0e01\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e16\u0e36\u0e07\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28 (initialize) \u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 \\"temporal dead zone\\" \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28 JavaScript \u0e08\u0e30\u0e2a\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21 `ReferenceError`","id":0,"options":["`Lydia` \u0e41\u0e25\u0e30 `undefined`","`Lydia` \u0e41\u0e25\u0e30 `ReferenceError`","`ReferenceError` \u0e41\u0e25\u0e30 `21`","`undefined` \u0e41\u0e25\u0e30 `ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}","codeLanguage":"javascript","explanation":"\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e43\u0e19 Javascript \u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19 `setTimeout` \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 callback \u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01 _\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01_ loop \u0e23\u0e31\u0e19\u0e40\u0e2a\u0e23\u0e47\u0e08 \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 `i` \u0e43\u0e19 loop \u0e41\u0e23\u0e01\u0e16\u0e39\u0e01\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28\u0e14\u0e49\u0e27\u0e22\u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 `var` \u0e08\u0e36\u0e07\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e21\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19 global scope \u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e19\u0e23\u0e2d\u0e1a loop \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32 `i` \u0e17\u0e35\u0e48\u0e25\u0e30 `1` \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e23\u0e31\u0e49\u0e07\u0e14\u0e49\u0e27\u0e22 unary operator `++`. \u0e43\u0e19\u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 `setTimeout` callback \u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01 \u0e41\u0e15\u0e48\u0e27\u0e48\u0e32\u0e04\u0e48\u0e32 `i` \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a `3` \u0e41\u0e25\u0e49\u0e27\u0e14\u0e31\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e41\u0e23\u0e01\\n\\n\u0e43\u0e19 loop \u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07 \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 `i` \u0e16\u0e39\u0e01\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 `let` : \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28\u0e14\u0e49\u0e27\u0e22\u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 `let` (\u0e41\u0e25\u0e30 `const`) \u0e40\u0e1b\u0e47\u0e19 block-scope (block \u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23\u0e01\u0e47\u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e19 `{ }`) \u0e04\u0e48\u0e32 `i` \u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e48\u0e32\u0e08\u0e30\u0e16\u0e39\u0e01\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e20\u0e32\u0e22\u0e43\u0e19 loop \u0e43\u0e19\u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 `setTimeout` callback \u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01 \u0e04\u0e48\u0e32 `i` \u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 callback `1 2 \u0e41\u0e25\u0e30 3` \u0e15\u0e32\u0e21\u0e25\u0e30\u0e14\u0e31\u0e1a","id":1,"options":["`0 1 2` \u0e41\u0e25\u0e30 `0 1 2`","`0 1 2` \u0e41\u0e25\u0e30 `3 3 3`","`3 3 3` \u0e41\u0e25\u0e30 `0 1 2`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());","codeLanguage":"javascript","explanation":"Note \u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07 `diameter` \u0e40\u0e1b\u0e47\u0e19 regular function \u0e41\u0e15\u0e48\u0e27\u0e48\u0e32\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07 `perimeter` \u0e40\u0e1b\u0e47\u0e19 arrow function.\\n\\n\u0e14\u0e49\u0e27\u0e22 arrow functions \u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 `this` \u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e44\u0e1b\u0e17\u0e35\u0e48\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e42\u0e14\u0e22\u0e23\u0e2d\u0e1a (Statis scope \u0e2b\u0e23\u0e37\u0e2d Lexical scope) \u0e21\u0e31\u0e19\u0e08\u0e30\u0e44\u0e21\u0e48\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a regular functions! \u0e19\u0e31\u0e49\u0e19\u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07\u0e27\u0e48\u0e32\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e40\u0e23\u0e35\u0e22\u0e01 `perimeter` \u0e04\u0e33\u0e27\u0e48\u0e32 `this` \u0e21\u0e31\u0e19\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e44\u0e1b\u0e17\u0e35\u0e48\u0e15\u0e31\u0e27 shape object \u0e41\u0e15\u0e48\u0e21\u0e31\u0e19\u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e44\u0e1b\u0e17\u0e35\u0e48\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e42\u0e14\u0e22\u0e23\u0e2d\u0e1a(\u0e43\u0e19\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 `this` \u0e08\u0e30\u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e44\u0e1b\u0e17\u0e35\u0e48 window object).\\n\\n\u0e44\u0e21\u0e48\u0e21\u0e35\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07 `radius` \u0e17\u0e35\u0e48 window object \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 `this.radius` \u0e08\u0e36\u0e07\u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 `undefined`","id":2,"options":["`20` \u0e41\u0e25\u0e30 `62.83185307179586`","`20` \u0e41\u0e25\u0e30 `NaN`","`20` \u0e41\u0e25\u0e30 `63`","`NaN` \u0e41\u0e25\u0e30 `63`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"+true;\\n!\\"Lydia\\";","codeLanguage":"javascript","explanation":"\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e1a\u0e27\u0e01\u0e08\u0e30\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e07\u0e15\u0e31\u0e27\u0e16\u0e39\u0e01\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02 `true` \u0e40\u0e1b\u0e47\u0e19 `1`, \u0e41\u0e25\u0e30 `false` \u0e40\u0e1b\u0e47\u0e19 `0`\\n\\nString `\'Lydia\'` \u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e04\u0e27\u0e32\u0e21\u0e08\u0e23\u0e34\u0e07 \u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e16\u0e32\u0e21\u0e04\u0e37\u0e2d \\"\u0e04\u0e48\u0e32\u0e04\u0e27\u0e32\u0e21\u0e08\u0e23\u0e34\u0e07\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e17\u0e47\u0e08\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48?\\" (\u0e0b\u0e36\u0e48\u0e07\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e01\u0e47\u0e04\u0e37\u0e2d \\"\u0e44\u0e21\u0e48\\") \u0e04\u0e48\u0e32\u0e08\u0e36\u0e07\u0e40\u0e1b\u0e47\u0e19 `false`","id":3,"options":["`1` \u0e41\u0e25\u0e30 `false`","`false` \u0e41\u0e25\u0e30 `NaN`","`false` \u0e41\u0e25\u0e30 `false`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};","codeLanguage":"javascript","explanation":"\u0e43\u0e19\u0e20\u0e32\u0e29\u0e32 Javascript, \u0e17\u0e38\u0e01\u0e46 object keys \u0e40\u0e1b\u0e47\u0e19 strings (unless it\'s a Symbol). \u0e41\u0e21\u0e49\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e01\u0e33\u0e2b\u0e19\u0e14 _type_ \u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19\u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19 strings, object keys \u0e21\u0e31\u0e19\u0e08\u0e30\u0e16\u0e39\u0e01\u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19 strings \u0e2b\u0e25\u0e31\u0e07\u0e1a\u0e49\u0e32\u0e19\u0e02\u0e2d\u0e20\u0e32\u0e29\u0e32 Javscript.\\n\\nJavaScript interprets (or unboxes) statements. \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e43\u0e0a\u0e49 bracket notation, \u0e21\u0e31\u0e19\u0e08\u0e30\u0e21\u0e2d\u0e07\u0e44\u0e1b\u0e17\u0e35\u0e48 opening bracket `[` \u0e41\u0e25\u0e30\u0e21\u0e2d\u0e07\u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07 closing bracket `]`. \u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e21\u0e31\u0e19\u0e08\u0e30\u0e1b\u0e23\u0e30\u0e40\u0e21\u0e34\u0e19\u0e04\u0e48\u0e32 statement.\\n\\n`mouse[bird.size]`: \u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e40\u0e21\u0e34\u0e13\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e23\u0e01 `bird.size`, \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a `\\"small\\"`. `mouse[\\"small\\"]` returns `true`\\n\\n\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e15\u0e32\u0e21\u0e14\u0e49\u0e27\u0e22 dot notation, \u0e2a\u0e34\u0e48\u0e07\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e21\u0e35\u0e17\u0e32\u0e07\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19. `mouse` \u0e44\u0e21\u0e48\u0e21\u0e35 key `bird`, \u0e0b\u0e36\u0e48\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e04\u0e27\u0e32\u0e21\u0e27\u0e48\u0e32 `mouse.bird` \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 `undefined`. \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e40\u0e23\u0e35\u0e22\u0e01\u0e2b\u0e32 `size` \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 dot notation: `mouse.bird.size`. \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 `mouse.bird` \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 `undefined`, \u0e21\u0e31\u0e19\u0e40\u0e25\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e01 `undefined.size`. \u0e0b\u0e36\u0e48\u0e07\u0e44\u0e21\u0e48 valid (isn\'t valid), \u0e41\u0e25\u0e30\u0e08\u0e30\u0e21\u0e35 error \u0e41\u0e08\u0e49\u0e07\u0e02\u0e36\u0e49\u0e19\u0e21\u0e32 `Cannot read property \\"size\\" of undefined`.","id":4,"options":["`mouse.bird.size` is not valid","`mouse[bird.size]` is not valid","`mouse[bird[\\"size\\"]]` is not valid","All of them are valid"],"question":"\u0e02\u0e49\u0e2d\u0e43\u0e14\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07?"},{"answer":0,"code":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);","codeLanguage":"javascript","explanation":"\u0e43\u0e19\u0e20\u0e32\u0e29\u0e32 Javascript, \u0e17\u0e38\u0e01 Object \u0e08\u0e30 interact \u0e42\u0e14\u0e22 _reference_ \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32\u0e43\u0e2b\u0e49\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19.\\n\\n\u0e08\u0e32\u0e01\u0e04\u0e33\u0e16\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e23\u0e01 `c` \u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 object. \u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e17\u0e33\u0e01\u0e32\u0e23\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32 `d` \u0e44\u0e1b\u0e17\u0e35\u0e48 Reference \u0e17\u0e35\u0e48\u0e04\u0e48\u0e32 `c` \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e04\u0e48\u0e32 `c` \u0e40\u0e1b\u0e47\u0e19 object \u0e01\u0e32\u0e23\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32\u0e08\u0e36\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23 Reference\\n\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">\\n\\n\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32 object \u0e15\u0e31\u0e27\u0e43\u0e14\u0e15\u0e31\u0e27\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e04\u0e48\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e37\u0e48\u0e19\u0e08\u0e36\u0e07\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e15\u0e32\u0e21\u0e44\u0e1b\u0e14\u0e49\u0e27\u0e22","id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);","codeLanguage":"javascript","explanation":"`new Number()` \u0e40\u0e1b\u0e47\u0e19 built-in function constructor. \u0e41\u0e21\u0e49\u0e27\u0e48\u0e32\u0e21\u0e31\u0e19\u0e08\u0e30\u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e1a number, \u0e41\u0e15\u0e48\u0e21\u0e31\u0e19\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e47\u0e19 number \u0e08\u0e23\u0e34\u0e07\u0e46: \u0e21\u0e31\u0e19\u0e21\u0e35\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e1e\u0e34\u0e40\u0e28\u0e29\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e21\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19 object\\n\\n\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e0a\u0e49\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22 `==` , \u0e21\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e04\u0e48\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e27\u0e48\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 _value_. \u0e0b\u0e36\u0e48\u0e07\u0e04\u0e48\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07\u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a `3`, \u0e08\u0e36\u0e07 returns `true`.\\n\\n\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e15\u0e32\u0e21\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e0a\u0e49\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22 `===` , \u0e17\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19 _\u0e41\u0e25\u0e30_ type \u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19\u0e04\u0e27\u0e23\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19\u0e08\u0e36\u0e07\u0e08\u0e30 return `true`. \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 `new Number()` \u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48 number, \u0e21\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19 **object**. `a === b` _\u0e41\u0e25\u0e30_ `b === c` \u0e08\u0e36\u0e07 return `false.`","id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nconsole.log(freddie.colorChange(\\"orange\\"));","codeLanguage":"javascript","explanation":"The `colorChange` function is static. Static methods are designed to live only on the constructor in which they are created, and cannot be passed down to any children. Since `freddie` is a child, the function is not passed down, and not available on the `freddie` instance: a `TypeError` is thrown.","id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"let greeting;\\ngreetign = {}; // Typo!\\nconsole.log(greetign);","codeLanguage":"javascript","explanation":"It logs the object, because we just created an empty object on the global object! When we mistyped `greeting` as `greetign`, the JS interpreter actually saw this as `global.greetign = {}` (or `window.greetign = {}` in a browser).\\n\\nIn order to avoid this, we can use `\\"use strict\\"`. This makes sure that you have declared a variable before setting it equal to anything.","id":8,"options":["`{}`","`ReferenceError: greetign is not defined`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";","codeLanguage":"javascript","explanation":"This is possible in JavaScript, because functions are objects! (Everything besides primitive types are objects)\\n\\nA function is a special type of object. The code you write yourself isn\'t the actual function. The function is an object with properties. This property is invocable.","id":9,"options":["Nothing, this is totally fine!","`SyntaxError`. You cannot add properties to a function this way.","`\\"Woof\\"` gets logged.","`ReferenceError`"],"question":"\u0e08\u0e30\u0e40\u0e01\u0e34\u0e14\u0e2d\u0e30\u0e44\u0e23\u0e02\u0e36\u0e49\u0e19\u0e2b\u0e32\u0e01\u0e40\u0e23\u0e32\u0e17\u0e33\u0e40\u0e0a\u0e48\u0e19\u0e19\u0e35\u0e49?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());","codeLanguage":"javascript","explanation":"You can\'t add properties to a constructor like you can with regular objects. If you want to add a feature to all objects at once, you have to use the prototype instead. So in this case,\\n\\n```js\\nPerson.prototype.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n```\\n\\nwould have made `member.getFullName()` work. Why is this beneficial? Say that we added this method to the constructor itself. Maybe not every `Person` instance needed this method. This would waste a lot of memory space, since they would still have that property, which takes of memory space for each instance. Instead, if we only add it to the prototype, we just have it at one spot in memory, yet they all have access to it!","id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);","codeLanguage":"javascript","explanation":"For `sarah`, we didn\'t use the `new` keyword. When using `new`, it refers to the new empty object we create. However, if you don\'t add `new` it refers to the **global object**!\\n\\nWe said that `this.firstName` equals `\\"Sarah\\"` \u0e41\u0e25\u0e30 `this.lastName` equals `\\"Smith\\"`. What we actually did, is defining `global.firstName = \'Sarah\'` \u0e41\u0e25\u0e30 `global.lastName = \'Smith\'`. `sarah` itself is left `undefined`, since we don\'t return a value from the `Person` function.","id":11,"options":["`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0e41\u0e25\u0e30 `undefined`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0e41\u0e25\u0e30 `Person {firstName: \\"Sarah\\", lastName: \\"Smith\\"}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0e41\u0e25\u0e30 `{}`","`Person {firstName: \\"Lydia\\", lastName: \\"Hallie\\"}` \u0e41\u0e25\u0e30 `ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"explanation":"During the **capturing** phase, the event goes through the ancestor elements down to the target element. It then reaches the **target** element, and **bubbling** begins.\\n\\n<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">","id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"question":"\u0e2d\u0e30\u0e44\u0e23\u0e04\u0e37\u0e2d three phases \u0e02\u0e2d\u0e07 event propagation?"},{"answer":1,"explanation":"All objects have prototypes, except for the **base object**. The base object is the object created by the user, or an object that is created using the `new` keyword. The base object has access to some methods and properties, such as `.toString`. This is the reason why you can use built-in JavaScript methods! All of such methods are available on the prototype. Although JavaScript can\'t find it directly on your object, it goes down the prototype chain and finds it there, which makes it accessible for you.","id":13,"options":["true","false"],"question":"\u0e17\u0e38\u0e01\u0e46 object \u0e21\u0e35 prototypes."},{"answer":2,"code":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");","codeLanguage":"javascript","explanation":"JavaScript is a **dynamically typed language**: we don\'t specify what types certain variables are. Values can automatically be converted into another type without you knowing, which is called _implicit type coercion_. **Coercion** is converting from one type into another.\\n\\nIn this example, JavaScript converts the number `1` into a string, in order for the function to make sense and return a value. During the addition of a numeric type (`1`) and a string type (`\'2\'`), the number is treated as a string. We can concatenate strings like `\\"Hello\\" + \\"World\\"`, so what\'s happening here is `\\"1\\" + \\"2\\"` which returns `\\"12\\"`.","id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);","codeLanguage":"javascript","explanation":"The **postfix** unary operator `++`:\\n\\n1. Returns the value (this returns `0`)\\n2. Increments the value (number is now `1`)\\n\\nThe **prefix** unary operator `++`:\\n\\n1. Increments the value (number is now `2`)\\n2. Returns the value (this returns `2`)\\n\\nThis returns `0 2 2`.","id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;","codeLanguage":"javascript","explanation":"If you use tagged template literals, the value of the first argument is always an array of the string values. The remaining arguments get the values of the passed expressions!","id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });","codeLanguage":"javascript","explanation":"When testing equality, primitives are compared by their _value_, while objects are compared by their _reference_. JavaScript checks if the objects have a reference to the same location in memory.\\n\\nThe two objects that we are comparing don\'t have that: the object we passed as a parameter refers to a different location in memory than the object we used in order to check equality.\\n\\nThis is why both `{ age: 18 } === { age: 18 }` \u0e41\u0e25\u0e30 `{ age: 18 } == { age: 18 }` return `false`.","id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);","codeLanguage":"javascript","explanation":"The rest parameter (`...args`.) lets us \\"collect\\" all remaining arguments into an array. An array is an object, so `typeof args` returns `\\"object\\"`","id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();","codeLanguage":"javascript","explanation":"With `\\"use strict\\"`, you can make sure that you don\'t accidentally declare global variables. We never declared the variable `age`, and since we use `\\"use strict\\"`, it will throw a reference error. If we didn\'t use `\\"use strict\\"`, it would have worked, since the property `age` would have gotten added to the global object.","id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"const sum = eval(\\"10*10+5\\");","codeLanguage":"javascript","explanation":"`eval` evaluates codes that\'s passed as a string. If it\'s an expression, like in this case, it evaluates the expression. The expression is `10 * 10 + 5`. This returns the number `105`.","id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"question":"\u0e08\u0e32\u0e01\u0e42\u0e08\u0e17\u0e22\u0e4c `sum` \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48?"},{"answer":1,"code":"sessionStorage.setItem(\\"cool_secret\\", 123);","codeLanguage":"javascript","explanation":"The data stored in `sessionStorage` is removed after closing the _tab_.\\n\\nIf you used `localStorage`, the data would\'ve been there forever, unless for example `localStorage.clear()` is invoked.","id":21,"options":["Forever, the data doesn\'t get lost.","When the user closes the tab.","When the user closes the entire browser, not only the tab.","When the user shuts off their computer."],"question":"cool_secret \u0e08\u0e30\u0e16\u0e39\u0e01 accessible \u0e44\u0e14\u0e49\u0e19\u0e32\u0e19\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48?"},{"answer":1,"code":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);","codeLanguage":"javascript","explanation":"With the `var` keyword, you can declare multiple variables with the same name. The variable will then hold the latest value.\\n\\nYou cannot do this with `let` or `const` since they\'re block-scoped.","id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);","codeLanguage":"javascript","explanation":"All object keys (excluding Symbols) are strings under the hood, even if you don\'t type it yourself as a string. This is why `obj.hasOwnProperty(\'1\')` also returns true.\\n\\nIt doesn\'t work that way for a set. There is no `\'1\'` in our set: `set.has(\'1\')` returns `false`. It has the numeric type `1`, `set.has(1)` returns `true`.","id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);","codeLanguage":"javascript","explanation":"If you have two keys with the same name, the key will be replaced. It will still be in its first position, but with the last specified value.","id":24,"options":["`{ a: \\"one\\", b: \\"two\\" }`","`{ b: \\"two\\", a: \\"three\\" }`","`{ a: \\"three\\", b: \\"two\\" }`","`SyntaxError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"explanation":"The base execution context is the global execution context: it\'s what\'s accessible everywhere in your code.","id":25,"options":["true","false","it depends"],"question":"Global execution context \u0e43\u0e19 JavaScript \u0e2a\u0e23\u0e49\u0e32\u0e07 2 \u0e2a\u0e34\u0e48\u0e07\u0e04\u0e37\u0e2d: global object \u0e41\u0e25\u0e30\u0e04\u0e35\u0e22\u0e4c\u0e40\u0e27\u0e34\u0e23\u0e4c\u0e14 \\"this\\""},{"answer":2,"code":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}","codeLanguage":"javascript","explanation":"The `continue` statement skips an iteration if a certain condition returns `true`.","id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();","codeLanguage":"javascript","explanation":"`String` is a built-in constructor, which we can add properties to. I just added a method to its prototype. Primitive strings are automatically converted into a string object, generated by the string prototype function. So, all strings (string objects) have access to that method!","id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeError: not a function`","`SyntaxError`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);","codeLanguage":"javascript","explanation":"Object keys are automatically converted into strings. We are trying to set an object as a key to object `a`, with the value of `123`.\\n\\nHowever, when we stringify an object, it becomes `\\"[object Object]\\"`. So what we are saying here, is that `a[\\"object Object\\"] = 123`. Then, we can try to do the same again. `c` is another object that we are implicitly stringifying. So then, `a[\\"object Object\\"] = 456`.\\n\\nThen, we log `a[b]`, which is actually `a[\\"object Object\\"]`. We just set that to `456`, so it returns `456`.","id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();","codeLanguage":"javascript","explanation":"We have a `setTimeout` function and invoked it first. Yet, it was logged last.\\n\\nThis is because in browsers, we don\'t just have the runtime engine, we also have something called a `WebAPI`. The `WebAPI` gives us the `setTimeout` function to start with, and for example the DOM.\\n\\nAfter the _callback_ is pushed to the WebAPI, the `setTimeout` function itself (but not the callback!) is popped off the stack.\\n\\n<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">\\n\\nNow, `foo` gets invoked, and `\\"First\\"` is being logged.\\n\\n<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">\\n\\n`foo` is popped off the stack, and `baz` gets invoked. `\\"Third\\"` gets logged.\\n\\n<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">\\n\\nThe WebAPI can\'t just add stuff to the stack whenever it\'s ready. Instead, it pushes the callback function to something called the _queue_.\\n\\n<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">\\n\\nThis is where an event loop starts to work. An **event loop** looks at the stack and task queue. If the stack is empty, it takes the first thing on the queue and pushes it onto the stack.\\n\\n<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">\\n\\n`bar` gets invoked, `\\"Second\\"` gets logged, and it\'s popped off the stack.","id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>","codeLanguage":"html","explanation":"The deepest nested element that caused the event is the target of the event. You can stop bubbling by `event.stopPropagation`","id":30,"options":["Outer `div`","Inner `div`","`button`","An array of all nested elements."],"question":"event.target \u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e25\u0e34\u0e01 button?"},{"answer":0,"code":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>","codeLanguage":"html","explanation":"If we click `p`, we see two logs: `p` \u0e41\u0e25\u0e30 `div`. During event propagation, there are 3 phases: capturing, target, and bubbling. By default, event handlers are executed in the bubbling phase (unless you set `useCapture` to `true`). It goes from the deepest nested element outwards.","id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"question":"\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e38\u0e13\u0e04\u0e25\u0e34\u0e01\u0e17\u0e35\u0e48 paragraph, \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e43\u0e19 console log \u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);","codeLanguage":"javascript","explanation":"With both, we can pass the object to which we want the `this` keyword to refer to. However, `.call` is also _executed immediately_!\\n\\n`.bind.` returns a _copy_ of the function, but with a bound context! It is not executed immediately.","id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());","codeLanguage":"javascript","explanation":"The `sayHi` function returns the returned value of the immediately invoked function (IIFE). This function returned `0`, which is type `\\"number\\"`.\\n\\nFYI: there are only 7 built-in types: `null`, `undefined`, `boolean`, `number`, `string`, `object`, `symbol`, \u0e41\u0e25\u0e30 `bigint`. `\\"function\\"` is not a type, since functions are objects, it\'s of type `\\"object\\"`.","id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;","codeLanguage":"javascript","explanation":"There are only six falsy values:\\n\\n- `undefined`\\n- `null`\\n- `NaN`\\n- `0`\\n- `\'\'` (empty string)\\n- `false`\\n\\nFunction constructors, like `new Number` \u0e41\u0e25\u0e30 `new Boolean` are truthy.","id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"question":"\u0e04\u0e48\u0e32\u0e43\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 false?"},{"answer":1,"code":"console.log(typeof typeof 1);","codeLanguage":"javascript","explanation":"`typeof 1` returns `\\"number\\"`.\\n`typeof \\"number\\"` returns `\\"string\\"`","id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);","codeLanguage":"javascript","explanation":"When you set a value to an element in an array that exceeds the length of the array, JavaScript creates something called \\"empty slots\\". These actually have the value of `undefined`, but you will see something like:\\n\\n`[1, 2, 3, 7 x empty, 11]`\\n\\ndepending on where you run it (it\'s different for every browser, node, etc.)","id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();","codeLanguage":"javascript","explanation":"The `catch` block receives the argument `x`. This is not the same `x` as the variable when we pass arguments. This variable `x` is block-scoped.\\n\\nLater, we set this block-scoped variable equal to `1`, and set the value of the variable `y`. Now, we log the block-scoped variable `x`, which is equal to `1`.\\n\\nOutside of the `catch` block, `x` is still `undefined`, \u0e41\u0e25\u0e30 `y` is `2`. When we want to `console.log(x)` outside of the `catch` block, it returns `undefined`, \u0e41\u0e25\u0e30 `y` returns `2`.","id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"explanation":"JavaScript only has primitive types and objects.\\n\\nPrimitive types are `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, \u0e41\u0e25\u0e30 `symbol`.\\n\\nWhat differentiates a primitive from an object is that primitives do not have any properties or methods; however, you\'ll note that `\'foo\'.toUpperCase()` evaluates to `\'FOO\'` and does not result in a `TypeError`. This is because when you try to access a property or method on a primitive like a string, JavaScript will implicitly wrap the object using one of the wrapper classes, i.e. `String`, and then immediately discard the wrapper after the expression evaluates. All primitives except for `null`\u0e41\u0e25\u0e30d `undefined` exhibit this behaviour.","id":38,"options":["primitive or object","function or object","trick question! only objects","number or object"],"question":"\u0e02\u0e49\u0e2d\u0e43\u0e14\u0e04\u0e37\u0e2d JavaScript"},{"answer":2,"code":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);","codeLanguage":"javascript","explanation":"`[1, 2]` is our initial value. This is the value we start with, and the value of the very first `acc`. During the first round, `acc` is `[1,2]`, \u0e41\u0e25\u0e30 `cur` is `[0, 1]`. We concatenate them, which results in `[1, 2, 0, 1]`.\\n\\nThen, `[1, 2, 0, 1]` is `acc` \u0e41\u0e25\u0e30 `[2, 3]` is `cur`. We concatenate them, and get `[1, 2, 0, 1, 2, 3]`","id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"!!null;\\n!!\\"\\";\\n!!1;","codeLanguage":"javascript","explanation":"`null` is falsy. `!null` returns `true`. `!true` returns `false`.\\n\\n`\\"\\"` is falsy. `!\\"\\"` returns `true`. `!true` returns `false`.\\n\\n`1` is truthy. `!1` returns `false`. `!false` returns `true`.","id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"setInterval(() => console.log(\\"Hi\\"), 1000);","codeLanguage":"javascript","explanation":"It returns a unique id. This id can be used to clear that interval with the `clearInterval()` function.","id":41,"options":["a unique id","the amount of milliseconds specified","the passed function","`undefined`"],"question":"`setInterval` method \u0e2a\u0e48\u0e07\u0e04\u0e48\u0e32\u0e2d\u0e30\u0e44\u0e23\u0e43\u0e2b\u0e49\u0e40\u0e1a\u0e23\u0e32\u0e27\u0e4c\u0e40\u0e0b\u0e2d\u0e23\u0e4c?"},{"answer":0,"code":"[...\\"Lydia\\"];","codeLanguage":"javascript","explanation":"A string is an iterable. The spread operator maps every character of an iterable to one element.","id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);","codeLanguage":"javascript","explanation":"Regular functions cannot be stopped mid-way after invocation. However, a generator function can be \\"stopped\\" midway, and later continue from where it stopped. Every time a generator function encounters a `yield` keyword, the function yields the value specified after it. Note that the generator function in that case doesn\u2019t _return_ the value, it _yields_ the value.\\n\\nFirst, we initialize the generator function with `i` equal to `10`. We invoke the generator function using the `next()` method. The first time we invoke the generator function, `i` is equal to `10`. It encounters the first `yield` keyword: it yields the value of `i`. The generator is now \\"paused\\", and `10` gets logged.\\n\\nThen, we invoke the function again with the `next()` method. It starts to continue where it stopped previously, still with `i` equal to `10`. Now, it encounters the next `yield` keyword, and yields `i * 2`. `i` is equal to `10`, so it returns `10 * 2`, which is `20`. This results in `10, 20`.","id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));","codeLanguage":"javascript","explanation":"When we pass multiple promises to the `Promise.race` method, it resolves/rejects the _first_ promise that resolves/rejects. To the `setTimeout` method, we pass a timer: 500ms for the first promise (`firstPromise`), and 100ms for the second promise (`secondPromise`). This means that the `secondPromise` resolves first with the value of `\'two\'`. `res` now holds the value of `\'two\'`, which gets logged.","id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);","codeLanguage":"javascript","explanation":"First, we declare a variable `person` with the value of an object that has a `name` property.\\n\\n<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">\\n\\nThen, we declare a variable called `members`. We set the first element of that array equal to the value of the `person` variable. Objects interact by _reference_ when setting them equal to each other. When you assign a reference from one variable to another, you make a _copy_ of that reference. (note that they don\'t have the _same_ reference!)\\n\\n<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">\\n\\nThen, we set the variable `person` equal to `null`.\\n\\n<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">\\n\\nWe are only modifying the value of the `person` variable, and not the first element in the array, since that element has a different (copied) reference to the object. The first element in `members` still holds its reference to the original object. When we log the `members` array, the first element still holds the value of the object, which gets logged.","id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name: \\"Lydia\\" }]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}","codeLanguage":"javascript","explanation":"With a `for-in` loop, we can iterate through object keys, in this case `name` \u0e41\u0e25\u0e30 `age`. Under the hood, object keys are strings (if they\'re not a Symbol). On every loop, we set the value of `item` equal to the current key it\u2019s iterating over. First, `item` is equal to `name`, and gets logged. Then, `item` is equal to `age`, which gets logged.","id":46,"options":["`{ name: \\"Lydia\\" }, { age: 21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"console.log(3 + 4 + \\"5\\");","codeLanguage":"javascript","explanation":"Operator associativity is the order in which the compiler evaluates the expressions, either left-to-right or right-to-left. This only happens if all operators have the _same_ precedence. We only have one type of operator: `+`. For addition, the associativity is left-to-right.\\n\\n`3 + 4` gets evaluated first. This results in the number `7`.\\n\\n`7 + \'5\'` results in `\\"75\\"` because of coercion. JavaScript converts the number `7` into a string, see question 15. We can concatenate two strings using the `+`operator. `\\"7\\" + \\"5\\"` results in `\\"75\\"`.","id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const num = parseInt(\\"7*6\\", 10);","codeLanguage":"javascript","explanation":"Only the first numbers in the string is returned. Based on the _radix_ (the second argument in order to specify what type of number we want to parse it to: base 10, hexadecimal, octal, binary, etc.), the `parseInt` checks whether the characters in the string are valid. Once it encounters a character that isn\'t a valid number in the radix, it stops parsing and ignores the following characters.\\n\\n`*` is not a valid number. It only parses `\\"7\\"` into the decimal `7`. `num` now holds the value of `7`.","id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"question":"`num` \u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48?"},{"answer":2,"code":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});","codeLanguage":"javascript","explanation":"When mapping over the array, the value of `num` is equal to the element it\u2019s currently looping over. In this case, the elements are numbers, so the condition of the if statement `typeof num === \\"number\\"` returns `true`. The map function creates a new array and inserts the values returned from the function.\\n\\nHowever, we don\u2019t return a value. When we don\u2019t return a value from the function, the function returns `undefined`. For every element in the array, the function block gets called, so for each element we return `undefined`.","id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);","codeLanguage":"javascript","explanation":"Arguments are passed by _value_, unless their value is an object, then they\'re passed by _reference_. `birthYear` is passed by value, since it\'s a string, not an object. When we pass arguments by value, a _copy_ of that value is created (see question 46).\\n\\nThe variable `birthYear` has a reference to the value `\\"1997\\"`. The argument `year` also has a reference to the value `\\"1997\\"`, but it\'s not the same value as `birthYear` has a reference to. When we update the value of `year` by setting `year` equal to `\\"1998\\"`, we are only updating the value of `year`. `birthYear` is still equal to `\\"1997\\"`.\\n\\nThe value of `person` is an object. The argument `member` has a (copied) reference to the _same_ object. When we modify a property of the object `member` has a reference to, the value of `person` will also be modified, since they both have a reference to the same object. `person`\'s `name` property is now equal to the value `\\"Lydia\\"`","id":50,"options":["`{ name: \\"Lydia\\" }, \\"1997\\"`","`{ name: \\"Sarah\\" }, \\"1998\\"`","`{ name: \\"Lydia\\" }, \\"1998\\"`","`{ name: \\"Sarah\\" }, \\"1997\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error:\\", e);\\n  }\\n}\\n\\nsayHi();","codeLanguage":"javascript","explanation":"With the `throw` statement, we can create custom errors. With this statement, you can throw exceptions. An exception can be a <b>string</b>, a <b>number</b>, a <b>boolean</b> or an <b>object</b>. In this case, our exception is the string `\'Hello world\'`.\\n\\nWith the `catch` statement, we can specify what to do if an exception is thrown in the `try` block. An exception is thrown: the string `\'Hello world\'`. `e` is now equal to that string, which we log. This results in `\'Oh an error: Hello world\'`.","id":51,"options":["`It worked! Hello world!`","`Oh no an error: undefined`","`SyntaxError: can only throw Error objects`","`Oh no an error: Hello world!`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);","codeLanguage":"javascript","explanation":"When you return a property, the value of the property is equal to the _returned_ value, not the value set in the constructor function. We return the string `\\"Maserati\\"`, so `myCar.make` is equal to `\\"Maserati\\"`.","id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);","codeLanguage":"javascript","explanation":"`let x = y = 10;` is actually shorthand for:\\n\\n```javascript\\ny = 10;\\nlet x = y;\\n```\\n\\nWhen we set `y` equal to `10`, we actually add a property `y` to the global object (`window` in browser, `global` in Node). In a browser, `window.y` is now equal to `10`.\\n\\nThen, we declare a variable `x` with the value of `y`, which is `10`. Variables declared with the `let` keyword are _block scoped_, they are only defined within the block they\'re declared in; the immediately-invoked function (IIFE) in this case. When we use the `typeof` operator, the operand `x` is not defined: we are trying to access `x` outside of the block it\'s declared in. This means that `x` is not defined. Values who haven\'t been assigned a value or declared are of type `\\"undefined\\"`. `console.log(typeof x)` returns `\\"undefined\\"`.\\n\\nHowever, we created a global variable `y` when setting `y` equal to `10`. This value is accessible anywhere in our code. `y` is defined, and holds a value of type `\\"number\\"`. `console.log(typeof y)` returns `\\"number\\"`.","id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();","codeLanguage":"javascript","explanation":"We can delete properties from objects using the `delete` keyword, also on the prototype. By deleting a property on the prototype, it is not available anymore in the prototype chain. In this case, the `bark` function is not available anymore on the prototype after `delete Dog.prototype.bark`, yet we still try to access it.\\n\\nWhen we try to invoke something that is not a function, a `TypeError` is thrown. In this case `TypeError: pet.bark is not a function`, since `pet.bark` is `undefined`.","id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`, `\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);","codeLanguage":"javascript","explanation":"The `Set` object is a collection of _unique_ values: a value can only occur once in a set.\\n\\nWe passed the iterable `[1, 1, 2, 3, 4]` with a duplicate value `1`. Since we cannot have two of the same values in a set, one of them is removed. This results in `{1, 2, 3, 4}`.","id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"// counter.js\\nlet counter = 10;\\nexport default counter;","codeLanguage":"javascript","explanation":"An imported module is _read-only_: you cannot modify the imported module. Only the module that exports them can change its value.\\n\\nWhen we try to increment the value of `myCounter`, it throws an error: `myCounter` is read-only and cannot be modified.","id":56,"options":["`10`","`11`","`Error`","`NaN`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);","codeLanguage":"javascript","explanation":"The `delete` operator returns a boolean value: `true` on a successful deletion, else it\'ll return `false`. However, variables declared with the `var`, `const` or `let` keyword cannot be deleted using the `delete` operator.\\n\\nThe `name` variable was declared with a `const` keyword, so its deletion is not successful: `false` is returned. When we set `age` equal to `21`, we actually added a property called `age` to the global object. You can successfully delete properties from objects this way, also the global object, so `delete age` returns `true`.","id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);","codeLanguage":"javascript","explanation":"We can unpack values from arrays or properties from objects through destructuring. For example:\\n\\n```javascript\\n[a, b] = [1, 2];\\n```\\n\\n<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">\\n\\nThe value of `a` is now `1`, and the value of `b` is now `2`. What we actually did in the question, is:\\n\\n```javascript\\n[y] = [1, 2, 3, 4, 5];\\n```\\n\\n<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">\\n\\nThis means that the value of `y` is equal to the first value in the array, which is the number `1`. When we log `y`, `1` is returned.","id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);","codeLanguage":"javascript","explanation":"It\'s possible to combine objects using the spread operator `...`. It lets you create copies of the key/value pairs of one object, and add them to another object. In this case, we create copies of the `user` object, and add them to the `admin` object. The `admin` object now contains the copied key/value pairs, which results in `{ admin: true, name: \\"Lydia\\", age: 21 }`.","id":59,"options":["`{ admin: true, user: { name: \\"Lydia\\", age: 21 } }`","`{ admin: true, name: \\"Lydia\\", age: 21 }`","`{ admin: true, user: [\\"Lydia\\", 21] }`","`{ admin: true }`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));","codeLanguage":"javascript","explanation":"With the `defineProperty` method, we can add new properties to an object, or modify existing ones. When we add a property to an object using the `defineProperty` method, they are by default _not enumerable_. The `Object.keys` method returns all _enumerable_ property names from an object, in this case only `\\"name\\"`.\\n\\nProperties added using the `defineProperty` method are immutable by default. You can override this behavior using the `writable`, `configurable` \u0e41\u0e25\u0e30 `enumerable` properties. This way, the `defineProperty` method gives you a lot more control over the properties you\'re adding to an object.","id":60,"options":["`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\", age: 21 }`, `[\\"name\\"]`","`{ name: \\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name: \\"Lydia\\"}`, `[\\"age\\"]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);","codeLanguage":"javascript","explanation":"The second argument of `JSON.stringify` is the _replacer_. The replacer can either be a function or an array, and lets you control what and how the values should be stringified.\\n\\nIf the replacer is an _array_, only the property names included in the array will be added to the JSON string. In this case, only the properties with the names `\\"level\\"`\u0e41\u0e25\u0e30d `\\"health\\"` are included, `\\"username\\"` is excluded. `data` is now equal to `\\"{\\"level\\":19, \\"health\\":90}\\"`.\\n\\nIf the replacer is a _function_, this function gets called on every property in the object you\'re stringifying. The value returned from this function will be the value of the property when it\'s added to the JSON string. If the value is `undefined`, this property is excluded from the JSON string.","id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\": \\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\": \\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);","codeLanguage":"javascript","explanation":"The unary operator `++` _first returns_ the value of the operand, _then increments_ the value of the operand. The value of `num1` is `10`, since the `increaseNumber` function first returns the value of `num`, which is `10`, and only increments the value of `num` afterwards.\\n\\n`num2` is `10`, since we passed `num1` to the `increasePassedNumber`. `number` is equal to `10`(the value of `num1`. Again, the unary operator `++` _first returns_ the value of the operand, _then increments_ the value of the operand. The value of `number` is `10`, so `num2` is equal to `10`.","id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);","codeLanguage":"javascript","explanation":"In ES6, we can initialize parameters with a default value. The value of the parameter will be the default value, if no other value has been passed to the function, or if the value of the parameter is `\\"undefined\\"`. In this case, we spread the properties of the `value` object into a new object, so `x` has the default value of `{ number: 10 }`.\\n\\nThe default argument is evaluated at _call time_! Every time we call the function, a _new_ object is created. We invoke the `multiply` function the first two times without passing a value: `x` has the default value of `{ number: 10 }`. We then log the multiplied value of that number, which is `20`.\\n\\nThe third time we invoke multiply, we do pass an argument: the object called `value`. The `*=` operator is actually shorthand for `x.number = x.number * 2`: we modify the value of `x.number`, and log the multiplied value `20`. \\n\\nThe fourth time, we pass the `value` object again. `x.number` was previously modified to `20`, so `x.number *= 2` logs `40`.","id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));","codeLanguage":"javascript","explanation":"The first argument that the `reduce` method receives is the _accumulator_, `x` in this case. The second argument is the _current value_, `y`. With the reduce method, we execute a callback function on every element in the array, which could ultimately result in one single value. \\n\\nIn this example, we are not returning any values, we are simply logging the values of the accumulator and the current value.\\n\\nThe value of the accumulator is equal to the previously returned value of the callback function. If you don\'t pass the optional `initialValue` argument to the `reduce` method, the accumulator is equal to the first element on the first call.\\n\\nOn the first call, the accumulator (`x`) is `1`, and the current value (`y`) is `2`. We don\'t return from the callback function, we log the accumulator and current value: `1` \u0e41\u0e25\u0e30 `2` get logged.  \\n\\nIf you don\'t return a value from a function, it returns `undefined`. On the next call, the accumulator is `undefined`, and the current value is `3`. `undefined` \u0e41\u0e25\u0e30 `3` get logged. \\n\\nOn the fourth call, we again don\'t return from the callback function. The accumulator is again `undefined`, and the current value is `4`. `undefined` \u0e41\u0e25\u0e30 `4` get logged.","id":64,"options":["`1` `2` \u0e41\u0e25\u0e30 `3` `3` \u0e41\u0e25\u0e30 `6` `4`","`1` `2` \u0e41\u0e25\u0e30 `2` `3` \u0e41\u0e25\u0e30 `3` `4`","`1` `undefined` \u0e41\u0e25\u0e30 `2` `undefined` \u0e41\u0e25\u0e30 `3` `undefined` \u0e41\u0e25\u0e30 `4` `undefined`","`1` `2` \u0e41\u0e25\u0e30 `undefined` `3` \u0e41\u0e25\u0e30 `undefined` `4`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};","codeLanguage":"javascript","explanation":"In a derived class, you cannot access the `this` keyword before calling `super`. If you try to do that, it will throw a ReferenceError: 1 and 4 would throw a reference error.\\n\\nWith the `super` keyword, we call that parent class\'s constructor with the given arguments. The parent\'s constructor receives the `name` argument, so we need to pass `name` to `super`. \\n\\nThe `Labrador` class receives two arguments, `name` since it extends `Dog`, \u0e41\u0e25\u0e30 `size` as an extra property on the `Labrador` class. They both need to be passed to the constructor function on `Labrador`, which is done correctly  using constructor 2.","id":65,"options":["1","2","3","4"],"question":"constructor \u0e44\u0e2b\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49 extend \u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a `Dog` class \u0e44\u0e14\u0e49?"},{"answer":1,"code":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;","codeLanguage":"javascript","explanation":"With the `import` keyword, all imported modules are _pre-parsed_. This means that the imported modules get run _first_, the code in the file which imports the module gets executed _after_.\\n\\nThis is a difference between `require()` in CommonJS and `import`! With `require()`, you can load dependencies on demand while the code is being run. If we would have used `require` instead of `import`, `running index.js`, `running sum.js`, `3` would have been logged to the console.","id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))","codeLanguage":"javascript","explanation":"Every Symbol is entirely unique. The purpose of the argument passed to the Symbol is to give the Symbol a description. The value of the Symbol is not dependent on the passed argument. As we test equality, we are creating two entirely new symbols: the first `Symbol(\'foo\')`, and the second `Symbol(\'foo\')`. These two values are unique and not equal to each other, `Symbol(\'foo\') === Symbol(\'foo\')` returns `false`.","id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))","codeLanguage":"javascript","explanation":"With the `padStart` method, we can add padding to the beginning of a string. The value passed to this method is the _total_ length of the string together with the padding. The string `\\"Lydia Hallie\\"` has a length of `12`. `name.padStart(13)` inserts 1 space at the start of the string, because 12 + 1 is 13.\\n\\nIf the argument passed to the `padStart` method is smaller than the length of the array, no padding will be added.","id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");","codeLanguage":"javascript","explanation":"With the `+` operator, you can concatenate strings. In this case, we are concatenating the string `\\"\ud83e\udd51\\"` with the string `\\"\ud83d\udcbb\\"`, resulting in `\\"\ud83e\udd51\ud83d\udcbb\\"`.","id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","A string containing their code points","Error"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f","codeLanguage":"javascript","explanation":"A generator function \\"pauses\\" its execution when it sees the `yield` keyword. First, we have to let the function yield the string \\"Do you love JavaScript?\\", which can be done by calling `game.next().value`.\\n\\nEvery line is executed, until it finds the first `yield` keyword. There is a `yield` keyword on the first line within the function: the execution stops with the first yield! _This means that the variable `answer` is not defined yet!_\\n\\nWhen we call `game.next(\\"Yes\\").value`, the previous `yield` is replaced with the value of the parameters passed to the `next()` function, `\\"Yes\\"` in this case. The value of the variable `answer` is now equal to `\\"Yes\\"`. The condition of the if-statement returns `false`, \u0e41\u0e25\u0e30 `JavaScript loves you back \u2764\ufe0f` gets logged.","id":70,"options":["`game.next(\\"Yes\\").value` \u0e41\u0e25\u0e30 `game.next().value`","`game.next.value(\\"Yes\\")` \u0e41\u0e25\u0e30 `game.next.value()`","`game.next().value` \u0e41\u0e25\u0e30 `game.next(\\"Yes\\").value`","`game.next.value()` \u0e41\u0e25\u0e30 `game.next.value(\\"Yes\\")`"],"question":"\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e41\u0e2a\u0e14\u0e07\u0e43\u0e19 log \u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32 commented out \u0e43\u0e19 console.log \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23?"},{"answer":2,"code":"console.log(String.raw`Hello\\nworld`);","codeLanguage":"javascript","explanation":"`String.raw` returns a string where the escapes (`\\n`, `\\u000b`, `\\t` etc.) are ignored! Backslashes can be an issue since you could end up with something like:\\n\\n`` const path = `C:DocumentsProjects\\table.html` ``\\n\\nWhich would result in:\\n\\n`\\"C:DocumentsProjects able.html\\"`\\n\\nWith `String.raw`, it would simply ignore the escape and print:\\n\\n`C:DocumentsProjects\\table.html`\\n\\nIn this case, the string is `Hello\\nworld`, which gets logged.","id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\nworld`","`Hello\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);","codeLanguage":"javascript","explanation":"An async function always returns a promise. The `await` still has to wait for the promise to resolve: a pending promise gets returned when we call `getData()` in order to set `data` equal to it.\\n\\nIf we wanted to get access to the resolved value `\\"I made it\\"`, we could have used the `.then()` method on `data`:\\n\\n`data.then(res => console.log(res))`\\n\\nThis would\'ve logged `\\"I made it!\\"`","id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>: \\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);","codeLanguage":"javascript","explanation":"The `.push()` method returns the _length_ of the new array! Previously, the array contained one element (the string `\\"banana\\"`) and had a length of `1`. After adding the string `\\"apple\\"` to the array, the array contains two elements, and has a length of `2`. This gets returned from the `addToList` function.\\n\\nThe `push` method modifies the original array. If you wanted to return the _array_ from the function rather than the _length of the array_, you should have returned `list` after pushing `item` to it.","id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n\\nconsole.log(shape);","codeLanguage":"javascript","explanation":"`Object.freeze` makes it impossible to add, remove, or modify properties of an object (unless the property\'s value is another object).\\n\\nWhen we create the variable `shape` and set it equal to the frozen object `box`, `shape` also refers to a frozen object. You can check whether an object is frozen by using `Object.isFrozen`. In this case, `Object.isFrozen(shape)` returns true, since the variable `shape` has a reference to a frozen object.\\n\\nSince `shape` is frozen, and since the value of `x` is not an object, we cannot modify the property `x`. `x` is still equal to `10`, \u0e41\u0e25\u0e30 `{ x: 10, y: 20 }` gets logged.","id":74,"options":["`{ x: 100, y: 20 }`","`{ x: 10, y: 20 }`","`{ x: 100 }`","`ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);","codeLanguage":"javascript","explanation":"When we unpack the property `name` from the object on the right-hand side, we assign its value `\\"Lydia\\"` to a variable with the name `myName`.\\n\\nWith `{ name: myName }`, we tell JavaScript that we want to create a new variable called `myName` with the value of the `name` property on the right-hand side.\\n\\nSince we try to log `name`, a variable that is not defined, a ReferenceError gets thrown.","id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"function sum(a, b) {\\n  return a + b;\\n}","codeLanguage":"javascript","explanation":"A pure function is a function that _always_ returns the same result, if the same arguments are passed.\\n\\nThe `sum` function always returns the same result. If we pass `1` \u0e41\u0e25\u0e30 `2`, it will _always_ return `3` without side effects. If we pass `5` \u0e41\u0e25\u0e30 `10`, it will _always_ return `15`, and so on. This is the definition of a pure function.","id":76,"options":["Yes","No"],"question":"\u0e19\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 pure function \u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48?"},{"answer":3,"code":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));","codeLanguage":"javascript","explanation":"The `add` function is a _memoized_ function. With memoization, we can cache the results of a function in order to speed up its execution. In this case, we create a `cache` object that stores the previously returned values.\\n\\nIf we call the `addFunction` function again with the same argument, it first checks whether it has already gotten that value in its cache. If that\'s the case, the caches value will be returned, which saves on execution time. Else, if it\'s not cached, it will calculate the value and store it afterwards.\\n\\nWe call the `addFunction` function three times with the same value: on the first invocation, the value of the function when `num` is equal to `10` isn\'t cached yet. The condition of the if-statement `num in cache` returns `false`, and the else block gets executed: `Calculated! 20` gets logged, and the value of the result gets added to the cache object. `cache` now looks like `{ 10: 20 }`.\\n\\nThe second time, the `cache` object contains the value that gets returned for `10`. The condition of the if-statement `num in cache` returns `true`, \u0e41\u0e25\u0e30 `\'From cache! 20\'` gets logged.\\n\\nThe third time, we pass `5 * 2` to the function which gets evaluated to `10`. The `cache` object contains the value that gets returned for `10`. The condition of the if-statement `num in cache` returns `true`, \u0e41\u0e25\u0e30 `\'From cache! 20\'` gets logged.","id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item)\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item)\\n}","codeLanguage":"javascript","explanation":"With a _for-in_ loop, we can iterate over **enumerable** properties. In an array, the enumerable properties are the \\"keys\\" of array elements, which are actually their indexes. You could see an array as:\\n\\n`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`\\n\\nWhere the keys are the enumerable properties. `0` `1` `2` `3` get logged.\\n\\nWith a _for-of_ loop, we can iterate over **iterables**. An array is an iterable. When we iterate over the array, the variable \\"item\\" is equal to the element it\'s currently iterating over, `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` get logged.","id":78,"options":["`0` `1` `2` `3` \u0e41\u0e25\u0e30 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \u0e41\u0e25\u0e30 `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` \u0e41\u0e25\u0e30 `0` `1` `2` `3`","`0` `1` `2` `3` \u0e41\u0e25\u0e30 `{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)","codeLanguage":"javascript","explanation":"Array elements can hold any value. Numbers, strings, objects, other arrays, null, boolean values, undefined, and other expressions such as dates, functions, and calculations.\\n\\nThe element will be equal to the returned value.  `1 + 2` returns `3`, `1 * 2` returns `2`, \u0e41\u0e25\u0e30 `1 / 2` returns `0.5`.","id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`","`[1, 1, 1]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())","codeLanguage":"javascript","explanation":"By default, arguments have the value of `undefined`, unless a value has been passed to the function. In this case, we didn\'t pass a value for the `name` argument. `name` is equal to `undefined` which gets logged.\\n\\nIn ES6, we can overwrite this default `undefined` value with default parameters. For example:\\n\\n`function sayHi(name = \\"Lydia\\") { ... }`\\n\\nIn this case, if we didn\'t pass a value or if we passed `undefined`, `name` would always be equal to the string `Lydia`","id":80,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`","`ReferenceError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)","codeLanguage":"javascript","explanation":"The value of the `this` keyword is dependent on where you use it. In a **method**, like the `getStatus` method, the `this` keyword refers to _the object that the method belongs to_. The method belongs to the `data` object, so `this` refers to the `data` object. When we log `this.status`, the `status` property on the `data` object gets logged, which is `\\"\ud83e\udd51\\"`.\\n\\nWith the `call` method, we can change the object to which the `this` keyword refers. In **functions**, the `this` keyword refers to the _the object that the function belongs to_. We declared the `setTimeout` function on the _global object_, so within the `setTimeout` function, the `this` keyword refers to the _global object_. On the global object, there is a variable called _status_ with the value of `\\"\ud83d\ude0e\\"`. When logging `this.status`, `\\"\ud83d\ude0e\\"` gets logged.","id":81,"options":["`\\"\ud83e\udd51\\"` \u0e41\u0e25\u0e30 `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` \u0e41\u0e25\u0e30 `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` \u0e41\u0e25\u0e30 `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` \u0e41\u0e25\u0e30 `\\"\ud83d\ude0e\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)","codeLanguage":"javascript","explanation":"We set the variable `city` equal to the value of the property called `city` on the `person` object. There is no property on this object called `city`, so the variable `city` has the value of `undefined`. \\n\\nNote that we are _not_ referencing the `person` object itself! We simply set the variable `city` equal to the current value of the `city` property on the `person` object.\\n\\nThen, we set `city` equal to the string `\\"Amsterdam\\"`. This doesn\'t change the person object: there is no reference to that object.\\n\\nWhen logging the `person` object, the unmodified object gets returned.","id":82,"options":["`{ name: \\"Lydia\\", age: 21 }`","`{ name: \\"Lydia\\", age: 21, city: \\"Amsterdam\\" }`","`{ name: \\"Lydia\\", age: 21, city: undefined }`","`\\"Amsterdam\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))","codeLanguage":"javascript","explanation":"Variables with the `const` \u0e41\u0e25\u0e30 `let` keyword are _block-scoped_. A block is anything between curly brackets (`{ }`). In this case, the curly brackets of the if/else statements. You cannot reference a variable outside of the block it\'s declared in, a ReferenceError gets thrown.","id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))","codeLanguage":"javascript","explanation":"The value of `res` in the second `.then` is equal to the returned value of the previous `.then`. You can keep chaining `.then`s like this, where the value is passed to the next handler.","id":84,"options":["The result of the `fetch` method.","The result of the second invocation of the `fetch` method.","The result of the callback in the previous `.then()`.","It would always be undefined."],"question":"\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e1a\u0e1a\u0e44\u0e2b\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e44\u0e14\u0e49\u0e43\u0e19 log?"},{"answer":0,"code":"function getName(name) {\\n  const hasName = //\\n}","codeLanguage":"javascript","explanation":"With `!!name`, we determine whether the value of `name` is truthy or falsy. If name is truthy, which we want to test for, `!name` returns `false`. `!false` (which is what `!!name` practically is) returns `true`.\\n\\nBy setting `hasName` equal to `name`, you set `hasName` equal to whatever value you passed to the `getName` function, not the boolean value `true`.\\n\\n`new Boolean(true)` returns an object wrapper, not the boolean value itself.\\n\\n`name.length` returns the length of the passed argument, not whether it\'s `true`.","id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"question":"\u0e02\u0e49\u0e2d\u0e44\u0e2b\u0e19\u0e04\u0e37\u0e2d\u0e27\u0e34\u0e18\u0e35\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e0b\u0e47\u0e15\u0e43\u0e2b\u0e49 `hasName` \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 `true` \u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e48\u0e07\u0e04\u0e48\u0e32 `true` \u0e43\u0e19 argument \u0e44\u0e14\u0e49?"},{"answer":1,"code":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)","codeLanguage":"javascript","explanation":"You can set a default parameter\'s value equal to another parameter of the function, as long as they\'ve been defined _before_ the default parameter. We pass the value `10` to the `sum` function. If the `sum` function only receives 1 argument, it means that the value for `num2` is not passed, and the value of `num1` is equal to the passed value `10` in this case. The default value of `num2` is the value of `num1`, which is `10`.  `num1 + num2` returns `20`.\\n\\nIf you\'re trying to set a default parameter\'s value equal to a parameter which is defined _after_ (to the right), the parameter\'s value hasn\'t been initialized yet, which will throw an error.","id":86,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)","codeLanguage":"javascript","explanation":"With the `import * as name` syntax, we import _all exports_ from the `module.js` file into the `index.js` file as a new object called `data` is created. In the `module.js` file, there are two exports: the default export, and a named export. The default export is a function which returns the string `\\"Hello World\\"`, and the named export is a variable called `name` which has the value of the string `\\"Lydia\\"`. \\n\\nThe `data` object has a `default` property for the default export, other properties have the names of the named exports and their corresponding values.","id":87,"options":["`{ default: function default(), name: \\"Lydia\\" }`","`{ default: function default() }`","`{ default: \\"Hello world\\", name: \\"Lydia\\" }`","Global object of `module.js`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)","codeLanguage":"javascript","explanation":"Classes are syntactical sugar for function constructors. The equivalent of the `Person` class as a function constructor would be:\\n\\n```javascript\\nfunction Person() {\\n  this.name = name\\n}\\n```\\n\\nCalling a function constructor with `new` results in the creation of an instance of `Person`, `typeof` keyword returns `\\"object\\"` for an instance. `typeof member` returns `\\"object\\"`.","id":88,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))","codeLanguage":"javascript","explanation":"The `.push` method returns the _new length_ of the array, not the array itself! By setting `newList` equal to `[1, 2, 3].push(4)`, we set `newList` equal to the new length of the array: `4`. \\n\\nThen, we try to use the `.push` method on `newList`. Since `newList` is the numerical value `4`, we cannot use the `.push` method: a TypeError is thrown.","id":89,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)","codeLanguage":"javascript","explanation":"Regular functions, such as the `giveLydiaPizza` function, have a `prototype` property, which is an object (prototype object) with a `constructor` property. Arrow functions however, such as the `giveLydiaChocolate` function, do not have this `prototype` property. `undefined` gets returned when trying to access the `prototype` property using `giveLydiaChocolate.prototype`.","id":90,"options":["`{ constructor: ...}` `{ constructor: ...}`","`{}` `{ constructor: ...}`","`{ constructor: ...}` `{}`","`{ constructor: ...}` `undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}","codeLanguage":"javascript","explanation":"`Object.entries(person)` returns an array of nested arrays, containing the keys and objects:\\n\\n`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]` \\n\\nUsing the `for-of` loop, we can iterate over each element in the array, the subarrays in this case. We can destructure the subarrays instantly in the for-of loop, using `const [x, y]`. `x` is equal to the first element in the subarray, `y` is equal to the second element in the subarray. \\n\\nThe first subarray is `[ \\"name\\", \\"Lydia\\" ]`, with `x` equal to `\\"name\\"`, \u0e41\u0e25\u0e30 `y` equal to `\\"Lydia\\"`, which get logged.\\nThe second subarray is `[ \\"age\\", 21 ]`, with `x` equal to `\\"age\\"`, \u0e41\u0e25\u0e30 `y` equal to `21`, which get logged.","id":91,"options":["`name` `Lydia` \u0e41\u0e25\u0e30 `age` `21`","`[\\"name\\", \\"Lydia\\"]` \u0e41\u0e25\u0e30 `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` \u0e41\u0e25\u0e30 `undefined`","`Error`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")","codeLanguage":"javascript","explanation":"`...args` is a rest parameter. The rest parameter\'s value is an array containing all remaining arguments, **and can only be the last parameter**! In this example, the rest parameter was the second parameter. This is not possible, and will throw a syntax error. \\n\\n```javascript\\nfunction getItems(fruitList, favoriteFruit, ...args) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n```\\n\\nThe above example works. This returns the array `[ \'banana\', \'apple\', \'orange\', \'pear\' ]`","id":92,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function nums(a, b) {\\n  if\\n  (a > b)\\n  console.log(\'a is bigger\')\\n  else \\n  console.log(\'b is bigger\')\\n  return \\n  a + b\\n}\\n\\nconsole.log(nums(4, 2))\\nconsole.log(nums(1, 2))","codeLanguage":"javascript","explanation":"In JavaScript, we don\'t _have_ to write the semicolon (`;`) explicitly, however the JavaScript engine still adds them after statements. This is called **Automatic Semicolon Insertion**. A statement can for example be variables, or keywords like `throw`, `return`, `break`, etc. \\n\\nHere, we wrote a `return` statement, and another value `a + b` on a _new line_. However, since it\'s a new line, the engine doesn\'t know that it\'s actually the value that we wanted to return. Instead, it automatically added a semicolon after `return`. You could see this as:\\n\\n```javascript\\n  return;\\n  a + b\\n```\\n\\nThis means that `a + b` is never reached, since a function stops running after the `return` keyword. If no value gets returned, like here, the function returns `undefined`. Note that there is no automatic insertion after `if/else` statements!","id":93,"options":["`a is bigger`, `6` \u0e41\u0e25\u0e30 `b is bigger`, `3`","`a is bigger`, `undefined` \u0e41\u0e25\u0e30 `b is bigger`, `undefined`","`undefined` \u0e41\u0e25\u0e30 `undefined`","`SyntaxError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)","codeLanguage":"javascript","explanation":"We can set classes equal to other classes/function constructors. In this case, we set `Person` equal to `AnotherPerson`. The name on this constructor is `Sarah`, so the name property on the new `Person` instance `member` is `\\"Sarah\\"`.","id":94,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Error: cannot redeclare Person`","`SyntaxError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))","codeLanguage":"javascript","explanation":"A Symbol is not _enumerable_. The Object.keys method returns all _enumerable_ key properties on an object. The Symbol won\'t be visible, and an empty array is returned. When logging the entire object, all properties will be visible, even non-enumerable ones.\\n\\nThis is one of the many qualities of a symbol: besides representing an entirely unique value (which prevents accidental name collision on objects, for example when working with 2 libraries that want to add properties to the same object), you can also \\"hide\\" properties on objects this way (although not entirely. You can still access symbols using the `Object.getOwnPropertySymbols()` method).","id":95,"options":["`{Symbol(\'a\'): \'b\'}` \u0e41\u0e25\u0e30 `[\\"{Symbol(\'a\')\\"]`","`{}` \u0e41\u0e25\u0e30 `[]`","`{ a: \\"b\\" }` \u0e41\u0e25\u0e30 `[\\"a\\"]`","`{Symbol(\'a\'): \'b\'}` \u0e41\u0e25\u0e30 `[]`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))","codeLanguage":"javascript","explanation":"The `getList` function receives an array as its argument. Between the parentheses of the `getList` function, we destructure this array right away. You could see this as:\\n\\n `[x, ...y] = [1, 2, 3, 4]`\\n\\n With the rest parameter `...y`, we put all \\"remaining\\" arguments in an array. The remaining arguments are `2`, `3` \u0e41\u0e25\u0e30 `4` in this case. The value of `y` is an array, containing all the rest parameters. The value of `x` is equal to `1` in this case, so when we log `[x, y]`, `[1, [2, 3, 4]]` gets logged.\\n\\n The `getUser` function receives an object. With arrow functions, we don\'t _have_ to write curly brackets if we just return one value. However, if you want to return an _object_ from an arrow function, you have to write it between parentheses, otherwise no value gets returned! The following function would have returned an object:\\n\\n```const getUser = user => ({ name: user.name, age: user.age })```\\n\\nSince no value gets returned in this case, the function returns `undefined`.","id":96,"options":["`[1, [2, 3, 4]]` \u0e41\u0e25\u0e30 `undefined`","`[1, [2, 3, 4]]` \u0e41\u0e25\u0e30 `{ name: \\"Lydia\\", age: 21 }`","`[1, 2, 3, 4]` \u0e41\u0e25\u0e30 `{ name: \\"Lydia\\", age: 21 }`","`Error` \u0e41\u0e25\u0e30 `{ name: \\"Lydia\\", age: 21 }`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const name = \\"Lydia\\"\\n\\nconsole.log(name())","codeLanguage":"javascript","explanation":"The variable `name` holds the value of a string, which is not a function, thus cannot invoke. \\n\\nTypeErrors get thrown when a value is not of the expected type. JavaScript expected `name` to be a function since we\'re trying to invoke it. It was a string however, so a TypeError gets thrown: name is not a function!\\n\\nSyntaxErrors get thrown when you\'ve written something that isn\'t valid JavaScript, for example when you\'ve written the word `return` as `retrun`. \\nReferenceErrors get thrown when JavaScript isn\'t able to find a reference to a value that you\'re trying to access.","id":97,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"// \ud83c\udf89\u2728 This is my 100th question! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`","codeLanguage":"javascript","explanation":"`[]` is a truthy value. With the `&&` operator, the right-hand value will be returned if the left-hand value is a truthy value. In this case, the left-hand value `[]` is a truthy value, so `\\"Im\'` gets returned.\\n\\n`\\"\\"` is a falsy value. If the left-hand value is falsy, nothing gets returned. `n\'t` doesn\'t get returned.","id":98,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)","codeLanguage":"javascript","explanation":"With the `||` operator, we can return the first truthy operand. If all values are falsy, the last operand gets returned.\\n\\n`(false || {} || null)`: the empty object `{}` is a truthy value. This is the first (and only) truthy value, which gets returned. `one` is equal to `{}`.\\n\\n`(null || false || \\"\\")`: all operands are falsy values. This means that the past operand, `\\"\\"` gets returned. `two` is equal to `\\"\\"`.\\n\\n`([] || 0 || \\"\\")`: the empty array`[]` is a truthy value. This is the first truthy value, which gets returned. `three` is equal to `[]`.","id":99,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const myPromise = () => Promise.resolve(\'I have resolved!\')\\n\\nfunction firstFunction() {\\n  myPromise().then(res => console.log(res))\\n  console.log(\'second\')\\n}\\n\\nasync function secondFunction() {\\n  console.log(await myPromise())\\n  console.log(\'second\')\\n}\\n\\nfirstFunction()\\nsecondFunction()","codeLanguage":"javascript","explanation":"With a promise, we basically say _I want to execute this function, but I\'ll put it aside for now while it\'s running since this might take a while. Only when a certain value is resolved (or rejected), and when the call stack is empty, I want to use this value._\\n\\nWe can get this value with both `.then` and the `await` keyword in an `async` function. Although we can get a promise\'s value with both `.then` \u0e41\u0e25\u0e30 `await`, they work a bit differently. \\n\\nIn the `firstFunction`, we (sort of) put the myPromise function aside while it was running, but continued running the other code, which is `console.log(\'second\')` in this case. Then, the function resolved with the string `I have resolved`, which then got logged after it saw that the callstack was empty. \\n\\nWith the await keyword in `secondFunction`, we literally pause the execution of an async function until the value has been resolved before moving to the next line.\\n\\nThis means that it waited for the `myPromise` to resolve with the value `I have resolved`, and only once that happened, we moved to the next line: `second` got logged.","id":100,"options":["`I have resolved!`, `second` \u0e41\u0e25\u0e30 `I have resolved!`, `second`","`second`, `I have resolved!` \u0e41\u0e25\u0e30 `second`, `I have resolved!`","`I have resolved!`, `second` \u0e41\u0e25\u0e30 `second`, `I have resolved!`","`second`, `I have resolved!` \u0e41\u0e25\u0e30 `I have resolved!`, `second`"],"question":"<a name=20190927></a>\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"const set = new Set()\\n\\nset.add(1)\\nset.add(\\"Lydia\\")\\nset.add({ name: \\"Lydia\\" })\\n\\nfor (let item of set) {\\n  console.log(item + 2)\\n}","codeLanguage":"javascript","explanation":"The `+` operator is not only used for adding numerica lvalues, but we can also use it to concatenate strings. Whenever the JavaScript engine sees that one or more values are not a number, it coerces the number into a string. \\n\\nThe first one is `1`, which is a numerical value. `1 + 2` returns the number 3.\\n\\nHowever, the second one is a string `\\"Lydia\\"`. `\\"Lydia\\"` is a string and `2` is a number: `2` gets coerced into a string. `\\"Lydia\\"` \u0e41\u0e25\u0e30 `\\"2\\"` get concatenated, whic hresults in the string `\\"Lydia2\\"`. \\n\\n`{ name: \\"Lydia\\" }` is an object. Neither a number nor an object is a string, so it stringifies both. Whenever we stringify a regular object, it becomes `\\"[object Object]\\"`. `\\"[object Object]\\"` concatenated with `\\"2\\"` becomes `\\"[object Object]2\\"`.","id":101,"options":["`3`, `NaN`, `NaN`","`3`, `7`, `NaN`","`3`, `Lydia2`, `[object Object]2`","`\\"12\\"`, `Lydia2`, `[object Object]2`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":2,"code":"Promise.resolve(5)","codeLanguage":"javascript","explanation":"We can pass any type of value we want to `Promise.resolve`, either a promise or a non-promise. The method itself returns a promise with the resolved value (`<fulfilled>`). If you pass a regular function, it\'ll be a resolved promise with a regular value. If you pass a promise, it\'ll be a resolved promise with the resolved value of that passed promise.\\n\\nIn this case, we just passed the numerical value `5`. It returns a resolved promise with the value `5`.","id":102,"options":["`5`","`Promise {<pending>: 5}`","`Promise {<fulfilled>: 5}`","`Error`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":1,"code":"function compareMembers(person1, person2 = person) {\\n  if (person1 !== person2) {\\n    console.log(\\"Not the same!\\")\\n  } else {\\n    console.log(\\"They are the same!\\")\\n  }\\n}\\n\\nconst person = { name: \\"Lydia\\" }\\n\\ncompareMembers(person)","codeLanguage":"javascript","explanation":"Objects are passed by reference. When we check objects for strict equality (`===`), we\'re comparing their references. \\n\\nWe set the default value for `person2` equal to the `person` object, and passed the `person` object as the value for `person1`.\\n\\nThis means that both values have a reference to the same spot in memory, thus they are equal.\\n\\nThe code block in the `else` statement gets run, and `They are the same!` gets logged.","id":103,"options":["`Not the same!`","`They are the same!`","`ReferenceError`","`SyntaxError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const colorConfig = {\\n  red: true,\\n  blue: false,\\n  green: true,\\n  black: true,\\n  yellow: false,\\n}\\n\\nconst colors = [\\"pink\\", \\"red\\", \\"blue\\"]\\n\\nconsole.log(colorConfig.colors[1])","codeLanguage":"javascript","explanation":"In JavaScript, we have two ways to access properties on an object: bracket notation, or dot notation. In this example, we use dot notation (`colorConfig.colors`) instead of bracket notation (`colorConfig[\\"colors\\"]`). \\n\\nWith dot notation, JavaScript tries to find the property on the object with that exact name. In this example, JavaScript tries to find a property called `colors` on the `colorConfig` object. There is no proprety called `colorConfig`, so this returns `undefined`. Then, we try to access the value of the first element by using `[1]`. We cannot do this on a value that\'s `undefined`, so it throws a `TypeError`: `Cannot read property \'1\' of undefined`.\\n\\nJavaScript interprets (or unboxes) statements. When we use bracket notation, it sees the first opening bracket `[` and keeps going until it finds the closing bracket `]`. Only then, it will evaluate the statement. If we would\'ve used `colorConfig[colors[1]]`, it would have returned the value of the `red` property on the `colorConfig` object.","id":104,"options":["`true`","`false`","`undefined`","`TypeError`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":0,"code":"console.log(\'\u2764\ufe0f\' === \'\u2764\ufe0f\')","codeLanguage":"javascript","explanation":"Under the hood, emojis are unicodes. The unicodes for the heart emoji is `\\"U+2764 U+FE0F\\"`. These are always the same for the same emojis, so we\'re comparing two equal strings to each other, which returns true.","id":105,"options":["`true`","`false`"],"question":"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?"},{"answer":3,"code":"const emojis = [\'\u2728\', \'\ud83e\udd51\', \'\ud83d\ude0d\']\\n\\nemojis.map(x => x + \'\u2728\')\\nemojis.filter(x => x !== \'\ud83e\udd51\')\\nemojis.find(x => x !== \'\ud83e\udd51\')\\nemojis.reduce((acc, cur) => acc + \'\u2728\')\\nemojis.slice(1, 2, \'\u2728\') \\nemojis.splice(1, 2, \'\u2728\')","codeLanguage":"javascript","explanation":"With `splice` method, we modify the original array by deleting, replacing or adding elements. In this case, we removed 2 items from index 1 (we removed `\'\ud83e\udd51\'` \u0e41\u0e25\u0e30 `\'\ud83d\ude0d\'`) and added the \u2728 emoji instead. \\n\\n`map`, `filter` \u0e41\u0e25\u0e30 `slice` return a new array, `find` returns an element, and `reduce` returns a reduced value.","id":106,"options":["`All of them`","`map` `reduce` `slice` `splice`","`map` `slice` `splice`","`splice`"],"question":"Which of these methods modifies the original array?"}],"locale":"th-TH"}]')},289:function(e,n,a){"use strict";a.r(n);var t,o=a(5),i=a(4),r=a.n(i),s=a(57),l=a.n(s),d=(a(131),a(8)),u=a(26),c=a(24),g=a(35),m=a(28),p=a(18),h=a(124),b=a(118),f=function e(n){var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(a)return n.split(" ").map((function(n){return e(n)})).join(" ");var t=Object(b.a)(n),o=t[0],i=t.slice(1);return"".concat(o.toUpperCase()).concat(i.join(""))},v=a(14),y=function(){return{locale:"en-EN",theme:window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}},w=Object(m.b)({initialState:y(),name:"global",reducers:{restoreInitialState:function(){return y()},setLocale:function(e,n){var a=n.payload;v.map((function(e){return e.locale})).includes(a)?e.locale=a:e.locale=y().locale},switchTheme:function(e){e.theme="dark"===e.theme?"light":"dark"}}}),j=w.actions,k=w.reducer,x=w.name,L=a(15),q=a(81),S=a.n(q),z=function(e){var n=v.find((function(n){return n.locale===e.sessionDetails.locale})).list.length,a=[].concat(Object(u.a)(e.results.map((function(e){return e.id}))),Object(u.a)(e.history.filter((function(a,t){var o=a.sessionDetails;return t<Math.floor(.6*n)&&o.name===e.sessionDetails.name&&o.locale===e.sessionDetails.locale})).reduce((function(e,n){return[].concat(Object(u.a)(e),Object(u.a)(n.results.map((function(e){return e.id}))))}),[])));return function(e,n,a){var t=Math.floor(Math.random()*(n-e+1)+e);if("undefined"===typeof a||a instanceof Array&&!a.length)return t;if("number"===typeof a){for(;t===a;)t=Math.floor(Math.random()*(n-e+1)+e);return t}if(a instanceof Array&&"number"===typeof a[0]){for(;-1!==a.indexOf(t);)t=Math.floor(Math.random()*(n-e+1)+e);return t}throw new Error("Invalid operation:\n\n".concat(JSON.stringify({min:e,max:n,ignore:a},void 0,2)))}(0,n,a)},N=Object(m.b)({initialState:{currentStart:null,questionsId:[],questionIx:0,results:[],sessionDetails:{finished:null,isActive:!1,locale:"en-EN",name:"",started:null},history:[]},name:"questions",reducers:{start:{prepare:function(e,n){return{payload:[n,e]}},reducer:function(e,n){var a=Object(c.a)(n.payload,2),t=a[0],o=a[1],i=(new Date).toISOString();e.sessionDetails={finished:null,isActive:!0,locale:o,name:t,started:i};var r=z(e);e.currentStart=i,e.questionsId=[r],e.questionIx=0}},answer:function(e,n){var a=n.payload;if(10===e.results.length)return e;10===e.questionsId.length&&(e.sessionDetails.isActive=!1);var t={finished:(new Date).toISOString(),id:e.questionsId[e.questionIx],right:v.find((function(n){return n.locale===e.sessionDetails.locale})).list.find((function(n){return n.id===e.questionsId[e.questionIx]})).answer,selected:a,started:e.currentStart};e.currentStart=null;var o=e.results.length?S()("".concat(e.results[e.results.length-1].hash).concat(JSON.stringify(t))):S()(JSON.stringify(t));e.results.push(Object(L.a)(Object(L.a)({},t),{},{hash:o})),10===e.results.length&&(e.sessionDetails.finished=(new Date).toISOString(),e.sessionDetails.isActive=!1,e.history.push({results:e.results,sessionDetails:{finished:e.sessionDetails.finished,locale:e.sessionDetails.locale,name:e.sessionDetails.name,started:e.sessionDetails.started}}))},goNextQuestion:function(e){if(e.questionIx===e.results.length||10===e.questionIx)return e;var n=e.questionIx===e.questionsId.length-1,a=10===e.questionsId.length;if(n&&!a){var t=z(e);e.currentStart=(new Date).toISOString(),e.questionsId.push(t)}e.questionIx+=1},goPrevQuestion:function(e){if(0===e.questionIx)return e;e.questionIx-=1},goNQuestion:function(e,n){var a=n.payload;if(a<0||a>10||a>e.questionsId.length)return e;e.questionIx=a},newChallenge:function(e){var n={currentStart:null,questionsId:[],questionIx:0,results:[],sessionDetails:{finished:null,isActive:!1,locale:"en-EN",name:"",started:null},history:[]};return Object(L.a)(Object(L.a)({},n),{},{history:e.history,sessionDetails:Object(L.a)(Object(L.a)({},n.sessionDetails),{},{locale:e.sessionDetails.locale,name:e.sessionDetails.name})})},setCurrentQuestionId:function(e,n){n.payload;return e},restartTimer:function(e){return e}}}),_=N.actions,T=N.reducer,P=N.name,O=a(22),E=function(e){return e.questions},I=Object(O.a)(E,(function(e){return e.sessionDetails})),W=Object(O.a)(I,(function(e){return e.name})),C=Object(O.a)(E,(function(e){var n=e.questionIx,a=e.questionsId,t=e.results,o=e.sessionDetails.locale;if(!a.length||10===n)return{options:[],question:""};var i=v.find((function(e){return e.locale===o})),r=a[n],s=i.list.find((function(e){return e.id===r})),l=s.explanation,d=s.options,u=s.question,c=s.code,g=s.codeLanguage;return t[n]?{code:c,codeLanguage:g,explanation:l,options:d,question:u,result:t[n]}:{code:c,codeLanguage:g,options:d,question:u}})),H=Object(O.a)(E,(function(e){var n=e.questionsId;return!e.sessionDetails.isActive&&!n.length})),A=Object(O.a)(E,(function(e){return 10===e.questionIx})),F=(Object(O.a)(E,(function(e){return e.sessionDetails.isActive})),Object(O.a)(E,(function(e){return e.currentStart}))),J=Object(O.a)(E,(function(e){return e.questionIx<e.results.length})),D=Object(O.a)(E,(function(e){return e.questionIx>0})),M=(Object(O.a)(E,(function(e){return 10===e.questionIx})),Object(O.a)(E,(function(e){return e.results}))),R=Object(O.a)(E,(function(e){return e.questionIx})),B=Object(O.a)(E,(function(e){var n=e.questionIx;return!e.results[n+1]})),Y=Object(O.a)(E,(function(e){return 9===e.questionIx})),V=Object(O.a)(E,(function(e){var n=e.history,a=e.sessionDetails;return n.filter((function(e){return e.sessionDetails.name===a.name}))})),U="storeKeeper",$=(t={},Object(g.a)(t,x,k),Object(g.a)(t,P,T),t),K=function(){var e=Object(h.a)(),n=function(){var e;try{e=JSON.parse(localStorage.getItem(U)||"{}")}catch(a){var n;n={},Object(g.a)(n,x,y()),Object(g.a)(n,P,{currentStart:null,questionsId:[],questionIx:0,results:[],sessionDetails:{finished:null,isActive:!1,locale:"en-EN",name:"",started:null},history:[]}),e=n}return[e,function(e){return function(n){return function(a){var t=n(a);return localStorage.setItem(U,JSON.stringify(e.getState())),t}}}]}(),a=Object(c.a)(n,2),t=a[0],o=a[1];return Object(m.a)({reducer:Object(p.c)($),devTools:!1,middleware:[].concat(Object(u.a)(Object(m.c)()),[e,o]),preloadedState:t})},Q={fonts:{code:"'Cascadia Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",common:"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif"}},G={light:Object(L.a)(Object(L.a)({},Q),{},{colors:{background:"white",buttonBackground:"#0089fa",buttonColor:"#f9f9f9",buttonDisabledBackground:"#4e5860",codeBackground:"#282c34",codeSelected:"#677696",inlineCodeBackground:"#DDDDDD",inlineCodeColor:"#ea7659",optionActiveColor:"#f8b500",optionBackground:"#5c636e",optionRight:"#a1c45a",optionWrong:"#fd0054",text:"#21252b"}}),dark:Object(L.a)(Object(L.a)({},Q),{},{colors:{background:"#21252b",buttonBackground:"#3282b8",buttonColor:"#f9f9f9",buttonDisabledBackground:"#6b778d",codeBackground:"#282c34",codeSelected:"#677696",inlineCodeBackground:"#393e46",inlineCodeColor:"#f8b500",optionActiveColor:"#ea7659",optionBackground:"#5c636e",optionRight:"#a1c45a",optionWrong:"#e36161",text:"#bdc3c7"}})},Z=function(e){return e.global},X=Object(O.a)(Z,(function(e){return e.locale})),ee=Object(O.a)(Z,(function(e){var n=e.locale;return v.find((function(e){return e.locale===n})).isRTL})),ne=Object(O.a)(Z,(function(e){return e.theme})),ae=Object(O.a)(ne,(function(e){return G[e]})),te=function(e){var n=e.children,a=i.useMemo((function(){return K()}),[]);return Object(o.jsx)(d.a,{store:a,children:n})},oe=a(6),ie=a(7),re=a(43),se=a.n(re),le=a(62),de=a.n(le);function ue(){var e=Object(ie.a)(["\n  /**\n  * prism.js default theme for JavaScript, CSS and HTML\n  * Based on dabblet (http://dabblet.com)\n  * @author Lea Verou\n  */\n  code[class*='language-'],\n  pre[class*='language-'] {\n    color: #abb2bf;\n    background: none;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    -moz-tab-size: 2;\n    -o-tab-size: 2;\n    tab-size: 2;\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n  }\n\n  pre[class*='language-']::-moz-selection,\n  pre[class*='language-'] ::-moz-selection,\n  code[class*='language-']::-moz-selection,\n  code[class*='language-'] ::-moz-selection {\n    text-shadow: none;\n    background: #383e49;\n  }\n\n  pre[class*='language-']::selection,\n  pre[class*='language-'] ::selection,\n  code[class*='language-']::selection,\n  code[class*='language-'] ::selection {\n    text-shadow: none;\n    background: #9aa2b1;\n  }\n\n  @media print {\n    code[class*='language-'],\n    pre[class*='language-'] {\n      text-shadow: none;\n    }\n  }\n  /* Code blocks */\n  pre[class*='language-'] {\n    padding: 1em;\n    margin: 0.5em 0;\n    overflow: auto;\n  }\n\n  :not(pre) > code[class*='language-'],\n  pre[class*='language-'] {\n    background: #282c34;\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*='language-'] {\n    padding: 0.1em;\n    border-radius: 0.3em;\n    white-space: normal;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #5c6370;\n  }\n\n  .token.punctuation {\n    color: #abb2bf;\n  }\n\n  .token.selector,\n  .token.tag {\n    color: #e06c75;\n  }\n\n  .token.property,\n  .token.boolean,\n  .token.number,\n  .token.constant,\n  .token.symbol,\n  .token.attr-name,\n  .token.deleted {\n    color: #d19a66;\n  }\n\n  .token.string,\n  .token.char,\n  .token.attr-value,\n  .token.builtin,\n  .token.inserted {\n    color: #98c379;\n  }\n\n  .token.operator,\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    color: #56b6c2;\n  }\n\n  .token.atrule,\n  .token.keyword {\n    color: #c678dd;\n  }\n\n  .token.function {\n    color: #61afef;\n  }\n\n  .token.regex,\n  .token.important,\n  .token.variable {\n    color: #c678dd;\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  .token.parameter {\n    color: #e06c75;\n  }\n\n  pre.line-numbers {\n    position: relative;\n    padding-left: 3.8em;\n    counter-reset: linenumber;\n  }\n\n  pre.line-numbers > code {\n    position: relative;\n  }\n\n  .line-numbers .line-numbers-rows {\n    position: absolute;\n    pointer-events: none;\n    top: 0;\n    font-size: 100%;\n    left: -3.8em;\n    width: 3em; /* works for line-numbers below 1000 lines */\n    letter-spacing: -1px;\n    border-right: 0;\n\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .line-numbers-rows > span {\n    pointer-events: none;\n    display: block;\n    counter-increment: linenumber;\n  }\n\n  .line-numbers-rows > span:before {\n    content: counter(linenumber);\n    color: #5c6370;\n    display: block;\n    padding-right: 0.8em;\n    text-align: right;\n  }\n"]);return ue=function(){return e},e}var ce=Object(oe.c)(ue());function ge(){var e=Object(ie.a)(["\n    color: #e5c07b;\n    font-family: ",";\n    white-space: pre-wrap;\n    ","\n    background-color: ",";\n    border-radius: 1rem;\n    box-sizing: border-box;\n    direction: ltr;\n    font-size: 0.9rem;\n    padding: 1.25rem 2rem;\n    line-height: 1.3rem;\n    width: 600px;\n\n    &::selection,\n    & *::selection {\n      background-color: ",";\n    }\n\n    @media screen and (max-width: 600px) {\n      border-radius: 0;\n    }\n\n    & * {\n      color: #bdc3c7;\n      direction: ltr;\n      font-family: ",";\n    }\n  "]);return ge=function(){return e},e}function me(){var e=Object(ie.a)(["\n  ","\n"]);return me=function(){return e},e}function pe(){var e=Object(ie.a)(["\n  display: flex;\n  justify-content: center;\n  margin: 3rem 0;\n  overflow-x: auto;\n  width: 100%;\n\n  @media screen and (max-width: 600px) {\n    justify-content: flex-start;\n  }\n"]);return pe=function(){return e},e}var he=oe.d.div(pe()),be=oe.d.div(me(),(function(e){var n=e.theme,a=n.colors,t=n.fonts;return Object(oe.c)(ge(),t.code,ce,a.codeBackground,"".concat(a.codeSelected,"60"),t.code)}));function fe(e){var n=e.code,a=e.language,t=void 0===a?"javascript":a,r=se.a.highlight(n,se.a.languages[t],t);return i.useEffect((function(){var e=function(e){var a,t,o=null===(a=document)||void 0===a||null===(t=a.getSelection())||void 0===t?void 0:t.toString(),i=e.clipboardData;(null===o||void 0===o?void 0:o.includes(n))?(null===i||void 0===i||i.setData("text/plain","Don't be a cheater"),null===i||void 0===i||i.setData("text/html","Don't be a cheater")):(null===i||void 0===i||i.setData("text/plain",o||""),null===i||void 0===i||i.setData("text/html",o||"")),e.preventDefault()};return document.addEventListener("copy",e),function(){document.removeEventListener("copy",e)}}),[n]),Object(o.jsx)(he,{children:Object(o.jsx)(be,{dangerouslySetInnerHTML:{__html:de.a.sanitize(r)}})})}function ve(){var e=Object(ie.a)(["\n    background-color: ",";\n    border-radius: 0.2rem;\n    color: ",";\n    font-family: ",";\n    font-size: 80%;\n    font-weight: bold;\n    padding: 0.3rem 0.5rem;\n    white-space: nowrap;\n  "]);return ve=function(){return e},e}function ye(){var e=Object(ie.a)(["\n  ","\n"]);return ye=function(){return e},e}var we=Object(oe.c)(ye(),(function(e){var n=e.theme,a=n.colors,t=n.fonts;return Object(oe.c)(ve(),a.inlineCodeBackground,a.inlineCodeColor,t.code)})),je=a(38),ke=a.n(je),xe=a(39),Le=a.n(xe),qe={"ar-EG":{congratulations:"\u062a\u0647\u0627\u0646\u064a\u0646\u0627",day:"\u064a\u0648\u0645",days:"\u0623\u064a\u0627\u0645",explanation:"\u062a\u0641\u0633\u064a\u0631",name:"\u0627\u0633\u0645",new:"\u062c\u062f\u064a\u062f",next:"\u0627\u0644\u062a\u0627\u0644\u0649",previous:"\u0627\u0644\u0633\u0627\u0628\u0642",previosresults:"\u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0627\u0644\u0633\u0627\u0628\u0642\u0629",results:"\u0627\u0644\u0646\u062a\u0627\u0626\u062c",start:"\u0628\u062f\u0627\u064a\u0629",welcome:"\u0623\u0647\u0644\u0627 \u0628\u0643",youreawesome:"\u0627\u0646\u062a \u0631\u0627\u0626\u0639"},"bs-BS":{congratulations:"\u010destitke",day:"dan",days:"dani",explanation:"obja\u0161njenje",name:"ime",new:"novo",next:"sljede\u0107i",previous:"prethodna",previosresults:"prethodnih rezultata",results:"rezultati",start:"start",welcome:"dobrodo\u0161li",youreawesome:"ti si neverovatan"},"de-DE":{congratulations:"herzliche gl\xfcckw\xfcnsche",day:"tag",days:"tage",explanation:"erl\xe4uterung",name:"name",new:"neu",next:"n\xe4chster",previous:"bisherige",previosresults:"vorherige ergebnisse",results:"ergebnisse",start:"start",welcome:"herzlich willkommen",youreawesome:"du bist unglaublich"},"en-EN":{congratulations:"congratulations",day:"day",days:"days",explanation:"explanation",name:"name",new:"new",next:"next",previous:"previous",previosresults:"previous results",results:"results",start:"start",welcome:"welcome",youreawesome:"you are incredible"},"es-ES":{congratulations:"felicidades",day:"d\xeda",days:"dias",explanation:"explicaci\xf3n",name:"nombre",new:"nuevo",next:"siguiente",previous:"anterior",previosresults:"resultados anteriores",results:"resultados",start:"comenzar",welcome:"bienvenido",youreawesome:"eres incre\xedble"},"fr-FR":{congratulations:"toutes nos f\xe9licitations",day:"journ\xe9e",days:"journ\xe9es",explanation:"explication",name:"nom",new:"nouveau",next:"prochain",previous:"pr\xe9c\xe9dent",previosresults:"r\xe9sultats pr\xe9c\xe9dents",results:"r\xe9sultats",start:"d\xe9but",welcome:"bienvenue",youreawesome:"vous \xeates incroyable"},"id-ID":{congratulations:"selamat",day:"hari",days:"hari-hari",explanation:"penjelasan",name:"nama",new:"baru",next:"lanjut",previous:"sebelumnya",previosresults:"hasil sebelumnya",results:"hasil",start:"mulailah",welcome:"selamat datang",youreawesome:"kamu luar biasa"},"ja-JA":{congratulations:"\u304a\u3081\u3067\u3068\u3046",day:"\u65e5",days:"\u65e5\u3005",explanation:"\u8aac\u660e",name:"\u540d\u524d",new:"\u65b0\u7740",next:"\u6b21",previous:"\u524d",previosresults:"\u4ee5\u524d\u306e\u7d50\u679c",results:"\u7d50\u679c",start:"\u958b\u59cb",welcome:"\u3088\u3046\u3053\u305d",youreawesome:"\u3042\u306a\u305f\u306f\u7d20\u6674\u3089\u3057\u3044"},"ko-KR":{congratulations:"\ucd95\ud558\ud569\ub2c8\ub2e4",day:"\uc77c",days:"\uc77c",explanation:"\uc124\uba85",name:"\uc774\ub984",new:"\uc0c8\ub85c\uc6b4",next:"\ub2e4\uc74c",previous:"\uc774\uc804",previosresults:"\uc774\uc804 \uacb0\uacfc",results:"\uacb0\uacfc",start:"\uc2a4\ud0c0\ud2b8",welcome:"\uc5b4\uc11c \uc624\uc2ed\uc2dc\uc624",youreawesome:"\ub2f9\uc2e0\uc740 \ubbff\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4"},"nl-NL":{congratulations:"gefeliciteerd",day:"dag",days:"dagen",explanation:"uitleg",name:"naam",new:"nieuw",next:"de volgende",previous:"voorgaand",previosresults:"eerdere resultaten",results:"uitslagen",start:"begin",welcome:"welkom",youreawesome:"je bent geweldig"},"pt-BR":{congratulations:"parab\xe9ns",day:"dia",days:"dias",explanation:"explica\xe7\xe3o",name:"nome",new:"novo",next:"pr\xf3ximo",previous:"anterior",previosresults:"resultados anteriores",results:"resultados",start:"come\xe7ar",welcome:"bem-vinda",youreawesome:"voc\xea \xe9 incr\xedvel"},"ru-RU":{congratulations:"\u043f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e",day:"\u0434\u0435\u043d\u044c",days:"\u0434\u043d\u0435\u0439",explanation:"\u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435",name:"\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435",new:"\u043d\u043e\u0432\u044b\u0439",next:"\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439",previous:"\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439",previosresults:"\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b",results:"\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b",start:"\u043d\u0430\u0447\u0430\u043b\u043e",welcome:"\u0434\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c",youreawesome:"\u0442\u044b \u043f\u043e\u0442\u0440\u044f\u0441\u0430\u044e\u0449\u0430\u044f"},"th-TH":{congratulations:"\u0e02\u0e2d\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e27\u0e32\u0e21\u0e22\u0e34\u0e19\u0e14\u0e35",day:"\u0e27\u0e31\u0e19",days:"\u0e27\u0e31\u0e19",explanation:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",name:"\u0e0a\u0e37\u0e48\u0e2d",new:"\u0e43\u0e2b\u0e21\u0e48",next:"\u0e15\u0e48\u0e2d\u0e44\u0e1b",previous:"\u0e01\u0e48\u0e2d\u0e19",previosresults:"\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e04\u0e49\u0e19\u0e2b\u0e32\u0e01\u0e48\u0e2d\u0e19",results:"\u0e1c\u0e25",start:"\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19",welcome:"\u0e22\u0e34\u0e19\u0e14\u0e35\u0e15\u0e49\u0e2d\u0e19\u0e23\u0e31\u0e1a",youreawesome:"\u0e04\u0e38\u0e13\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e17\u0e36\u0e48\u0e07"},"tr-TR":{congratulations:"tebrikler",day:"g\xfcn",days:"g\xfcnler",explanation:"a\xe7\u0131klama",name:"isim",new:"yeni",next:"sonraki",previous:"\xf6nceki",previosresults:"\xf6nceki sonu\xe7lar",results:"sonu\xe7lar",start:"ba\u015flat",welcome:"ho\u015fgeldiniz",youreawesome:"e\u011fer inan\u0131lmaz"},"ua-UA":{congratulations:"\u0432\u0456\u0442\u0430\u044e",day:"\u0434\u0435\u043d\u044c",days:"\u0434\u043d\u0456\u0432",explanation:"\u043f\u043e\u044f\u0441\u043d\u0435\u043d\u043d\u044f",name:"\u0456\u043c'\u044f",new:"\u043d\u043e\u0432\u0438\u0439",next:"\u043d\u0430\u0441\u0442\u0443\u043f\u043d\u043e\u0433\u043e",previous:"\u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0456\u0439",previosresults:"\u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438",results:"\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438",start:"\u043f\u043e\u0447\u0430\u0442\u043e\u043a",welcome:"\u043b\u0430\u0441\u043a\u0430\u0432\u043e \u043f\u0440\u043e\u0441\u0438\u043c\u043e",youreawesome:"\u0442\u0438 \u043d\u0435\u0439\u043c\u043e\u0432\u0456\u0440\u043d\u0438\u0439"},"vi-VI":{congratulations:"xin ch\xfac m\u1eebng",day:"ng\xe0y",days:"ng\xe0y",explanation:"gi\u1ea3i tr\xecnh",name:"t\xean",new:"m\u1edbi",next:"k\u1ebf ti\u1ebfp",previous:"tr\u01b0\u1edbc",previosresults:"k\u1ebft qu\u1ea3 tr\u01b0\u1edbc \u0111\xf3",results:"c\xe1c k\u1ebft qu\u1ea3",start:"kh\u1edfi \u0111\u1ea7u",welcome:"hoan ngh\xeanh",youreawesome:"b\u1ea1n th\u1eadt phi th\u01b0\u1eddng"},"zh-CN":{congratulations:"\u795d\u8d3a",day:"\u5929",days:"\u5929",explanation:"\u8bf4\u660e",name:"\u540d\u79f0",new:"\u65b0",next:"\u4e0b\u4e00\u4e2a",previous:"\u4ee5\u524d",previosresults:"\u4ee5\u524d\u7684\u7ed3\u679c",results:"\u7ed3\u679c",start:"\u5f00\u59cb",welcome:"\u6b22\u8fce",youreawesome:"\u4f60\u592a\u4e0d\u53ef\u601d\u8bae\u4e86"},"zh-TW":{congratulations:"\u795d\u8cc0",day:"\u5929",days:"\u5929",explanation:"\u8aaa\u660e",name:"\u540d\u7a31",new:"\u65b0",next:"\u4e0b\u4e00\u500b",previous:"\u4ee5\u524d",previosresults:"\u4ee5\u524d\u7684\u7d50\u679c",results:"\u7d50\u679c",start:"\u958b\u59cb",welcome:"\u6b61\u8fce",youreawesome:"\u4f60\u592a\u4e0d\u53ef\u601d\u8b70\u4e86"}},Se=function(){var e=v.map((function(e){return e.locale})).sort(),n=Object.keys(qe),a=[];return e.forEach((function(e){n.includes(e)||a.push(e)})),a.length&&console.warn("Missing locales: ",a),qe}();function ze(){var e=Object(ie.a)(["\n  margin-bottom: 1rem;\n  width: 100%;\n"]);return ze=function(){return e},e}function Ne(){var e=Object(ie.a)(["\n    color: ",";\n    display: flex;\n    font-size: 1.2rem;\n    justify-content: center;\n    line-height: 2.2rem;\n    margin-top: 3rem;\n    overflow-x: auto;\n    width: 100%;\n\n    & > div {\n      & > h3 {\n        margin: 0 0 2rem;\n        text-align: center;\n        text-transform: capitalize;\n      }\n\n      align-items: stretch;\n      display: flex;\n      flex-flow: column nowrap;\n      max-width: 900px;\n      width: 90%;\n\n      & p {\n        margin: 0;\n        margin-bottom: 1rem;\n        direction: ",";\n      }\n\n      & img {\n        align-self: center;\n        margin-bottom: 1rem;\n      }\n    }\n\n    code {\n      ","\n    }\n  "]);return Ne=function(){return e},e}function _e(){var e=Object(ie.a)(["\n  ","\n"]);return _e=function(){return e},e}var Te=oe.d.div(_e(),(function(e){var n=e.isRTL,a=e.theme.colors;return Object(oe.c)(Ne(),a.text,n?"rtl":"ltr",we)})),Pe=Object(oe.d)(be)(ze()),Oe=function(e){var n=[];return e.split(/(```[a-z]*)([\s\S]*?)(```)/g).map((function(e){return e.trim()})).forEach((function(e,a,t){if(/^```[a-z]*/.test(e)||!e||"```"===e);else if(0!==a&&!/^```[a-z]*/.test(e)&&"```"!==t[a-1]&&/^```[a-z]*/.test(t[a-1]))try{var i=t[a-1].replace("```",""),r=se.a.highlight(e,se.a.languages[i],i);n.push(Object(o.jsx)(Pe,{dangerouslySetInnerHTML:{__html:de.a.sanitize(r)}},a))}catch(s){n.push(Object(o.jsx)(ke.a,{plugins:[Le.a],allowDangerousHtml:!0,children:e},a))}else e&&n.push(Object(o.jsx)(ke.a,{plugins:[Le.a],allowDangerousHtml:!0,children:e},a))})),n};function Ee(){var e,n=Object(d.c)(C),a=Object(d.c)(ee),t=Object(d.c)(X),r=Object(d.c)(B),s=i.useRef(null);return i.useEffect((function(){var e=s.current;n.explanation&&e&&r&&setTimeout((function(){e.scrollIntoView({behavior:"smooth",block:"start"})}),1e3)}),[n.explanation,s,r]),Object(o.jsx)(Te,{isRTL:a,ref:s,children:n.explanation?Object(o.jsxs)("div",{children:[Object(o.jsx)("h3",{children:null===(e=Se[t])||void 0===e?void 0:e.explanation}),Oe(n.explanation)]}):null})}function Ie(){var e=Object(ie.a)(["\n    * {\n      color: ",";\n      box-sizing: border-box;\n      font-family: ",";\n      direction: ",";\n    }\n\n    body,\n    html {\n      background-color: ",";\n      margin: 0;\n      padding: 0;\n    }\n  "]);return Ie=function(){return e},e}function We(){var e=Object(ie.a)(["\n  ","\n"]);return We=function(){return e},e}var Ce=Object(oe.b)(We(),(function(e){var n=e.isRTL,a=e.theme,t=a.colors,o=a.fonts;return Object(oe.c)(Ie(),t.text,o.common,n?"rtl":"ltr",t.background)}));function He(){var e=Object(ie.a)(["\n  font-size: 2rem;\n  margin: 0 0 3rem;\n  padding: 0 10%;\n  line-height: 4rem;\n  text-align: center;\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  & code {\n    ",";\n  }\n"]);return He=function(){return e},e}var Ae=oe.d.h1(He(),we);function Fe(e){var n=e.children;return Object(o.jsx)(Ae,{children:Object(o.jsx)(ke.a,{plugins:[Le.a],children:n instanceof Array?n.join(""):n})})}function Je(){var e=Object(ie.a)(["\n      border: 1px solid ",";\n      &::before {\n        background-color: ",";\n        color: #323643;\n      }\n    "]);return Je=function(){return e},e}function De(){var e=Object(ie.a)(["\n      border: 1px solid ",";\n      &::before {\n        background-color: ",";\n      }\n    "]);return De=function(){return e},e}function Me(){var e=Object(ie.a)(["\n      &:disabled {\n        opacity: 1;\n      }\n    "]);return Me=function(){return e},e}function Re(){var e=Object(ie.a)(["\n    background: transparent;\n    border: 1px solid ",";\n    border-radius: ",";\n    font-size: 1.1rem;\n    line-height: 1.8rem;\n    margin: ",";\n    max-width: calc(95vw - 5rem);\n    min-height: 3rem;\n    min-width: 600px;\n    padding: 0.5rem 2.25rem;\n    position: relative;\n    text-align: center;\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    @media only screen and (max-width: 720px) {\n      min-width: 60vw;\n    }\n\n    &:hover {\n      cursor: pointer;\n\n      &::before {\n        color: ",";\n      }\n    }\n\n    & p {\n      margin: 0;\n    }\n\n    & code {\n      ","\n      white-space: normal;\n    }\n\n    &::after {\n      content: '","';\n      display: ",";\n      color: ",";\n      font-size: 2rem;\n      position: absolute;\n      ",": .5rem;\n      top: calc(50% - 1rem);\n    }\n\n    &::before {\n      align-items: center;\n      background-color: ",";\n      border-radius: ",";\n      box-sizing: border-box;\n      color: white;\n      content: '",":';\n      display: flex;\n      font-family: ",";\n      height: calc(100% + 0.1rem);\n      justify-content: center;\n      position: absolute;\n      ",": -3rem;\n      width: 3rem;\n      text-align: center;\n      top: -0.05rem;\n      transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 0.5;\n\n      &:hover {\n        &::before {\n          color: white;\n        }\n      }\n    }\n\n    ","\n\n    ","\n\n    ","\n\n    &:focus {\n      outline: none;\n    }\n  "]);return Re=function(){return e},e}function Be(){var e=Object(ie.a)(["\n  ","\n"]);return Be=function(){return e},e}function Ye(){var e=Object(ie.a)(["\n  align-items: center;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 3rem 0;\n  width: 100%;\n\n  & > div {\n    align-items: stretch;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n"]);return Ye=function(){return e},e}var Ve=oe.d.div(Ye()),Ue=oe.d.button(Be(),(function(e){var n=e.isRight,a=e.isRTL,t=e.isSelected,o=e.letter,i=e.theme,r=i.colors,s=i.fonts;return Object(oe.c)(Re(),r.optionBackground,a?".3rem 0 0 .3rem":"0 .3rem .3rem 0",a?".75rem 3rem .75rem 0":".75rem 0 .75rem 3rem",r.optionActiveColor,we,n?"\u2713":"\u2a09",t?"initial":"none",n?r.optionRight:r.optionWrong,a?"left":"right",r.optionBackground,a?"0 .75rem .75rem 0":".75rem 0 0 .75rem",o,s.code,a?"right":"left",t&&Object(oe.c)(Me()),t&&Object(oe.c)(De(),r.optionWrong,r.optionWrong),n&&Object(oe.c)(Je(),r.optionRight,r.optionRight))}));function $e(){var e,n,a=Object(d.b)(),t=Object(d.c)(C),r=Object(d.c)(ee),s=i.useCallback((function(e){return function(){var n;(null===(n=t.result)||void 0===n?void 0:n.selected)||a(_.answer(e))}}),[a,t.result]),l=null===(e=t.result)||void 0===e?void 0:e.right,u=null===(n=t.result)||void 0===n?void 0:n.selected;return Object(o.jsx)(Ve,{children:Object(o.jsx)("div",{children:t.options.map((function(e,n){return Object(o.jsx)(Ue,{disabled:"number"===typeof u,isRight:"number"===typeof l?l===n:void 0,isRTL:r,isSelected:"number"===typeof u?u===n:void 0,letter:String.fromCharCode(n+65),onClick:s(n),children:Object(o.jsx)(ke.a,{plugins:[Le.a],allowDangerousHtml:!0,children:e},n)},e)}))})})}function Ke(){var e=Object(ie.a)(["\n    background-color: ",";\n    border: 0;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 1rem;\n    margin: 0 0.5rem 1rem 0.5rem;\n    opacity: ",";\n    padding: 0;\n    transform: scale(",");\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    width: 1rem;\n\n    &:hover:not(:disabled) {\n      transform: scale(1);\n    }\n\n    &:disabled {\n      cursor: default;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  "]);return Ke=function(){return e},e}function Qe(){var e=Object(ie.a)(["\n  ","\n"]);return Qe=function(){return e},e}function Ge(){var e=Object(ie.a)(["\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  height: 1rem;\n  justify-content: center;\n  width: 100%;\n"]);return Ge=function(){return e},e}var Ze=oe.d.div(Ge()),Xe=oe.d.button(Qe(),(function(e){var n=e.isRight,a=e.isSelected,t=e.theme.colors;return Object(oe.c)(Ke(),"boolean"!==typeof n?t.inlineCodeBackground:n?t.optionRight:t.optionWrong,a?1:.5,a?.75:.5)}));function en(){var e=Object(d.b)(),n=Object(d.c)(M),a=Object(d.c)(R),t=i.useCallback((function(n){return function(){e(_.goNQuestion(n))}}),[e]);return Object(o.jsx)(Ze,{children:Array(10).fill(null).map((function(e,i){var r=n[i]?n[i].selected===n[i].right:null,s=a===i;return Object(o.jsx)(Xe,{disabled:null===r,isRight:r,isSelected:s,onClick:t(i)},i)}))})}function nn(){var e=Object(ie.a)(["\n    background-color: ",";\n    border: 0;\n    border-radius: 0.5rem;\n    color: ",";\n    cursor: pointer;\n    font-size: 1.1rem;\n    letter-spacing: 0.05rem;\n    padding: 0.5rem 0.75rem;\n\n    &:disabled {\n      background-color: ",";\n      cursor: not-allowed;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  "]);return nn=function(){return e},e}function an(){var e=Object(ie.a)(["\n  ","\n"]);return an=function(){return e},e}var tn=oe.d.button(an(),(function(e){var n=e.theme.colors;return Object(oe.c)(nn(),n.buttonBackground,n.buttonColor,n.buttonDisabledBackground)})),on=a(290);function rn(){var e=Object(ie.a)(["\n  font-family: 'Display';\n  font-size: 1.5rem;\n  font-weight: 100;\n  margin: 0 3rem;\n  letter-spacing: 0.1rem;\n"]);return rn=function(){return e},e}var sn=oe.d.div(rn()),ln=function(e,n,a){var t=new Date(n),o=(a?new Date(a):new Date).getTime()-t.getTime();if((o=o<0?0:o)>=864e5){var i=o>=1728e5?Se[e].days:Se[e].day;return Object(on.a)(o,"D ".concat(i,", HH:mm:ss"))}return o>=36e5?Object(on.a)(o,"HH:mm:ss"):Object(on.a)(o,"mm:ss")};function dn(e){var n=e.startTime,a=e.endTime,t=Object(d.c)(X),r=i.useState(a?ln(t,n,a):ln(t,n)),s=Object(c.a)(r,2),l=s[0],u=s[1];return i.useEffect((function(){var e;return a?(u(ln(t,n,a)),e&&clearInterval(e)):e=setInterval((function(){u(ln(t,n,(new Date).toISOString()))}),1e3),function(){e&&clearInterval(e)}}),[a,t,n]),Object(o.jsx)(sn,{children:l})}function un(){var e=Object(ie.a)(["\n    color: ",";\n    font-size: 1.2rem;\n    text-decoration: underline;\n  "]);return un=function(){return e},e}function cn(){var e=Object(ie.a)(["\n  ","\n"]);return cn=function(){return e},e}var gn=oe.d.a(cn(),(function(e){var n=e.theme.colors;return Object(oe.c)(un(),n.text)}));function mn(){var e=Object(ie.a)(["\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n  width: 100%;\n"]);return mn=function(){return e},e}var pn=oe.d.div(mn());function hn(){var e=Object(d.b)(),n=Object(d.c)(X),a=Object(d.c)(R),t=i.useCallback((function(){e(_.newChallenge())}),[e]),r=i.useCallback((function(){e(_.goNQuestion(10))}),[e]);return Object(o.jsx)(pn,{children:10===a?Object(o.jsx)(tn,{onClick:t,children:f(Se[n].new)}):Object(o.jsx)(gn,{onClick:r,children:f(Se[n].results)})})}function bn(){var e=Object(ie.a)(["\n  align-items: center;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  margin: 3rem 0;\n  width: 100%;\n"]);return bn=function(){return e},e}var fn=oe.d.div(bn());function vn(){var e,n=Object(d.b)(),a=Object(d.c)(J),t=Object(d.c)(D),r=Object(d.c)(X),s=Object(d.c)(Y),l=Object(d.c)(C),u=Object(d.c)(F),c=Object(d.c)(M),g=i.useCallback((function(){n(_.goPrevQuestion())}),[n]),m=i.useCallback((function(){n(_.goNextQuestion())}),[n]);return Object(o.jsxs)(fn,{children:[Object(o.jsx)(en,{}),Object(o.jsx)(tn,{disabled:!t,onClick:g,children:f(Se[r].previous)}),Object(o.jsx)(dn,{startTime:l.result?l.result.started:u,endTime:null===(e=l.result)||void 0===e?void 0:e.finished}),Object(o.jsx)(tn,{disabled:!a,onClick:m,children:f(s?Se[r].results:Se[r].next)}),10===c.length&&Object(o.jsx)(hn,{})]})}function yn(){var e=Object(ie.a)(["\n  font-size: 3rem;\n  margin: 0;\n\n  @media only screen and (max-width: 720px) {\n    font-size: 2.25rem;\n  }\n"]);return yn=function(){return e},e}function wn(){var e=Object(ie.a)(["\n  font-size: 2rem;\n  font-weight: 100;\n  margin: 0 0 3rem;\n  padding: 0 10%;\n  line-height: 4rem;\n  text-align: center;\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  @media only screen and (max-width: 720px) {\n    font-size: 1.5rem;\n    line-height: 3rem;\n  }\n"]);return wn=function(){return e},e}var jn=oe.d.h2(wn()),kn=Object(oe.d)(jn)(yn());function xn(){var e=Object(d.c)(X),n=Object(d.c)(W),a=Object(d.c)(M).filter((function(e){var n=e.right;return e.selected===n})).length;return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(kn,{children:f(Se[e].youreawesome)}),Object(o.jsxs)(jn,{children:[f(Se[e].congratulations)," ",n]}),Object(o.jsxs)(Fe,{children:[f(Se[e].results)," (",a.toString(),"/10)"]})]})}function Ln(){var e=Object(ie.a)(["\n    background-color: ","33;\n    border: 1px solid ",";\n    border-radius: 0 0.5rem 0.5rem 0;\n    cursor: pointer;\n    height: 2rem;\n    padding: 0 0.75rem;\n    position: relative;\n    margin: 0 0 1rem 2rem;\n\n    &::after {\n      align-items: center;\n      background-color: ",";\n      border: 1px solid ",";\n      border-radius: 0.5rem 0 0 0.5rem;\n      color: ",";\n      content: '","';\n      display: flex;\n      font-size: 1.2rem;\n      font-weight: bold;\n      height: 100%;\n      justify-content: center;\n      position: absolute;\n      right: 100%;\n      top: -1px;\n      width: 2rem;\n    }\n\n    & > div {\n      color: ",";\n      line-height: 2rem;\n      margin: 0;\n      text-align: center;\n      width: 5rem;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  "]);return Ln=function(){return e},e}function qn(){var e=Object(ie.a)(["\n  ","\n"]);return qn=function(){return e},e}function Sn(){var e=Object(ie.a)(["\n  align-items: center;\n  display: flex;\n  flex-flow: column wrap;\n  height: calc(3rem * 5);\n  width: 20rem;\n"]);return Sn=function(){return e},e}function zn(){var e=Object(ie.a)(["\n  display: flex;\n  justify-content: center;\n  margin-bottom: 3rem;\n"]);return zn=function(){return e},e}var Nn=oe.d.div(zn()),_n=oe.d.div(Sn()),Tn=oe.d.button(qn(),(function(e){var n=e.isRight,a=e.ix,t=e.theme.colors;return Object(oe.c)(Ln(),n?t.optionRight:t.optionWrong,n?t.optionRight:t.optionWrong,n?t.optionRight:t.optionWrong,n?t.optionRight:t.optionWrong,t.codeBackground,(a+1).toString(),n?t.optionRight:t.optionWrong)}));function Pn(){var e=Object(d.b)(),n=Object(d.c)(M),a=i.useCallback((function(n){return function(){e(_.goNQuestion(n))}}),[e]);return Object(o.jsx)(Nn,{children:Object(o.jsx)(_n,{children:n.map((function(e,n){return Object(o.jsx)(Tn,{isRight:e.selected===e.right,ix:n,onClick:a(n),children:Object(o.jsx)(dn,{startTime:e.started,endTime:e.finished})},e.id)}))})})}var On=a(123),En=a(122),In=a.n(En);function Wn(){var e=Object(ie.a)(["\n  max-width: 800px;\n  width: 90%;\n"]);return Wn=function(){return e},e}function Cn(){var e=Object(ie.a)(["\n  display: flex;\n  justify-content: center;\n  margin-top: 3rem;\n  width: 100%;\n"]);return Cn=function(){return e},e}var Hn=oe.d.div(Cn()),An=oe.d.canvas(Wn());function Fn(){var e=Object(d.c)(V),n=i.useRef(null),a=Object(d.c)(X),t=Object(oe.e)();return i.useEffect((function(){n.current&&function(e,n,a,t){var o={datasets:[{data:n.map((function(e){var n=e.results,a=e.sessionDetails;return{y:n.filter((function(e){var n=e.right;return e.selected===n})).length,x:new Date(a.started)}})),backgroundColor:"".concat(t.colors.optionRight,"28"),borderColor:t.colors.optionRight,pointBackgroundColor:t.colors.optionRight}],labels:n.map((function(e){var n=e.sessionDetails;return Object(on.a)(new Date(n.started),"Pp",{locale:On[a]})}))};new In.a(e,{data:o,options:{legend:{display:!1},scales:{yAxes:[{ticks:{suggestedMax:10,suggestedMin:0}}]}},type:"line"})}(n.current,e.reverse().filter((function(e,n){return n<10})).reverse(),a.split("-").map((function(e,n){return 1===n?e.toUpperCase():e})).join(""),t)}),[n,e]),Object(o.jsx)(Hn,{children:Object(o.jsx)(An,{ref:n})})}function Jn(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(xn,{}),Object(o.jsx)(Pn,{}),Object(o.jsx)(hn,{}),Object(o.jsx)(Fn,{})]})}function Dn(){var e=Object(ie.a)(["\n    background-image: linear-gradient(45deg, transparent 50%, gray 50%),\n      linear-gradient(135deg, gray 50%, transparent 50%), linear-gradient(to right, gray 50%, gray 50%);\n    background-position: ",";\n    background-size: 5px 5px, 5px 5px, 1px 1.5em;\n    background-repeat: no-repeat;\n\n    appearance: none;\n    background-color: ",";\n    border: 0;\n    border-radius: 0.3rem;\n    color: ",";\n    cursor: pointer;\n    direction: ",";\n    font-size: 1.1rem;\n    margin-bottom: 2rem;\n    padding: ",";\n    position: relative;\n    text-align: center;\n    text-align-last: center;\n\n    &:focus {\n      outline: none;\n    }\n  "]);return Dn=function(){return e},e}function Mn(){var e=Object(ie.a)(["\n  ","\n"]);return Mn=function(){return e},e}function Rn(){var e=Object(ie.a)(["\n    background-color: transparent;\n    border: 0;\n    border-bottom: 3px solid ",";\n    color: ",";\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n    text-align: center;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: ",";\n    }\n  "]);return Rn=function(){return e},e}function Bn(){var e=Object(ie.a)(["\n  ","\n"]);return Bn=function(){return e},e}function Yn(){var e=Object(ie.a)(["\n  align-items: center;\n  display: flex;\n  flex-flow: column nowrap;\n  height: 100vh;\n  justify-content: center;\n  width: 100vw;\n"]);return Yn=function(){return e},e}var Vn=oe.d.div(Yn()),Un=oe.d.input(Bn(),(function(e){var n=e.theme.colors;return Object(oe.c)(Rn(),n.inlineCodeBackground,n.text,n.inlineCodeBackground)})),$n=oe.d.select(Mn(),(function(e){var n=e.isRTL,a=e.theme.colors;return Object(oe.c)(Dn(),n?"\n        calc(12px) calc(1rem + 1px),\n        calc(17px) calc(1rem + 1px),\n        calc(2rem) 0.4rem;\n      ":"\n        calc(100% - 15px) calc(1rem + 2px),\n        calc(100% - 10px) calc(1rem + 2px),\n        calc(100% - 2rem) 0.4rem;\n      ",a.inlineCodeBackground,a.inlineCodeColor,n?"rtl":"ltr",n?".5rem 1rem .5rem 3rem":".5rem 3rem .5rem 1rem")})),Kn=function(){var e,n=Object(d.b)(),a=Object(d.c)(ee),t=Object(d.c)(W),r=Object(d.c)(X),s=i.useState(t),l=Object(c.a)(s,2),u=l[0],g=l[1],m=Object(d.c)(V),p=i.useCallback((function(e){n(j.setLocale(e))}),[n]),h=i.useCallback((function(e,a){return function(){n(_.start(e,a))}}),[n]);return Object(o.jsxs)(Vn,{children:[Object(o.jsx)(Un,{onChange:(e=g,function(n){return e(n.currentTarget.value)}),placeholder:f(Se[r].name),value:u}),Object(o.jsx)($n,{isRTL:a,onChange:function(e){return p(e.currentTarget.value)},value:r,children:v.map((function(e){var n=e.language,a=e.locale;return Object(o.jsx)("option",{value:a,children:n},a)}))}),Object(o.jsx)(tn,{disabled:!u,onClick:h(r,u),children:f(Se[r].start)}),m.length&&Object(o.jsx)(Fn,{})]})},Qn=function(){var e=Object(d.c)(H),n=Object(d.c)(A),a=Object(d.c)(C);return n?Object(o.jsx)(Jn,{}):e?Object(o.jsx)(Kn,{}):Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(Fe,{children:a.question}),a.code&&Object(o.jsx)(fe,{code:a.code,language:a.codeLanguage}),Object(o.jsx)($e,{}),Object(o.jsx)(vn,{}),Object(o.jsx)(Ee,{})]})};function Gn(){var e=Object(ie.a)(["\n    border: 1px solid black;\n    display: flex;\n    flex-flow: column nowrap;\n    font-family: ",";\n\n    & * {\n      font-family: ",";\n    }\n  "]);return Gn=function(){return e},e}function Zn(){var e=Object(ie.a)(["\n  ","\n"]);return Zn=function(){return e},e}oe.d.div(Zn(),(function(e){var n=e.theme.fonts;return Object(oe.c)(Gn(),n.code,n.code)}));function Xn(){var e=Object(ie.a)(["\n  border: 1px solid black;\n  display: flex;\n  flex-flow: column nowrap;\n"]);return Xn=function(){return e},e}oe.d.div(Xn());function ea(){var e=Object(ie.a)(["\n  align-items: center;\n  background-color: white;\n  border: 1px solid black;\n  color: black !important;\n  direction: ltr;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  min-height: 64px;\n  width: 100vw;\n\n  * {\n    color: black !important;\n    direction: ltr;\n  }\n"]);return ea=function(){return e},e}oe.d.div(ea());var na=function(){return null};var aa=function(){var e=Object(d.c)(ae),n=Object(d.c)(ee);return Object(o.jsxs)(oe.a,{theme:e,children:[Object(o.jsx)(na,{}),Object(o.jsx)(Ce,{isRTL:n}),Object(o.jsx)(Qn,{})]})};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var ta=a(30),oa=a.n(ta),ia=a(48),ra="store_key",sa=function(e){var n="Compromised stored data. Erasing data...";return console.warn(n),localStorage.removeItem(ra),localStorage.setItem(ra,JSON.stringify([])),new Error(n)},la=function(e){localStorage.setItem(ra,JSON.stringify(e))},da=function(){var e=Object(ia.a)(oa.a.mark((function e(n){var a,t,o,i,r;return oa.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=new TextEncoder,t=n.length?a.encode(JSON.stringify(n)):a.encode("init"),e.next=4,crypto.subtle.digest("SHA-256",t);case 4:return o=e.sent,i=Array.from(new Uint8Array(o)),r=i.map((function(e){return e.toString(16).padStart(2,"0")})).join(""),e.abrupt("return",r);case 8:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),ua=function(){var e=Object(ia.a)(oa.a.mark((function e(n){var a,t;return oa.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=Object(u.a)(n).reverse(),e.next=3,Promise.allSettled(a.map(function(){var e=Object(ia.a)(oa.a.mark((function e(n,t){var o;return oa.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,da(a.slice(t+1).reverse());case 2:return o=e.sent,e.abrupt("return",n.hash===o);case 4:case"end":return e.stop()}}),e)})));return function(n,a){return e.apply(this,arguments)}}()));case 3:return t=e.sent,e.abrupt("return",t.map((function(e){return Boolean(null===e||void 0===e?void 0:e.value)})).reduce((function(e,n){return Boolean(Number(e)*Number(n))}),!0));case 5:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),ca=function(){var e=[];return[function n(){var a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=localStorage.getItem(ra);if(t)try{var o=JSON.parse(t);if(o instanceof Array){a||e.push.apply(e,Object(u.a)(o));Date.now();ua(e).then((function(e){Date.now();e||sa()}))}else sa()}catch(i){sa()}else la(e);window.addEventListener("beforeunload",(function(){n(!0)}))},function(){var n=Object(ia.a)(oa.a.mark((function n(t){var o,i,r,s,l;return oa.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,ua(e);case 2:if(n.sent){n.next=5;break}throw sa();case 5:if('["answer","date","id","locale","time"]'===JSON.stringify(Object.keys(t).sort())){n.next=7;break}throw sa();case 7:if(JSON.stringify(e)===localStorage.getItem(ra)){n.next=9;break}throw sa();case 9:return n.next=11,Promise.resolve().then(a.t.bind(null,14,3));case 11:if(o=n.sent,i=o.default.find((function(e){var n=e.language;return t.locale===n}))){n.next=15;break}throw sa();case 15:if(r=i.list.find((function(e){var n=e.id;return t.id===n}))){n.next=18;break}throw sa();case 18:return n.next=20,da(e);case 20:return s=n.sent,l=Object(L.a)(Object(L.a)({},t),{},{hash:s,rightAnswer:r.answer}),e.push(l),la(e),n.abrupt("return",l);case 25:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}(),function(n){return e.filter((function(e){return e.locale===n})).sort((function(e,n){return n.date-e.date}))}]}(),ga=Object(c.a)(ca,3),ma=ga[0];ga[1],ga[2];ma(),l.a.render(Object(o.jsx)(r.a.StrictMode,{children:Object(o.jsx)(te,{children:Object(o.jsx)(aa,{})})}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[289,1,2]]]);
//# sourceMappingURL=main.6faf18e4.chunk.js.map