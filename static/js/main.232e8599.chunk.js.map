{"version":3,"sources":["util.ts","store/globalSlicer.ts","QuestionsEngine/slicer.ts","QuestionsEngine/selectors.ts","store/storeKeeper.ts","store/createStore.ts","theme.ts","store/globalSelectors.ts","store/StoreProvider.tsx","UI/Code/prismTheme.ts","UI/Code/Code.tsx","UI/Code/inlineCodeStyle.ts","translations.ts","UI/Explanation.tsx","UI/GlobalStyle.tsx","UI/Question.tsx","UI/Options.tsx","UI/Bullets.tsx","UI/Button.tsx","UI/Clock.tsx","UI/Link.tsx","UI/ResultsControls.tsx","UI/Controls.tsx","UI/Congratulations.tsx","UI/Results.tsx","UI/HistoryChart.tsx","Challenge/ResultsScreen.tsx","Challenge/WelcomeScreen.tsx","Challenge/Challenge.tsx","Devtool/LocalePicker.tsx","Devtool/SwitchTheme.tsx","Devtool/Toolbar.tsx","App.tsx","serviceWorker.ts","antiCheatSystem.ts","index.tsx"],"names":["capitalize","text","capitalizeEveryWord","split","map","word","join","firstLetter","rest","toUpperCase","getGlobalInitialState","locale","theme","window","matchMedia","matches","createSlice","initialState","name","reducers","restoreInitialState","setLocale","state","payload","content","includes","switchTheme","globalActions","actions","globalReducer","reducer","globalReducerName","getRandomQuestionId","questionsCountForLocale","find","questions","sessionDetails","list","length","alreadyTaken","results","id","history","filter","ix","Math","floor","reduce","prev","curr","min","max","ignore","random","Array","indexOf","Error","JSON","stringify","undefined","randomBetween","currentStart","questionsId","questionIx","finished","isActive","started","start","prepare","Date","toISOString","initialQuestionId","answer","result","right","selected","hash","md5","push","goNextQuestion","isNew","isLast","nextQuestionId","goPrevQuestion","goNQuestion","newChallenge","setCurrentQuestionId","restartTimer","questionsActions","questionsReducer","questionsReducerName","questionsRootStateSelector","sessionDetailsSelector","createSelector","sessionNameSelector","questionSelector","options","question","set","questionId","explanation","code","codeLanguage","isWelcomeScreenSelector","isResultsScreenSelector","startTimeSelector","canGoNextSelector","canGoPrevSelector","resultsSelector","currentQuestionSelector","isNextQuestionEmptySelector","isLastQuestionSelector","historySelector","STORAGE_KEY","reducersMap","createStore","sagaMiddleware","createSagaMiddleware","stored","parse","localStorage","getItem","error","store","next","action","setItem","getState","storeKeeper","restoredState","skMiddleware","configureStore","combineReducers","devTools","process","middleware","getDefaultMiddleware","preloadedState","commonTheme","fonts","common","themeObject","light","colors","background","buttonBackground","buttonColor","buttonDisabledBackground","codeBackground","codeSelected","inlineCodeBackground","inlineCodeColor","optionActiveColor","optionBackground","optionRight","optionWrong","dark","globalRootStateSelector","global","localeSelector","isRTLSelector","isRTL","themeSelector","getTheme","StoreProvider","children","React","css","Wrapper","styled","div","CodeContainer","prismTheme","CodeSnippet","language","parsedCode","Prism","highlight","languages","listener","e","text_only","document","getSelection","toString","clipdata","clipboardData","setData","preventDefault","addEventListener","removeEventListener","dangerouslySetInnerHTML","__html","purify","sanitize","translations","congratulations","day","days","new","previous","previosresults","welcome","youreawesome","validateTranslations","locales","sort","availableLocales","Object","keys","missingLocales","forEach","console","warn","Container","inlineCodeStyle","CodeSnipet","transformContent","chunk","trim","arr","test","replace","plugins","gfm","allowDangerousHtml","Explanation","useSelector","isNextQuestionEmpty","containerRef","container","current","setTimeout","scrollIntoView","behavior","block","ref","createGlobalStyle","h1","Question","OptionList","Option","button","isRight","isSelected","letter","Options","dispatch","useDispatch","onPress","rightOption","selectedOption","option","disabled","String","fromCharCode","onClick","Bullet","Bullets","currentQuestion","goToQuestion","fill","_","Button","Time","timer","startTimeString","endTimeString","startTime","distance","getTime","format","Clock","endTime","time","setTime","interval","clearInterval","setInterval","Link","a","ResultsControls","disptach","onNewChallenge","onGoToResults","Controls","canGoNext","canGoPrev","isLastQuestion","onPrev","onNext","Name","h2","Awesome","Congratulations","rightCount","Content","Result","Results","Canvas","canvas","HistoryChart","canvasRef","useTheme","ctx","data","displayData","datasets","y","x","backgroundColor","borderColor","pointBackgroundColor","labels","Chart","legend","display","scales","yAxes","ticks","suggestedMax","suggestedMin","type","renderChart","reverse","ResultsScreen","Input","input","Select","select","WelcomeScreen","setter","sessionName","setName","newLocale","startChallenge","onChange","event","currentTarget","value","placeholder","Challenge","isWelcomeScreen","isResultsScreen","Toolbar","App","GlobalStyle","Boolean","location","hostname","match","STORE_KEY","erase","errorMessage","removeItem","answers","digest","encoder","TextEncoder","encode","crypto","subtle","hashBuffer","hashArray","from","Uint8Array","hashHex","b","padStart","testIntegrity","draft","Promise","allSettled","slice","res","Number","memory","init","isClosing","rawData","parsedArray","now","then","localized","default","serializedAnswer","rightAnswer","date","antiCheatSystem","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.232e8599.chunk.js","sourcesContent":["import { themeObject } from './theme';\n\nexport const randomBetween = (min: number, max: number, ignore?: number | number[]): number => {\n  let random = Math.floor(Math.random() * (max - min + 1) + min);\n\n  if (typeof ignore === 'undefined' || (ignore instanceof Array && !ignore.length)) {\n    return random;\n  } else if (typeof ignore === 'number') {\n    while (random === ignore) {\n      random = Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    return random;\n  } else if (ignore instanceof Array && typeof ignore[0] === 'number') {\n    while (ignore.indexOf(random) !== -1) {\n      random = Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    return random;\n  }\n\n  throw new Error(`Invalid operation:\\n\\n${JSON.stringify({ min, max, ignore }, undefined, 2)}`);\n};\n\nexport const getDefaultTheme = (): keyof typeof themeObject =>\n  window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n\nexport const capitalize = (text: string, capitalizeEveryWord = false): string => {\n  if (capitalizeEveryWord) {\n    return text\n      .split(' ')\n      .map((word) => capitalize(word))\n      .join(' ');\n  }\n\n  const [firstLetter, ...rest] = text;\n\n  return `${firstLetter.toUpperCase()}${rest.join('')}`;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getDefaultTheme } from '../util';\nimport content from '../questions.json';\n\nexport const getGlobalInitialState = () => ({\n  locale: 'en-EN',\n  theme: getDefaultTheme(),\n});\n\nexport type GlobalState = ReturnType<typeof getGlobalInitialState>;\n\nexport const { actions: globalActions, reducer: globalReducer, name: globalReducerName } = createSlice({\n  initialState: getGlobalInitialState(),\n  name: 'global',\n  reducers: {\n    restoreInitialState() {\n      return getGlobalInitialState();\n    },\n    setLocale(state, { payload }: PayloadAction<string>) {\n      const availableLocales = content.map(({ locale }) => locale);\n\n      if (availableLocales.includes(payload)) {\n        state.locale = payload;\n      } else {\n        state.locale = getGlobalInitialState().locale;\n      }\n    },\n    switchTheme(state) {\n      state.theme = state.theme === 'dark' ? 'light' : 'dark';\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport md5 from 'md5';\nimport content from '../questions.json';\nimport { randomBetween } from '../util';\n\nexport interface Result {\n  finished: string;\n  hash: string;\n  id: number;\n  right: number;\n  selected: number;\n  started: string;\n}\n\nexport interface Entry {\n  sessionDetails: {\n    finished: string;\n    locale: string;\n    name: string;\n    started: string;\n  };\n  results: Result[];\n}\n\nexport const getQuestionsInitialState = () => ({\n  currentStart: null as string | null,\n  questionsId: [] as number[],\n  questionIx: 0,\n  results: [] as Result[],\n  sessionDetails: {\n    finished: null as string | null,\n    isActive: false,\n    locale: 'en-EN',\n    name: '',\n    started: null as string | null,\n  },\n  history: [] as readonly Entry[],\n});\n\nexport type QuestionsState = ReturnType<typeof getQuestionsInitialState>;\n\nconst getRandomQuestionId = (state: QuestionsState): number => {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const questionsCountForLocale = content.find((questions) => questions.locale === state.sessionDetails.locale)!.list\n    .length;\n\n  const alreadyTaken = [\n    // avoid repeat same at session\n    ...state.results.map(({ id }) => id),\n    // avoid repeat last questions asked\n    ...state.history\n      .filter(\n        ({ sessionDetails }, ix) =>\n          // avoid first 60%\n          ix < Math.floor(questionsCountForLocale * 0.6) &&\n          // avoid only with the same name (If change name, can appear repeated questions)\n          sessionDetails.name === state.sessionDetails.name &&\n          // avoid only with the same locale (If change locale, can appear repeated questions)\n          sessionDetails.locale === state.sessionDetails.locale,\n      )\n      .reduce((prev, curr) => [...prev, ...curr.results.map(({ id }) => id)], [] as number[]),\n  ];\n\n  return randomBetween(0, questionsCountForLocale, alreadyTaken);\n};\n\nexport const { actions: questionsActions, reducer: questionsReducer, name: questionsReducerName } = createSlice({\n  initialState: getQuestionsInitialState(),\n  name: 'questions',\n  reducers: {\n    start: {\n      prepare(locale: string, name: string) {\n        return { payload: [name, locale] } as PayloadAction<[string, string]>;\n      },\n      reducer(state, { payload: [name, locale] }: PayloadAction<[string, string]>) {\n        const started = new Date().toISOString();\n\n        state.sessionDetails = {\n          finished: null,\n          isActive: true,\n          locale,\n          name,\n          started,\n        };\n\n        const initialQuestionId = getRandomQuestionId(state);\n\n        state.currentStart = started;\n        state.questionsId = [initialQuestionId];\n        state.questionIx = 0;\n      },\n    },\n    answer(state, { payload }: PayloadAction<number>) {\n      if (state.results.length === 10) {\n        return state;\n      }\n\n      if (state.questionsId.length === 10) {\n        state.sessionDetails.isActive = false;\n      }\n\n      const now = new Date().toISOString();\n\n      const result: Omit<Result, 'hash'> = {\n        finished: now,\n        id: state.questionsId[state.questionIx],\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        right: content\n          .find(({ locale }) => locale === state.sessionDetails.locale)!\n          .list.find(({ id }) => id === state.questionsId[state.questionIx])!.answer,\n        selected: payload,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        started: state.currentStart!,\n      };\n\n      state.currentStart = null;\n\n      const hash = state.results.length\n        ? md5(`${state.results[state.results.length - 1].hash}${JSON.stringify(result)}`)\n        : md5(JSON.stringify(result));\n\n      state.results.push({\n        ...result,\n        hash,\n      });\n\n      if (state.results.length === 10) {\n        state.sessionDetails.finished = new Date().toISOString();\n        state.sessionDetails.isActive = false;\n\n        state.history.push({\n          results: state.results,\n          sessionDetails: {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            finished: state.sessionDetails.finished!,\n            locale: state.sessionDetails.locale,\n            name: state.sessionDetails.name,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            started: state.sessionDetails.started!,\n          },\n        });\n      }\n    },\n    goNextQuestion(state) {\n      if (state.questionIx === state.results.length || state.questionIx === 10) {\n        return state;\n      }\n\n      const isNew = state.questionIx === state.questionsId.length - 1;\n      const isLast = state.questionsId.length === 10;\n\n      if (isNew && !isLast) {\n        const nextQuestionId = getRandomQuestionId(state);\n\n        state.currentStart = new Date().toISOString();\n        state.questionsId.push(nextQuestionId);\n      }\n\n      state.questionIx += 1;\n    },\n    goPrevQuestion(state) {\n      if (state.questionIx === 0) {\n        return state;\n      }\n\n      state.questionIx -= 1;\n    },\n    goNQuestion(state, { payload }: PayloadAction<number>) {\n      if (payload < 0 || payload > 10 || payload > state.questionsId.length) {\n        return state;\n      }\n\n      state.questionIx = payload;\n    },\n    newChallenge(state) {\n      const initialState = getQuestionsInitialState();\n\n      return {\n        ...initialState,\n        history: state.history,\n        sessionDetails: {\n          ...initialState.sessionDetails,\n          locale: state.sessionDetails.locale,\n          name: state.sessionDetails.name,\n        },\n      };\n    },\n    // ONLY FOR DEV\n    setCurrentQuestionId(state, { payload }: PayloadAction<number>) {\n      if (process.env.NODE_ENV === 'production') {\n        return state;\n      }\n\n      state.questionsId[state.questionIx] = payload;\n    },\n    restartTimer(state) {\n      if (process.env.NODE_ENV === 'production') {\n        return state;\n      }\n\n      state.currentStart = new Date().toISOString();\n    },\n  },\n});\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../store';\nimport content from '../questions.json';\nimport { Result } from './slicer';\n\nexport const questionsRootStateSelector = (state: State) => state.questions;\n\nexport const sessionDetailsSelector = createSelector(\n  questionsRootStateSelector,\n  ({ sessionDetails }) => sessionDetails,\n);\n\nexport const sessionNameSelector = createSelector(sessionDetailsSelector, ({ name }) => name);\n\nexport interface Question {\n  code?: string;\n  codeLanguage?: string;\n  explanation?: string;\n  options: string[];\n  question: string;\n  result?: Result;\n}\n\nexport const questionSelector = createSelector(\n  questionsRootStateSelector,\n  ({ questionIx, questionsId, results, sessionDetails: { locale } }): Question => {\n    if (!questionsId.length || questionIx === 10) {\n      return {\n        options: [],\n        question: '',\n      };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const questions = content.find((set) => set.locale === locale)!;\n    const questionId = questionsId[questionIx];\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { explanation, options, question, code, codeLanguage } = questions.list.find(({ id }) => id === questionId)!;\n\n    if (results[questionIx]) {\n      return {\n        code,\n        codeLanguage,\n        explanation,\n        options,\n        question,\n        result: results[questionIx],\n      };\n    }\n\n    return {\n      code,\n      codeLanguage,\n      options,\n      question,\n    };\n  },\n);\n\nexport const isWelcomeScreenSelector = createSelector(\n  questionsRootStateSelector,\n  ({ questionsId, sessionDetails: { isActive } }) => !isActive && !questionsId.length,\n);\n\nexport const isResultsScreenSelector = createSelector(\n  questionsRootStateSelector,\n  ({ questionIx }) => questionIx === 10,\n);\n\nexport const isActiveSelector = createSelector(\n  questionsRootStateSelector,\n  ({ sessionDetails: { isActive } }) => isActive,\n);\n\nexport const startTimeSelector = createSelector(questionsRootStateSelector, ({ currentStart }) => currentStart);\n\nexport const canGoNextSelector = createSelector(\n  questionsRootStateSelector,\n  ({ questionIx, results }) => questionIx < results.length,\n);\n\nexport const canGoPrevSelector = createSelector(questionsRootStateSelector, ({ questionIx }) => questionIx > 0);\n\nexport const isDetailsPageSelector = createSelector(questionsRootStateSelector, ({ questionIx }) => questionIx === 10);\n\nexport const resultsSelector = createSelector(questionsRootStateSelector, ({ results }) => results);\n\nexport const currentQuestionSelector = createSelector(questionsRootStateSelector, ({ questionIx }) => questionIx);\n\nexport const isNextQuestionEmptySelector = createSelector(\n  questionsRootStateSelector,\n  ({ questionIx, results }) => !results[questionIx + 1],\n);\n\nexport const isLastQuestionSelector = createSelector(questionsRootStateSelector, ({ questionIx }) => questionIx === 9);\n\nexport const historySelector = createSelector(questionsRootStateSelector, ({ history, sessionDetails }) =>\n  history.filter(({ sessionDetails: { name } }) => name === sessionDetails.name),\n);\n","import { Middleware } from '@reduxjs/toolkit';\nimport { getQuestionsInitialState, questionsReducerName } from '../QuestionsEngine';\nimport { State } from './createStore';\nimport { getGlobalInitialState, globalReducerName } from './globalSlicer';\n\nconst STORAGE_KEY = 'storeKeeper';\n\nexport const storeKeeper = (): [State, Middleware] => {\n  let stored: State;\n\n  try {\n    stored = JSON.parse(localStorage.getItem(STORAGE_KEY) || '{}');\n  } catch (error) {\n    stored = {\n      [globalReducerName]: getGlobalInitialState(),\n      [questionsReducerName]: getQuestionsInitialState(),\n    };\n  }\n\n  // if (process.env.NODE_ENV === 'production') {\n  //   stored.questions = questionsInitialState;\n  // }\n\n  const middleware: Middleware = (store) => (next) => (action) => {\n    const result = next(action);\n\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(store.getState()));\n\n    return result;\n  };\n\n  return [stored, middleware];\n};\n","import { configureStore, combineReducers, StateFromReducersMapObject, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { globalReducer, globalReducerName } from './globalSlicer';\nimport { storeKeeper } from './storeKeeper';\nimport { questionsReducer, questionsReducerName } from '../QuestionsEngine';\n\nexport const reducersMap = {\n  [globalReducerName]: globalReducer,\n  [questionsReducerName]: questionsReducer,\n};\n\nexport type State = StateFromReducersMapObject<typeof reducersMap>;\n\nexport const createStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const [restoredState, skMiddleware] = storeKeeper();\n\n  const store = configureStore({\n    reducer: combineReducers(reducersMap),\n    devTools: process.env.NODE_ENV !== 'production',\n    middleware: [...getDefaultMiddleware(), sagaMiddleware, skMiddleware],\n    preloadedState: restoredState,\n  });\n\n  return store;\n};\n","export interface ThemeDictionary {\n  colors: {\n    background: string;\n    buttonBackground: string;\n    buttonColor: string;\n    buttonDisabledBackground: string;\n    codeBackground: string;\n    codeSelected: string;\n    inlineCodeBackground: string;\n    inlineCodeColor: string;\n    optionActiveColor: string;\n    optionBackground: string;\n    optionRight: string;\n    optionWrong: string;\n    text: string;\n  };\n  fonts: {\n    code: string;\n    common: string;\n  };\n}\n\nconst commonTheme = {\n  fonts: {\n    code: `'Cascadia Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace`,\n    common: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\n  },\n};\n\nexport const themeObject = {\n  light: {\n    ...commonTheme,\n    colors: {\n      background: 'white',\n      buttonBackground: '#0089fa',\n      buttonColor: '#f9f9f9',\n      buttonDisabledBackground: '#4e5860',\n      codeBackground: '#282c34',\n      codeSelected: '#677696',\n      inlineCodeBackground: '#DDDDDD',\n      inlineCodeColor: '#ea7659',\n      optionActiveColor: '#f8b500',\n      optionBackground: '#5c636e',\n      optionRight: '#a1c45a',\n      optionWrong: '#fd0054',\n      text: '#21252b',\n    },\n  } as ThemeDictionary,\n  dark: {\n    ...commonTheme,\n    colors: {\n      background: '#21252b',\n      buttonBackground: '#3282b8',\n      buttonColor: '#f9f9f9',\n      buttonDisabledBackground: '#6b778d',\n      codeBackground: '#282c34',\n      codeSelected: '#677696',\n      inlineCodeBackground: '#393e46',\n      inlineCodeColor: '#f8b500',\n      optionActiveColor: '#ea7659',\n      optionBackground: '#5c636e',\n      optionRight: '#a1c45a',\n      optionWrong: '#e36161',\n      text: '#bdc3c7',\n    },\n  } as ThemeDictionary,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from './createStore';\nimport { themeObject } from '../theme';\nimport content from '../questions.json';\n\nexport const globalRootStateSelector = (state: State) => state.global;\n\nexport const localeSelector = createSelector(globalRootStateSelector, ({ locale }) => locale);\n\nexport const isRTLSelector = createSelector(\n  globalRootStateSelector,\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  ({ locale }) => content.find((questions) => questions.locale === locale)!.isRTL,\n);\n\nexport const themeSelector = createSelector(globalRootStateSelector, ({ theme }) => theme);\n\nexport const getTheme = createSelector(themeSelector, (theme) => themeObject[theme]);\n","import * as React from 'react';\nimport { createStore } from './createStore';\nimport { Provider } from 'react-redux';\n\nconst StoreProvider: React.FC = ({ children }) => {\n  const store = React.useMemo(() => createStore(), []);\n\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport default StoreProvider;\n","import { css } from 'styled-components';\n\nexport default css`\n  /**\n  * prism.js default theme for JavaScript, CSS and HTML\n  * Based on dabblet (http://dabblet.com)\n  * @author Lea Verou\n  */\n  code[class*='language-'],\n  pre[class*='language-'] {\n    color: #abb2bf;\n    background: none;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    -moz-tab-size: 2;\n    -o-tab-size: 2;\n    tab-size: 2;\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n  }\n\n  pre[class*='language-']::-moz-selection,\n  pre[class*='language-'] ::-moz-selection,\n  code[class*='language-']::-moz-selection,\n  code[class*='language-'] ::-moz-selection {\n    text-shadow: none;\n    background: #383e49;\n  }\n\n  pre[class*='language-']::selection,\n  pre[class*='language-'] ::selection,\n  code[class*='language-']::selection,\n  code[class*='language-'] ::selection {\n    text-shadow: none;\n    background: #9aa2b1;\n  }\n\n  @media print {\n    code[class*='language-'],\n    pre[class*='language-'] {\n      text-shadow: none;\n    }\n  }\n  /* Code blocks */\n  pre[class*='language-'] {\n    padding: 1em;\n    margin: 0.5em 0;\n    overflow: auto;\n  }\n\n  :not(pre) > code[class*='language-'],\n  pre[class*='language-'] {\n    background: #282c34;\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*='language-'] {\n    padding: 0.1em;\n    border-radius: 0.3em;\n    white-space: normal;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #5c6370;\n  }\n\n  .token.punctuation {\n    color: #abb2bf;\n  }\n\n  .token.selector,\n  .token.tag {\n    color: #e06c75;\n  }\n\n  .token.property,\n  .token.boolean,\n  .token.number,\n  .token.constant,\n  .token.symbol,\n  .token.attr-name,\n  .token.deleted {\n    color: #d19a66;\n  }\n\n  .token.string,\n  .token.char,\n  .token.attr-value,\n  .token.builtin,\n  .token.inserted {\n    color: #98c379;\n  }\n\n  .token.operator,\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    color: #56b6c2;\n  }\n\n  .token.atrule,\n  .token.keyword {\n    color: #c678dd;\n  }\n\n  .token.function {\n    color: #61afef;\n  }\n\n  .token.regex,\n  .token.important,\n  .token.variable {\n    color: #c678dd;\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  .token.parameter {\n    color: #e06c75;\n  }\n\n  pre.line-numbers {\n    position: relative;\n    padding-left: 3.8em;\n    counter-reset: linenumber;\n  }\n\n  pre.line-numbers > code {\n    position: relative;\n  }\n\n  .line-numbers .line-numbers-rows {\n    position: absolute;\n    pointer-events: none;\n    top: 0;\n    font-size: 100%;\n    left: -3.8em;\n    width: 3em; /* works for line-numbers below 1000 lines */\n    letter-spacing: -1px;\n    border-right: 0;\n\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .line-numbers-rows > span {\n    pointer-events: none;\n    display: block;\n    counter-increment: linenumber;\n  }\n\n  .line-numbers-rows > span:before {\n    content: counter(linenumber);\n    color: #5c6370;\n    display: block;\n    padding-right: 0.8em;\n    text-align: right;\n  }\n`;\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport Prism from 'prismjs';\nimport purify from 'dompurify';\nimport prismTheme from './prismTheme';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 3rem 0;\n  overflow-x: auto;\n  width: 100%;\n\n  @media screen and (max-width: 600px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const CodeContainer = styled.div`\n  ${({ theme: { colors, fonts } }) => css`\n    color: #e5c07b;\n    font-family: ${fonts.code};\n    white-space: pre-wrap;\n    ${prismTheme}\n    background-color: ${colors.codeBackground};\n    border-radius: 1rem;\n    box-sizing: border-box;\n    direction: ltr;\n    font-size: 0.9rem;\n    padding: 1.25rem 2rem;\n    line-height: 1.3rem;\n    width: 600px;\n\n    &::selection,\n    & *::selection {\n      background-color: ${`${colors.codeSelected}60`};\n    }\n\n    @media screen and (max-width: 600px) {\n      border-radius: 0;\n    }\n\n    & * {\n      color: #bdc3c7;\n      direction: ltr;\n      font-family: ${fonts.code};\n    }\n  `}\n`;\n\ninterface Props {\n  code: string;\n  language?: string;\n}\n\nexport default function CodeSnippet({ code, language = 'javascript' }: Props) {\n  const parsedCode = Prism.highlight(code, Prism.languages[language], language);\n\n  React.useEffect(() => {\n    const listener = function (e: ClipboardEvent) {\n      const text_only = document?.getSelection()?.toString();\n      const clipdata = e.clipboardData;\n\n      if (process.env.NODE_ENV === 'production' && text_only?.includes(code)) {\n        clipdata?.setData('text/plain', \"Don't be a cheater\");\n        clipdata?.setData('text/html', \"Don't be a cheater\");\n      } else {\n        clipdata?.setData('text/plain', text_only || '');\n        clipdata?.setData('text/html', text_only || '');\n      }\n\n      e.preventDefault();\n    };\n\n    document.addEventListener('copy', listener);\n\n    return () => {\n      document.removeEventListener('copy', listener);\n    };\n  }, [code]);\n\n  return (\n    <Wrapper>\n      <CodeContainer dangerouslySetInnerHTML={{ __html: purify.sanitize(parsedCode) }} />\n    </Wrapper>\n  );\n}\n","import { css } from 'styled-components';\n\nexport default css`\n  ${({ theme: { colors, fonts } }) => css`\n    background-color: ${colors.inlineCodeBackground};\n    border-radius: 0.2rem;\n    color: ${colors.inlineCodeColor};\n    font-family: ${fonts.code};\n    font-size: 80%;\n    font-weight: bold;\n    padding: 0.3rem 0.5rem;\n    white-space: nowrap;\n  `}\n`;\n","import content from './questions.json';\n\ninterface Translations {\n  congratulations: string;\n  day: string;\n  days: string;\n  explanation: string;\n  name: string;\n  new: string;\n  next: string;\n  previous: string;\n  previosresults: string;\n  results: string;\n  start: string;\n  welcome: string;\n  youreawesome: string;\n}\n\nconst translations: { [locale: string]: Translations } = {\n  'ar-EG': {\n    congratulations: 'تهانينا',\n    day: 'يوم',\n    days: 'أيام',\n    explanation: 'تفسير',\n    name: 'اسم',\n    new: 'جديد',\n    next: 'التالى',\n    previous: 'السابق',\n    previosresults: 'النتائج السابقة',\n    results: 'النتائج',\n    start: 'بداية',\n    welcome: 'أهلا بك',\n    youreawesome: 'انت رائع',\n  },\n  'bs-BS': {\n    congratulations: 'čestitke',\n    day: 'dan',\n    days: 'dani',\n    explanation: 'objašnjenje',\n    name: 'ime',\n    new: 'novo',\n    next: 'sljedeći',\n    previous: 'prethodna',\n    previosresults: 'prethodnih rezultata',\n    results: 'rezultati',\n    start: 'start',\n    welcome: 'dobrodošli',\n    youreawesome: 'ti si neverovatan',\n  },\n  'de-DE': {\n    congratulations: 'herzliche glückwünsche',\n    day: 'tag',\n    days: 'tage',\n    explanation: 'erläuterung',\n    name: 'name',\n    new: 'neu',\n    next: 'nächster',\n    previous: 'bisherige',\n    previosresults: 'vorherige ergebnisse',\n    results: 'ergebnisse',\n    start: 'start',\n    welcome: 'herzlich willkommen',\n    youreawesome: 'du bist unglaublich',\n  },\n  'en-EN': {\n    congratulations: 'congratulations',\n    day: 'day',\n    days: 'days',\n    explanation: 'explanation',\n    name: 'name',\n    new: 'new',\n    next: 'next',\n    previous: 'previous',\n    previosresults: 'previous results',\n    results: 'results',\n    start: 'start',\n    welcome: 'welcome',\n    youreawesome: 'you are incredible',\n  },\n  'es-ES': {\n    congratulations: 'felicidades',\n    day: 'día',\n    days: 'dias',\n    explanation: 'explicación',\n    name: 'nombre',\n    new: 'nuevo',\n    next: 'siguiente',\n    previous: 'anterior',\n    previosresults: 'resultados anteriores',\n    results: 'resultados',\n    start: 'comenzar',\n    welcome: 'bienvenido',\n    youreawesome: 'eres increíble',\n  },\n  'fr-FR': {\n    congratulations: 'toutes nos félicitations',\n    day: 'journée',\n    days: 'journées',\n    explanation: 'explication',\n    name: 'nom',\n    new: 'nouveau',\n    next: 'prochain',\n    previous: 'précédent',\n    previosresults: 'résultats précédents',\n    results: 'résultats',\n    start: 'début',\n    welcome: 'bienvenue',\n    youreawesome: 'vous êtes incroyable',\n  },\n  'id-ID': {\n    congratulations: 'selamat',\n    day: 'hari',\n    days: 'hari-hari',\n    explanation: 'penjelasan',\n    name: 'nama',\n    new: 'baru',\n    next: 'lanjut',\n    previous: 'sebelumnya',\n    previosresults: 'hasil sebelumnya',\n    results: 'hasil',\n    start: 'mulailah',\n    welcome: 'selamat datang',\n    youreawesome: 'kamu luar biasa',\n  },\n  'ja-JA': {\n    congratulations: 'おめでとう',\n    day: '日',\n    days: '日々',\n    explanation: '説明',\n    name: '名前',\n    new: '新着',\n    next: '次',\n    previous: '前',\n    previosresults: '以前の結果',\n    results: '結果',\n    start: '開始',\n    welcome: 'ようこそ',\n    youreawesome: 'あなたは素晴らしい',\n  },\n  'ko-KR': {\n    congratulations: '축하합니다',\n    day: '일',\n    days: '일',\n    explanation: '설명',\n    name: '이름',\n    new: '새로운',\n    next: '다음',\n    previous: '이전',\n    previosresults: '이전 결과',\n    results: '결과',\n    start: '스타트',\n    welcome: '어서 오십시오',\n    youreawesome: '당신은 믿을 수 있습니다',\n  },\n  'nl-NL': {\n    congratulations: 'gefeliciteerd',\n    day: 'dag',\n    days: 'dagen',\n    explanation: 'uitleg',\n    name: 'naam',\n    new: 'nieuw',\n    next: 'de volgende',\n    previous: 'voorgaand',\n    previosresults: 'eerdere resultaten',\n    results: 'uitslagen',\n    start: 'begin',\n    welcome: 'welkom',\n    youreawesome: 'je bent geweldig',\n  },\n  'pt-BR': {\n    congratulations: 'parabéns',\n    day: 'dia',\n    days: 'dias',\n    explanation: 'explicação',\n    name: 'nome',\n    new: 'novo',\n    next: 'próximo',\n    previous: 'anterior',\n    previosresults: 'resultados anteriores',\n    results: 'resultados',\n    start: 'começar',\n    welcome: 'bem-vinda',\n    youreawesome: 'você é incrível',\n  },\n  'ru-RU': {\n    congratulations: 'поздравляю',\n    day: 'день',\n    days: 'дней',\n    explanation: 'объяснение',\n    name: 'название',\n    new: 'новый',\n    next: 'следующий',\n    previous: 'предыдущий',\n    previosresults: 'предыдущие результаты',\n    results: 'полученные результаты',\n    start: 'начало',\n    welcome: 'добро пожаловать',\n    youreawesome: 'ты потрясающая',\n  },\n  'th-TH': {\n    congratulations: 'ขอแสดงความยินดี',\n    day: 'วัน',\n    days: 'วัน',\n    explanation: 'คำอธิบาย',\n    name: 'ชื่อ',\n    new: 'ใหม่',\n    next: 'ต่อไป',\n    previous: 'ก่อน',\n    previosresults: 'ผลการค้นหาก่อน',\n    results: 'ผล',\n    start: 'เริ่มต้น',\n    welcome: 'ยินดีต้อนรับ',\n    youreawesome: 'คุณเป็นที่น่าทึ่ง',\n  },\n  'tr-TR': {\n    congratulations: 'tebrikler',\n    day: 'gün',\n    days: 'günler',\n    explanation: 'açıklama',\n    name: 'isim',\n    new: 'yeni',\n    next: 'sonraki',\n    previous: 'önceki',\n    previosresults: 'önceki sonuçlar',\n    results: 'sonuçlar',\n    start: 'başlat',\n    welcome: 'hoşgeldiniz',\n    youreawesome: 'eğer inanılmaz',\n  },\n  'ua-UA': {\n    congratulations: 'вітаю',\n    day: 'день',\n    days: 'днів',\n    explanation: 'пояснення',\n    name: \"ім'я\",\n    new: 'новий',\n    next: 'наступного',\n    previous: 'попередній',\n    previosresults: 'попередні результати',\n    results: 'результати',\n    start: 'початок',\n    welcome: 'ласкаво просимо',\n    youreawesome: 'ти неймовірний',\n  },\n  'vi-VI': {\n    congratulations: 'xin chúc mừng',\n    day: 'ngày',\n    days: 'ngày',\n    explanation: 'giải trình',\n    name: 'tên',\n    new: 'mới',\n    next: 'kế tiếp',\n    previous: 'trước',\n    previosresults: 'kết quả trước đó',\n    results: 'các kết quả',\n    start: 'khởi đầu',\n    welcome: 'hoan nghênh',\n    youreawesome: 'bạn thật phi thường',\n  },\n  'zh-CN': {\n    congratulations: '祝贺',\n    day: '天',\n    days: '天',\n    explanation: '说明',\n    name: '名称',\n    new: '新',\n    next: '下一个',\n    previous: '以前',\n    previosresults: '以前的结果',\n    results: '结果',\n    start: '开始',\n    welcome: '欢迎',\n    youreawesome: '你太不可思议了',\n  },\n  'zh-TW': {\n    congratulations: '祝賀',\n    day: '天',\n    days: '天',\n    explanation: '說明',\n    name: '名稱',\n    new: '新',\n    next: '下一個',\n    previous: '以前',\n    previosresults: '以前的結果',\n    results: '結果',\n    start: '開始',\n    welcome: '歡迎',\n    youreawesome: '你太不可思議了',\n  },\n};\n\nconst validateTranslations = (): typeof translations => {\n  const locales = content.map(({ locale }) => locale).sort();\n  const availableLocales = Object.keys(translations);\n\n  const missingLocales: string[] = [];\n\n  locales.forEach((locale) => {\n    if (!availableLocales.includes(locale)) {\n      missingLocales.push(locale);\n    }\n  });\n\n  if (missingLocales.length) {\n    console.warn('Missing locales: ', missingLocales);\n  }\n\n  return translations;\n};\n\nexport default validateTranslations();\n","import * as React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport gfm from 'remark-gfm';\nimport styled, { css } from 'styled-components';\nimport Prism from 'prismjs';\nimport { useSelector } from 'react-redux';\nimport purify from 'dompurify';\nimport { CodeContainer, inlineCodeStyle } from './Code';\nimport { isRTLSelector, localeSelector } from '../store';\nimport translations from '../translations';\nimport { isNextQuestionEmptySelector, questionSelector } from '../QuestionsEngine';\n\nconst Container = styled.div<{ isRTL: boolean }>`\n  ${({ isRTL, theme: { colors } }) => css`\n    color: ${colors.text};\n    display: flex;\n    font-size: 1.2rem;\n    justify-content: center;\n    line-height: 2.2rem;\n    margin-top: 3rem;\n    overflow-x: auto;\n    width: 100%;\n\n    & > div {\n      & > h3 {\n        margin: 0 0 2rem;\n        text-align: center;\n        text-transform: capitalize;\n      }\n\n      align-items: stretch;\n      display: flex;\n      flex-flow: column nowrap;\n      max-width: 900px;\n      width: 90%;\n\n      & p {\n        margin: 0;\n        margin-bottom: 1rem;\n        direction: ${isRTL ? 'rtl' : 'ltr'};\n      }\n\n      & img {\n        align-self: center;\n        margin-bottom: 1rem;\n      }\n    }\n\n    code {\n      ${inlineCodeStyle}\n    }\n  `}\n`;\n\nconst CodeSnipet = styled(CodeContainer)`\n  margin-bottom: 1rem;\n  width: 100%;\n`;\n\nconst transformContent = (explanation: string) => {\n  const content: JSX.Element[] = [];\n\n  const codeRegex = /(```[a-z]*)([\\s\\S]*?)(```)/g;\n\n  explanation\n    .split(codeRegex)\n    .map((chunk) => chunk.trim())\n    .forEach((chunk, ix, arr) => {\n      if (/^```[a-z]*/.test(chunk) || !chunk || chunk === '```') {\n      } else if (ix !== 0 && !/^```[a-z]*/.test(chunk) && arr[ix - 1] !== '```' && /^```[a-z]*/.test(arr[ix - 1])) {\n        try {\n          const language = arr[ix - 1].replace('```', '');\n          const parsedCode = Prism.highlight(chunk, Prism.languages[language], language);\n\n          content.push(<CodeSnipet key={ix} dangerouslySetInnerHTML={{ __html: purify.sanitize(parsedCode) }} />);\n        } catch (error) {\n          content.push(\n            <ReactMarkdown key={ix} plugins={[gfm]} allowDangerousHtml>\n              {chunk}\n            </ReactMarkdown>,\n          );\n        }\n      } else if (chunk) {\n        content.push(\n          <ReactMarkdown key={ix} plugins={[gfm]} allowDangerousHtml>\n            {chunk}\n          </ReactMarkdown>,\n        );\n      }\n    });\n\n  return content;\n};\n\nexport default function Explanation() {\n  const question = useSelector(questionSelector);\n  const isRTL = useSelector(isRTLSelector);\n  const locale = useSelector(localeSelector);\n  const isNextQuestionEmpty = useSelector(isNextQuestionEmptySelector);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    const container = containerRef.current;\n\n    if (question.explanation && container && isNextQuestionEmpty) {\n      setTimeout(() => {\n        container.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      }, 1000);\n    }\n  }, [question.explanation, containerRef, isNextQuestionEmpty]);\n\n  return (\n    <Container isRTL={isRTL} ref={containerRef}>\n      {question.explanation ? (\n        <div>\n          <h3>{translations[locale]?.explanation}</h3>\n          {transformContent(question.explanation)}\n        </div>\n      ) : null}\n    </Container>\n  );\n}\n","import { createGlobalStyle, css } from 'styled-components';\n\nexport default createGlobalStyle<{ isRTL: boolean }>`\n  ${({ isRTL, theme: { colors, fonts } }) => css`\n    * {\n      color: ${colors.text};\n      box-sizing: border-box;\n      font-family: ${fonts.common};\n      direction: ${isRTL ? 'rtl' : 'ltr'};\n    }\n\n    body,\n    html {\n      background-color: ${colors.background};\n      margin: 0;\n      padding: 0;\n    }\n  `}\n`;\n","import * as React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport gfm from 'remark-gfm';\nimport styled from 'styled-components';\nimport { inlineCodeStyle } from './Code';\n\nconst Container = styled.h1`\n  font-size: 2rem;\n  margin: 0 0 3rem;\n  padding: 0 10%;\n  line-height: 4rem;\n  text-align: center;\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  & code {\n    ${inlineCodeStyle};\n  }\n`;\n\ninterface Props {\n  children: string | string[];\n}\n\nexport default function Question({ children }: Props) {\n  return (\n    <Container>\n      <ReactMarkdown plugins={[gfm]}>{children instanceof Array ? children.join('') : children}</ReactMarkdown>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport styled, { css } from 'styled-components';\nimport gfm from 'remark-gfm';\nimport { inlineCodeStyle } from './Code';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isRTLSelector } from '../store';\nimport { questionsActions, questionSelector } from '../QuestionsEngine';\n\nconst OptionList = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 3rem 0;\n  width: 100%;\n\n  & > div {\n    align-items: stretch;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n`;\n\nconst Option = styled.button<{ isRight?: boolean; isRTL: boolean; isSelected?: boolean; letter: string }>`\n  ${({ isRight, isRTL, isSelected, letter, theme: { colors, fonts } }) => css`\n    background: transparent;\n    border: 1px solid ${colors.optionBackground};\n    border-radius: ${isRTL ? '.3rem 0 0 .3rem' : '0 .3rem .3rem 0'};\n    font-size: 1.1rem;\n    line-height: 1.8rem;\n    margin: ${isRTL ? '.75rem 3rem .75rem 0' : '.75rem 0 .75rem 3rem'};\n    max-width: calc(95vw - 5rem);\n    min-height: 3rem;\n    min-width: 600px;\n    padding: 0.5rem 2.25rem;\n    position: relative;\n    text-align: center;\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    @media only screen and (max-width: 720px) {\n      min-width: 60vw;\n    }\n\n    &:hover {\n      cursor: pointer;\n\n      &::before {\n        color: ${colors.optionActiveColor};\n      }\n    }\n\n    & p {\n      margin: 0;\n    }\n\n    & code {\n      ${inlineCodeStyle}\n      white-space: normal;\n    }\n\n    &::after {\n      content: '${isRight ? '✓' : '⨉'}';\n      display: ${isSelected ? 'initial' : 'none'};\n      color: ${isRight ? colors.optionRight : colors.optionWrong};\n      font-size: 2rem;\n      position: absolute;\n      ${isRTL ? 'left' : 'right'}: .5rem;\n      top: calc(50% - 1rem);\n    }\n\n    &::before {\n      align-items: center;\n      background-color: ${colors.optionBackground};\n      border-radius: ${isRTL ? '0 .75rem .75rem 0' : '.75rem 0 0 .75rem'};\n      box-sizing: border-box;\n      color: white;\n      content: '${letter}:';\n      display: flex;\n      font-family: ${fonts.code};\n      height: calc(100% + 0.1rem);\n      justify-content: center;\n      position: absolute;\n      ${isRTL ? 'right' : 'left'}: -3rem;\n      width: 3rem;\n      text-align: center;\n      top: -0.05rem;\n      transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 0.5;\n\n      &:hover {\n        &::before {\n          color: white;\n        }\n      }\n    }\n\n    ${isSelected &&\n    css`\n      &:disabled {\n        opacity: 1;\n      }\n    `}\n\n    ${isSelected &&\n    css`\n      border: 1px solid ${colors.optionWrong};\n      &::before {\n        background-color: ${colors.optionWrong};\n      }\n    `}\n\n    ${isRight &&\n    css`\n      border: 1px solid ${colors.optionRight};\n      &::before {\n        background-color: ${colors.optionRight};\n        color: #323643;\n      }\n    `}\n\n    &:focus {\n      outline: none;\n    }\n  `}\n`;\n\nexport default function Options() {\n  const dispatch = useDispatch();\n  const question = useSelector(questionSelector);\n  const isRTL = useSelector(isRTLSelector);\n\n  const onPress = React.useCallback(\n    (ix: number) => () => {\n      if (!question.result?.selected) {\n        dispatch(questionsActions.answer(ix));\n      }\n    },\n    [dispatch, question.result],\n  );\n\n  const rightOption = question.result?.right;\n  const selectedOption = question.result?.selected;\n\n  return (\n    <OptionList>\n      <div>\n        {question.options.map((option, ix) => (\n          <Option\n            disabled={typeof selectedOption === 'number'}\n            isRight={typeof rightOption === 'number' ? rightOption === ix : undefined}\n            isRTL={isRTL}\n            isSelected={typeof selectedOption === 'number' ? selectedOption === ix : undefined}\n            key={option}\n            letter={String.fromCharCode(ix + 65)}\n            onClick={onPress(ix)}\n          >\n            <ReactMarkdown key={ix} plugins={[gfm]} allowDangerousHtml>\n              {option}\n            </ReactMarkdown>\n          </Option>\n        ))}\n      </div>\n    </OptionList>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { currentQuestionSelector, questionsActions, resultsSelector } from '../QuestionsEngine';\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  height: 1rem;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Bullet = styled.button<{ isRight: boolean | null; isSelected: boolean }>`\n  ${({ isRight, isSelected, theme: { colors } }) => css`\n    background-color: ${typeof isRight !== 'boolean'\n      ? colors.inlineCodeBackground\n      : !isRight\n      ? colors.optionWrong\n      : colors.optionRight};\n    border: 0;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 1rem;\n    margin: 0 0.5rem 1rem 0.5rem;\n    opacity: ${isSelected ? 1 : 0.5};\n    padding: 0;\n    transform: scale(${!isSelected ? 0.5 : 0.75});\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    width: 1rem;\n\n    &:hover:not(:disabled) {\n      transform: scale(1);\n    }\n\n    &:disabled {\n      cursor: default;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  `}\n`;\n\nexport default function Bullets() {\n  const dispatch = useDispatch();\n  const results = useSelector(resultsSelector);\n  const currentQuestion = useSelector(currentQuestionSelector);\n\n  const goToQuestion = React.useCallback(\n    (ix: number) => () => {\n      dispatch(questionsActions.goNQuestion(ix));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Container>\n      {Array(10)\n        .fill(null)\n        .map((_, ix) => {\n          const isRight = results[ix] ? results[ix].selected === results[ix].right : null;\n          const isSelected = currentQuestion === ix;\n\n          return (\n            <Bullet\n              disabled={isRight === null}\n              isRight={isRight}\n              isSelected={isSelected}\n              key={ix}\n              onClick={goToQuestion(ix)}\n            />\n          );\n        })}\n    </Container>\n  );\n}\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  ${({ theme: { colors } }) => css`\n    background-color: ${colors.buttonBackground};\n    border: 0;\n    border-radius: 0.5rem;\n    color: ${colors.buttonColor};\n    cursor: pointer;\n    font-size: 1.1rem;\n    letter-spacing: 0.05rem;\n    padding: 0.5rem 0.75rem;\n\n    &:disabled {\n      background-color: ${colors.buttonDisabledBackground};\n      cursor: not-allowed;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  `}\n`;\n\nexport default Button;\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { localeSelector } from '../store';\nimport translations from '../translations';\n\nconst Time = styled.div`\n  font-family: 'Display';\n  font-size: 1.5rem;\n  font-weight: 100;\n  margin: 0 3rem;\n  letter-spacing: 0.1rem;\n`;\n\nconst timer = (locale: string, startTimeString: string, endTimeString?: string) => {\n  const startTime = new Date(startTimeString);\n  const endTime = endTimeString ? new Date(endTimeString) : new Date();\n\n  let distance = endTime.getTime() - startTime.getTime();\n  distance = distance < 0 ? 0 : distance;\n\n  if (distance >= 24 * 60 * 60 * 1000) {\n    const word = distance >= 48 * 60 * 60 * 1000 ? translations[locale].days : translations[locale].day;\n\n    return format(distance, `D ${word}, HH:mm:ss`);\n  } else if (distance >= 60 * 60 * 1000) {\n    return format(distance, 'HH:mm:ss');\n  }\n\n  return format(distance, 'mm:ss');\n};\n\ninterface Props {\n  endTime?: string;\n  startTime: string;\n}\n\nexport default function Clock({ startTime, endTime }: Props) {\n  const locale = useSelector(localeSelector);\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const [time, setTime] = React.useState(endTime ? timer(locale, startTime, endTime) : timer(locale, startTime!));\n\n  React.useEffect(() => {\n    let interval: number | undefined;\n\n    if (!endTime) {\n      interval = setInterval(() => {\n        setTime(timer(locale, startTime, new Date().toISOString()));\n      }, 1000);\n    } else {\n      setTime(timer(locale, startTime, endTime));\n\n      if (interval) {\n        clearInterval(interval);\n      }\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [endTime, locale, startTime]);\n\n  return <Time>{time}</Time>;\n}\n","import styled, { css } from 'styled-components';\n\nconst Link = styled.a`\n  ${({ theme: { colors } }) => css`\n    color: ${colors.text};\n    font-size: 1.2rem;\n    text-decoration: underline;\n  `}\n`;\n\nexport default Link;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { questionsActions, currentQuestionSelector } from '../QuestionsEngine';\nimport { localeSelector } from '../store';\nimport translations from '../translations';\nimport { capitalize } from '../util';\nimport Button from './Button';\nimport Link from './Link';\n\nconst Container = styled.div`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n  width: 100%;\n`;\n\nexport default function ResultsControls() {\n  const disptach = useDispatch();\n  const locale = useSelector(localeSelector);\n  const currentQuestion = useSelector(currentQuestionSelector);\n\n  const onNewChallenge = React.useCallback(() => {\n    disptach(questionsActions.newChallenge());\n  }, [disptach]);\n\n  const onGoToResults = React.useCallback(() => {\n    disptach(questionsActions.goNQuestion(10));\n  }, [disptach]);\n\n  return (\n    <Container>\n      {currentQuestion === 10 ? (\n        <Button onClick={onNewChallenge}>{capitalize(translations[locale].new)}</Button>\n      ) : (\n        <Link onClick={onGoToResults}>{capitalize(translations[locale].results)}</Link>\n      )}\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  canGoNextSelector,\n  canGoPrevSelector,\n  isLastQuestionSelector,\n  questionsActions,\n  questionSelector,\n  resultsSelector,\n  startTimeSelector,\n} from '../QuestionsEngine';\nimport { localeSelector } from '../store';\nimport translations from '../translations';\nimport { capitalize } from '../util';\nimport Bullets from './Bullets';\nimport Button from './Button';\nimport Clock from './Clock';\nimport ResultsControls from './ResultsControls';\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  margin: 3rem 0;\n  width: 100%;\n`;\n\nexport default function Controls() {\n  const dispatch = useDispatch();\n  const canGoNext = useSelector(canGoNextSelector);\n  const canGoPrev = useSelector(canGoPrevSelector);\n  const locale = useSelector(localeSelector);\n  const isLastQuestion = useSelector(isLastQuestionSelector);\n  const question = useSelector(questionSelector);\n  const startTime = useSelector(startTimeSelector);\n  const results = useSelector(resultsSelector);\n\n  const onPrev = React.useCallback(() => {\n    dispatch(questionsActions.goPrevQuestion());\n  }, [dispatch]);\n\n  const onNext = React.useCallback(() => {\n    dispatch(questionsActions.goNextQuestion());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Bullets />\n      <Button disabled={!canGoPrev} onClick={onPrev}>\n        {capitalize(translations[locale].previous)}\n      </Button>\n      {/* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */}\n      <Clock startTime={question.result ? question.result.started : startTime!} endTime={question.result?.finished} />\n      <Button disabled={!canGoNext} onClick={onNext}>\n        {isLastQuestion ? capitalize(translations[locale].results) : capitalize(translations[locale].next)}\n      </Button>\n      {results.length === 10 && <ResultsControls />}\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { resultsSelector, sessionNameSelector } from '../QuestionsEngine';\nimport { localeSelector } from '../store';\nimport translations from '../translations';\nimport { capitalize } from '../util';\nimport Question from './Question';\n\nconst Name = styled.h2`\n  font-size: 2rem;\n  font-weight: 100;\n  margin: 0 0 3rem;\n  padding: 0 10%;\n  line-height: 4rem;\n  text-align: center;\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  @media only screen and (max-width: 720px) {\n    font-size: 1.5rem;\n    line-height: 3rem;\n  }\n`;\n\nconst Awesome = styled(Name)`\n  font-size: 3rem;\n  margin: 0;\n\n  @media only screen and (max-width: 720px) {\n    font-size: 2.25rem;\n  }\n`;\n\nexport default function Congratulations() {\n  const locale = useSelector(localeSelector);\n  const name = useSelector(sessionNameSelector);\n  const results = useSelector(resultsSelector);\n\n  const rightCount = results.filter(({ right, selected }) => selected === right).length;\n\n  return (\n    <>\n      <Awesome>{capitalize(translations[locale].youreawesome)}</Awesome>\n      <Name>\n        {capitalize(translations[locale].congratulations)} {name}\n      </Name>\n      <Question>\n        {capitalize(translations[locale].results)} ({rightCount.toString()}/10)\n      </Question>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { questionsActions, resultsSelector } from '../QuestionsEngine';\nimport Clock from './Clock';\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 3rem;\n`;\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: column wrap;\n  height: calc(3rem * 5);\n  width: 20rem;\n`;\n\nconst Result = styled.button<{ isRight: boolean; ix: number }>`\n  ${({ isRight, ix, theme: { colors } }) => css`\n    background-color: ${isRight ? colors.optionRight : colors.optionWrong}33;\n    border: 1px solid ${isRight ? colors.optionRight : colors.optionWrong};\n    border-radius: 0 0.5rem 0.5rem 0;\n    cursor: pointer;\n    height: 2rem;\n    padding: 0 0.75rem;\n    position: relative;\n    margin: 0 0 1rem 2rem;\n\n    &::after {\n      align-items: center;\n      background-color: ${isRight ? colors.optionRight : colors.optionWrong};\n      border: 1px solid ${isRight ? colors.optionRight : colors.optionWrong};\n      border-radius: 0.5rem 0 0 0.5rem;\n      color: ${colors.codeBackground};\n      content: '${(ix + 1).toString()}';\n      display: flex;\n      font-size: 1.2rem;\n      font-weight: bold;\n      height: 100%;\n      justify-content: center;\n      position: absolute;\n      right: 100%;\n      top: -1px;\n      width: 2rem;\n    }\n\n    & > div {\n      color: ${isRight ? colors.optionRight : colors.optionWrong};\n      line-height: 2rem;\n      margin: 0;\n      text-align: center;\n      width: 5rem;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  `}\n`;\n\nexport default function Results() {\n  const dispatch = useDispatch();\n  const results = useSelector(resultsSelector);\n\n  const goToQuestion = React.useCallback(\n    (ix: number) => () => {\n      dispatch(questionsActions.goNQuestion(ix));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Content>\n      <Container>\n        {results.map((result, ix) => (\n          <Result isRight={result.selected === result.right} ix={ix} key={result.id} onClick={goToQuestion(ix)}>\n            <Clock startTime={result.started} endTime={result.finished} />\n          </Result>\n        ))}\n      </Container>\n    </Content>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { format, Locale } from 'date-fns';\nimport * as locales from 'date-fns/locale';\nimport Chart from 'chart.js';\nimport styled, { DefaultTheme, useTheme } from 'styled-components';\nimport { Entry, historySelector } from '../QuestionsEngine';\nimport { localeSelector } from '../store';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 3rem;\n  width: 100%;\n`;\n\nconst Canvas = styled.canvas`\n  max-width: 800px;\n  width: 90%;\n`;\n\nfunction renderChart(\n  ctx: HTMLCanvasElement | CanvasRenderingContext2D,\n  data: Entry[],\n  locale: string,\n  theme: DefaultTheme,\n) {\n  const displayData: Chart.ChartData = {\n    datasets: [\n      {\n        data: data.map(({ results, sessionDetails }) => ({\n          y: results.filter(({ right, selected }) => selected === right).length,\n          x: new Date(sessionDetails.started),\n        })),\n        backgroundColor: `${theme.colors.optionRight}28`,\n        borderColor: theme.colors.optionRight,\n        pointBackgroundColor: theme.colors.optionRight,\n      },\n    ],\n    labels: data.map(({ sessionDetails }) =>\n      format(new Date(sessionDetails.started), 'Pp', { locale: (locales as { [locale: string]: Locale })[locale] }),\n    ),\n  };\n\n  const chart = new Chart(ctx, {\n    data: displayData,\n    options: {\n      legend: {\n        display: false,\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              suggestedMax: 10,\n              suggestedMin: 0,\n            },\n          },\n        ],\n      },\n    },\n    type: 'line',\n  });\n\n  return chart;\n}\n\nexport default function HistoryChart() {\n  const history = useSelector(historySelector);\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const locale = useSelector(localeSelector);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (canvasRef.current) {\n      renderChart(\n        canvasRef.current,\n        history\n          .reverse()\n          .filter((_, ix) => ix < 10)\n          .reverse(),\n        locale\n          .split('-')\n          .map((_, ix) => (ix === 1 ? _.toUpperCase() : _))\n          .join(''),\n        theme,\n      );\n    }\n  }, [canvasRef, history]);\n\n  return (\n    <Container>\n      <Canvas ref={canvasRef} />\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport { Congratulations, HistoryChart, Results, ResultsControls } from '../UI';\n\nexport default function ResultsScreen() {\n  return (\n    <>\n      <Congratulations />\n      <Results />\n      <ResultsControls />\n      <HistoryChart />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { historySelector, questionsActions, sessionNameSelector } from '../QuestionsEngine';\nimport { globalActions, isRTLSelector, localeSelector } from '../store';\nimport content from '../questions.json';\nimport styled, { css } from 'styled-components';\nimport translations from '../translations';\nimport { capitalize } from '../util';\nimport { Button, HistoryChart } from '../UI';\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: column nowrap;\n  height: 100vh;\n  justify-content: center;\n  width: 100vw;\n`;\n\nconst Input = styled.input`\n  ${({ theme: { colors } }) => css`\n    background-color: transparent;\n    border: 0;\n    border-bottom: 3px solid ${colors.inlineCodeBackground};\n    color: ${colors.text};\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n    text-align: center;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: ${colors.inlineCodeBackground};\n    }\n  `}\n`;\n\nconst Select = styled.select<{ isRTL: boolean }>`\n  ${({ isRTL, theme: { colors } }) => css`\n    background-image: linear-gradient(45deg, transparent 50%, gray 50%),\n      linear-gradient(135deg, gray 50%, transparent 50%), linear-gradient(to right, gray 50%, gray 50%);\n    background-position: ${isRTL\n      ? `\n        calc(12px) calc(1rem + 1px),\n        calc(17px) calc(1rem + 1px),\n        calc(2rem) 0.4rem;\n      `\n      : `\n        calc(100% - 15px) calc(1rem + 2px),\n        calc(100% - 10px) calc(1rem + 2px),\n        calc(100% - 2rem) 0.4rem;\n      `};\n    background-size: 5px 5px, 5px 5px, 1px 1.5em;\n    background-repeat: no-repeat;\n\n    appearance: none;\n    background-color: ${colors.inlineCodeBackground};\n    border: 0;\n    border-radius: 0.3rem;\n    color: ${colors.inlineCodeColor};\n    cursor: pointer;\n    direction: ${isRTL ? 'rtl' : 'ltr'};\n    font-size: 1.1rem;\n    margin-bottom: 2rem;\n    padding: ${isRTL ? '.5rem 1rem .5rem 3rem' : '.5rem 3rem .5rem 1rem'};\n    position: relative;\n    text-align: center;\n    text-align-last: center;\n\n    &:focus {\n      outline: none;\n    }\n  `}\n`;\n\nconst onChangeValue = (setter: React.Dispatch<React.SetStateAction<string>>) => (\n  event: React.ChangeEvent<HTMLInputElement>,\n) => setter(event.currentTarget.value);\n\nconst WelcomeScreen: React.FC = () => {\n  const dispatch = useDispatch();\n  const isRTL = useSelector(isRTLSelector);\n  const sessionName = useSelector(sessionNameSelector);\n  const locale = useSelector(localeSelector);\n  const [name, setName] = React.useState(sessionName);\n  const history = useSelector(historySelector);\n\n  const setLocale = React.useCallback(\n    (newLocale: string) => {\n      dispatch(globalActions.setLocale(newLocale));\n    },\n    [dispatch],\n  );\n\n  const startChallenge = React.useCallback(\n    (locale: string, name: string) => () => {\n      dispatch(questionsActions.start(locale, name));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Container>\n      <Input onChange={onChangeValue(setName)} placeholder={capitalize(translations[locale].name)} value={name} />\n      <Select isRTL={isRTL} onChange={(event) => setLocale(event.currentTarget.value)} value={locale}>\n        {content.map(({ language, locale }) => (\n          <option key={locale} value={locale}>\n            {language}\n          </option>\n        ))}\n      </Select>\n      <Button disabled={!name} onClick={startChallenge(locale, name)}>\n        {capitalize(translations[locale].start)}\n      </Button>\n      {history.length && <HistoryChart />}\n    </Container>\n  );\n};\n\nexport default WelcomeScreen;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { isResultsScreenSelector, isWelcomeScreenSelector, questionSelector } from '../QuestionsEngine';\nimport { Code, Controls, Explanation, Options, Question } from '../UI';\nimport ResultsScreen from './ResultsScreen';\nimport WelcomeScreen from './WelcomeScreen';\n\nconst Challenge: React.FC = () => {\n  const isWelcomeScreen = useSelector(isWelcomeScreenSelector);\n  const isResultsScreen = useSelector(isResultsScreenSelector);\n  const question = useSelector(questionSelector);\n\n  if (isResultsScreen) {\n    return <ResultsScreen />;\n  }\n\n  if (isWelcomeScreen) {\n    return <WelcomeScreen />;\n  }\n\n  return (\n    <>\n      <Question>{question.question}</Question>\n      {question.code && <Code code={question.code} language={question.codeLanguage} />}\n      <Options />\n      <Controls />\n      <Explanation />\n    </>\n  );\n};\n\nexport default Challenge;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { getGlobalInitialState, globalActions, localeSelector } from '../store';\nimport content from '../questions.json';\n\nconst Container = styled.div`\n  ${({ theme: { fonts } }) => css`\n    border: 1px solid black;\n    display: flex;\n    flex-flow: column nowrap;\n    font-family: ${fonts.code};\n\n    & * {\n      font-family: ${fonts.code};\n    }\n  `}\n`;\n\nconst LocalePicker: React.FC = () => {\n  const dispatch = useDispatch();\n  const locale = useSelector(localeSelector);\n\n  const onLocaleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      dispatch(globalActions.setLocale(event.currentTarget.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Container>\n      <div>Default locale: {getGlobalInitialState().locale}</div>\n      <div>Current locale: {locale}</div>\n      <div>\n        Action:\n        <select onChange={onLocaleChange} value={locale}>\n          {content.map(({ language, locale }) => (\n            <option key={locale} value={locale}>\n              {language}\n            </option>\n          ))}\n        </select>\n      </div>\n    </Container>\n  );\n};\n\nexport default LocalePicker;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { getGlobalInitialState, globalActions, themeSelector } from '../store';\n\nconst Container = styled.div`\n  border: 1px solid black;\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst SwitchTheme: React.FC = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(themeSelector);\n\n  const onSwitchTheme = React.useCallback(() => dispatch(globalActions.switchTheme()), [dispatch]);\n\n  return (\n    <Container>\n      <div>Default theme: {getGlobalInitialState().theme}</div>\n      <div>Current theme: {theme}</div>\n      <div>\n        Action: <button onClick={onSwitchTheme}>Switch Theme</button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SwitchTheme;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport LocalePicker from './LocalePicker';\nimport SwitchTheme from './SwitchTheme';\n\nconst Bar = styled.div`\n  align-items: center;\n  background-color: white;\n  border: 1px solid black;\n  color: black !important;\n  direction: ltr;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  min-height: 64px;\n  width: 100vw;\n\n  * {\n    color: black !important;\n    direction: ltr;\n  }\n`;\n\nconst Toolbar: React.FC = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  return (\n    <Bar>\n      <SwitchTheme />\n      <LocalePicker />\n    </Bar>\n  );\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTheme, isRTLSelector } from './store';\nimport { ThemeProvider } from 'styled-components';\nimport { Challenge } from './Challenge';\nimport { GlobalStyle } from './UI';\nimport Devtool from './Devtool';\n\nfunction App() {\n  const theme = useSelector(getTheme);\n  const isRTL = useSelector(isRTLSelector);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Devtool />\n      <GlobalStyle isRTL={isRTL} />\n      <Challenge />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { StoredAnswer } from './types';\n\nconst STORE_KEY = 'store_key';\n\nconst erase = (id: string): Error => {\n  const commonMessage = 'Compromised stored data. Erasing data...';\n  const errorMessage =\n    process.env.NODE_ENV === 'production' ? commonMessage : `${id}: Compromised stored data. Erasing data...`;\n\n  console.warn(errorMessage);\n  localStorage.removeItem(STORE_KEY);\n\n  localStorage.setItem(STORE_KEY, JSON.stringify([]));\n\n  return new Error(errorMessage);\n};\n\nconst store = (answers: StoredAnswer[]) => {\n  localStorage.setItem(STORE_KEY, JSON.stringify(answers));\n};\n\nconst digest = async (answers: StoredAnswer[]): Promise<string> => {\n  const encoder = new TextEncoder();\n\n  const data = !answers.length ? encoder.encode('init') : encoder.encode(JSON.stringify(answers));\n\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n\n  return hashHex;\n};\n\nconst testIntegrity = async (answers: StoredAnswer[]): Promise<boolean> => {\n  const draft = [...answers].reverse();\n\n  // @ts-ignore\n  const results = await Promise.allSettled(\n    draft.map(async (answer, ix) => {\n      const hash = await digest(draft.slice(ix + 1).reverse());\n\n      return answer.hash === hash;\n    }),\n  );\n\n  return results\n    .map((res: { status: 'fulfilled' | 'rejected'; value?: boolean; reason?: boolean }) => Boolean(res?.value))\n    .reduce((prev: boolean, curr: boolean) => Boolean(Number(prev) * Number(curr)), true);\n};\n\nconst antiCheatSystem = (): [\n  () => void,\n  (answer: Omit<StoredAnswer, 'rightAnswer' | 'hash'>) => Promise<StoredAnswer>,\n  (locale: string) => StoredAnswer[],\n] => {\n  const memory: StoredAnswer[] = [];\n\n  const init = (isClosing = false) => {\n    const rawData = localStorage.getItem(STORE_KEY);\n\n    if (rawData) {\n      try {\n        const parsedArray = JSON.parse(rawData);\n\n        if (parsedArray instanceof Array) {\n          if (!isClosing) {\n            memory.push(...parsedArray);\n          }\n\n          const startDate = Date.now();\n          testIntegrity(memory).then((result) => {\n            const endDate = Date.now();\n            if (!result) {\n              erase('Bad Integrity');\n            } else {\n              if (process.env.NODE_ENV !== 'production') {\n                console.info(`Integrity is OK - ${memory.length} elements in ${endDate - startDate} ms`);\n              }\n            }\n          });\n        } else {\n          erase('Not an Array');\n        }\n      } catch (error) {\n        erase('Parse fail');\n      }\n    } else {\n      store(memory);\n    }\n\n    window.addEventListener('beforeunload', () => {\n      init(true);\n    });\n  };\n\n  const submitQuestion = async (answer: Omit<StoredAnswer, 'rightAnswer' | 'hash'>): Promise<StoredAnswer> => {\n    const integrity = await testIntegrity(memory);\n\n    if (!integrity) {\n      throw erase('Bad integrity');\n    }\n\n    if (JSON.stringify(Object.keys(answer).sort()) !== '[\"answer\",\"date\",\"id\",\"locale\",\"time\"]') {\n      throw erase('Bad incoming answer');\n    }\n\n    if (JSON.stringify(memory) !== localStorage.getItem(STORE_KEY)) {\n      throw erase('Corrupted data');\n    }\n\n    const data = await import('./questions.json');\n    const localized = data.default.find(({ language }) => answer.locale === language);\n\n    if (!localized) {\n      throw erase('Local not found');\n    }\n\n    const question = localized.list.find(({ id }) => answer.id === id);\n\n    if (!question) {\n      throw erase('Wrong question id');\n    }\n\n    const hash = await digest(memory);\n\n    const serializedAnswer = {\n      ...answer,\n      hash,\n      rightAnswer: question.answer,\n    };\n\n    memory.push(serializedAnswer);\n\n    store(memory);\n\n    return serializedAnswer;\n  };\n\n  const getStoredAnswers = (locale: string): StoredAnswer[] => {\n    return memory.filter((answer) => answer.locale === locale).sort((a, b) => b.date - a.date);\n  };\n\n  return [init, submitQuestion, getStoredAnswers];\n};\n\nexport const [init, submitQuestion, getStoredAnswers] = antiCheatSystem();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { init } from './antiCheatSystem';\nimport { StoreProvider } from './store';\n\ninit();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}