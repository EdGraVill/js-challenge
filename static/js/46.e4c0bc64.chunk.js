(this["webpackJsonpjs-challenge"]=this["webpackJsonpjs-challenge"]||[]).push([[46],{122:function(e){e.exports=JSON.parse('[{"answer":3,"explanation":["Fonksiyonun i\xe7inde, \xf6nce `var` anahtar kelimesi ile `name` de\u011fi\u015fkenini tan\u0131mlad\u0131k. Bu demektir ki, de\u011fi\u015fken varsay\u0131lan de\u011feri olan `undefined` ile \\"hoisting\\" (haf\u0131zada alan olu\u015fturma a\u015famas\u0131) olur, ta ki ger\xe7ekten de\u011fi\u015fkene de\u011fer atamas\u0131 yapt\u0131\u011f\u0131m\u0131z sat\u0131ra varana dek. `name` de\u011fi\u015fkenini loglayama \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z sat\u0131rda hen\xfcz de\u011fi\u015fkeni tan\u0131mlamad\u0131k, bu y\xfczden hala `undefined` de\u011ferini sakl\u0131yor.","`let` (ve `const`) anahtar kelimelerine sahip de\u011fi\u015fkenler de \\"hoisted\\" olur, ama `var`\'\u0131n aksine <i>ilk de\u011fer atamas\u0131</i> yap\u0131lmaz. De\u011fi\u015fkenleri tan\u0131mlad\u0131\u011f\u0131m\u0131z (ilk de\u011fer atamas\u0131 yapt\u0131\u011f\u0131m\u0131z) sat\u0131rdan \xf6nce eri\u015filebilir de\u011fillerdir. Bu, \\"ge\xe7ici \xf6l\xfc alan / ge\xe7ici de\u011fi\u015fmez \xe7\u0131kt\u0131 alan\u0131\\", \\"temporal dead zone\\", olarak adland\u0131r\u0131l\u0131r. De\u011fi\u015fkenlere, tan\u0131mlanmadan \xf6nce eri\u015fmeye \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z zaman, Javascript `ReferenceError` hatas\u0131 f\u0131rlat\u0131r.\\n</p>\\n</details>"],"id":0,"options":["`Lydia` ve `undefined`","`Lydia` ve `ReferenceError`","`ReferenceError` ve `21`","`undefined` ve `ReferenceError`"],"problem":"function sayHi() {\\n  console.log(name);\\n  console.log(age);\\n  var name = \\"Lydia\\";\\n  let age = 21;\\n}\\n\\nsayHi();\\n","question":"\xc7\u0131kt\u0131s\u0131 nedir?"},{"answer":2,"explanation":["Javascript\'deki olay kuyru\u011fundan dolay\u0131, `setTimeout` callback fonksiyonu, d\xf6ng\xfc uyguland\u0131ktan _sonra_ \xe7a\u011fr\u0131l\u0131r. `i` de\u011fi\u015fkeni, ilk d\xf6ng\xfc s\u0131ras\u0131nda `var` anahtar kelimesi ile tan\u0131mland\u0131\u011f\u0131ndan, bu de\u011fi\u015fken globaldir. D\xf6ng\xfc boyunca, `++` unary operat\xf6r\xfcn\xfc kullanarak, `i`\'nin de\u011ferini her seferinde `1` artt\u0131rd\u0131k. \u0130lk \xf6rnekte, `setTimeout` callback fonksiyonu \xe7a\u011fr\u0131ld\u0131\u011f\u0131 zaman, `i`\'nin de\u011feri `3`\'e e\u015fitti.","\u0130kinci d\xf6ng\xfcde, `i` de\u011fi\u015fkeni `let` anahtar kelimesi kullan\u0131larak tan\u0131mland\u0131: `let` (ve `const`) ile tan\u0131mlanan de\u011fi\u015fkenler \\"block-scope\\"dur (block `{}` aras\u0131ndaki herhangi bir \u015feydir). Her bir tekrarda, `i` yeni de\u011fere sahip olacak ve her de\u011fer d\xf6ng\xfc i\xe7inde \\"scoped\\" olacak.\\n</p>\\n</details>"],"id":1,"options":["`0 1 2` ve `0 1 2`","`0 1 2` ve `3 3 3`","`3 3 3` ve `0 1 2`"],"problem":"for (var i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n\\nfor (let i = 0; i < 3; i++) {\\n  setTimeout(() => console.log(i), 1);\\n}\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`diameter` s\u0131radan bir fonksiyonken, `perimeter`\'in arrow fonksiyon oldu\u011funa dikkat edin.","Arrow fonksiyonlarda, `this` anahtar kelimesi, s\u0131radan fonksiyonlar\u0131n aksine, kendi sard\u0131\u011f\u0131 mevcut scope\'u referans al\u0131r. Bu demektir ki, `perimeter`\'i \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman, `shape` objesini de\u011fil, kendi sard\u0131\u011f\u0131 scope\'u referans al\u0131yor (\xf6rne\u011fin window).","Bu objede, `radius` de\u011feri olmad\u0131\u011f\u0131ndan `undefined` d\xf6nd\xfcr\xfcyor."],"id":2,"options":["`20` ve `62.83185307179586`","`20` ve `NaN`","`20` ve `63`","`NaN` ve `63`"],"problem":"const shape = {\\n  radius: 10,\\n  diameter() {\\n    return this.radius * 2;\\n  },\\n  perimeter: () => 2 * Math.PI * this.radius\\n};\\n\\nconsole.log(shape.diameter());\\nconsole.log(shape.perimeter());\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Art\u0131 (unary plus), i\u015flemeye \xe7al\u0131\u015ft\u0131\u011f\u0131 de\u011fi\u015fkeni say\u0131ya \xe7evirmeye \xe7al\u0131\u015f\u0131r. `true` `1` ve `false` `0` demektir.","`\'Lydia\'` harf dizisi do\u011frusal (\\"truthy\\") bir de\u011ferdir. Asl\u0131nda sordu\u011fumuz \u015fey, \\"bu do\u011frusal de\u011fer yanl\u0131\u015f-\u0131ms\u0131 (\\"falsy\\") m\u0131?\\". Bu da `false` d\xf6nd\xfcr\xfcr. \\n</p>\\n</details>"],"id":3,"options":["`1` and `false`","`false` and `NaN`","`false` and `false`"],"problem":"+true;\\n!\\"Lydia\\";\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Javascript\'te, t\xfcm nesne keyleri string\'dir (Symbol olmad\u0131klar\u0131 m\xfcddet\xe7e). Keyleri, string olarak _yazmad\u0131ysak_ bile, arka planda string\'e \xe7evrilirler.","Javascript, ifadeleri yorumlar (ya da a\xe7ar (\\"unboxes\\")). K\xf6\u015feli parentez notasyonu kulland\u0131\u011f\u0131m\u0131z zaman, Javascript ilk `[` g\xf6r\xfcr ve `]` bulana kadar devam eder. Ancak ondan sonra ifadeyi hesaplar.","`mouse[bird.size]`: \xd6nce `bird.size` \xe7al\u0131\u015ft\u0131r\u0131l\u0131r, o da `\\"small\\"` demektir. `mouse[\\"small\\"]`, `true` d\xf6nd\xfcr\xfcr.","Ancak, nokta notasyonunda bu ger\xe7ekle\u015fmez. `mouse`, `bird` diye bir keye sahip de\u011fildir ki bu da `mouse.bird`, `undefined` demektir. Sonra, nokta notasyonunu kullanarak `size`\'a ula\u015fmak istiyoruz: `mouse.bird.size`. `mouse.bird`, `undefined` oldu\u011fundan, asl\u0131nda ula\u015fmaya \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z `undefined.size`. Bu ge\xe7erli de\u011fil ve `Cannot read property \\"size\\" of undefined`\'a benzer bir hata f\u0131rlatacakt\u0131r.\\n</p>\\n</details>"],"id":4,"options":["`mouse.bird.size` ge\xe7erli de\u011fildir","`mouse[bird.size]` ge\xe7erli de\u011fildir","`mouse[bird[\\"size\\"]]` ge\xe7erli de\u011fildir","Hepsi ge\xe7erlidir"],"problem":"const bird = {\\n  size: \\"small\\"\\n};\\n\\nconst mouse = {\\n  name: \\"Mickey\\",\\n  small: true\\n};\\n","question":"Hangisi do\u011fru?"},{"answer":0,"explanation":["Javascript\'te t\xfcm nesneler, birbirlerine e\u015fitlendikleri zaman _referanslar\u0131_ ile etkile\u015fime girerler.","\xd6nce, `c` de\u011fi\u015fkeni bir nesnenin de\u011ferini tutuyor. Sonra, `d`\'ye ayn\u0131 referans\u0131 atad\u0131k ki bu referans da `c`\'nin sahip oldu\u011fu nesnedir.\\n<img src=\\"https://i.imgur.com/ko5k0fs.png\\" width=\\"200\\">","Bir nesneyi de\u011fi\u015ftirdi\u011finiz zaman, hepsini de\u011fi\u015ftirirsiniz."],"id":5,"options":["`Hello`","`Hey!`","`undefined`","`ReferenceError`","`TypeError`"],"problem":"let c = { greeting: \\"Hey!\\" };\\nlet d;\\n\\nd = c;\\nc.greeting = \\"Hello\\";\\nconsole.log(d.greeting);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["`new Number()` yerle\u015fik bir yap\u0131c\u0131 fonksiyondur (\\"function constructor\\"). Say\u0131 (\\"number\\") gibi g\xf6z\xfckse de ger\xe7ekten bir say\u0131 de\u011fil: bir ka\xe7 ekstra \xf6zelli\u011fe sahip ve o bir nesne.","`==` operat\xf6r\xfcn\xfc kulland\u0131\u011f\u0131m\u0131z zaman, sadece ayn\u0131 _de\u011fer_\'e sahip olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. \u0130kisi de `3` de\u011ferine sahip, yani `true` d\xf6nd\xfcr\xfcr.","Ancak, `===` kulland\u0131\u011f\u0131m\u0131z zaman de\u011fer _ve_ tip ayn\u0131 olmal\u0131d\u0131r. \xd6yle de\u011fil: `new Number()`, say\u0131 (\\"number\\") de\u011fildir, **nesne**dir. \u0130kisi de `false` d\xf6nd\xfcr\xfcr.\\n</p>\\n</details>"],"id":6,"options":["`true` `false` `true`","`false` `false` `true`","`true` `false` `false`","`false` `true` `true`"],"problem":"let a = 3;\\nlet b = new Number(3);\\nlet c = 3;\\n\\nconsole.log(a == b);\\nconsole.log(a === b);\\nconsole.log(b === c);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["`colorChange` fonksiyonu statiktir. Statik methodlar, sadece olu\u015fturulduklar\u0131 kurucuda var olmak i\xe7in tasarlanm\u0131\u015ft\u0131r ve herhangi bir \\"children\\"a aktar\u0131lamaz. `freddie`, \\"child\\" oldu\u011fundan, fonksiyon aktar\u0131lmad\u0131 ve `freddie` \xfczerinden eri\u015filebilir de\u011fil: `TypeError` hatas\u0131 f\u0131rlat\u0131l\u0131r.\\n</p>\\n</details>"],"id":7,"options":["`orange`","`purple`","`green`","`TypeError`"],"problem":"class Chameleon {\\n  static colorChange(newColor) {\\n    this.newColor = newColor;\\n    return this.newColor;\\n  }\\n\\n  constructor({ newColor = \\"green\\" } = {}) {\\n    this.newColor = newColor;\\n  }\\n}\\n\\nconst freddie = new Chameleon({ newColor: \\"purple\\" });\\nconsole.log(freddie.colorChange(\\"orange\\"));\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Nesneyi loglar \xe7\xfcnk\xfc global nesne \xfczerinde bo\u015f bir nesne olu\u015fturduk. `greeting`\'i `greetign` olarak yanl\u0131\u015f yazd\u0131\u011f\u0131m\u0131z zaman, JS yorumlay\u0131c\u0131s\u0131 bunu `global.greetign = {}` olarak g\xf6rd\xfc (ya da taray\u0131c\u0131 i\xe7inde `window.greetign = {}`).","Bundan ka\xe7\u0131nmak i\xe7in, `\\"use strict\\"` kullanabiliriz. Bu, bir de\u011fi\u015fkene herhangi bir atama yapmadan \xf6nce tan\u0131mlad\u0131\u011f\u0131n\u0131zdan emin olman\u0131z\u0131 sa\u011flar.\\n</p>\\n</details>"],"id":8,"options":["`{}`","`ReferenceErrorgreetign is not defined`","`undefined`"],"problem":"let greeting;\\ngreetign = {}; // Yaz\u0131m hatas\u0131!\\nconsole.log(greetign);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Javascript\'te bu m\xfcmk\xfcn, \xe7\xfcnk\xfc fonksiyonlar nesnedir! (Primitive tiplere nazaran her \u015fey nesnedir)","Fonksiyon \xf6zel bir nesne tipidir. Yazd\u0131\u011f\u0131n\u0131z kod as\u0131l fonksiyon de\u011fil. Fonksiyon, \xf6zelliklere sahip bir nesnedir. Bu \xf6zellik \xe7al\u0131\u015ft\u0131rabilme kapasitesine sahiptir (\\"invocable\\")."],"id":9,"options":["Hi\xe7 bir \u015fey, tamamen iyi!","`SyntaxError`. Fonksiyonlara bu \u015fekilde \xf6zellik atayamazs\u0131n.","`\\"Woof\\"` \u015feklinde loglan\u0131r.","`ReferenceError`"],"problem":"function bark() {\\n  console.log(\\"Woof!\\");\\n}\\n\\nbark.animal = \\"dog\\";\\n","question":"Bunu yapt\u0131\u011f\u0131m\u0131z zaman ne ger\xe7ekle\u015fir?"},{"answer":0,"explanation":["S\u0131radan fonksiyonlarla yapt\u0131\u011f\u0131n\u0131z gibi bir yap\u0131c\u0131ya (\\"constructor\\") \xf6zellik ekleyemezsiniz. E\u011fer, tek seferde t\xfcm nesnelere \xf6zellik eklemek isterseniz, bunun yerine prototype kullanmal\u0131s\u0131n\u0131z. Yani bu durumda,","`member.getFullName()` \xe7al\u0131\u015fm\u0131\u015f olacak. Bu neden faydal\u0131? Diyelim ki, yap\u0131c\u0131n\u0131n kendisine bu methodu ekledik. Belki de t\xfcm `Person` instance\'leri bu methoda ihtiya\xe7 duymuyor. Bu \xf6zelli\u011fe sahip olduklar\u0131ndan dolay\u0131, her bir instance haf\u0131zadan yer al\u0131r, bu da bir s\xfcr\xfc haf\u0131za israf\u0131 demek. Bunun yerine, e\u011fer sadece prototype\'a eklersek, haf\u0131zadan sadece bir tek yer al\u0131r\u0131z ve yine de t\xfcm instanceler bu \xf6zelli\u011fe eri\u015febilir!"],"id":10,"options":["`TypeError`","`SyntaxError`","`Lydia Hallie`","`undefined` `undefined`"],"problem":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst member = new Person(\\"Lydia\\", \\"Hallie\\");\\nPerson.getFullName = function() {\\n  return `${this.firstName} ${this.lastName}`;\\n};\\n\\nconsole.log(member.getFullName());\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`sarah` i\xe7in `new` anahtar kelimesi kullanmad\u0131k. `new` kulland\u0131\u011f\u0131n\u0131z zaman, olu\u015fturdu\u011fumuz yeni bo\u015f nesneyi referans g\xf6sterir. Lakin, `new`\'i eklemezseniz, **global nesne**\'yi referans g\xf6sterir!","`this.firstName`, `\\"Sarah\\"`\'a e\u015fittir ve `this.lastName`, `\\"Smith\\"`\'e e\u015fittir dedik. Asl\u0131nda yapt\u0131\u011f\u0131m\u0131z, `global.firstName = \'Sarah\'` ve `global.lastName = \'Smith\'` diye tan\u0131mlamayd\u0131. `sarah`\'\u0131n kendisi `undefined` olarak kal\u0131r.\\n</p>\\n</details>"],"id":11,"options":["`Person {firstName\\"Lydia\\", lastName\\"Hallie\\"}` ve `undefined`","`Person {firstName\\"Lydia\\", lastName\\"Hallie\\"}` ve `Person {firstName\\"Sarah\\", lastName\\"Smith\\"}`","`Person {firstName\\"Lydia\\", lastName\\"Hallie\\"}` ve `{}`","\\"Lydia\\", lastName\\"Hallie\\"}` ve `ReferenceError`"],"problem":"function Person(firstName, lastName) {\\n  this.firstName = firstName;\\n  this.lastName = lastName;\\n}\\n\\nconst lydia = new Person(\\"Lydia\\", \\"Hallie\\");\\nconst sarah = Person(\\"Sarah\\", \\"Smith\\");\\n\\nconsole.log(lydia);\\nconsole.log(sarah);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["**capturing** a\u015famas\u0131 s\xfcresince, olay ata (\\"ancestor) elemanlardan hedef elemana do\u011fru gider. Daha sonra **target** elemana ula\u015f\u0131r ve **bubbling** ba\u015flar.","<img src=\\"https://i.imgur.com/N18oRgd.png\\" width=\\"200\\">"],"id":12,"options":["Target > Capturing > Bubbling","Bubbling > Target > Capturing","Target > Bubbling > Capturing","Capturing > Target > Bubbling"],"problem":"","question":"Olay silsilesinin (event propagation) \xfc\xe7 a\u015famas\u0131 nedir?"},{"answer":1,"explanation":["B\xfct\xfcn nesneler prototiplere (\\"prototypes\\") sahiptir, **temel nesne**, **base object**, hari\xe7. Temel nesne, kullan\u0131c\u0131 taraf\u0131ndan olu\u015fturulmu\u015f nesnedir, ya da `new` anahtar kelimesi kullanarak olu\u015fturulmu\u015f bir nesnedir. Temel nesne baz\u0131 method ve \xf6zelliklere eri\u015febilir, `.toString` gibi. Yerle\u015fik gelen Javascript methodlar\u0131n\u0131 kullanabilme sebebi budur! Buna benzer t\xfcm methodlar prototip \xfczerinden eri\u015febilir. Her ne kadar Javascript, methodu direkt olarak nesneniz \xfczerinden bulamasa da, prototip zinciri \xfczerinden a\u015fa\u011f\u0131ya do\u011fru gider ve orada bulur, b\xf6ylece sizin i\xe7in eri\u015febilir yapar.\\n</p>\\n</details>"],"id":13,"options":["do\u011fru","yanl\u0131\u015f"],"problem":"","question":"B\xfct\xfcn nesneler prototiplere sahiptir."},{"answer":2,"explanation":["Javascript **dinamik tipli dil**dir: de\u011fi\u015fkenlerin hangi tip oldu\u011funu belirtmeyiz. De\u011ferler otomatik olarak di\u011fer tipi bilmeden d\xf6n\xfc\u015ft\xfcrebilir, bu _implicit type coercion_, _\xf6rt\xfck tip d\xf6n\xfc\u015f\xfcm\xfc_, olarak adland\u0131r\u0131l\u0131r. **Coercion** bir tipi di\u011fer bir tipe d\xf6n\xfc\u015ft\xfcrmektir.","Bu \xf6rnekte, JavaScript say\u0131 olan `1`\'i string\'e d\xf6n\xfc\u015ft\xfcr\xfcyor, fonksiyonun mant\u0131kl\u0131 olmas\u0131 ve de\u011fer d\xf6nd\xfcrmesi i\xe7in. Say\u0131sal tip (`1`) ve string tip (`2`)\'nin toplanmas\u0131 s\u0131ras\u0131nda, say\u0131ya string olarak muamele edilir. Stringleri `\\"Hello\\" + \\"World\\"` \u015feklinde birle\u015ftirebiliriz, yani burada olan `\\"1\\" + \\"2\\"` ki bu da `\\"12\\"` d\xf6nd\xfcr\xfcr."],"id":14,"options":["`NaN`","`TypeError`","`\\"12\\"`","`3`"],"problem":"function sum(a, b) {\\n  return a + b;\\n}\\n\\nsum(1, \\"2\\");\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["**son ek**, **postfix**, `++` unary operat\xf6r\xfc:","De\u011fer d\xf6nd\xfcr\xfcr (`0` d\xf6nd\xfcr\xfcr)","De\u011feri artt\u0131r\u0131r (say\u0131 \u015fimdi `1`)","**\xf6n ek**, **prefix**, `++` unary operat\xf6r\xfc:","De\u011feri artt\u0131r\u0131r (say\u0131 \u015fimdi `2`)","De\u011feri d\xf6nd\xfcr\xfcr (`2` d\xf6nd\xfcr\xfcr)","Burada `0 2 2` d\xf6ner."],"id":15,"options":["`1` `1` `2`","`1` `2` `2`","`0` `2` `2`","`0` `1` `2`"],"problem":"let number = 0;\\nconsole.log(number++);\\nconsole.log(++number);\\nconsole.log(number);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["E\u011fer \\"tagged template literals\\" kullan\u0131rsanoz, ilk arguman\u0131n de\u011feri her zaman string de\u011ferler dizisidir. Geriye kalan argumanlar, ifadeye ge\xe7ilen de\u011ferleri al\u0131r."],"id":16,"options":["`\\"Lydia\\"` `21` `[\\"\\", \\" is \\", \\" years old\\"]`","`[\\"\\", \\" is \\", \\" years old\\"]` `\\"Lydia\\"` `21`","`\\"Lydia\\"` `[\\"\\", \\" is \\", \\" years old\\"]` `21`"],"problem":"function getPersonInfo(one, two, three) {\\n  console.log(one);\\n  console.log(two);\\n  console.log(three);\\n}\\n\\nconst person = \\"Lydia\\";\\nconst age = 21;\\n\\ngetPersonInfo`${person} is ${age} years old`;\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["E\u015fitli\u011fi test ederken, nesneler _referanslar\u0131na_ g\xf6re k\u0131yaslan\u0131rken primitifler _de\u011ferlerine_ g\xf6re k\u0131yaslan\u0131r. Javascript, nesnelerin referanslar\u0131n\u0131n haf\u0131zada ayn\u0131 konumda olup olmad\u0131\u011f\u0131n\u0131 kontrol eder.","K\u0131yaslad\u0131\u011f\u0131m\u0131z iki nesne bu \u015fekilde de\u011filse: parametre olarak ge\xe7ti\u011fimiz nesne, haf\u0131zada e\u015fitli\u011fini kontrol etti\u011fimiz nesneden farkl\u0131 bir konumu referans g\xf6sterir.","Bu sebepten, `{ age: 18 } === { age: 18 }` ve `{ age: 18 } == { age: 18 }`, ikisi de `false` d\xf6nd\xfcr\xfcr."],"id":17,"options":["`You are an adult!`","`You are still an adult.`","`Hmm.. You don\'t have an age I guess`"],"problem":"function checkAge(data) {\\n  if (data === { age: 18 }) {\\n    console.log(\\"You are an adult!\\");\\n  } else if (data == { age: 18 }) {\\n    console.log(\\"You are still an adult.\\");\\n  } else {\\n    console.log(`Hmm.. You don\'t have an age I guess`);\\n  }\\n}\\n\\ncheckAge({ age: 18 });\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Yayma operator\xfc, \\"spread operator\\", (`...args`) argumanlar\u0131n dahil oldu\u011fu bir dizi d\xf6nd\xfcr\xfcr. Dizi bir nesnedir, bu y\xfczden `typeof args` `\\"object\\"` d\xf6nd\xfcr\xfcr."],"id":18,"options":["`\\"number\\"`","`\\"array\\"`","`\\"object\\"`","`\\"NaN\\"`"],"problem":"function getAge(...args) {\\n  console.log(typeof args);\\n}\\n\\ngetAge(21);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["`\\"use strict\\"` ile, yanl\u0131\u015fl\u0131kla global de\u011fi\u015fkenler tan\u0131mlamad\u0131\u011f\u0131n\u0131zdan emin olabilirsiniz. `age` de\u011fi\u015fkenini hi\xe7 tan\u0131mlamad\u0131k ve `\\"use strict\\"` kulland\u0131\u011f\u0131m\u0131zdan, referans hatas\u0131 f\u0131rlatacakt\u0131r. E\u011fer `\\"use strict\\"` kullanmasayd\u0131k, `age` \xf6zelli\u011fi global nesneye eklenmi\u015f olaca\u011f\u0131ndan, \xe7al\u0131\u015fm\u0131\u015f olacakt\u0131."],"id":19,"options":["`21`","`undefined`","`ReferenceError`","`TypeError`"],"problem":"function getAge() {\\n  \\"use strict\\";\\n  age = 21;\\n  console.log(age);\\n}\\n\\ngetAge();\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`eval`, string olarak ge\xe7ilen kodu \xe7al\u0131\u015ft\u0131r\u0131r. E\u011fer bir ifadeyse, bu durumdaki gibi, ifadeyi \xe7al\u0131\u015ft\u0131r\u0131r. \u0130fade `10 * 10 + 5`. Bu `105` say\u0131s\u0131n\u0131 d\xf6nd\xfcr\xfcr."],"id":20,"options":["`105`","`\\"105\\"`","`TypeError`","`\\"10*10+5\\"`"],"problem":"const sum = eval(\\"10*10+5\\");\\n","question":"`sum`\'\u0131n de\u011feri nedir?"},{"answer":1,"explanation":["`sessionStorage` i\xe7inde saklanan veri _sekme_ kapat\u0131ld\u0131ktan sonra kald\u0131r\u0131l\u0131r.","E\u011fer `localStorage` kulland\u0131ysan\u0131z, veri sonsuza kadar orada olacakt\u0131r, \xf6rnek olarak `localStorage.clear()` \xe7al\u0131\u015ft\u0131r\u0131lmad\u0131\u011f\u0131 s\xfcrece."],"id":21,"options":["Sonsuza kadar, veri kaybolmaz.","Kullan\u0131c\u0131 sekmeyi kapat\u0131nca.","Kullan\u0131c\u0131 tamamen taray\u0131c\u0131y\u0131 kapatt\u0131\u011f\u0131 zaman, sadece sekmeyi de\u011fil.","Kullan\u0131c\u0131 bilgisayar\u0131n\u0131 kapatt\u0131\u011f\u0131 zaman."],"problem":"sessionStorage.setItem(\\"cool_secret\\", 123);\\n","question":"cool_secret ne kadar s\xfcre boyunca eri\u015febilinir?"},{"answer":1,"explanation":["`var` anahtar kelimesi ile ayn\u0131 isme sahip birden \xe7ok de\u011fi\u015fken tan\u0131mlayabilirsiniz. O halde de\u011fi\u015fken son de\u011feri tutacak.","Bunu `let` ya da `const` ile yapamazs\u0131n\u0131z, \\"block-scoped\\" olduklar\u0131ndan dolay\u0131."],"id":22,"options":["`8`","`10`","`SyntaxError`","`ReferenceError`"],"problem":"var num = 8;\\nvar num = 10;\\n\\nconsole.log(num);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["T\xfcm nesne anahtarlar\u0131 (Symbol\'ler hari\xe7) arka planda string\'dir, kendiniz string olarak yazmasan\u0131z bile. Bu sebepten `obj.hasOwnProperty(\'1\')` da `true` d\xf6nd\xfcr\xfcr.","Set i\xe7in bu \u015fekilde \xe7al\u0131\u015fmaz. Setimizde `\'1\'` yok: `set.has(\'1\')` `false` d\xf6nd\xfcr\xfcr. Setimiz say\u0131sal tip `1`\'e sahip, `set.has(1)` `true` d\xf6nd\xfcr\xfcr."],"id":23,"options":["`false` `true` `false` `true`","`false` `true` `true` `true`","`true` `true` `false` `true`","`true` `true` `true` `true`"],"problem":"const obj = { 1: \\"a\\", 2: \\"b\\", 3: \\"c\\" };\\nconst set = new Set([1, 2, 3, 4, 5]);\\n\\nobj.hasOwnProperty(\\"1\\");\\nobj.hasOwnProperty(1);\\nset.has(\\"1\\");\\nset.has(1);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["E\u011fer ayn\u0131 ada sahip iki tane anahtar\u0131n\u0131z, \\"key\\", varsa, anahtar de\u011fi\u015ftirilecektir. Hala ilk konumunda olacakt\u0131r ama son belirtilen de\u011ferle birlikte."],"id":24,"options":["`{ a\\"one\\", b\\"two\\" }`","`{ b\\"two\\", a\\"three\\" }`","`{ a\\"three\\", b\\"two\\" }`","`SyntaxError`"],"problem":"const obj = { a: \\"one\\", b: \\"two\\", a: \\"three\\" };\\nconsole.log(obj);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Temel y\xfcr\xfctme konteksti, global y\xfcr\xfctme kontekstidir: kodunuzda her yerde eri\u015filebilir olan \u015feydir."],"id":25,"options":["do\u011fru","yanl\u0131\u015f","de\u011fi\u015fir"],"problem":"","question":"JavaScript global y\xfcr\xfctme konteksti, \\"global execution context\\", sizin i\xe7in iki \u015fey olu\u015fturur: global nesne, ve \\"this\\" anahtar kelimesi."},{"answer":2,"explanation":["E\u011fer belirli \u015fart `true` d\xf6nd\xfcr\xfcrse, `continue` ifadesi yinelemeyi, \\"iteration\\", atlar."],"id":26,"options":["`1` `2`","`1` `2` `3`","`1` `2` `4`","`1` `3` `4`"],"problem":"for (let i = 1; i < 5; i++) {\\n  if (i === 3) continue;\\n  console.log(i);\\n}\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`String`, \xf6zellikler de ekleyebilece\u011fimiz t\xfcmle\u015fik bir yap\u0131c\u0131d\u0131r. Prototipine bir method ekledim sadece. Primitif stringler, string prototip fonksiyonu taraf\u0131ndan \xfcretilen string nesnesine otomatik olarak d\xf6n\xfc\u015ft\xfcr\xfcl\xfcr. Bu y\xfczden, t\xfcm stringler (string nesneleri) bu methoda eri\u015febilir!"],"id":27,"options":["`\\"Just give Lydia pizza already!\\"`","`TypeErrornot a function`","`SyntaxError`","`undefined`"],"problem":"String.prototype.giveLydiaPizza = () => {\\n  return \\"Just give Lydia pizza already!\\";\\n};\\n\\nconst name = \\"Lydia\\";\\n\\nname.giveLydiaPizza();\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Nesne keyleri otomatik olarak stringe d\xf6n\xfc\u015ft\xfcr\xfcl\xfcr. `a` nesnesine de\u011feri `123` olacak \u015fekilde, bir nesneyi key olarak atamaya \xe7al\u0131\u015f\u0131yoruz.","Ancak, bir nesnesi string hale getirince, `\\"[object Object]\\"` olur. Dolay\u0131s\u0131yla burada s\xf6yledi\u011fimiz, `a[\\"object Object\\"] = 123`. Sonra, ayn\u0131 \u015feyi tekrar yapmay\u0131 deniyoruz. `c`, dolayl\u0131 olarak string hale getirdi\u011fimiz ba\u015fka bir nesne. O halde, `a[\\"object Object\\"] = 456`.","Sonra, `a[b]`\'yi logluyoruz, ki asl\u0131nda o da `a[\\"object Object\\"]`. Onu da `456` olarak atam\u0131\u015ft\u0131k, o y\xfczden `456` d\xf6nd\xfcr\xfcr."],"id":28,"options":["`123`","`456`","`undefined`","`ReferenceError`"],"problem":"const a = {};\\nconst b = { key: \\"b\\" };\\nconst c = { key: \\"c\\" };\\n\\na[b] = 123;\\na[c] = 456;\\n\\nconsole.log(a[b]);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Bir `setTimeout` fonksiyonumuz var ve ilk onu \xe7al\u0131\u015ft\u0131rd\u0131k. Yine de en son logland\u0131.","Bunun nedeni taray\u0131c\u0131larda, \\"runtime engine\\"\'a sahip olmamam\u0131zdan, `WebAPI` denilen bir \u015feye sahibiz. `WebAPI`, \xf6rne\u011fin DOM ile \xe7al\u0131\u015fmas\u0131 i\xe7in bize, `setTimeout` fonksiyonunu verir.","_callback_ WebAPI\'a eklendikten sonra, `setTimeout` fonksiyonun kendisi (callback hari\xe7!) haf\u0131za blo\u011fundan at\u0131l\u0131r, \\"popped off the stack\\".","<img src=\\"https://i.imgur.com/X5wsHOg.png\\" width=\\"200\\">","\u015eimdi, `foo` \xe7al\u0131\u015ft\u0131 ve `\\"First\\"` logland\u0131.","<img src=\\"https://i.imgur.com/Pvc0dGq.png\\" width=\\"200\\">","`foo` haf\u0131za blo\u011fundan at\u0131ld\u0131 ve `baz` \xe7al\u0131\u015ft\u0131. `\\"Third\\"` logland\u0131.","<img src=\\"https://i.imgur.com/WhA2bCP.png\\" width=\\"200\\">","WebAPI, her ne zaman bir \u015feyler haz\u0131rsa haf\u0131za blo\u011funa \xf6ylece ekleyemez. Onun yerine callback fonksiyonunu, _queue_ diye adland\u0131ralan bir \u015feye ekler.","<img src=\\"https://i.imgur.com/NSnDZmU.png\\" width=\\"200\\">","Buras\u0131 olay d\xf6ng\xfcs\xfcn\xfcn \xe7al\u0131\u015fmaya ba\u015flayacap\u0131 yerdir. **olay d\xf6ng\xfcs\xfc**, **event loop**, haf\u0131za blo\u011funa ve i\u015f kuyru\u011funa, \\"task queue\\", bakar. E\u011fer haf\u0131za blo\u011fu bo\u015fsa, kuyruktaki ilk \u015feyi al\u0131r ve haf\u0131za blo\u011funa ekler.","<img src=\\"https://i.imgur.com/uyiScAI.png\\" width=\\"200\\">","`bar` \xe7al\u0131\u015ft\u0131, `\\"Second\\"` logland\u0131 ve haf\u0131za blo\u011fundan at\u0131ld\u0131."],"id":29,"options":["`First` `Second` `Third`","`First` `Third` `Second`","`Second` `First` `Third`","`Second` `Third` `First`"],"problem":"const foo = () => console.log(\\"First\\");\\nconst bar = () => setTimeout(() => console.log(\\"Second\\"));\\nconst baz = () => console.log(\\"Third\\");\\n\\nbar();\\nfoo();\\nbaz();\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Olaya sebep olan en derindeki i\xe7 eleman, olay\u0131n hedefidir (\\"event.target\\"). `event.stopPropagation` kullanarak \\"bubbling\\"\'i durdurabilirsiniz."],"id":30,"options":["D\u0131\u015ftaki `div`","\u0130\xe7teki `div`","`button`","\u0130\xe7 i\xe7e olan t\xfcm elemanlar listesi."],"problem":"<div onclick=\\"console.log(\'first div\')\\">\\n  <div onclick=\\"console.log(\'second div\')\\">\\n    <button onclick=\\"console.log(\'button\')\\">\\n      Click!\\n    </button>\\n  </div>\\n</div>\\n","question":"Butona t\u0131kland\u0131\u011f\u0131nda, event.target nedir?"},{"answer":0,"explanation":["E\u011fer `p`\'ye t\u0131klarsak, iki log g\xf6r\xfcr\xfcz: `p` ve `div`. Olay silsilesi, \\"event propagation\\", s\u0131ras\u0131nda, 3 a\u015fama vard\u0131r: \\"capturing\\", \\"target\\", ve \\"bubbling\\". Varsay\u0131lan olarak, olay i\u015fleyiciler, \\"event handlers\\", \\"bubbling\\" a\u015famas\u0131nda (`useCapture`\'\u0131 `true` olarak ayarlanmad\u0131\u011f\u0131 m\xfcddet\xe7e) \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. En derin elemandan d\u0131\u015fa do\u011fru gider."],"id":31,"options":["`p` `div`","`div` `p`","`p`","`div`"],"problem":"<div onclick=\\"console.log(\'div\')\\">\\n  <p onclick=\\"console.log(\'p\')\\">\\n    Click here!\\n  </p>\\n</div>\\n","question":"Paragrafa t\u0131klad\u0131\u011f\u0131n\u0131z zaman, \xe7\u0131kt\u0131 olarak ne loglan\u0131r?"},{"answer":3,"explanation":["\u0130kisinde de, `this` anahtar kelimesinin referans olmas\u0131n\u0131 istedi\u011fimiz nesneyi ge\xe7ebiliriz. Ancak, `.call` _an\u0131nda \xe7al\u0131\u015ft\u0131r\u0131l\u0131r_!","`.bind.` fonksiyonun _kopyas\u0131n\u0131_ d\xf6nd\xfcr\xfcr, ama konteksle ba\u011fl\u0131 \u015fekilde. An\u0131nda \xe7al\u0131\u015ft\u0131r\u0131lmaz."],"id":32,"options":["`undefined is 21` `Lydia is 21`","`function` `function`","`Lydia is 21` `Lydia is 21`","`Lydia is 21` `function`"],"problem":"const person = { name: \\"Lydia\\" };\\n\\nfunction sayHi(age) {\\n  console.log(`${this.name} is ${age}`);\\n}\\n\\nsayHi.call(person, 21);\\nsayHi.bind(person, 21);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`sayHi` fonksiyonu, an\u0131nda \xe7al\u0131\u015ft\u0131r\u0131lan fonksiyonun, \\"immediately invoked function (IIFE)\\", d\xf6nd\xfcrd\xfc\u011f\xfc de\u011feri d\xf6nd\xfcr\xfcr. Bu fonksiyon `0` d\xf6nd\xfcrd\xfc, k, tipi `\\"number\\"`\'d\u0131r.","Bilginize; 7 tane t\xfcmle\u015fik tip vard\u0131r: `null`, `undefined`, `boolean`, `number`, `string`, `object`, ve `symbol`. Fonksiyonlar nesne olduklar\u0131ndan, `\\"function\\"` tip de\u011fildir. Fonksiyonun tipi `\\"object\\"`\'dir."],"id":33,"options":["`\\"object\\"`","`\\"number\\"`","`\\"function\\"`","`\\"undefined\\"`"],"problem":"function sayHi() {\\n  return (() => 0)();\\n}\\n\\nconsole.log(typeof sayHi());\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Sadece 6 tane yanl\u0131\u015f-\u0131ms\u0131, \\"falsy\\", de\u011fer vard\u0131r:","`undefined`","`null`","`NaN`","`0`","`\'\'` (empty string)","`false`","Fonksiyon yap\u0131c\u0131lar\u0131, `new Number` ve `new Boolean` gibi, do\u011frusald\u0131r."],"id":34,"options":["`0`, `\'\'`, `undefined`","`0`, `new Number(0)`, `\'\'`, `new Boolean(false)`, `undefined`","`0`, `\'\'`, `new Boolean(false)`, `undefined`","All of them are falsy"],"problem":"0;\\nnew Number(0);\\n(\\"\\");\\n(\\" \\");\\nnew Boolean(false);\\nundefined;\\n","question":"Bu de\u011ferlerden hangileri yanl\u0131\u015f-\u0131ms\u0131d\u0131r (falsy)?"},{"answer":1,"explanation":["`typeof 1` `\\"number\\"` d\xf6nd\xfcr\xfcr.\\n`typeof \\"number\\"` `\\"string\\"` d\xf6nd\xfcr\xfcr."],"id":35,"options":["`\\"number\\"`","`\\"string\\"`","`\\"object\\"`","`\\"undefined\\"`"],"problem":"console.log(typeof typeof 1);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Dizi i\xe7inde, dizinin uzunlu\u011funu a\u015fan bir elemana de\u011fer atad\u0131\u011f\u0131n\u0131zda, JavaScript \\"bo\u015f alanlar, \\"empty slots\\", denilen bir \u015fey olu\u015fturur. Bunlar\u0131n de\u011feri asl\u0131nda `undefined` olsa da \u015f\xf6yle bir \u015fey g\xf6r\xfcrs\xfcn\xfcz:","`[1, 2, 3, 7 x empty, 11]`","nerede \xe7al\u0131\u015ft\u0131rd\u0131\u011f\u0131n\u0131za ba\u011fl\u0131 olarak (her taray\u0131c\u0131, node, vb... i\xe7in farkl\u0131d\u0131r.)"],"id":36,"options":["`[1, 2, 3, 7 x null, 11]`","`[1, 2, 3, 11]`","`[1, 2, 3, 7 x empty, 11]`","`SyntaxError`"],"problem":"const numbers = [1, 2, 3];\\nnumbers[10] = 11;\\nconsole.log(numbers);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`catch` blo\u011fu `x` arguman\u0131n\u0131 al\u0131yor. Argumanlar\u0131 ge\xe7ti\u011fimiz zaman, bu de\u011fi\u015fken olan `x` ile ayn\u0131 de\u011fildir. Bu `x` de\u011fi\u015fkeni block-scoped\'dur.","Sonra, bu block-scoped de\u011fi\u015fkeni `1`\'e e\u015fit olarak ayarlad\u0131k ve `y` de\u011fi\u015fkeninin de\u011ferini ayarlad\u0131k. Block-scoped `x` de\u011fi\u015fkenini loglad\u0131k, ki de\u011feri `1`\'e e\u015fitti.","`catch` blo\u011funun d\u0131\u015f\u0131nda, `x` hala `undefined`, ve `y` `2`\'dir. `catch` blo\u011funun d\u0131\u015f\u0131nda, `console.log(x)` \xe7al\u0131\u015ft\u0131rmak istedi\u011fimizde `undefined` d\xf6nd\xfcr\xfcr ve `y` `2` d\xf6nd\xfcr\xfcr."],"id":37,"options":["`1` `undefined` `2`","`undefined` `undefined` `undefined`","`1` `1` `2`","`1` `undefined` `undefined`"],"problem":"(() => {\\n  let x, y;\\n  try {\\n    throw new Error();\\n  } catch (x) {\\n    (x = 1), (y = 2);\\n    console.log(x);\\n  }\\n  console.log(x);\\n  console.log(y);\\n})();\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["JavaScript sadece primitif ve nesne tiplerine sahiptir.","Primitif tipler, `boolean`, `null`, `undefined`, `bigint`, `number`, `string`, ve `symbol`.","Primitif ve nesneyi birbirinden ay\u0131ran, primitif tiplerin herhangi bir \xf6zelli\u011fe ya da metoda sahip olmamas\u0131d\u0131r; ancak, fark edece\u011finiz \xfczere `\'foo\'.toUpperCase()` `\'FOO\'` olarak de\u011fer d\xf6nd\xfcr\xfcr ve `TypeError` ile sonu\xe7lanmaz. Bunun sebebi, string gibi primitif bir tip \xfczerinde \xf6zelli\u011fe ya da methoda eri\u015fmeye \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131zda, JavaScript sar\u0131c\u0131 s\u0131n\u0131flardan, \\"wrapper classes\\", birini kullanarak nesneyi dolayl\u0131 \u015fekilde sarar, \xf6rne\u011fin `String`, ve sonras\u0131nda ifade \xe7al\u0131\u015ft\u0131ktan sonra an\u0131nda sar\u0131c\u0131y\u0131 ay\u0131r\u0131r. `null` ve `undefined` d\u0131\u015f\u0131ndaki t\xfcm primitifler bu \u015fekilde davran\u0131r."],"id":38,"options":["primitifdir ya da nesnedir","fonksiyondur or nesnedir","tuzak soru! sadece nesnedir","say\u0131d\u0131r (number) ya da nesnedir"],"problem":"","question":"JavaScript\'teki her \u015fey ya bir..."},{"answer":2,"explanation":["`[1, 2]` ba\u015flang\u0131\xe7 de\u011ferimizdir. Ba\u015flad\u0131\u011f\u0131m\u0131z de\u011fer budur ve `acc`\'nin en ilk de\u011feridir. \u0130lk tur s\xfcresince, `acc` `[1,2]`\'dir ve `cur` `[0, 1]`\'dir. Onlar\u0131 birle\u015ftiririz ve `[1, 2, 0, 1]` olarak sonu\xe7lan\u0131r.","Sonra, `acc` `[1, 2, 0, 1]`\'dir ve `cur` `[2, 3]`\'d\xfcr. Onlar\u0131 birle\u015ftiririz ve `[1, 2, 0, 1, 2, 3]` elde ederiz."],"id":39,"options":["`[0, 1, 2, 3, 1, 2]`","`[6, 1, 2]`","`[1, 2, 0, 1, 2, 3]`","`[1, 2, 6]`"],"problem":"[[0, 1], [2, 3]].reduce(\\n  (acc, cur) => {\\n    return acc.concat(cur);\\n  },\\n  [1, 2]\\n);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`null` yanl\u0131\u015f-\u0131ms\u0131d\u0131r, \\"falsy\\". `!null` `true` d\xf6nd\xfcr\xfcr. `!true` `false` d\xf6nd\xfcr\xfcr.","`\\"\\"` yanl\u0131\u015f-\u0131ms\u0131d\u0131r. `!\\"\\"` `true` d\xf6nd\xfcr\xfcr. `!true` `false` d\xf6nd\xfcr\xfcr.","`1` do\u011frusald\u0131r. `!1` `false` d\xf6nd\xfcr\xfcr. `!false` `true` d\xf6nd\xfcr\xfcr."],"id":40,"options":["`false` `true` `false`","`false` `false` `true`","`false` `true` `true`","`true` `true` `false`"],"problem":"!!null;\\n!!\\"\\";\\n!!1;\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Benzersiz bir id d\xf6nd\xfcr\xfcr. Bu id, s\xfcre aral\u0131\u011f\u0131n\u0131, \\"interval\\", `clearInterval()` fonksiyonu ile temizlemek i\xe7in kullan\u0131labilinir."],"id":41,"options":["benzersiz bir id","belirtilen milisayine tutar\u0131","g\xf6nderilen fonksiyon","`undefined`"],"problem":"setInterval(() => console.log(\\"Hi\\"), 1000);\\n","question":"`setInterval` methodu taray\u0131c\u0131da ne d\xf6nd\xfcr\xfcr?"},{"answer":0,"explanation":["String, yinelenebilirdir, \\"iterable\\". Yayma operat\xf6r\xfc, yenilenebilirin her bir karakterini bir elemana e\u015fler."],"id":42,"options":["`[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]`","`[\\"Lydia\\"]`","`[[], \\"Lydia\\"]`","`[[\\"L\\", \\"y\\", \\"d\\", \\"i\\", \\"a\\"]]`"],"problem":"[...\\"Lydia\\"];\\n","question":"Ne d\xf6nd\xfcr\xfcr?"},{"answer":2,"explanation":["S\u0131radan fonksiyonlar y\xfcr\xfctmenin ba\u015flamas\u0131n\u0131n ard\u0131ndan yar\u0131 yolda durdurulamaz. Ancak, bir generator fonksiyon yar\u0131 yolda \\"durdurabilir\\" ve sonra nerede kald\u0131ysa devam edebilir. Bir generator fonksiyon ne zaman `yield` anahtar kelimesiyle kar\u015f\u0131la\u015fsa, yield\'de belirtilen de\u011feri verir. Dikkat edin, generator fonksiyon de\u011feri _d\xf6nd\xfcrmez_ (_return_), de\u011feri _verir_ (_yield_).","\xd6nce, generator fonksiyonu `i`\'yi `10`\'a e\u015fitleyerek ba\u015flat\u0131yoruz. `next()` metodunu kullanarak generator fonksiyonu \xe7al\u0131\u015ft\u0131r\u0131yoruz. \u0130lk kez generator fonksiyonu \xe7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda, `i` `10`\'a e\u015fit. Fonksiyon ilk `yield` anahtar kelimesi ile kar\u015f\u0131la\u015f\u0131yor: `i`\'nin de\u011ferini veriyor. Generat\u0131r \u015fimdi \\"durdu\\", ve `10` logland\u0131.","Sonra, `next()` metodunu kullanarak fonksiyonu tekrar \xe7al\u0131\u015ft\u0131r\u0131yoruz. Fonksiyon \xf6nceki kald\u0131\u011f\u0131 yerden \xe7al\u0131\u015fmaya devam ediyor, `i` hala `10`\'a e\u015fit. \u015eimdi, fonksiyon s\u0131raki `yield` anahtar kelimesi ile kar\u015f\u0131la\u015f\u0131yor, ve `i * 2`\'yi veriyor, yani fonksiyon `10 * 2` veriyor, ki o da `20`\'dir. `10, 20` \u015feklinde sonu\xe7lan\u0131yor."],"id":43,"options":["`[0, 10], [10, 20]`","`20, 20`","`10, 20`","`0, 10 and 10, 20`"],"problem":"function* generator(i) {\\n  yield i;\\n  yield i * 2;\\n}\\n\\nconst gen = generator(10);\\n\\nconsole.log(gen.next().value);\\nconsole.log(gen.next().value);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`Promise.race` methoduna bir\xe7ok promise ge\xe7ti\u011fimiz zaman, _ilk_ \xe7\xf6z\xfcmlenen/reddedilen, \\"resolves/rejects\\", promise\'i \xe7\xf6z\xfcmler/reddeder . `setTimeout` methoduna, zamanlay\u0131c\u0131, \\"timer\\", ge\xe7tik: ilk promise (`firstPromise`) i\xe7in 500ms, ve ikinci promise (`secondPromise`) i\xe7in 100ms. Bu demektir ki `secondPromise` `\'two\'` de\u011feriyle birlikte \xf6nce \xe7\xf6z\xfcmlenir. `res` saklad\u0131\u011f\u0131 `\'two\'` de\u011feriyle loglan\u0131r."],"id":44,"options":["`\\"one\\"`","`\\"two\\"`","`\\"two\\" \\"one\\"`","`\\"one\\" \\"two\\"`"],"problem":"const firstPromise = new Promise((res, rej) => {\\n  setTimeout(res, 500, \\"one\\");\\n});\\n\\nconst secondPromise = new Promise((res, rej) => {\\n  setTimeout(res, 100, \\"two\\");\\n});\\n\\nPromise.race([firstPromise, secondPromise]).then(res => console.log(res));\\n","question":"Ne d\xf6nd\xfcr\xfcr?"},{"answer":3,"explanation":["\xd6nce, `person` de\u011fi\u015fkenini, `name` \xf6zelli\u011fine sahip bir nesne de\u011feriyle birlikte tan\u0131mlar\u0131z.","<img src=\\"https://i.imgur.com/TML1MbS.png\\" width=\\"200\\">","Sonra, `members` olarak adland\u0131rd\u0131\u011f\u0131m\u0131z de\u011fi\u015fkeni tan\u0131mlar\u0131z. Bu dizinin ilk eleman\u0131n\u0131, `person` de\u011fi\u015fkeninin de\u011ferine e\u015fit olarak ayarlar\u0131z. Nesneler, birbirlerine e\u015fitlendiklerinde, _referans_ \xfczerinden etkile\u015fime girer. Bir referans\u0131, bir de\u011fi\u015fkenden di\u011ferine atad\u0131\u011f\u0131n\u0131z zaman, o referans\u0131n _kopyas\u0131n\u0131_ olu\u015fturursunuz. (de\u011fi\u015fkenlerin _ayn\u0131_ referansa sahip olmad\u0131\u011f\u0131na dikkat edin!)","<img src=\\"https://i.imgur.com/FSG5K3F.png\\" width=\\"300\\">","Sonra, `person` de\u011fi\u015fkenini `null`\'a e\u015fit olarak ayarlar\u0131z.","<img src=\\"https://i.imgur.com/sYjcsMT.png\\" width=\\"300\\">","Sadece `person` de\u011fi\u015fkeninin de\u011ferini de\u011fi\u015ftiriyoruz, dizideki ilk eleman\u0131 de\u011fil, ilk eleman nesneyi g\xf6steren farkl\u0131 (kopyalanm\u0131\u015f) bir referansa sahip. `members` i\xe7indeki ilk eleman hala orijinal nesneyi g\xf6steren referans\u0131n\u0131 sakl\u0131yor. `members` dizisini loglad\u0131\u011f\u0131m\u0131z zaman, ilk eleman\u0131n hala saklad\u0131\u011f\u0131 nesnenin de\u011feri loglan\u0131r."],"id":45,"options":["`null`","`[null]`","`[{}]`","`[{ name\\"Lydia\\" }]`"],"problem":"let person = { name: \\"Lydia\\" };\\nconst members = [person];\\nperson = null;\\n\\nconsole.log(members);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`for-in` d\xf6ng\xfcs\xfcyle, nesne keyleri boyunca ileryebiliriz, bu durumda `name` ve `age`. Temelde, nesne keyleri stringdir (e\u011fer Symbol de\u011filse). Her d\xf6ng\xfcde, `item`\'in de\u011ferini, d\xf6ng\xfc s\u0131ras\u0131ndaki ge\xe7erli key olarak e\u015fitleriz. \xd6nce, `item` `name`\'e e\u015fittir, ve loglan\u0131r. Sonra loglanan `item`, `age`\'e e\u015fittir."],"id":46,"options":["`{ name\\"Lydia\\" }, { age21 }`","`\\"name\\", \\"age\\"`","`\\"Lydia\\", 21`","`[\\"name\\", \\"Lydia\\"], [\\"age\\", 21]`"],"problem":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n};\\n\\nfor (const item in person) {\\n  console.log(item);\\n}\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Operat\xf6r birle\u015fme \xf6zelli\u011fi, \\"operator associativity, derleyicinin ifadeleri \xe7al\u0131\u015ft\u0131rd\u0131\u011f\u0131 s\u0131rad\u0131r, ya soldan sa\u011fa ya da sa\u011fdan solad\u0131r. Bu sadece, e\u011fer t\xfcm operat\xf6rler _ayn\u0131_ \xf6nceli\u011fe sahipse ger\xe7ekle\u015fir. Sadece tek tip operat\xf6r\xfcm\xfcz var: `+`. Toplama i\xe7in birle\u015fme \xf6zelli\u011fi soldan sa\u011fad\u0131r.","`3 + 4` \xf6nce \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. `7` say\u0131s\u0131 olarak sonu\xe7lan\u0131r.","Tip bask\u0131s\u0131ndan, \\"coercion\\", dolay\u0131 `7 + \'5\'`, `\\"75\\"` olarak sonu\xe7lan\u0131r. JavaScript `7` say\u0131s\u0131n\u0131 string\'e \xe7evirir, 15. soruya bakabilirsiniz. \u0130ki string\'i `+` operat\xf6r\xfcn\xfc kullanarak birle\u015ftirebiliriz. `\\"7\\" + \\"5\\"` `\\"75\\"` olarak sonu\xe7lan\u0131r."],"id":47,"options":["`\\"345\\"`","`\\"75\\"`","`12`","`\\"12\\"`"],"problem":"console.log(3 + 4 + \\"5\\");\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Sadece string i\xe7indeki ilk say\u0131lar d\xf6nd\xfcr\xfcl\xfcr. _Say\u0131 taban\u0131na_ (hangi tipte say\u0131ya \xe7\xf6z\xfcmlemek istedi\u011fimizi belirtmek i\xe7in ge\xe7ilen ikinci arg\xfcman: 10\'lu, onalt\u0131l\u0131, sekizli, ikili tabanda vb...) ba\u011fl\u0131 olarak, `parseInt` string i\xe7indeki hangi karakterlerin ge\xe7erli oldu\u011funu kontrol eder. Say\u0131 taban\u0131nda, ge\xe7erli olmayan bir karaktere denk geldi\u011finde, \xe7\xf6z\xfcmleyi durdurur ve sonraki gelen karakterleri g\xf6rmezden gelir.","`*` ge\xe7erli bir say\u0131 de\u011fil. `parseInt` sadece `\\"7\\"`\'yi ondal\u0131k sistemde `7`\'ye \xe7\xf6z\xfcmler. `num`, `7` de\u011ferini sakl\u0131yor art\u0131k."],"id":48,"options":["`42`","`\\"42\\"`","`7`","`NaN`"],"problem":"const num = parseInt(\\"7*6\\", 10);\\n","question":"`num` \u0131n de\u011feri nedir?"},{"answer":2,"explanation":["Dizi \xfczerinde e\u015fleme yaparken, `num`\'\u0131n de\u011feri, o anda d\xf6ng\xfcye giren eleman\u0131n de\u011ferine e\u015fittir. Bu durumda, elemanlar say\u0131, yani `typeof num === \\"number\\"` ko\u015ful ifadesi `true` durdurur. map fonksiyonu yeni bir dizi olu\u015fturur ve fonksiyondan d\xf6nen de\u011ferleri yerle\u015ftirir.","Ancak, biz de\u011fer d\xf6nd\xfcrm\xfcyoruz. Bir fonksiyondan de\u011fer d\xf6nd\xfcrmedi\u011fimiz zaman, fonksiyon `undefined` d\xf6nd\xfcr\xfcr. Dizideki her eleman i\xe7in, fonksiyon blo\u011fu \xe7a\u011fr\u0131l\u0131r, yani her bir eleman i\xe7in `undefined` d\xf6nd\xfcr\xfcr\xfcz."],"id":49,"options":["`[]`","`[null, null, null]`","`[undefined, undefined, undefined]`","`[ 3 x empty ]`"],"problem":"[1, 2, 3].map(num => {\\n  if (typeof num === \\"number\\") return;\\n  return num * 2;\\n});\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir`?"},{"answer":0,"explanation":["Arg\xfcmanlar _de\u011fer_ olarak ge\xe7ilir, de\u011ferleri nesne olmad\u0131klar\u0131 m\xfcddet\xe7e, e\u011fer \xf6yleyse _referans_ olarak ge\xe7ilir. `birthYear` nesne de\u011fil string oldu\u011fundan de\u011fer olarak ge\xe7ilir. Arg\xfcmanlar\u0131 de\u011fer olarak ge\xe7ti\u011fimizde, o de\u011ferin bir _kopyas\u0131_ olu\u015fturulur (46. soruya g\xf6z at\u0131n).","`birthYear` de\u011fi\u015fkeni `\\"1997\\"` de\u011feri i\xe7in referansa sahip. `year` arg\xfcman\u0131 da ayr\u0131ca `\\"1997\\"` de\u011feri i\xe7in referansa sahip, ama `birthYear`\'\u0131n sahip oldu\u011fu referans\u0131n de\u011feri ile ayn\u0131 de\u011fer de\u011fil. `year`\'\u0131n de\u011ferini `\\"1998\\"`\'e e\u015fit olarak ayarlay\u0131p g\xfcncelledi\u011fimizde, sadece `year`\'\u0131n de\u011ferini g\xfcncelleriz. `birthYear` hala `\\"1997\\"`\'e e\u015fittir.","`person`\'\u0131n de\u011feri bir nesnedir. `member` arg\xfcman\u0131 _ayn\u0131_ nesne i\xe7in (kopyalanm\u0131\u015f) referansa sahip. `member` nesnesinin \xf6zelli\u011fini de\u011fi\u015ftirdi\u011fimizde, `person`\'\u0131n de\u011feri de ayr\u0131ca de\u011fi\u015fmi\u015f olacakt\u0131r, ikisi de ayn\u0131 nesne i\xe7in referansa sahip olduklar\u0131ndan. `person`\'\u0131n `name` \xf6zelli\u011fi \u015fimdi `\\"Lydia\\"` de\u011ferine e\u015fittir."],"id":50,"options":["`{ name\\"Lydia\\" }, \\"1997\\"`","`{ name\\"Sarah\\" }, \\"1998\\"`","`{ name\\"Lydia\\" }, \\"1998\\"`","`{ name\\"Sarah\\" }, \\"1997\\"`"],"problem":"function getInfo(member, year) {\\n  member.name = \\"Lydia\\";\\n  year = \\"1998\\";\\n}\\n\\nconst person = { name: \\"Sarah\\" };\\nconst birthYear = \\"1997\\";\\n\\ngetInfo(person, birthYear);\\n\\nconsole.log(person, birthYear);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["`throw` ifadesi ile, \xf6zelle\u015ftirilmi\u015f hatalar olu\u015fturabiliriz. Bu ifade ile, hatalar f\u0131rlatabilirsiniz. Hata durumu, \\"exception\\", bir <b>string</b>, <b>say\u0131</b>, <b>do\u011fru/yanl\u0131\u015f</b> ya da <b>nesne</b> olabilir. Bu durumda, bizim hata durumumuz string olan `\'Hello world\'`.","`catch` ifadesi ile, e\u011fer `try` blo\u011funda bir hata durumu f\u0131rlat\u0131lm\u0131\u015fsa ne yapaca\u011f\u0131m\u0131z\u0131 belirtebiliriz. Bir hata durumu f\u0131rlat\u0131ld\u0131: `\'Hello world\'` string\'i. `e` art\u0131k bu string\'e e\u015fit, ki onu logluyoruz. `\'Oh an error: Hello world\'` olarak sonu\xe7 veriyor."],"id":51,"options":["`\\"It worked! Hello world!\\"`","`\\"Oh no an errorundefined`","`SyntaxErrorcan only throw Error objects`","`\\"Oh no an errorHello world!`"],"problem":"function greeting() {\\n  throw \\"Hello world!\\";\\n}\\n\\nfunction sayHi() {\\n  try {\\n    const data = greeting();\\n    console.log(\\"It worked!\\", data);\\n  } catch (e) {\\n    console.log(\\"Oh no an error!\\", e);\\n  }\\n}\\n\\nsayHi();\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Bir \xf6zellik d\xf6nd\xfcrd\xfc\u011f\xfcn\xfcz zaman, \xf6zelli\u011fin de\u011feri _d\xf6nd\xfcr\xfclen_ de\u011fere e\u015fittir, yap\u0131c\u0131 fonksiyon i\xe7inde atanm\u0131\u015f de\u011fere de\u011fil. `\\"Maserati\\"` string\'ini d\xf6nd\xfcr\xfcyoruz, yani `myCar.make` `\\"Maserati\\"`\'ye e\u015fittir."],"id":52,"options":["`\\"Lamborghini\\"`","`\\"Maserati\\"`","`ReferenceError`","`TypeError`"],"problem":"function Car() {\\n  this.make = \\"Lamborghini\\";\\n  return { make: \\"Maserati\\" };\\n}\\n\\nconst myCar = new Car();\\nconsole.log(myCar.make);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`let x = y = 10;` asl\u0131nda \u015funun i\xe7in k\u0131sa yaz\u0131md\u0131r:","`y`\'yi `10`\'a e\u015fit olarak ayarlad\u0131\u011f\u0131m\u0131zda, asl\u0131nda global nesneye `y` \xf6zelli\u011fini ekliyoruz (taray\u0131c\u0131da `window`, Node i\xe7inde `global`). Taray\u0131c\u0131da, `window.y` art\u0131k `10`\'a e\u015fit.","Sonra, `x` de\u011fi\u015fkenini `y`\'nin de\u011feri ile birlkte tan\u0131ml\u0131yoruz ki o da `10`. `let` anahtar kelimesi ile tan\u0131mlanan de\u011fi\u015fkenler _block scope_\'dur, onlar sadece tan\u0131mland\u0131klar\u0131 blok i\xe7inde s\u0131n\u0131rl\u0131d\u0131r; bu durumda an\u0131nda \xe7al\u0131\u015ft\u0131r\u0131lan fonksiyon, \\"immediately-invoked function (IIFE)\\", ile s\u0131n\u0131rl\u0131. `typeof` operat\xf6r\xfcn\xfc kulland\u0131\u011f\u0131m\u0131z zaman, `x` operand\u0131 tan\u0131ml\u0131 de\u011fil: `x`\'e tan\u0131mland\u0131\u011f\u0131 blo\u011fun d\u0131\u015f\u0131ndan eri\u015fmeye \xe7al\u0131\u015f\u0131yoruz. Bu, `x` tan\u0131mlanmad\u0131 demektir. Bir de\u011fer atamas\u0131 yap\u0131lmam\u0131\u015f ya da tan\u0131mlanmam\u0131\u015f de\u011ferlerin tipi `\\"undefined\\"`\'d\u0131r. `console.log(typeof x)` `\\"undefined\\"` d\xf6nd\xfcr\xfcr.","Ancak, `y`\'yi `10`\'a e\u015fitlerken global de\u011fi\u015fken `y`\'yi olu\u015fturduk. Bu de\u011fer kodunuzun herhangi bir yerinden eri\u015filebilinir. `y` tan\u0131ml\u0131 ve `\\"number\\"` tipinde de\u011feri sakl\u0131yor. `console.log(typeof y)` `\\"number\\"` d\xf6nd\xfcr\xfcr."],"id":53,"options":["`\\"undefined\\", \\"number\\"`","`\\"number\\", \\"number\\"`","`\\"object\\", \\"number\\"`","`\\"number\\", \\"undefined\\"`"],"problem":"(() => {\\n  let x = (y = 10);\\n})();\\n\\nconsole.log(typeof x);\\nconsole.log(typeof y);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`delete` anahtar kelimesini kullanarak \xf6zellikleri hem nesnelerden hem de prototip \xfczerinden silebiliriz. Prototip \xfczerindeki bir \xf6zellik silindi\u011finde, art\u0131k prototip zincirinde kullan\u0131ma m\xfcsait de\u011fildir. Bu durumda, `bark` fonksiyonu, `delete Dog.prototype.bark` ard\u0131ndan, prototip \xfczerinden kullan\u0131labilir de\u011fildir fakat yine de eri\u015fmeye \xe7al\u0131\u015f\u0131yoruz.","Fonksiyon olmayan bir \u015feyi \xe7al\u0131\u015ft\u0131rmay\u0131 denedi\u011fimiz zaman, `TypeError` f\u0131rlat\u0131l\u0131r. Bu durumda, `pet.bark` `undefined` oldu\u011fundan, `TypeError: pet.bark is not a function` f\u0131rlat\u0131ld\u0131."],"id":54,"options":["`\\"Woof I am Mara\\"`, `TypeError`","`\\"Woof I am Mara\\"`,`\\"Woof I am Mara\\"`","`\\"Woof I am Mara\\"`, `undefined`","`TypeError`, `TypeError`"],"problem":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n}\\n\\nDog.prototype.bark = function() {\\n  console.log(`Woof I am ${this.name}`);\\n};\\n\\nconst pet = new Dog(\\"Mara\\");\\n\\npet.bark();\\n\\ndelete Dog.prototype.bark;\\n\\npet.bark();\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["`Set` nesnesi _benzersiz_ de\u011ferlerin koleksiyonudur: bir de\u011fer, set i\xe7inde sadece bir kez bulunabilir.","Yinelenebilir `[1, 1, 2, 3, 4]`\'i \xe7ift `1` de\u011feriyle birlikte ge\xe7tik. Set i\xe7inde ayn\u0131 de\u011fere iki kere sahip olamayaca\u011f\u0131m\u0131zdan, bir tanesi kald\u0131r\u0131ld\u0131. Sonu\xe7, `{1, 2, 3, 4}`."],"id":55,"options":["`[1, 1, 2, 3, 4]`","`[1, 2, 3, 4]`","`{1, 1, 2, 3, 4}`","`{1, 2, 3, 4}`"],"problem":"const set = new Set([1, 1, 2, 3, 4]);\\n\\nconsole.log(set);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["\u0130\xe7e aktar\u0131lan, \\"imported\\", modul _salt okur_\'dur: i\xe7e aktar\u0131lan modul\xfc de\u011fi\u015ftiremezsiniz. Sadece, d\u0131\u015fa aktar\u0131m yapan modul de\u011ferini de\u011fi\u015ftirebilir.","`myCounter`\'\u0131n de\u011ferini artt\u0131rmaya \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131z zaman, hata f\u0131rlat\u0131r: `myCounter` salt okurdur ve de\u011fi\u015ftirilemez."],"id":56,"options":["`10`","`11`","`Error`","`NaN`"],"problem":"// counter.js\\nlet counter = 10;\\nexport default counter;\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`delete` operat\xf6r\xfc do\u011fru/yanl\u0131\u015f, \\"boolean\\", de\u011fer d\xf6nd\xfcr\xfcr: silme ba\u015far\u0131l\u0131ysa `true`, de\u011filse `false` d\xf6nd\xfcrecektir. Ancak, `var`, `const` ya da `let` anahtar kelimeleri ile tan\u0131mlanan de\u011fi\u015fkenler, `delete` kullan\u0131larak silinemez.","`name` de\u011fi\u015fkeni `const` anahtar kelimesi ile tan\u0131mland\u0131, yani silinme i\u015flemi ba\u015far\u0131l\u0131 de\u011fil: `false` d\xf6nd\xfc. `age`\'i `21`\'e e\u015fitledi\u011fimizde, global nesneye `age` diye \xf6zellik ekledik asl\u0131nda. Bu y\xf6ntemle, sorunsuz \u015fekilde nesnelerden \xf6zellikleri silebilirsiniz, b\xf6ylelikle `delete age` `true` d\xf6nd\xfcr\xfcr."],"id":57,"options":["`false`, `true`","`\\"Lydia\\"`, `21`","`true`, `true`","`undefined`, `undefined`"],"problem":"const name = \\"Lydia\\";\\nage = 21;\\n\\nconsole.log(delete name);\\nconsole.log(delete age);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Listelerden de\u011ferleri ya da nesnelerden \xf6zellikleri, y\u0131k\u0131m yoluyla, \\"destructuring\\", \xe7\u0131karabiliriz. \xd6rne\u011fin:","<img src=\\"https://i.imgur.com/ADFpVop.png\\" width=\\"200\\">","`a`\'n\u0131n de\u011feri `1` ve `b`\'nin de\u011feri `2`\'dir. Bu soruda asl\u0131nda yapt\u0131\u011f\u0131m\u0131z \u015fuydu:","<img src=\\"https://i.imgur.com/NzGkMNk.png\\" width=\\"200\\">","Bu demektir ki, `y`\'nin de\u011feri dizideki ilk de\u011fere e\u015fit, o da `1` say\u0131s\u0131d\u0131r. `y`\'yi loglad\u0131\u011f\u0131m\u0131z zaman, `1` d\xf6nd\xfcr\xfcl\xfcr."],"id":58,"options":["`[[1, 2, 3, 4, 5]]`","`[1, 2, 3, 4, 5]`","`1`","`[1]`"],"problem":"const numbers = [1, 2, 3, 4, 5];\\nconst [y] = numbers;\\n\\nconsole.log(y);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Nesneleri `...` yayma operat\xf6r\xfc kullanarak birle\u015ftirmek, kombine etmek, m\xfcmk\xfcnd\xfcr. Bir nesnenin key/de\u011fer kopyas\u0131n\u0131 olu\u015fturman\u0131za olanak sunar, ve key/de\u011ferleri di\u011fer nesneye ekler. Bu durumda, `user` nesnesinin kopyas\u0131n\u0131 olu\u015fturuyoruz, ve onlar\u0131 `admin` nesnesine ekliyoruz. `admin` nesnesi \u015fimdi kopyalanan key/de\u011ferleri de i\xe7eriyor, ki bu da `{ admin: true, name: \\"Lydia\\", age: 21 }` olarak sonu\xe7 verir."],"id":59,"options":["`{ admintrue, user{ name\\"Lydia\\", age21 } }`","`{ admintrue, name\\"Lydia\\", age21 }`","`{ admintrue, user[\\"Lydia\\", 21] }`","`{ admintrue }`"],"problem":"const user = { name: \\"Lydia\\", age: 21 };\\nconst admin = { admin: true, ...user };\\n\\nconsole.log(admin);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`defineProperty` methodu ile, nesnelere yeni \xf6zellikler ekleyebiliriz, ya da var olanlar\u0131 de\u011fi\u015ftirebiliriz. `defineProperty` methodu kullanarak bir nesneye \xf6zellik ekledi\u011fimiz zaman, varsay\u0131lan olarak _s\u0131ralanabilir de\u011fildir_, \\"_not enumerable_\\". `Object.keys` methodu, bir nesneden t\xfcm _s\u0131ralanabilir_ \xf6zelliklerin ad\u0131n\u0131 d\xf6nd\xfcr\xfcr, bu durumda sadece `\\"name\\"`.","`defineProperty` methodu kullan\u0131larak eklenen \xf6zellikler, varsay\u0131lan olarak de\u011fi\u015fmezdir. Bu davran\u0131\u015f\u0131 `writable`, `configurable` ve `enumerable` kullaranak ezebilirsiniz. Bu y\xf6ntemle, `defineProperty` methodu nesnelere ekledi\u011finiz \xf6zellikler \xfczerinde size \xe7ok daha fazla kontrol verir."],"id":60,"options":["`{ name\\"Lydia\\", age21 }`, `[\\"name\\", \\"age\\"]`","`{ name\\"Lydia\\", age21 }`, `[\\"name\\"]`","`{ name\\"Lydia\\"}`, `[\\"name\\", \\"age\\"]`","`{ name\\"Lydia\\"}`, `[\\"age\\"]`"],"problem":"const person = { name: \\"Lydia\\" };\\n\\nObject.defineProperty(person, \\"age\\", { value: 21 });\\n\\nconsole.log(person);\\nconsole.log(Object.keys(person));\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`JSON.stringify`\'\u0131n ikinci arguman\u0131 _de\u011fi\u015ftiricidir_, _\\"replacer\\"_. De\u011fi\u015ftirici bir fonksiyon ya da bir dizi olabilir, ve de\u011ferlerin hangilerinin ve nas\u0131l string\'e d\xf6n\xfc\u015fece\u011fini kontrol etmenize izin verir.","E\u011fer de\u011fi\u015ftirici _dizi_ ise, sadece dizi i\xe7inde ismi ge\xe7em \xf6zellikler JSON string\'e dahil edilmi\u015f olur. Bu durumda, sadece  `\\"level\\"` ve `\\"health\\"` isimli \xf6zellikler dahil edildi, `\\"username\\"` d\u0131\u015far\u0131da b\u0131rak\u0131ld\u0131. `data`, `\\"{\\"level\\":19, \\"health\\":90}\\"` e\u015fittir.","E\u011fer de\u011fi\u015ftirici _fonksiyon_ ise, stringe d\xf6n\xfc\u015ft\xfcr\xfclen her \xf6zellik i\xe7in bu fonksiyon \xe7a\u011fr\u0131l\u0131r. Bu fonksiyondan d\xf6nen de\u011fer, JSON stringe eklenmi\u015f olacak \xf6zelli\u011fin de\u011feri olacakt\u0131r. E\u011fer de\u011fer `undefined`\'sa, bu \xf6zellik JSON stringe dahil edilmez."],"id":61,"options":["`\\"{\\"level\\":19, \\"health\\":90}\\"`","`\\"{\\"username\\"\\"lydiahallie\\"}\\"`","`\\"[\\"level\\", \\"health\\"]\\"`","`\\"{\\"username\\"\\"lydiahallie\\", \\"level\\":19, \\"health\\":90}\\"`"],"problem":"const settings = {\\n  username: \\"lydiahallie\\",\\n  level: 19,\\n  health: 90\\n};\\n\\nconst data = JSON.stringify(settings, [\\"level\\", \\"health\\"]);\\nconsole.log(data);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`++` unary operat\xf6r\xfc _\xf6nce_ operand\u0131n de\u011ferini d\xf6nd\xfcr\xfcr, _sonra_ operand\u0131n de\u011ferini artt\u0131r\u0131r. `increaseNumber` fonksiyonu \xf6nce de\u011feri `10` olan `num`\'\u0131n de\u011ferini d\xf6nd\xfcrd\xfc\u011f\xfcnden, `num1`\'\u0131n de\u011feri `10`\'dur, ve `num`\'\u0131n de\u011feri ancak bundan sonra artar.","`increasePassedNumber`\'a `num1`\'i ge\xe7ti\u011fimizden, `num2`\'nin de\u011feri `10`\'dur. `number` `10`\'a e\u015fittir (`num1`\'\u0131n de\u011feri. Bir kez daha, `++` operat\xf6r\xfc _\xf6nce_ operand\u0131n de\u011ferini d\xf6nd\xfcr\xfcr, _sonra_ operand\u0131n de\u011ferini artt\u0131r\u0131r. `number`\'\u0131n de\u011feri `10`, yani `num2` `10`\'a e\u015fittir.)"],"id":62,"options":["`10`, `10`","`10`, `11`","`11`, `11`","`11`, `12`"],"problem":"let num = 10;\\n\\nconst increaseNumber = () => num++;\\nconst increasePassedNumber = number => number++;\\n\\nconst num1 = increaseNumber();\\nconst num2 = increasePassedNumber(num1);\\n\\nconsole.log(num1);\\nconsole.log(num2);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["ES6\'da, parametrelere varsay\u0131lan de\u011fer atayabiliriz. E\u011fer fonksiyona de\u011fer ge\xe7ilmezse ya da parametrenin de\u011feri `undefined` ise, parametrenin de\u011feri varsay\u0131lan de\u011fer olacakt\u0131r. Bu \xf6rnekte, `value` nesnesinin \xf6zelliklerini yeni nesneye yayd\u0131k, b\xf6ylece `x` varsay\u0131lan de\u011fer olarak `{ number: 10}`\'a sahip.","Varsay\u0131lan arg\xfcman _\xe7a\u011fr\u0131 s\u0131ras\u0131nda_, \\"_call time_\\", \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. Fonksiyonu her \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131zda, _yeni_ bir nesne olu\u015fturulur. `multiply` fonksiyonunu ilk iki seferde de\u011fer ge\xe7meden \xe7a\u011f\u0131rd\u0131k: `x` varsay\u0131lan de\u011feri olan `{ number: 10 }`\'a sahip. Sonra, bu say\u0131n\u0131n \xe7arp\u0131lm\u0131\u015f de\u011ferini logluyoruz, o da `20`.","\xdc\xe7\xfcnc\xfc kez, `multiply`\'\u0131 \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman, arg\xfcman ge\xe7iyoruz: `value` isimli nesne. `*=` operat\xf6r\xfc asl\u0131nda `x.number = x.number * 2` i\xe7in k\u0131sa yaz\u0131md\u0131r: `x.number`\'\u0131n de\u011ferini de\u011fi\u015ftiriyoruz ve \xe7arp\u0131lm\u0131\u015f de\u011fer olan `20`\'yi logluyoruz.","D\xf6rd\xfcnc\xfc kez, `value` nesnesini tekrar ge\xe7iyoruz. `x.number` \xf6nceden `20`\'ye de\u011fi\u015ftirilmi\u015fti, yani `x.number *= 2` `40` loglar."],"id":63,"options":["`20`, `40`, `80`, `160`","`20`, `40`, `20`, `40`","`20`, `20`, `20`, `40`","`NaN`, `NaN`, `20`, `40`"],"problem":"const value = { number: 10 };\\n\\nconst multiply = (x = { ...value }) => {\\n  console.log((x.number *= 2));\\n};\\n\\nmultiply();\\nmultiply();\\nmultiply(value);\\nmultiply(value);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["`reduce` methodunun ald\u0131\u011f\u0131 ilk arg\xfcman _biriktiricidir_, \\"_accumulator_\\", bu \xf6rnekte `x`. \u0130kinci arg\xfcman _o anki de\u011ferdir_, `y`. reduce methodu ile, dizideki her eleman \xfczerinde callback fonksiyonunu \xe7al\u0131\u015ft\u0131r\u0131r\u0131z, bu da en sonunda tek bir de\u011fer sonu\xe7lanabilir.","Bu \xf6rnekte, geriye bir de\u011fer d\xf6nd\xfcrm\xfcyoruz, sadece biriktiricinin de\u011ferini ve o anki de\u011feri logluyoruz.","Biriktiricinin de\u011feri, bir \xf6nceki callback fonksiyonunun d\xf6nen de\u011ferine e\u015fittir. E\u011fer, opsiyonel olan `initialValue` ag\xfcman\u0131n\u0131 `reduce` methoduna ge\xe7mezseniz, biriktiricinin de\u011feri, ilk \xe7a\u011fr\u0131l\u0131\u015fta gelen elemana e\u015fit olur.","\u0130lk \xe7a\u011fr\u0131l\u0131\u015fta, biriktirici (`x`) `1`\'dir, ve `y`\'nin o anki de\u011feri `2`\'dir. callback fonksiyonundan bir \u015fey d\xf6nd\xfcrm\xfcyoruz, biriktiriciyi ve o anki de\u011feri logluyoruz: `1`  ve `2` loglan\u0131r.","E\u011fer bir fonksiyondan de\u011fer d\xf6nd\xfcrmezseniz, fonksiyon `undefined` d\xf6nd\xfcr\xfcr. Sonraki \xe7a\u011fr\u0131l\u0131\u015fta, biriktirici `undefined`, ve o anki ge\xe7erli de\u011fer `3`\'t\xfcr. `undefined` ve `3` loglan\u0131r.","D\xf6rd\xfcnd\xfc \xe7a\u011fr\u0131da, tekrar callback fonksiyonundan de\u011fer d\xf6nd\xfcrm\xfcyoruz. Biriktirici tekrar `undefined`, ve o anki ge\xe7erli de\u011fer `4`. `undefined` ve `4` loglan\u0131r."],"id":64,"options":["`1` `2` and `3` `3` and `6` `4`","`1` `2` and `2` `3` and `3` `4`","`1` `undefined` and `2` `undefined` and `3` `undefined` and `4` `undefined`","`1` `2` and `undefined` `3` and `undefined` `4`"],"problem":"[1, 2, 3, 4].reduce((x, y) => console.log(x, y));\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["T\xfcretilmi\u015f bir s\u0131n\u0131fta, `super`\'i \xe7a\u011f\u0131rmadan \xf6nce `this` anahtar kelimesine eri\u015femezsiniz. E\u011fer eri\u015fmeyi denerseniz, ReferenceError f\u0131rlat\u0131r: 1 ve 4 referans hatas\u0131 f\u0131rlat\u0131r.","`super` anahtar kelimesiyle, parent s\u0131n\u0131f\u0131n yap\u0131c\u0131 methodunu verilen arg\xfcmanlarla beraber \xe7a\u011f\u0131r\u0131r\u0131z. Parent s\u0131n\u0131f\u0131n yap\u0131c\u0131s\u0131 `name` arg\xfcman\u0131n\u0131 al\u0131yor, bu y\xfczden `super`\'e `name`\'i vermemiz gerek.","`Dog` s\u0131n\u0131f\u0131 iki arg\xfcman al\u0131yor, `name` `Animal` s\u0131n\u0131f\u0131ndan t\xfcredi\u011finden, ve `size` `Dog` s\u0131n\u0131f\u0131 \xfczerinde ekstra \xf6zellik olarak. \u0130kisinin de `Dog` yap\u0131c\u0131 methoduna  ge\xe7ilmesi gerek, bu da 2. yap\u0131c\u0131 methodda do\u011fru \u015fekilde kullan\u0131larak yap\u0131lm\u0131\u015ft\u0131r."],"id":65,"options":["1","2","3","4"],"problem":"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n};\\n\\nclass Labrador extends Dog {\\n  // 1 \\n  constructor(name, size) {\\n    this.size = size;\\n  }\\n  // 2\\n  constructor(name, size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 3\\n  constructor(size) {\\n    super(name);\\n    this.size = size;\\n  }\\n  // 4 \\n  constructor(name, size) {\\n    this.name = name;\\n    this.size = size;\\n  }\\n\\n};\\n","question":"Hangi yap\u0131c\u0131 method (constructor) ile `Dog` s\u0131n\u0131f\u0131ndan ba\u015far\u0131l\u0131 \u015fekilde kal\u0131t\u0131m yapabiliriz?"},{"answer":1,"explanation":["`import` anahtar kelimesiyle, t\xfcm i\xe7e aktar\u0131lan mod\xfcller _ilk \xe7\xf6z\xfcmlenir_, \\"_pre-parsed_\\". Bu \u015fu demektir, i\xe7e aktar\u0131lan mod\xfcller _\xf6nce_ \xe7al\u0131\u015f\u0131r, i\xe7e aktar\u0131m yapan dosyadaki kodlar _sonra_ \xe7al\u0131\u015ft\u0131r\u0131l\u0131r.","CommonJS\'deki `require()` ve `import` aras\u0131ndaki fark budur! `require()` ile, ba\u011f\u0131ml\u0131l\u0131klar\u0131 kod \xe7al\u0131\u015fmaya ba\u015flad\u0131\u011f\u0131nda y\xfckleyebilirsiniz. `import` yerine `require` kullanm\u0131\u015f olsayd\u0131k, `running index.js`, `running sum.js`, `3` konsolda loglanm\u0131\u015f olacakt\u0131."],"id":66,"options":["`running index.js`, `running sum.js`, `3`","`running sum.js`, `running index.js`, `3`","`running sum.js`, `3`, `running index.js`","`running index.js`, `undefined`, `running sum.js`"],"problem":"// index.js\\nconsole.log(\'running index.js\');\\nimport { sum } from \'./sum.js\';\\nconsole.log(sum(1, 2));\\n\\n// sum.js\\nconsole.log(\'running sum.js\');\\nexport const sum = (a, b) => a + b;\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Her Symbol tamamen benzersizdir. Symbol\'e ge\xe7ilen arg\xfcman\u0131n amac\u0131, Symbol\'e bir a\xe7\u0131klama vermektir. Symbol\'\xfcn de\u011feri ge\xe7ilen arg\xfcmana ba\u011fl\u0131 de\u011fildir. E\u015fitli\u011fi test ederken, tamamen yeni iki symbol olu\u015fturuyoruz: ilki `Symbol(\'foo\')` ve ikincisi `Symbol(\'foo\')`. Bu iki de\u011fer benzersiz ve birbirlerine e\u015fit de\u011fil, `Symbol(\'foo\') === Symbol(\'foo\')` `false` d\xf6nd\xfcr\xfcr."],"id":67,"options":["`true`, `true`, `false`","`false`, `true`, `false`","`true`, `false`, `true`","`true`, `true`, `true`"],"problem":"console.log(Number(2) === Number(2))\\nconsole.log(Boolean(false) === Boolean(false))\\nconsole.log(Symbol(\'foo\') === Symbol(\'foo\'))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["`padStart` methoduyla, bir string\'in ba\u015flang\u0131c\u0131na dolgu yapabiliriz. Bu methoda ge\xe7ilen de\u011fer, dolguyla beraber string\'in _toplam_ uzunlu\u011fudur. `\\"Lydia Hallie\\"`\'in uzunlu\u011fu `12`, `name.padStart(13)` string\'in ba\u015flang\u0131c\u0131na 1 bo\u015fluk eker, \xe7\xfcnk\xfc 12 + 1 = 13.","E\u011fer `padStart` methoduna ge\xe7ilen arg\xfcman, string\'in uzunlu\u011fundan daha azsa, dolgu yap\u0131lmaz."],"id":68,"options":["`\\"Lydia Hallie\\"`, `\\"Lydia Hallie\\"`","`\\"           Lydia Hallie\\"`, `\\"  Lydia Hallie\\"` (`\\"[13x whitespace]Lydia Hallie\\"`, `\\"[2x whitespace]Lydia Hallie\\"`)","`\\" Lydia Hallie\\"`, `\\"Lydia Hallie\\"` (`\\"[1x whitespace]Lydia Hallie\\"`, `\\"Lydia Hallie\\"`)","`\\"Lydia Hallie\\"`, `\\"Lyd\\"`,"],"problem":"const name = \\"Lydia Hallie\\"\\nconsole.log(name.padStart(13))\\nconsole.log(name.padStart(2))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`+` operat\xf6r\xfc ile stringleri birle\u015ftirebilirsiniz. Bu \xf6rnekte, `\\"\ud83e\udd51\\"` ile `\\"\ud83d\udcbb\\"` birle\u015ftiriyoruz, `\\"\ud83e\udd51\ud83d\udcbb\\"` olarak sonu\xe7lan\u0131yor.\\n</p>\\n</details>"],"id":69,"options":["`\\"\ud83e\udd51\ud83d\udcbb\\"`","`257548`","Emojilerin kod numaralar\u0131n\u0131 g\xf6steren string","Hata"],"problem":"console.log(\\"\ud83e\udd51\\" + \\"\ud83d\udcbb\\");\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Generator fonksiyon `yield` anahtar kelimesini g\xf6rd\xfc\u011f\xfcnde \xe7al\u0131\u015fmas\u0131n\u0131 \\"durdurur\\". \xd6ncelikle, fonksiyonun \\"Do you love JavaScript?\\" stringini vermesini sa\u011flamam\u0131z gerek ki bu `game.next().value` \xe7a\u011fr\u0131larak yap\u0131labilir.","\u0130lk `yield` anahtar kelimesi bulunana dek her sat\u0131r \xe7al\u0131\u015ft\u0131r\u0131l\u0131r. Fonksiyonun i\xe7inde, ilk sat\u0131rda `yield` anahtar kelimesi var: \xe7al\u0131\u015fma ilk yield ile durur. _Bu demektir ki `answer` de\u011fi\u015fkeni hen\xfcz tan\u0131mlanmad\u0131!_","`game.next(\\"Yes\\").value` \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman, \xf6nceki `yield` `next()` fonksiyonuna ge\xe7ilen parametlerin de\u011feri ile de\u011fi\u015ftirilir, bu durumda `\\"Yes\\"`. `answer` de\u011fi\u015fkeninin de\u011feri art\u0131k `\\"Yes\\"`\'e e\u015fit. if ifadesi `false` d\xf6nd\xfcr\xfcr, ve `JavaScript loves you back \u2764\ufe0f` loglan\u0131r."],"id":70,"options":["`game.next(\\"Yes\\").value` ve `game.next().value`","`game.next.value(\\"Yes\\")` ve `game.next.value()`","`game.next().value` ve `game.next(\\"Yes\\").value`","`game.next.value()` ve `game.next.value(\\"Yes\\")`"],"problem":"function* startGame() {\\n  const answer = yield \\"Do you love JavaScript?\\";\\n  if (answer !== \\"Yes\\") {\\n    return \\"Oh wow... Guess we\'re gone here\\";\\n  }\\n  return \\"JavaScript loves you back \u2764\ufe0f\\";\\n}\\n\\nconst game = startGame();\\nconsole.log(/* 1 */); // Do you love JavaScript?\\nconsole.log(/* 2 */); // JavaScript loves you back \u2764\ufe0f\\n","question":"console.log ifadesinden sonra yorum sat\u0131r\u0131 olarak gelen de\u011ferleri nas\u0131l loglayabiliriz?"},{"answer":2,"explanation":["`String.raw` ka\xe7\u0131\u015f karakterlerinin (`\\\\n`, `\\\\v`, `\\\\t` vb.) g\xf6z ard\u0131 edildi\u011fi bir string d\xf6nd\xfcr\xfcr. Ters b\xf6l\xfc i\u015fareti \u015f\xf6yle bir \u015fey gibi sonu\xe7lanabilece\u011finden sorun olabilir:","`` const path = `C:\\\\Documents\\\\Projects\\\\table.html` ``","\u015e\xf6yle sonu\xe7lan\u0131r:","`\\"C:DocumentsProjects able.html\\"`","`String.raw` ile, ka\xe7\u0131\u015f karakteri basit\xe7e g\xf6z ard\u0131 edilir ve yazd\u0131r\u0131l\u0131r:","`C:\\\\Documents\\\\Projects\\\\table.html`","Bu \xf6rnekte, string `Hello\\\\nworld`, dolay\u0131s\u0131yla `Hello\\\\nworld` olarak loglan\u0131r."],"id":71,"options":["`Hello world!`","`Hello` <br />&nbsp; &nbsp; &nbsp;`world`","`Hello\\\\nworld`","`Hello\\\\n` <br /> &nbsp; &nbsp; &nbsp;`world`"],"problem":"console.log(String.raw`Hello\\\\nworld`);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Asenkron bir fonksiyon her zaman promise d\xf6nd\xfcr\xfcr. `await` promise\'\u0131 \xe7\xf6zmek i\xe7in beklemeli: `getData()`\'y\u0131 `data`\'ya e\u015fitlemek i\xe7in \xe7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z zaman bekleyen promise d\xf6nd\xfcr\xfcl\xfcr.","\xc7\xf6z\xfclm\xfc\u015f de\u011fer olan `\\"I made it\\"`\'e eri\u015fmek isteseydik, `data` \xfczerinde `.then()` methodunu kullanabilirdik:","`data.then(res => console.log(res))`","Bu `\\"I made it!\\"` loglard\u0131."],"id":72,"options":["`\\"I made it!\\"`","`Promise {<resolved>\\"I made it!\\"}`","`Promise {<pending>}`","`undefined`"],"problem":"async function getData() {\\n  return await Promise.resolve(\\"I made it!\\");\\n}\\n\\nconst data = getData();\\nconsole.log(data);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`push()` methodu yeni dizinin _uzunlu\u011funu_ d\xf6nd\xfcr\xfcr. \xd6nceden, dizi bir eleman i\xe7eriyordu (`\\"banana\\"`) ve uzunlu\u011fu 1\'di. Diziye `\\"apple\\"`\'\u0131 ekledikten sonra, dizi iki eleman i\xe7erir ve uzunlu\u011fu `2`\'dir. `addToList` fonksiyonundan d\xf6nd\xfcr\xfclen budur.","`push` methodu orijinal diziyi de\u011fi\u015ftirir. E\u011fer _dizinin uzunlu\u011funu_ de\u011fil de _diziyi_ d\xf6nd\xfcrmek isterseniz, `item`\'i ekledikten sonra `list`\'i d\xf6nd\xfcrmelisiniz."],"id":73,"options":["`[\'apple\', \'banana\']`","`2`","`true`","`undefined`"],"problem":"function addToList(item, list) {\\n  return list.push(item);\\n}\\n\\nconst result = addToList(\\"apple\\", [\\"banana\\"]);\\nconsole.log(result);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`Object.freeze` bir nesneye \xf6zellik eklemeyi, silmeyi ya da de\u011fi\u015ftirmeyi olanaks\u0131z k\u0131lar (\xf6zelli\u011fin de\u011feri ba\u015fka bir nesneye ait olmad\u0131k\xe7a)","`shape` de\u011fi\u015fkenini olu\u015fturup, donmu\u015f `box` nesnesine e\u015fitledi\u011fimiz zaman, `shape` de ayr\u0131ca donmu\u015f nesneyi referans eder. `Object.isFrozen` kullanarak bir nesnenin dondurulmu\u015f olup olmad\u0131\u011f\u0131n\u0131 kontrol edebilirsiniz. Bu \xf6rnekte, `shape` de\u011fi\u015fkeni donmu\u015f bir nesneyi referans g\xf6sterdi\u011finden, `Object.isFrozen(shape)` `true` d\xf6nd\xfcr\xfcr.","`shape` donmu\u015f oldu\u011fundan, ve `x`\'in de\u011feri bir nesne olmad\u0131\u011f\u0131ndan, `x` \xf6zelli\u011fini de\u011fi\u015ftiremeyiz. `x` hala `10`\'a e\u015fit, ve `{ x: 10, y: 20 }` loglan\u0131r."],"id":74,"options":["`{ x100, y20 }`","`{ x10, y20 }`","`{ x100 }`","`ReferenceError`"],"problem":"const box = { x: 10, y: 20 };\\n\\nObject.freeze(box);\\n\\nconst shape = box;\\nshape.x = 100;\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["E\u015fitli\u011fin sa\u011f taraf\u0131ndaki nesneden `name` \xf6zelli\u011fini \xe7\u0131kartt\u0131\u011f\u0131m\u0131z zaman, `myName` isimli de\u011fi\u015fkene, o \xf6zelli\u011fin de\u011feri olan `\\"Lydia\\"`\'y\u0131 at\u0131yoruz.","`{ name: myName }` ile, JavaScript\'e diyoruz ki; e\u015fitli\u011fin sa\u011f taraf\u0131ndaki `name` \xf6zelli\u011finin de\u011feriyle birlikte `myName` diye bir de\u011fi\u015fken tan\u0131mlamak istiyoruz.","`name`\'i loglamay\u0131 denedi\u011fimizden dolay\u0131, ki bu de\u011fi\u015fken tan\u0131mlanmam\u0131\u015f, ReferenceError f\u0131rlat\u0131l\u0131r."],"id":75,"options":["`\\"Lydia\\"`","`\\"myName\\"`","`undefined`","`ReferenceError`"],"problem":"const { name: myName } = { name: \\"Lydia\\" };\\n\\nconsole.log(name);\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["Saf fonksiyon, ayn\u0131 arg\xfcmanlar ge\xe7ildi\u011fi zaman, _her zaman_ ayn\u0131 sonucu d\xf6nd\xfcren fonksiyondur.","`sum` fonksiyonu her zaman ayn\u0131 sonucu d\xf6nd\xfcr\xfcr. E\u011fer `1` ve `2` ge\xe7ersek, _her zaman_ `3` d\xf6nd\xfcrecektir. E\u011fer `5` ve `10` ge\xe7ersek, _her zaman_ `15` d\xf6nd\xfcr\xfcr, bunun gibi devam eder... Saf fonksiyonun tan\u0131mlamas\u0131 budur."],"id":76,"options":["Evet","Hay\u0131r"],"problem":"function sum(a, b) {\\n  return a + b;\\n}\\n","question":"Bu bir saf (pure) fonksiyon mu?"},{"answer":2,"explanation":["`add` fonksiyonu _ezberlenmi\u015f_, \\"_memoized_\\", bir fonksiyondur. Ezberleme ile, fonksiyonun sonu\xe7lar\u0131n\u0131, fonksiyonun daha h\u0131zl\u0131 \xe7al\u0131\u015fmas\u0131 i\xe7in cache\'leyebiliriz. Bu \xf6rnekte, \xf6nceki d\xf6nen de\u011ferleri saklayan bir `cache` nesnesi olu\u015fturuyoruz.","E\u011fer `addFunction` fonksiyonunu ayn\u0131 arg\xfcman ile tekrar \xe7a\u011f\u0131r\u0131rsak, \xf6nce cache i\xe7inde o de\u011ferin hali haz\u0131rda olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. E\u011fer varsa, cache de\u011feri d\xf6nd\xfcr\xfclecektir ki b\xf6ylece \xe7al\u0131\u015fma zaman\u0131ndan tasarruf sa\u011flan\u0131r. E\u011fer yoksa, cache\'lenmemi\u015fse, de\u011feri hesaplay\u0131p ard\u0131ndan saklayacakt\u0131r.","`addFunction` fonksiyonunu \xfc\xe7 kez ayn\u0131 de\u011fer ile \xe7a\u011f\u0131r\u0131yoruz: ilk \xe7a\u011f\u0131rmada, `num` `10`\'a e\u015fit oldu\u011fu zaman fonksiyonun de\u011feri hen\xfcz cache\'lenmemi\u015f. `num in cache` if ifadesi `false` d\xf6nd\xfcr\xfcr\\n ve else blo\u011fu \xe7al\u0131\u015ft\u0131r\u0131l\u0131r: `Calculated! 20` loglan\u0131r, ve sonu\xe7 cache nesnesine eklenir. `cache` \u015fimdi \u015funa benziyor; `{ 10: 20 }`","\u0130kincide, `cache` nesnesi `10` i\xe7in d\xf6nd\xfcr\xfclen de\u011feri i\xe7eriyor. `num in cache` if ifadesi `true` d\xf6nd\xfcr\xfcr, ve `\'From cache! 20\'` loglan\u0131r.","\xdc\xe7\xfcnc\xfc sefer de, fonksiyona `5 * 2` ge\xe7iyoruz ki bu da `10` olarak de\u011ferlendirilir. `cache` nesnesi `10` i\xe7in d\xf6nd\xfcr\xfclen de\u011feri i\xe7eriyor. `num in cache` if ifadesi `true` d\xf6nd\xfcr\xfcr, ve `\'From cache! 20\'` loglan\u0131r."],"id":77,"options":["`Calculated! 20` `Calculated! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `Calculated! 20`","`Calculated! 20` `From cache! 20` `From cache! 20`","`Calculated! 20` `From cache! 20` `Error`"],"problem":"const add = () => {\\n  const cache = {};\\n  return num => {\\n    if (num in cache) {\\n      return `From cache! ${cache[num]}`;\\n    } else {\\n      const result = num + 10;\\n      cache[num] = result;\\n      return `Calculated! ${result}`;\\n    }\\n  };\\n};\\n\\nconst addFunction = add();\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(10));\\nconsole.log(addFunction(5 * 2));\\n","question":"\xc7\u0131kt\u0131s\u0131 nedir?"},{"answer":0,"explanation":["_for-in_ d\xf6ng\xfcs\xfc ile, **say\u0131labilir** (**enumerable**) \xf6zellikler \xfczerinde iterasyon yapabiliriz. Dizilerde, say\u0131labilir \xf6zellikler dizi elemanlar\u0131n\u0131n \\"keyleridir\\", ki bu keyler asl\u0131nda dizinin indeksidir. Diziyi \u015f\xf6yle g\xf6rebilirsiniz:","`{0: \\"\u2615\\", 1: \\"\ud83d\udcbb\\", 2: \\"\ud83c\udf77\\", 3: \\"\ud83c\udf6b\\"}`","Burada keyler, say\u0131labilir \xf6zelliklerdir. `0` `1` `2` `3` loglan\u0131r.","_for-of_ d\xf6ng\xfcs\xfc ile, **yinelenebilirler** (**iterables**) \xfczerinde iterasyon yapabiliriz. Dizi, yinelebilirdir. Dizi \xfczerinde iterasyon yapt\u0131\u011f\u0131m\u0131z zaman, `item` de\u011fi\u015fkeni o anda iterasyon yap\u0131lan elemana e\u015fittir, `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` loglan\u0131r."],"id":78,"options":["`0` `1` `2` `3` ve `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` ve `\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"`","`\\"\u2615\\"` ` \\"\ud83d\udcbb\\"` `\\"\ud83c\udf77\\"` `\\"\ud83c\udf6b\\"` ve `0` `1` `2` `3`"," `0` `1` `2` `3` ve `{0\\"\u2615\\", 1\\"\ud83d\udcbb\\", 2\\"\ud83c\udf77\\", 3\\"\ud83c\udf6b\\"}`"],"problem":"const myLifeSummedUp = [\\"\u2615\\", \\"\ud83d\udcbb\\", \\"\ud83c\udf77\\", \\"\ud83c\udf6b\\"]\\n\\nfor (let item in myLifeSummedUp) {\\n  console.log(item)\\n}\\n\\nfor (let item of myLifeSummedUp) {\\n  console.log(item)\\n}\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["Dizi elemanlar\u0131 herhangi bir de\u011feri tutabilir. Say\u0131lar, stringler, nesneler, ba\u015fka diziler, null, do\u011fru/yanl\u0131\u015f de\u011ferler, undefined, ve date, fonksiyonlar, hesaplamalar gibi ba\u015fka ifadeler.","Eleman d\xf6nen de\u011fere e\u015fit olacakt\u0131r. `1 + 2` `3` d\xf6nd\xfcr\xfcr, `1 * 2` `2` d\xf6nd\xfcr\xfcr, ve `1 / 2` `0.5` d\xf6nd\xfcr\xfcr."],"id":79,"options":["`[\\"1 + 2\\", \\"1 * 2\\", \\"1 / 2\\"]`","`[\\"12\\", 2, 0.5]`","`[3, 2, 0.5]`"," `[1, 1, 1]`"],"problem":"const list = [1 + 2, 1 * 2, 1 / 2]\\nconsole.log(list)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Varsay\u0131lan olarak, fonksiyona bir de\u011fer ge\xe7ilmedik\xe7e, arg\xfcmanlar `undefined` de\u011ferine sahiptir. Bu \xf6rnekte, `name` arg\xfcman\u0131 i\xe7in bir de\u011fer ge\xe7medik.","ES6\'da, bu varsay\u0131lan `undefined` de\u011ferini varsay\u0131lan parametreler ile ezebiliriz. \xd6rne\u011fin;","`function sayHi(name = \\"Lydia\\") { ... }`","Bu \xf6rnekte, e\u011fer bir de\u011fer ge\xe7meseydik ya da `undefined` ge\xe7seydik, `name` her zaman `Lydia`\'a e\u015fit olacakt\u0131."],"id":80,"options":["`Hi there, `","`Hi there, undefined`","`Hi there, null`"," `ReferenceError`"],"problem":"function sayHi(name) {\\n  return `Hi there, ${name}`\\n}\\n\\nconsole.log(sayHi())\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`this` anahtar kelimesinin de\u011feri, onu nerede kulland\u0131\u011f\u0131n\u0131za ba\u011fl\u0131d\u0131r. **method** i\xe7inde, `getStatus` methodu gibi, `this` anahtar kelimesi _methodun ba\u011fl\u0131 oldu\u011fu nesneyi_ referans g\xf6sterir. Method `data` nesnesine ait, bu y\xfczden `this` `data` nesnesini referans g\xf6sterir. `this.status`\'\xfc loglad\u0131\u011f\u0131m\u0131z zaman, `data` nesnesindeki `status` \xf6zelli\u011fi loglan\u0131r, ki o da `\\"\ud83e\udd51\\"`.","`call` methodu ile, `this` anahtar kelimesinin referans g\xf6sterdi\u011fi nesneyi de\u011fi\u015ftirebiliriz. **fonksiyon** i\xe7inde, `this` anahtar kelimesi _fonksiyonun ait oldu\u011fu nesneyi_ referans g\xf6sterir. _global nesne_ \xfczerinde `setTimeout` fonksiyonu tan\u0131mlad\u0131k, yani `setTimeout` fonksiyonu i\xe7inde, `this` anahtar kelimesi _global nesneyi_ referans g\xf6sterir. Global nesnede, de\u011feri `\\"\ud83d\ude0e\\"` olan _status_ olarak adland\u0131r\u0131lm\u0131\u015f bir de\u011fi\u015fken var. `this.status`\'\xfc loglad\u0131\u011f\u0131m\u0131z zaman, `\\"\ud83d\ude0e\\"` loglan\u0131r."],"id":81,"options":["`\\"\ud83e\udd51\\"` ve `\\"\ud83d\ude0d\\"`","`\\"\ud83e\udd51\\"` ve `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0d\\"` ve `\\"\ud83d\ude0e\\"`","`\\"\ud83d\ude0e\\"` ve `\\"\ud83d\ude0e\\"`"],"problem":"var status = \\"\ud83d\ude0e\\"\\n\\nsetTimeout(() => {\\n  const status = \\"\ud83d\ude0d\\"\\n\\n  const data = {\\n    status: \\"\ud83e\udd51\\",\\n    getStatus() {\\n      return this.status\\n    }\\n  }\\n\\n  console.log(data.getStatus())\\n  console.log(data.getStatus.call(this))\\n}, 0)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`city` de\u011fi\u015fkenini, `person` nesnesindeki `city` \xf6zelli\u011finin de\u011ferine e\u015fitledik. `person` nesnesinde `city` diye isimlendirilmi\u015f bir \xf6zellik yok, bu y\xfczden `city` de\u011fi\u015fkeni `undefined` de\u011ferine sahip olur.","`person` nesnesinin kendisini referans _g\xf6stermedi\u011fimize_ dikkat edin! Sadece `city` de\u011fi\u015fkenini, `person` nesnesindeki `city` \xf6zelli\u011finin o andaki de\u011ferine e\u015fitledik.","Sonra, `city`\'i `\\"Amsterdam\\"` string\'ine e\u015fitledik. Bu `person` nesnesini de\u011fi\u015ftirmez: bu nesneye referans yok.","`person` nesnesini loglad\u0131\u011f\u0131m\u0131z zaman, de\u011fi\u015fikli\u011fe u\u011framam\u0131\u015f nesne d\xf6nd\xfcr\xfcl\xfcr."],"id":82,"options":["`{ name\\"Lydia\\", age21 }`","`{ name\\"Lydia\\", age21, city\\"Amsterdam\\" }`","`{ name\\"Lydia\\", age21, cityundefined }`","`\\"Amsterdam\\"`"],"problem":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nlet city = person.city\\ncity = \\"Amsterdam\\"\\n\\nconsole.log(person)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["`const` ve `let` anahtar kelimesine sahip de\u011fi\u015fkenler _block-scoped_\'dur. Blok s\xfcsl\xfc parantezler (`{}`) aras\u0131ndaki herhangi bir \u015feydir. Bu \xf6rnekte, if/else ifadesindeki s\xfcsl\xfc parantezlerdir. Bir de\u011fi\u015fkene, tan\u0131mland\u0131\u011f\u0131 blok d\u0131\u015f\u0131ndan eri\u015femezsiniz, ReferenceError f\u0131rlat\u0131l\u0131r."],"id":83,"options":["`\\"Sorry, you\'re too young.\\"`","`\\"Yay! You\'re old enough!\\"`","`ReferenceError`","`undefined`"],"problem":"function checkAge(age) {\\n  if (age < 18) {\\n    const message = \\"Sorry, you\'re too young.\\"\\n  } else {\\n    const message = \\"Yay! You\'re old enough!\\"\\n  }\\n\\n  return message\\n}\\n\\nconsole.log(checkAge(21))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["\u0130kinci `.then` i\xe7indeki `res`\'in de\u011feri bir \xf6nceki `.then`\'den d\xf6nen de\u011fere e\u015fittir. Bunun gibi, de\u011ferlerin bir sonraki y\xf6neticiye (handler) ge\xe7ilece\u011fi \u015fekilde, `.then`\'leri birbirlerine ba\u011flayabilirsiniz,"],"id":84,"options":["`fetch` methodunun sonucu.","`fetch` methodunun ikinci kez \xe7a\u011fr\u0131lmas\u0131ndan d\xf6nen sonu\xe7.","Bir \xf6nceki `.then()`\'in sonucu.","Her zaman `undefined` olacakt\u0131r."],"problem":"fetch(\'https://www.website.com/api/user/1\')\\n  .then(res => res.json())\\n  .then(res => console.log(res))\\n","question":"Loglanacak de\u011fer ne t\xfcr olur?"},{"answer":0,"explanation":["`!!name` ile, `name`\'in de\u011ferinin do\u011frusal ya da yanl\u0131\u015f-\u0131ms\u0131 olup olmad\u0131\u011f\u0131n\u0131 belirleriz. E\u011fer `name` do\u011frusalsa, ki test etmek istedi\u011fimiz bu, `!name` `false` d\xf6nd\xfcr\xfcr. `!false` (bu da `!!name` ne demekse o demektir ger\xe7ekte) `true` d\xf6nd\xfcr\xfcr.","`hasName`\'i `name`\'e e\u015fitleyerek, `hasName`\'i `getName` fonksiyonuna hangi de\u011feri ge\xe7tiyseniz ona e\u015fitlersiniz, `true` de\u011ferine de\u011fil.","`new Boolean(true)` nesne (object wrapper) d\xf6nd\xfcr\xfcr, do\u011fru/yanl\u0131\u015f (boolean) de\u011ferinin kendisini de\u011fil.","`name.length` ge\xe7ilen arg\xfcman\u0131n uzunlu\u011funu d\xf6nd\xfcr\xfcr, `true` olup olmad\u0131\u011f\u0131n\u0131 de\u011fil."],"id":85,"options":["`!!name`","`name`","`new Boolean(name)`","`name.length`"],"problem":"function getName(name) {\\n  const hasName = //\\n}\\n","question":"`true`\'yu arg\xfcman olarak ge\xe7emedi\u011finiz durumda, hangi se\xe7enek `hasName`\'i `true`\'ya e\u015fitlemenin yoludur?"},{"answer":1,"explanation":["Bir string i\xe7indeki belli bir indeksteki karakteri almak i\xe7in, k\xf6\u015feli parantez notasyonunu kullanabilirsiniz. String i\xe7indeki ilk karakterin indeksi 0\'d\u0131r, ve b\xf6ylece devam eder. Bu \xf6rnekte indeksi 0 olan eleman\u0131 istiyoruz, `\\"I\\"` karakteri, loglan\u0131r.","Bu y\xf6ntemin IE7 ve alt\u0131nda desteklenmedi\u011fine dikkat edin. Bu durumda, `.charAt()` kullanabilirsiniz."],"id":86,"options":["`\\"\\"\\"`","`\\"I\\"`","`SyntaxError`","`undefined`"],"problem":"console.log(\\"I want pizza\\"[0])\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["Varsay\u0131lan parametrenin de\u011ferini fonksiyonun ba\u015fka parametresine e\u015fitleyebilirsiniz, varsay\u0131lan parametreden _\xf6nce_ tan\u0131mlad\u0131klar\u0131 m\xfcddet\xe7e. `sum` fonksiyonuna `10` de\u011ferini ge\xe7tik. E\u011fer `sum` fonksiyonu sadece 1 arg\xfcman al\u0131rsa, `num2` de\u011feri ge\xe7ilmedi demektir, ve `num1`\'\u0131n de\u011feri ge\xe7ti\u011fimiz `10` de\u011ferine e\u015fittir bu durumda. `num2`\'nun varsay\u0131lan de\u011feri `num1`\'d\u0131r ki o da `10`\'dur. `num1 + num2` `20` d\xf6nd\xfcr\xfcr.","E\u011fer varsay\u0131lan parametrenin de\u011ferini, _sonras\u0131nda_ (sa\u011f\u0131nda) tan\u0131mlanm\u0131\u015f bir parametreye e\u015fitlemeye \xe7al\u0131\u015f\u0131yorsan\u0131z, parametrenin de\u011feri hen\xfcz olu\u015fturulmam\u0131\u015ft\u0131r, hata f\u0131rlatacakt\u0131r."],"id":87,"options":["`NaN`","`20`","`ReferenceError`","`undefined`"],"problem":"function sum(num1, num2 = num1) {\\n  console.log(num1 + num2)\\n}\\n\\nsum(10)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`import * as name` yaz\u0131m\u0131 ile, `module.js` dosyas\u0131 i\xe7indeki _t\xfcm `export`\'lar\u0131_ `index.js` dosyas\u0131 i\xe7inde `data` olarak adland\u0131rd\u0131\u011f\u0131m\u0131z yeni bir nesneye aktar\u0131yoruz. `module.js` dosyas\u0131 i\xe7inde, iki `export` var: varsay\u0131lan export ve isimlendirilmi\u015f export. Varsay\u0131lan export `\\"Hello World\\"` string\'i d\xf6nd\xfcren bir fonksiyon ve isimlendirilmi\u015f export `\\"Lydia\\"` de\u011ferine sahip `name` olarak isimlendirilmi\u015f de\u011fi\u015fken.","`data` nesnesi varsay\u0131lan exportlar i\xe7in `default` \xf6zelli\u011fine, isilendirilmi\u015f exportlar i\xe7in isimlendirilmi\u015f export\'un ismi olan ve de\u011feri isimlendirilmi\u015f export\'un de\u011feri olan \xf6zelliklere sahiptir."],"id":88,"options":["`{ defaultfunction default(), name\\"Lydia\\" }`","`{ defaultfunction default() }`","`{ default\\"Hello world\\", name\\"Lydia\\" }`","`module.js`\'e ait global nesne"],"problem":"// module.js \\nexport default () => \\"Hello world\\"\\nexport const name = \\"Lydia\\"\\n\\n// index.js \\nimport * as data from \\"./module\\"\\n\\nconsole.log(data)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["S\u0131n\u0131flar fonksiyon yap\u0131c\u0131lar\u0131 i\xe7in \\"syntactical sugar\\"d\u0131r. `Person` s\u0131n\u0131f\u0131na denk olan s\u0131n\u0131f yap\u0131c\u0131s\u0131 \u015f\xf6yle olabilirdi:","Bir fonksiyon yap\u0131c\u0131s\u0131n\u0131 `new` ile \xe7a\u011f\u0131rmak `Person` \\"instance\\" olu\u015fturur, `typeof` anahtar kelimesi instance i\xe7in `\\"object\\"` d\xf6nd\xfcr\xfcr. `typeof member` `\\"object\\"` d\xf6nd\xfcr\xfcr."],"id":89,"options":["`\\"class\\"`","`\\"function\\"`","`\\"object\\"`","`\\"string\\"`"],"problem":"class Person {\\n  constructor(name) {\\n    this.name = name\\n  }\\n}\\n\\nconst member = new Person(\\"John\\")\\nconsole.log(typeof member)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["`.push` methodu dizinin _yeni uzunlu\u011funu_ d\xf6nd\xfcr\xfcr, dizinin kendisini de\u011fil! `newList`\'i  `[1, 2, 3].push(4)`\'a e\u015fitleyerek, `newList`\'i dizinin yeni uzunlu\u011funa e\u015fitledik: `4`.","Sonra, `.push` methodunu `newList` \xfczerinde kullanmay\u0131 denedik. `newList` say\u0131sal de\u011fer `4` oldu\u011fundan, `.push` methodunu kullanamay\u0131z: TypeError f\u0131rlat\u0131l\u0131r."],"id":90,"options":["`[1, 2, 3, 4, 5]`","`[1, 2, 3, 5]`","`[1, 2, 3, 4]`","`Error`"],"problem":"let newList = [1, 2, 3].push(4)\\n\\nconsole.log(newList.push(5))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["S\u0131radan fonksiyonlar, `giveLydiaPizza` gibi, `constructor` \xf6zelli\u011fi olan `prototype` nesnesi \xf6zelli\u011fine sahiptir. Ancak ok fonksiyonlar (arrow functions), `giveLydiaChocolate` gibi, bu `prototype` \xf6zelli\u011fine sahip de\u011fildir. `giveLydiaChocolate.prototype` ile `prototype` \xf6zelli\u011fine eri\u015fmeye \xe7al\u0131\u015f\u0131ld\u0131\u011f\u0131nda `undefined` d\xf6nd\xfcr\xfcl\xfcr."],"id":91,"options":["`{ constructor...}` `{ constructor...}`","`{}` `{ constructor...}`","`{ constructor...}` `{}`","`{ constructor...}` `undefined`"],"problem":"function giveLydiaPizza() {\\n  return \\"Here is pizza!\\"\\n}\\n\\nconst giveLydiaChocolate = () => \\"Here\'s chocolate... now go hit the gym already.\\"\\n\\nconsole.log(giveLydiaPizza.prototype)\\nconsole.log(giveLydiaChocolate.prototype)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`Object.entries(person)` key ve nesneleri i\xe7eren dizilerden olu\u015fan dizi d\xf6nd\xfcr\xfcr:","`[ [ \'name\', \'Lydia\' ], [ \'age\', 21 ] ]`","`for-of` d\xf6ng\xfcs\xfcn\xfc kullanarak, dizi i\xe7indeki her bir eleman\u0131 gezebiliriz, alt dizileri bu \xf6rnekte. for-of d\xf6ng\xfcs\xfc i\xe7inde alt dizileri `const [x, y]` kullanarak par\xe7alayabiliriz. `x` alt dizideki ilk elemana, `y` alt dizideki ikinci elemana e\u015fittir.","\u0130lk alt dizi `[ \\"name\\", \\"Lydia\\" ]`, `x` `\\"name\\"`\'e ve `y` `\\"Lydia\\"`\'ya e\u015fittir.\\n\u0130kinci alt dizi `[ \\"age\\", 21 ]`, `x` `\\"age\\"`\'e ve `y` `21`\'a e\u015fittir."],"id":92,"options":["`name` `Lydia` ve `age` `21`","`[\\"name\\", \\"Lydia\\"]` ve `[\\"age\\", 21]`","`[\\"name\\", \\"age\\"]` ve `undefined`","`Error`"],"problem":"const person = {\\n  name: \\"Lydia\\",\\n  age: 21\\n}\\n\\nfor (const [x, y] of Object.entries(person)) {\\n  console.log(x, y)\\n}\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["`...args` bir \\"rest\\" parametredir. \\"Rest\\" parametresinin de\u011feri geriye kalan t\xfcm arg\xfcmanlar\u0131 i\xe7eren bir dizidir, ve **sadece son parametre olabilir.** Bu \xf6rnekte, rest parametresi ikindi parametreydi. Bu m\xfcmk\xfcn de\u011fildir ve syntax hatas\u0131 f\u0131rlat\u0131lacakt\u0131r.","Yukar\u0131daki \xf6rnek \xe7al\u0131\u015f\u0131r. `[ \'banana\', \'apple\', \'orange\', \'pear\' ]` dizisini d\xf6nd\xfcr\xfcr."],"id":93,"options":["`[\\"banana\\", \\"apple\\", \\"pear\\", \\"orange\\"]`","`[[\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\"]`","`[\\"banana\\", \\"apple\\", [\\"pear\\"], \\"orange\\"]`","`SyntaxError`"],"problem":"function getItems(fruitList, ...args, favoriteFruit) {\\n  return [...fruitList, ...args, favoriteFruit]\\n}\\n\\ngetItems([\\"banana\\", \\"apple\\"], \\"pear\\", \\"orange\\")\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["JavaScript\'te, noktal\u0131 virg\xfcl\xfc (`;`) \xf6zellikle yazmak _zorunda de\u011filiz_, ancak JavaScript motoru ifadelerden sonra noktal\u0131 virg\xfcl eklemektedir. bu **Automatic Semicolon Insertion**, **Otomatik Noktal\u0131 Virg\xfcl Ekleme**, olarak adland\u0131r\u0131l\u0131r. \u0130fade, \xf6rne\u011fin, de\u011fi\u015fkenler ya da `throw`, `return`, `break`, vb. gibi anahtar kelimeler olabilir.","Burada, bir `return` ifadesi yazd\u0131k, ve _yeni bir sat\u0131rda_ ba\u015fka bir de\u011fer olarak `a + b`. Ancak, `a + b` yeni sat\u0131rda oldu\u011fundan, JavaScript motoru onun asl\u0131nda bizim d\xf6nd\xfcrmek istedi\u011fimiz de\u011fer oldu\u011funu bilmiyor. Onun yerine, `return`\'den sonra otomatik olarak noktal\u0131 virg\xfcl ekliyor. \u015e\xf6yle d\xfc\u015f\xfcnebilirsiniz:","Fonksiyon `return` anahtar kelimesinden sonra \xe7al\u0131\u015fmay\u0131 durduraca\u011f\u0131ndan, `a + b` asla ula\u015f\u0131lamaz demektir. E\u011fer hi\xe7bir de\u011fer d\xf6nd\xfcr\xfclmezse, fonksiyon `undefined` d\xf6nd\xfcr\xfcr. Dikkat etmeniz gereken, `if/else` ifadelerinden sonra otomatik ekleme yap\u0131lmad\u0131\u011f\u0131d\u0131r!"],"id":94,"options":["`a is bigger`, `6` ve `b is bigger`, `3`","`a is bigger`, `undefined` ve `b is bigger`, `undefined`","`undefined` ve `undefined`","`SyntaxError`"],"problem":"function nums(a, b) {\\n  if\\n  (a > b)\\n  console.log(\'a is bigger\')\\n  else \\n  console.log(\'b is bigger\')\\n  return \\n  a + b\\n}\\n\\nconsole.log(nums(4, 2))\\nconsole.log(nums(1, 2))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["S\u0131n\u0131flar\u0131 di\u011fer s\u0131n\u0131f/fonksiyon yap\u0131c\u0131lara e\u015fitleyebiliriz. Bu \xf6rnekte, `Person`\'\u0131 `AnotherPerson`\'a e\u015fitliyoruz. Bu yap\u0131c\u0131daki `name` `Sarah`\'d\u0131r, yani `Person` instance\'\u0131 olan `member` \xfczerindeki `name` \xf6zelli\u011fi `\\"Sarah\\"`\'t\u0131r."],"id":95,"options":["`\\"Lydia\\"`","`\\"Sarah\\"`","`Errorcannot redeclare Person`","`SyntaxError`"],"problem":"class Person {\\n  constructor() {\\n    this.name = \\"Lydia\\"\\n  }\\n}\\n\\nPerson = class AnotherPerson {\\n  constructor() {\\n    this.name = \\"Sarah\\"\\n  }\\n}\\n\\nconst member = new Person()\\nconsole.log(member.name)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":3,"explanation":["Symbol _say\u0131labilir_, \\"_enumerable_\\" de\u011fildir. Object.keys methodu nesne \xfczerindeki t\xfcm _say\u0131labilir_ \xf6zellikleri d\xf6nd\xfcr\xfcr. Symbol gizli kal\u0131r ve bo\u015f bir dizi d\xf6nd\xfcr\xfcl\xfcr. T\xfcm nesne logland\u0131\u011f\u0131 zaman, b\xfct\xfcn \xf6zellikler g\xf6r\xfclebilir, say\u0131labilir olmayanlar bile.","Bu symbol\'\xfcn bir\xe7ok  \xf6zelli\u011finden birisidir: tamamen benzersiz bir de\u011fer temsil etmenin yan\u0131nda (ki nesneler \xfczerindeki kazara isim \xe7ak\u0131\u015fmas\u0131n\u0131 \xf6nler, \xf6rne\u011fin ayn\u0131 nesneye \xf6zellikler eklemek isteyen 2 k\xfct\xfcphaneyle \xe7al\u0131\u015f\u0131rken), ayr\u0131ca bu yolla nesne \xfczerindeki \xf6zellikleri \\"saklayabilirsiniz\\" (ger\xe7i tamamen de\u011fil. `Object.getOwnPropertySymbols()` methodunu kullanarak symbol\'lere hala eri\u015febilirsiniz)."],"id":96,"options":["`{Symbol(\'a\')\'b\'}` ve `[\\"{Symbol(\'a\')\\"]`","`{}` ve `[]`","`{ a\\"b\\" }` ve `[\\"a\\"]`","`{Symbol(\'a\')\'b\'}` ve `[]`"],"problem":"const info = {\\n  [Symbol(\'a\')]: \'b\'\\n}\\n\\nconsole.log(info)\\nconsole.log(Object.keys(info))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":0,"explanation":["`getList` fonksiyonu arg\xfcman olarak bir dizi al\u0131r. `getList` fonksiyonunun parentezleri aras\u0131nda, bu diziyi an\u0131nda par\xe7al\u0131yoruz. \u015eu \u015fekilde g\xf6rebilirsiniz:","`[x, ...y] = [1, 2, 3, 4]`","`...y` rest parametresi ile, dizi i\xe7inde \\"geriye kalan\\" t\xfcm arg\xfcmanlar\u0131 topluyoruz. Geriye kalan arg\xfcmanlar `2`, `3`, ve `4` bu durumda. `y`\'nin de\u011feri t\xfcm rest parametleri i\xe7eren bir dizi. `x`\'in de\u011feri `1`\'a e\u015fit, yani `[x, y]` loglad\u0131\u011f\u0131m\u0131z zaman, `[1, [2, 3, 4]]` loglan\u0131r.","`getUser` fonksiyonu bir nesne al\u0131yor. Ok fonksiyonlar ile, e\u011fer sadece bir de\u011fer d\xf6nd\xfcrmek istiyorsak s\xfcsl\xfc parentezleri yazmak _zorunda de\u011filiz._ Ancak, bir ok fonksiyondan bir _nesne_ d\xf6nd\xfcrmek istiyorsan\u0131z, parentezler aras\u0131nda yazmak zorundas\u0131n\u0131z, aksi halde de\u011fer d\xf6nd\xfcr\xfclmez! A\u015fa\u011f\u0131daki fonksiyon bir nesne d\xf6nd\xfcrecektir:","```const getUser = user => ({ name: user.name, age: user.age })```","Bu \xf6rnekte de\u011fer d\xf6nd\xfcr\xfclmedi\u011fi i\xe7in, fonksiyon `undefined` d\xf6nd\xfcr\xfcr."],"id":97,"options":["`[1, [2, 3, 4]]` ve `undefined`","`[1, [2, 3, 4]]` ve `{ name\\"Lydia\\", age21 }`","`[1, 2, 3, 4]` ve `{ name\\"Lydia\\", age21 }`","`Error` ve `{ name\\"Lydia\\", age21 }`"],"problem":"const getList = ([x, ...y]) => [x, y]\\nconst getUser = user => { name: user.name, age: user.age }\\n\\nconst list = [1, 2, 3, 4]\\nconst user = { name: \\"Lydia\\", age: 21 }\\n\\nconsole.log(getList(list))\\nconsole.log(getUser(user))\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["`name` de\u011fi\u015fkeni string bir de\u011fer sakl\u0131yor, ki bu bir fonksiyon de\u011fil, bu y\xfczden \xe7a\u011fr\u0131lamaz.","TypeError\'lar bir de\u011fer beklenilen tipte olmad\u0131\u011f\u0131 zaman f\u0131rlat\u0131l\u0131r. `name`\'i \xe7a\u011f\u0131rmaya \xe7al\u0131\u015ft\u0131\u011f\u0131m\u0131zdan, JavaScript `name`\'in bir fonksiyon olmas\u0131n\u0131 bekliyor. Ancak o bir string, bu y\xfczden TypeError f\u0131rlat\u0131l\u0131r: name is not a function!","SyntaxError\'lar JavaScript\'in ge\xe7erli olmad\u0131\u011f\u0131 bir \u015feyler yazd\u0131\u011f\u0131z zaman f\u0131rlat\u0131l\u0131r, \xf6rne\u011fin `return`\'\xfc `retrun` olarak yazd\u0131\u011f\u0131n\u0131z zaman.","ReferenceError\'lar eri\u015fmeye \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131z de\u011fer i\xe7in JavaScript referans bulamad\u0131\u011f\u0131 zaman f\u0131rlat\u0131l\u0131r."],"id":98,"options":["`SyntaxError`","`ReferenceError`","`TypeError`","`undefined`"],"problem":"const name = \\"Lydia\\"\\n\\nconsole.log(name())\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":1,"explanation":["`[]` do\u011frusal bir de\u011ferdir. `&&` operat\xf6r\xfc ile, e\u011fer soldaki de\u011fer do\u011frusal bir de\u011ferse sa\u011fdaki de\u011fer d\xf6nd\xfcr\xfcl\xfcr. Bu \xf6rnekte, soldaki de\u011fer `[]` do\u011frusal bir de\u011ferdir, b\xf6ylece `\\"Im\\"` d\xf6nd\xfcr\xfcl\xfcr.","`\\"\\"` yanl\u0131\u015f-\u0131ms\u0131 bir de\u011ferdir. E\u011fer soldaki de\u011fer yanl\u0131\u015f-\u0131ms\u0131 ise, bir \u015fey d\xf6nd\xfcr\xfclmez. `n\'t` d\xf6nd\xfcr\xfclmedi."],"id":99,"options":["`possible! You should see a therapist after so much JavaScript lol`","`Impossible! You should see a therapist after so much JavaScript lol`","`possible! You shouldn\'t see a therapist after so much JavaScript lol`","`Impossible! You shouldn\'t see a therapist after so much JavaScript lol`"],"problem":"// \ud83c\udf89\u2728 100. soru! \u2728\ud83c\udf89\\n\\nconst output = `${[] && \'Im\'}possible!\\nYou should${\'\' && `n\'t`} see a therapist after so much JavaScript lol`\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"},{"answer":2,"explanation":["`||` operat\xf6r\xfc ile, ile do\u011frusal operand\'\u0131 d\xf6nd\xfcrebiliriz. E\u011fer t\xfcm de\u011ferler yanl\u0131\u015f-\u0131ms\u0131 ise, son operand d\xf6nd\xfcr\xfcl\xfcr.","`(false || {} || null)`: bo\u015f nesne `{}` do\u011frusal bir de\u011ferdir. \u0130lk (ve tek) do\u011frusal de\u011fer, d\xf6nd\xfcr\xfcl\xfcr. `one` `{}` e\u015fittir.","`(null || false || \\"\\")`: t\xfcm operand\'lar yanl\u0131\u015f-\u0131ms\u0131. Bu demektir ki son operand, `\\"\\"` d\xf6nd\xfcr\xfcl\xfcr. `two` `\\"\\"` e\u015fittir.","`([] || 0 || \\"\\")`: bo\u015f dizi `[]` do\u011frusal bir de\u011ferdir. Bu ilk do\u011frusal de\u011fer, d\xf6nd\xfcr\xfcl\xfcr. `three` `[]` e\u015fittir."],"id":100,"options":["`false` `null` `[]`","`null` `\\"\\"` `true`","`{}` `\\"\\"` `[]`","`null` `null` `true`"],"problem":"const one = (false || {} || null)\\nconst two = (null || false || \\"\\")\\nconst three = ([] || 0 || true)\\n\\nconsole.log(one, two, three)\\n","question":"\xc7\u0131kt\u0131s\u0131 Nedir?"}]')}}]);
//# sourceMappingURL=46.e4c0bc64.chunk.js.map